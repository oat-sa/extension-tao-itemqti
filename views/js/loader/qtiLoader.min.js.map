{"version":3,"mappings":"AAsBA,YACA,aADA,GAKAA,mDALA,CAMAC,kDANA,CAOAC,+CAPA,CASAC,4CACAC,qBADA,CAEAC,2DAFA,CAGAC,+CAHA,CAIA,IACAF,oCACA,YACAA,oBACA,CACAG,qDACA,+CACAA,cADA,GAEAA,iBAFA,CAGAC,mCAHA,CAKA,CALA,CAMAC,gEAPA,CAQA,gCARA,EASAC,iBAEA,CAXA,CAYA,CA9BA,CAiCAH,sCAGAA,kBAHA,GAMAA,gBANA,CAaAA,iDACAI,mBADA,CAEAA,sCAFA,CAGAA,4CACA,oEACA,CAFA,CAHA,CAMAC,2BACAD,+BACAJ,sBACA,CAFA,CADA,CAIAJ,gBACA,CALA,CAMA,CAzBA,EA4BAD,6CA5BA,CA6BAK,4BA7BA,CA+BAJ,gBAEA,CAjCA,CAkCA,CAnEA,G,CAqEAU,uC,CAEAA,MC7FA,iEAEA,gBACAC,8CADA,CAEAC,6CAFA,CAGAC,+DAHA,CAIAC,yEAJA,CAKAC,+CALA,CAMAC,mCANA,CAOAC,uCAPA,CAQAC,iCARA,CASAC,+CATA,CAUAC,uCAVA,CAWAC,yEAXA,CAYAC,2EAZA,CAaAC,iDAbA,CAcAC,qEAdA,CAeAC,yCAfA,CAgBAC,+CAhBA,CAiBAC,iDAjBA,CAkBAC,6DAlBA,CAmBAC,iDAnBA,CAoBAC,2DApBA,CAqBAC,+EArBA,CAsBAC,2DAtBA,CAuBAC,gFAvBA,CAwBAC,0EAxBA,CAyBAC,kFAzBA,CA0BAC,sFA1BA,CA2BAC,8EA3BA,CA4BAC,8FA5BA,CA6BAC,4FA7BA,CA8BAC,sFA9BA,CA+BAC,4EA/BA,CAgCAC,4EAhCA,CAiCAC,sFAjCA,CAkCAC,wEAlCA,CAmCAC,wEAnCA,CAoCAC,wEApCA,CAqCAC,oDArCA,CAsCAC,oFAtCA,CAuCAC,0EAvCA,CAwCAC,gFAxCA,CAyCAC,0EAzCA,CA0CAC,+DA1CA,CA2CAC,iEA3CA,CA4CAC,+DA5CA,CA6CAC,0EA7CA,CA8CAC,yDA9CA,CA+CAC,yCA/CA,CAgDAC,qCAhDA,CAiDAC,yDAjDA,CAkDAC,0CAlDA,EAqDA,iBAEA,CAzDA,C,CA2DAlD,MC3DA,sEAEAmD,qEAFA,CAuBA,UACAC,yCAGA,OAFAC,cAEA,CADAC,4CACA,cACAD,yDAEA,SACA,CARA,CAiBAE,yCACAF,GADA,CAEAG,OAFA,CAGAC,GAHA,CAIAC,SAJA,CAKAC,SALA,CAOA,SACA,0EAGAH,yBAXA,CAaA,EACAG,UADA,CAEAN,gBAFA,CAGAF,sBAHA,GAIAQ,SAJA,CAKAD,YALA,CAMAD,GANA,QAQAE,MARA,EAUA,SACA,CAzCA,CAmDAC,mEACAP,GADA,CAEAG,OAFA,CAGAE,SAHA,CAIAD,GAJA,CAKAE,SALA,CAOA,SACA,0EAGA,WACA,iEAGAH,iCAfA,CAgBAK,+CAhBA,CAkBAC,MAlBA,GAmBAA,cACAC,OADA,CACA,YADA,CACA,GADA,EAEAA,OAFA,CAEA,iBAFA,CAEA,GAFA,EAGAA,OAHA,CAGA,QAHA,CAGA,GAHA,CAnBA,CAuBAF,SAvBA,GAwBAH,YAxBA,GA4BA,EACAC,UADA,CAEAN,gBAFA,CAGAG,WAHA,GAIAG,SAJA,CAKAD,YALA,CAMAD,GANA,QAQAE,MARA,EAUA,SACA,CA1FA,CA4FAK,mFACA,eAMA,GAJAb,2BAIA,GAHAc,iCAGA,6BACAd,gDAEA,uBACAA,qDACAe,gCACA,CAFA,CAHA,CAMA,mCANA,MAQAC,IARA,EASAC,kCATA,MAcAjB,gCACA,4BACAiB,8BADA,CAEAA,KAFA,EAGA,QAGA,CAPA,CAdA,EAuBAA,KAvBA,SA0BA,CA1BA,CADA,KA6BA,oFAGA,YACA,CApIA,CAqIAC,gEACAC,GADA,EAEAC,sFACA,kBADA,CAEAC,EAFA,EAIAC,SAJA,CAKAC,SALA,CAMA,0BANA,CAOA,CAPA,CAFA,CAUAH,MAVA,EAYAA,MACA,CAlJA,CAmJAI,8DACA,uDACA,CArJA,CAsJAC,iEACA,kBAKA,MAJAL,yEAEA,MADAM,oBACA,mBACA,CAHA,CAIA,mBACA,CA7JA,EAgKA,WAEA,CAzLA,C,CA2LA7E,MC3LA,2FAEAmD,qEAFA,CAGA2B,qEAHA,CAKA,0BAEAC,uBAFA,CAEA,eACA,aACAC,OADA,CAEAC,gBAFA,CAGAC,WAHA,CAIAC,aAJA,EAuBA,MAhBAhC,2BACAiC,GADA,GAEAA,cAFA,CAGAC,oBAHA,CAIAD,4BAJA,CAKAC,uBALA,CAMAlC,eANA,CAOAkC,oBAPA,CAQAlC,oBARA,CASAkC,gBATA,CAWAC,mCAXA,CAcA,CAdA,CAgBA,QACA,CA3BA,EA6BA,2BAEA,CApCA,C,CAsCAtF,MCtCA,6NAEA8E,qEAFA,CAGA3B,qEAHA,CAIAoC,iIAJA,CAKAC,oFALA,CAMAC,sIANA,IA2BAC,cA3BA,CAgCAC,uDAhCA,CAkCAC,sBACAC,WADA,CAEAC,SAFA,CAGAC,gBAHA,CAIAC,iCAiBA,GAfA,kBAeA,CAZA,gBAYA,CATA,uBASA,GARAC,iBAQA,CAPAH,SAOA,EAJAA,MAIA,GAHAA,0CAGA,oEACA,wDAGA,uBACAJ,uBADA,CAEA,kBAFA,CAGA,kCAHA,KAKA,kEAGA,qCA7BA,EA8BA,oCA9BA,CAgCA,kCAhCA,EAiCA,iBAEA,CAvCA,CAwCAQ,sBACA,+BACA,CA1CA,CA2CAjB,uBACA,2BACA,CA7CA,CA8CAkB,qBACA,kBACA,CAhDA,CAiDAC,iCACA5C,WADA,CAEA6C,gCAFA,CAGA,sBACAlC,YADA,CAEAd,yBAFA,CAGAA,EAHA,GAKAG,eALA,CAOA,CACA,cACA,CA7DA,CAmEA8C,iCACA,eAOA,MANAnD,qDACA,sBACAE,2BAFA,EAGAG,gBAEA,CALA,CAMA,QACA,CA5EA,CA8EA+C,0BACA,QACA,kBACA,2BADA,KAGA,0BACA,qBACA,2BAFA,IAIA,gCACA,+BADA,QAIA,qBAJA,CASA,WACA,CAjGA,CAkGAvB,0BACA,QACA,kBACA,yBADA,CAEAF,gFAFA,KAIA,0BACA,qBACA,2BAFA,IAIA,gCACA,6BADA,QAIA,mBAJA,CASA,WACA,CAtHA,CAuHA0B,0BAEA,MADA,2BACA,KACA,CA1HA,CA2HAC,0BACA,kCACA,CA7HA,CA8HAC,mCAKA,MAJAvD,4BAIA,EAHAwC,kDAGA,CADA,0BACA,KACA,CApIA,CAqIAgB,yBACA,+BACA,CAvIA,CAwIAC,qCAIA,YAHA,0BAGA,GAFAC,qBAEA,YACA,qCAEA,WACA,CAhJA,CAiJAC,gCAEA,yBACAT,iCADA,CAEAA,kDACA,CAJA,YAsBA,MAjBA,qCAiBA,EAhBAU,sBAgBA,CAdA,kCAcA,EAbAA,wBAaA,CAXA5D,iCACAyC,2BADA,CAEAmB,SAFA,CAGA5D,YAHA,EAIAA,qBACAyC,2BADA,EAEAmB,SAEA,CAJA,CAMA,CAVA,CAWA,KACA,CAzKA,CA0KAC,0BACA,wBACAC,yCADA,CAOA,MAJA9D,oCACA+D,sBACA,CAFA,CAIA,YACA,CAnLA,CAoLAC,yBAEAzG,OAFA,CAEA0G,IAFA,CACAhD,UADA,CAoBA,MAhBA,kCAgBA,GAfA1D,uBAeA,CAdAA,sBAcA,GAbA0D,oDAaA,GATAA,4CASA,GARAgD,mBAQA,CANAhD,KAMA,CAPAgD,oBAOA,CANA,0CAMA,CAJA,gCAIA,OACA,CAzMA,CA0MAC,kBACA,+BACA,SACA,sCACA,SACA,mBAEA,CACA,WACA,CAnNA,CAuNAC,8BACA3B,iDADA,CAEA,yBACA,CA1NA,CA2NA4B,8BACA,oBAEA,sCAGA,QAFA,sBAEA,CADAN,yCACA,eACAA,qCAGA,CArOA,CAyOAO,0BAEA,MADA7B,kDACA,sBACA,CA5OA,CA6OA8B,0BACA,aAIA,MAHA7B,+CAGA,GAFAsB,oBAEA,KACA,CAnPA,CAoPAQ,+BACA,kCACA,sBADA,CAEA,qCACA,uBACArB,kCAEA,CANA,IAOA,oCAEA,CA9PA,CA+PAsB,uBACA,oBACA,CAjQA,CA2QAC,4BAGAC,UAHA,CACAC,sDADA,CAEAC,2CAFA,CAKAC,UALA,CAMAC,aACAC,iBADA,CAEApC,kBAFA,CAGAG,+BAHA,CANA,CAYA,cACA,4FAqBA,MAlBA,qCAkBA,GAhBAgC,qDAgBA,EAdA,kCAcA,GAbAA,oBACAhC,sCADA,CAaA,CAVAgC,iFAUA,EAPAD,0CAOA,CANAA,qDAMA,CALAH,yDAKA,CAJAC,gBAIA,EAHAA,uCAGA,UACA,CA9SA,CA+SAK,mDACAC,iBADA,CAEAL,sCAFA,CASA,GALA,qCAKA,GAHAK,yDAGA,YACAA,gEADA,KAGA,qFAGA,+BACA,CA/TA,CAgUAC,uCACA,gCACA,YACA,mDAEA,qFAEA,CAvUA,CAwUAC,mBACA,SACAxC,kBADA,CAEAyC,kBAFA,CAGAtC,+BAHA,EAaA,MAPA,qCAOA,GANAuC,iCAMA,EAJA,kCAIA,GAHAA,gCAGA,KACA,CAvVA,CAwVAC,mBAEA,QACA,CA3VA,CA4VAC,6BACA,iCACAC,8BAFA,EAGA,wDAEA,CAjWA,CAkWAC,6BACA,kDACA,CApWA,CAqWAC,gCACA,iCACA,UACA,wDACAC,qCAFA,CAIAA,KAJA,CAKA,wBALA,CAOA,wBAEA,CACA,CAjXA,CAyXAC,4CACA,uBADA,CAEAC,0DAFA,CAKA,wBALA,CAMA,2BANA,CAQA,wBACA,CAlYA,CAmYAC,iBACA,wCACA,CArYA,CAsYAC,iBACA,wCACA,CAxYA,EAlCA,CA6aAP,8CACA,2DACA,2CACA,CAhbA,CAmdA,MAhCA/C,2CACA,6DACA,CA8BA,CA5BAA,4CACA,yBACA,CA0BA,CAxBAA,sCACA,0BACA,CAsBA,CAfAA,sCACA,+CAEA,YACA,qDAMA,MALAzC,wCACA,6BACA,CAFA,CAKA,CAFA,iCAEA,GACA,CACA,QACA,CAEA,QAEA,CArdA,C,CAudAnD,MCvdA,qEAuCA,uCACA,QACA,sBACA,6BACA,WAGA,WACA,CAjBA,sFAmBA,kBAMAmJ,oCACAC,4FADA,CAEAC,gGAFA,CAGAC,oGAHA,CAIA,gEACA,CAXA,CAoBAC,0HACAC,WADA,CAEAC,YAFA,GAKAD,iEALA,OAOAE,qKAPA,CAQAC,6KARA,CASAC,6BATA,CAUAC,qCAVA,CAWAC,uCAXA,CAYAhG,oCAZA,CAaAiG,4CAbA,CAcA,iCAEA,aACA,WAjBA,KAoBAtG,GApBA,EAoBA,CACA,wCACAuG,gBACAJ,WADA,CAEAK,YACA,0CADA,CAEA,+BAJA,CAMA,CAcA,MAXAL,6CAWA,GAVAI,+DAUA,EANAA,sFAMA,CALAA,gBACA,+DADA,CAEA,sFAFA,CAKA,IACA,CA/DA,EAkEA,mBAEA,CArHA,C,CAuHAhK,MCvHA,sEAoBA,mBACAkK,wDACArE,4BADA,CAEAsE,YACAtE,qBADA,CAEAuE,YACAvE,gBADA,CAEAwE,aACA,CACAxE,mBADA,CAEAI,YACAqE,6BADA,CAFA,CADA,CAOA,CACAzE,kBADA,CAEAI,YACAqE,6BADA,CAFA,CAPA,CAFA,CAFA,CAmBAC,eACA,CACA1E,0BADA,CAEAI,YACAqE,4BADA,CAFA,CAKAF,YACAvE,cADA,CAEAwE,aACA,CACAxE,mBADA,CAEAI,YACAqE,4BADA,CAFA,CADA,CAOA,CACAzE,oBADA,CAEAI,YACAuE,kBADA,CAFA,CAKAC,SALA,CAPA,CAFA,CALA,CADA,CAnBA,CAFA,EADA,CAkDAC,uDACA7E,4BADA,CAEAsE,YACAtE,qBADA,CAEAuE,YACAvE,cADA,CAEAwE,aACA,CACAxE,iBADA,CAEAwE,cACAxE,mBADA,CAEAI,YACAqE,6BADA,CAFA,EAFA,CADA,CAFA,CAFA,CAgBAC,eACA,CACA1E,0BADA,CAEAI,YACAqE,4BADA,CAFA,CAKAF,YACAvE,cADA,CAEAwE,aACA,CACAxE,mBADA,CAEAI,YACAqE,4BADA,CAFA,CADA,CAOA,CACAzE,sBADA,CAEAI,YACAqE,6BADA,CAFA,CAPA,CAFA,CALA,CADA,CAhBA,CAFA,EAlDA,CA+FAK,6DACA9E,4BADA,CAEAsE,YACAtE,qBADA,CAEAuE,YACAvE,cADA,CAEAwE,aACA,CACAxE,iBADA,CAEAwE,cACAxE,mBADA,CAEAI,YACAqE,6BADA,CAFA,EAFA,CADA,CAFA,CAFA,CAgBAC,eACA,CACA1E,0BADA,CAEAI,YACAqE,4BADA,CAFA,CAKAF,YACAvE,cADA,CAEAwE,aACA,CACAxE,mBADA,CAEAI,YACAqE,4BADA,CAFA,CADA,CAOA,CACAzE,2BADA,CAEAI,YACAqE,6BADA,CAFA,CAPA,CAFA,CALA,CADA,CAhBA,CAFA,EA/FA,EA8IA,oBAEA,CApKA,C,CAsKAtK,MCtKA,wIAEAmD,qEAFA,CAGAyH,+JAHA,CAwBA,sBACAV,oFADA,CAEAQ,kFAFA,CAGAC,8FAHA,CAIAE,6BAJA,EAQA,cACAC,uCACA3H,eADA,GAEA4H,gEAFA,EAQA,CATA,CAUAC,6BACA,4CACA,CAZA,CAaAC,gCACA,kCACA,CAfA,CAgBAC,+BACA,eASA,MAPA/H,qCACA,gBAEA,MADAgI,aACA,GAEA,CALA,CAOA,QACA,CA3BA,CA4BAC,mEACA,kBACA,aAFA,KAKA,CACAjB,YACAI,kCADA,EAEA,EAHA,EAIAA,aATA,CAUA,CACAtE,YACAqE,4BADA,EAEA,EAHA,EAIAe,YAdA,OAgBAC,kBAhBA,CAoBAC,sCACAC,4FADA,CApBA,CAiBA,EAMA,CAnDA,EAsDA,eAEA,CAxFA,C,CA0FAxL,MC1FA,kEA2BA,oCACA,sEACA6F,mBADA,CAEAI,YACAqE,uCADA,CAFA,IAOA,OACAzE,0BADA,CAEAI,YACAqE,kBADA,CAFA,CAKAF,YACAvE,cADA,CAEAwE,8BAFA,CALA,CAUA,CAlBA,CAoBA,gBAEA,CAjDA,C,CAmDArK,MCnDA,gXAEAmD,qEAFA,CAGAsI,kHAHA,CAIA7F,mGAJA,CAKA8F,4HALA,CAMAC,4HANA,CAOAC,sIAPA,CAQAC,2IARA,MAgCAC,uEACA,kBAEA3I,qCACA,IACA4I,iCACA,UACAA,qBACA,CACA,CANA,CAHA,CAUAC,qCACA,CA3CA,CA6CAC,uDACAD,kDADA,CAEAA,kCAFA,CAGAA,0CAHA,CAIAA,wCAJA,CAKAA,2CALA,CAOAF,oEACA,CArDA,CAuDA,yBACA9F,2BACA,WADA,CAEA,uBAFA,CAGA,oBAHA,CAKA,oDACA,CAPA,CAQAkG,mCAGA,MAFA/I,8CAEA,KACA,CAZA,CAaAgJ,yBACA,WAEA,kBACA,wDADA,CAGAjF,iBAHA,CAIA,6CAJA,GAMAA,iDANA,EAUA,UACA,CA3BA,CA4BAkF,0CACA,kBADA,KAEAC,qDAFA,CAGAC,WAHA,CAKA,6BAEA,GADAC,gCACA,qCACAD,eACAE,0CADA,CAEAC,cAFA,EADA,KAMA,8EAIAd,iEACAe,4BACA,8CACA,CAFA,CADA,CAIAC,4BACA,CALA,CAMA,CAnDA,CAoDAC,mBACA,uBACA,CAtDA,CAuDAC,4BACA,oCACA,4DASA,YAPA7H,YAOA,EANAY,iCAMA,CAHA,iEAGA,CAFA,iDAEA,gBACA,kDAEAkH,OAHA,EAIA,wCAEA,CAEA,6BACA,oDAEAC,QAHA,EAIA,oCAEA,CAEA,+BACA,wDAEA1M,UAHA,EAIA,mCAEA,CAGA,iFACA,0CADA,CAEA,EAFA,CAGA,kCACA2M,gDADA,CAEAC,qEACA7C,YACAC,8BADA,EAEA,EAHA,EAIA,EAJA,aAIAD,wBACAA,qDADA,EAGAA,wBACAA,yBADA,EAEAA,oCAFA,EAGAA,oEAVA,EAFA,CAeA,0CAEA,EAFA,CACAG,6CAhBA,CAmBA2C,4BACAlI,iBADA,CAEAmI,YAFA,CAnBA,CAwBA,aACA,0CADA,CAGA,oDAEAC,aALA,EAMAjK,wCACA,MACA8C,YACAqE,oCADA,EAEA,EAHA,EAIAtF,yCAJA,CAKAkI,4EANA,CASA,+DAIA,IAJA,CACA/C,YACAI,4CADA,EAEA,EAHA,CAIA,YACA,+CADA,CAEAe,uCAFA,CAIA,sDACA,4BACA,CAVA,EAYA,8BArBA,EAsBAf,iDAEA,CAxBA,CA0BA,CACA,CAEA,+DACA8C,GADA,CACAC,mEADA,EAGA,4BACA,+BAEA,wBACA,EACA,0BACAnK,UACAoH,gBADA,CAEAsB,gBACA0B,mBADA,CAFA,CAFA,CAFA,EAaA,qBACAhC,iCACAiC,IADA,CACAF,uDADA,CAfA,CAmBA,+GACA,CACA,wCAzHA,CA0HA,kDA1HA,CA2HA,sDACA,CAEA,2BA/HA,EAgIAX,6BAEA,CAlIA,CAmIA,CA3LA,CA4LAc,mCACA,mCACA,sCAEA,2BAHA,EAIAd,2BAEA,CANA,CAOA,CApMA,CAqMAe,mCACA,mCACA,kCADA,CAGA,2BAHA,EAIAf,2BAEA,CANA,CAOA,CA7MA,CAsNAgB,4BACA,cACA,kEAGA,mCACA,mDAEA,mBACA,0BAEAC,qDAHA,EAKAC,+BALA,EAMA,iEAGA,CAEA,2BAdA,EAeAlB,6BAEA,CAjBA,CAkBA,CA7OA,CA8OAmB,iCACA,uCAqBA,MAnBAZ,yDACAtB,6EADA,GAGA5G,aAHA,EAIA,IAeA,CAbAkI,6CAaA,CAZAA,oDAYA,CATAA,mBASA,CAVA/J,oBAUA,CATA6B,YASA,CARA7B,wBAQA,CAPA6B,gBAOA,CALA,EAKA,CAFAkI,qDAEA,SACA,CArQA,CAsQAa,uCACA,2CAEAC,2EAHA,CAMAA,2EANA,CAOAA,2EAPA,CAQAA,2EARA,CAWA,mDAUA,MARAA,0BAQA,EAPAA,iEAOA,CAJAA,yBAIA,EAHAA,iEAGA,aACA,CA5RA,CA6RAC,mBACA,sCAGA,MAFAnB,6CAEA,QACA,CAlSA,CAmSAoB,uDACA,iCASA,MAPAC,yBAOA,EANAC,gBAMA,CALAA,0BAKA,EAHAA,kCAGA,GACA,CA9SA,CA+SAC,mCACA,yCACA,sDAGA,mFACA,yCAGA,+EAGA,iBAFAC,qCAEA,yBACAC,kCADA,CAEAC,kCAFA,CAKAA,OALA,EAMAF,4CAEA,CAEAA,oDACA,CAtUA,CAuUAG,0BACA,4DACA,4CAGA,qCAEA,wBACA,sEAGA,sDAGA,MAFA,sCAEA,IACA,CAtVA,CAuVAC,8BAEA,wEA2BA,MA1BAF,kCA0BA,CAxBAA,uBAwBA,EAvBAA,WAuBA,EAtBA,+CAsBA,CAlBAA,2BAkBA,EAjBAA,cAiBA,EAhBA,+CAgBA,CAZA5I,kCAYA,CAXA,sCAWA,CAVAA,6BAUA,CATA,iCASA,CARAA,2BAQA,CAPA,+BAOA,CANAA,kCAMA,CALA,8BAKA,CAJAA,+BAIA,EAHA,kCAGA,QACA,CArXA,CAsXA+I,sCACA/I,2CADA,EAEAZ,WAFA,EAGA,4DAHA,CAOA,8CAPA,CASAY,4CATA,EAUA,kCAEA,CAlYA,CAmYAgJ,0CAEA,iBACA,+CACA,2BACA,sBACA,6CAGA,iCAEA,4BACA,iDAEAC,MAHA,EAIAC,iCAEA,CACA,CAfA,IAiBA,iCACA,qDAEAD,MAHA,EAIAC,6BAEA,CAGA,0DACA9J,YADA,CAEA,gCACA,qDAEAhE,MAHA,EAIA8N,6BAEA,CAGA,CACA,CA5aA,CA6aAC,4BACA,4CACAF,qBADA,KAEA,wEAEAA,aAFA,EAGAA,sBAHA,KAKA,2CACA,CAtbA,CAubAG,4BACAtO,qCADA,CAIAsE,SAJA,GAKA,6BALA,CAMAtE,0CANA,CAQAA,qBARA,CAWA,CAlcA,CAmcAuO,wBACA3O,mBADA,CAEAA,+BAFA,CAGA6C,gDACA7C,kCACA,CAFA,CAGA,CAzcA,CA0cA4O,8BACAC,6BACA,CA5cA,CA6cAC,sBACAnD,uCACA,CA/cA,CAgdAoD,sBACApD,uCACA,CAldA,GAqdA,aAEA,CA9gBA,C,CAghBAjM,MChhBA,qEAEAmD,qEAFA,CAIA,SACAmM,8BACA,4BACA,wBACA,6BACA,eACA,4BAEA,CACA,wBACA,CAVA,EAaA,UAEA,CAnBA,C,CAqBAtP,MCrBA,sFAoCA,sCACA,mEACA,SAEA,6CAEA,CASA,8BACA,gCACA,kBACAuP,IADA,CACAf,cADA,EAEArH,IAFA,CAEA,gBAFA,CAIA,CAUA,qDACA,uDACA,6CAEAqI,wCAHA,CAKAhB,6BACA,CACA,CAUA,kDACA,6CACAiB,eAFA,GAIAC,mDAJA,CAKAD,wCALA,EAOAE,QAPA,EAQAF,8BARA,CAUAG,QAVA,EAWAH,2BAEA,CAWA,kEACAD,wGACA,CASA,qDACAK,gBADA,CAEA,2BAFA,CAIA,EACA,CAUA,mDACA,8CACA,wBACArB,OADA,CAEAsB,wCAFA,CAGAA,wCAHA,CAKA,CASA,6CACA,8CACAD,kBAFA,EAGAE,qEAEA,CAUA,gDACA,+BADA,SAEAC,oCAFA,GAGAA,qDAGA,CASA,6CACAC,MADA,CACAC,OADA,CAEAF,0BAFA,CAGA,wDACAC,wDADA,CAEAC,wCAFA,CAGAA,OAHA,EAIA,iBAGA,CA7LA/M,qEAFA,CAGA2B,qEAHA,IA2BAqL,iBA3BA,CAoMAC,WACAC,6BADA,CAEAC,6BAFA,CAGAC,6BAHA,CAIAC,mCAJA,CAKAC,uCALA,CApMA,CA4MA,gBAEA,CA9MA,C,CAgNAzQ,MChNA,qTA0IA,6CACA,gCACA,gCACA,CAaA,8CACA,kCACA,gCACA,CAkCA,2FAOA0Q,cAPA,CACAC,wDADA,CAEAC,WAFA,CAGAC,mBAHA,CAIAC,iBAJA,CAKAC,kCALA,CAMAC,kDANA,CAwGA,MA/FA7N,kDACA8N,YADA,CACAC,OADA,CACAC,UADA,CACAC,eADA,CACAC,sBADA,CACAC,eADA,CAEAhG,oDAFA,CAGAiG,QAHA,CAMA,mCAGA,GADAN,4DACA,2CACA,SAmBA,GAfAC,6CAeA,CAdAE,yEAcA,CAbAE,oFAaA,CAZAF,gCAYA,EAXAD,2CAWA,CAVAE,qDAUA,CATAE,2BASA,GAPAJ,oBAOA,CANAE,iCAMA,EAHAT,gCAGA,GAFAA,mCAEA,yDACA,SAEAA,8CA1BA,CA8BAE,qBACA/D,iBADA,CAEAoE,qBAFA,CAGAI,WAHA,EAKA,CACA,CA1CA,CA+FA,CAnDAT,qBAmDA,GAlDAA,+CAkDA,CA/CAU,mCA+CA,CA5CArO,+CACAsO,oBACAC,uBADA,CAEAC,MAFA,CAGAxM,QAHA,CAIAuM,yBAJA,CAKAX,cALA,CAMA,wBAEAL,aAFA,GAGAA,oCAHA,EAMAkB,kDACAC,0CACA,CAFA,CANA,CAWAhB,oCAXA,CAYAA,+CAZA,GAcAgB,0CAdA,CAoBAnB,aApBA,EAqBAoB,yBArBA,CAyBA3O,4BAzBA,EA0BA4O,gBA1BA,CA6BA,CAnCA,CAqCA,CAtCA,CA4CA,CAHAC,+DAGA,uBACA,CAMA,kCACAC,UADA,CAEAd,eAFA,CAGAe,MAHA,CAKAD,6BALA,EAOA,GADAA,YACA,YACAd,+BADA,CAEAA,iBAFA,EAGA,kBAIA,WACA,CAOA,gCAGAgB,iBAHA,CAGAC,YAHA,CAGAC,YAHA,CAGAC,SAHA,CACAC,qBADA,CAEApB,4BAFA,CAKAoB,2BALA,GAMAJ,uCANA,CAOAE,kCAPA,CAQAD,oEARA,CASAE,wEATA,CAUAA,4BAVA,EAWAnB,yCAXA,CAcA,CASA,4CAGAqB,eAHA,CAGAC,iBAHA,CACAC,gDADA,CAEA1F,yDAFA,CAkBA,MAbA8B,oCAaA,EAZA2D,wFAYA,CAXAD,4DAWA,CAVA,eAUA,GARAA,kDAQA,CAPAC,4DAOA,IAJAD,iCAIA,CAHAC,uCAGA,GACAzF,qCADA,CAEA2F,0CAFA,CAGAC,kCAHA,CAIAJ,6BAJA,CAKAjB,QALA,CAOA,CAQA,6CACAZ,2BADA,CAEAI,kCAFA,CAGA8B,kBAHA,CA2BA,MArBA1P,sDACA,uBACAqL,yBAFA,GAGAxB,qDAHA,CAIA2D,yDAJA,CAMA,CANA,CAqBA,CAZAI,wDACA,8BACA5N,0DACA,mEAEA,MADA2P,wCACA,GAEA,CALA,CAFA,CAQAD,kBACA,CATA,CAYA,CAFAlC,iEAEA,wBACA,CAOA,6CACAI,kDACA,CAcA,kGAEA5L,4BAEA4N,oBACAhG,iBACAiG,SADA,EADA,CAFA,CAOAC,qBACAC,kBACA5I,wBADA,CAEAxE,2BAFA,CAGAqN,kBAHA,EAKA,CAbA,CAcAhC,iCAdA,CAkBAiC,cACAA,YACAjQ,oDAEA,2CACA,CAHA,CADA,CADA,CAOA,qCACAA,oEACA,CAFA,CAPA,GAWAkQ,IAXA,CAWAJ,IAXA,EAYAK,KAZA,CAYA,cAGA,KADAL,OACA,4CACA,CAhBA,CAiBA,CAnCA,CAmCAtB,yBAnCA,CAoCA,CAWA,kEACA,sCACAjS,2DAFA,CAGAqR,mDAHA,EAKAwC,iDALA,CAMAC,uEANA,CAOAC,0DAPA,CAQAC,mGARA,GAWAH,uEAXA,CAYAC,mCAZA,CAaAC,8CAbA,CAcAC,oGAdA,GAkBAH,6CAlBA,CAmBAG,qFAnBA,CAqBA,CAaA,2BACA7C,gBADA,CAEAE,cAFA,CAGAyC,SAHA,CAIAC,gBAJA,CAKAE,oBALA,CAMAhH,QANA,CAOA,CACA,qDAEAxJ,qCACAyQ,aACA,CAFA,CAFA,CAOAC,yBAPA,CAQAC,YARA,CASAN,gBATA,CAYA7G,UACA,CAbA,EAeA6G,gBAhBA,CAiBAC,4BAjBA,CAkBAM,uBACA,CAOA,sCACA,6DACA5Q,oDACA6Q,2BACA,CAFA,CAGA,CAOA,wCACA7Q,oDACA6Q,gDACA,CAFA,CAGA,CAQA,+CACA,kDACAC,WADA,GAEAC,IAFA,GAGAnQ,OAHA,CAGA,2BAHA,CAGA,EAHA,CAIA,CA9jBAZ,qEAFA,CAGAyO,+EAHA,CAIAuC,mGAJA,CAKAC,+EALA,CAMAC,2IANA,CAOAC,kHAPA,CAQAC,0EARA,CASAC,6GATA,CAUA3C,sIAVA,CAgCA,kBAEA4C,qCACA,cACA,CAFA,CAFA,CAaAA,gDACA,kCACA,CAFA,CAbA,CAyBAA,yEACA,iBAwBA,MAtBAC,+DAsBA,CArBAC,2DAqBA,CApBAC,6CAoBA,CAlBAzR,gCACA,gBACA,4BAFA,CAGA,uBAHA,CAIAsH,0BAJA,CAKA,sBALA,GAMAA,+BANA,EASAA,QATA,CAWA,qBAXA,GAYAoK,0BAZA,EAcAA,+BAdA,CAeAC,wBACA,CAhBA,CAkBA,6BACA,CA1BA,CAzBA,CAuDAL,yEACA,WACAM,+BAFA,CAGAC,6BAHA,CAIAC,6BAJA,CAMA,8CACA/N,yCAGA,UACA,CAXA,CAvDA,CAoEAuN,4DACAS,WADA,CAEA7P,gBAFA,CAIAA,qBAEA,CANA,CApEA,CA8EAoP,oDACA,wBACA,CAFA,CA9EA,CAoFAA,+DACA,+BACA,uBAEA,CAJA,CAKA,CAzFA,CA2FAU,sBA3HA,GA4HAA,oBA5HA,CA6HAA,yBA7HA,EA+HA,mFACA,gCADA,CAEAC,8CAFA,CAEApQ,aAFA,CAGA,wGAMA,MAHAqQ,+KACAC,yKADA,CAEA,8BACA,OACA,CAVA,EAgBAH,sBA/IA,GAgJAA,oBAhJA,CAiJAA,yBAjJA,KAmJAI,kFAKA,MAJA,iCAIA,CAHAH,8CAGA,kRACA,CANA,CAnJA,CAkLAI,oDAlLA,CAkkBAC,gBACAC,2BADA,CAlkBA,CAskBA,qBAEA,CAxkBA,C,CA0kBA1V,MC1kBA,qJAqCA,wFACA,UACA4Q,WADA,CAEA+E,yBAFA,CAsBA,GAjBAxS,iDACA8N,YADA,CACAC,OADA,CAEA5F,oDAFA,CAIAsK,8BAJA,GAKA3E,4DALA,CAMAC,6CANA,CAOA,yEAPA,GASAyE,qCATA,CAUA/E,sBAVA,EAaA,CAbA,CAiBA,CADAiF,mCACA,QAEA,iBAGA1S,sDAEA,gBACA,oBAHA,GAIA2S,uBACAC,iBACA,CANA,EASAC,4BACAvE,oBACA1E,QADA,CAEA4E,MAFA,CAGAxM,QAHA,CAIA,WACA8Q,QACA,CANA,CAOAH,WAPA,CASA,CAVA,CAWA,CApBA,CALA,CA2BAI,kCAEA/S,4BAFA,EAGA4O,gBAEA,CALA,CAMA,CAEA,YACA,CAWA,sFACA,cACAoE,iCADA,CAGApJ,4BAJA,EAMA5H,yBACAiR,qDADA,CAEAA,gBAFA,CAOAA,iBAPA,EAIAA,2BAJA,CAKAD,8BALA,EAUAjD,kBAVA,CAYAnG,qBACAJ,sBADA,EAGA,CAfA,CAeAgF,yBAfA,CAiBA,CAQA,+CACA,kDACAsC,WADA,GAEAC,IAFA,GAGAnQ,OAHA,CAGA,2BAHA,CAGA,EAHA,CAIA,CA7IAZ,qEAFA,CAGA2B,qEAHA,CAIAoR,yFAJA,CAKA9B,+EALA,CAiJA,mBACAsB,2BADA,EAIA,oBAEA,CAvJA,C,CAyJA1V,MCzJA,kVAEA8E,qEAFA,CAGA3B,qEAHA,CAIAgR,mGAJA,CAKA3H,8FALA,CAMAqF,sIANA,CAOAwE,kHAPA,CAQAC,+JARA,CASAC,0JATA,IA+BAf,qDA/BA,CAiCAgB,qBACA,cADA,CAEA,kBAFA,CAGA,kBAHA,CAIA,gBAJA,CAKA,mBACA,CAvCA,CAmTA,MA1QAA,iDACAC,8BADA,CAEAC,uBAFA,CAGAC,YAHA,CAKA,uBACA,sBAOA,2DACA,wCACA,qBACA,kCAGAlM,gBACAmM,MACAC,MACAC,cADA,CAEAC,mCAFA,CAGA/R,uDAHA,CADA,CADA,CASA,CAIA2R,oBACA,CAGA,oCApCA,CAuCA,qCAvCA,CAwCA,yCACA,CAiOA,CA/NAH,iDACA,oBADA,IAEAQ,UAFA,CAGAC,wDAHA,CAKAC,sCAKAF,oBALA,CAMA,6DAGAC,4EATA,CAUAC,0BAEAA,uCAFA,CAGAC,eACA,CAJA,CAVA,CAgBAA,eAEA,CAlBA,CAmBA,CAuMA,CArMAX,mDACA,uBACA,sBADA,KAGA,wBAEA,CA+LA,CA7LAA,yCAIA,MAHA,YAGA,GAFA,0BAEA,aACA,CAwLA,CAtLAA,yDACA,cACA,kDACAY,cADA,CAEAzK,mBACA,CAHA,CAIA,CAgLA,CA9KA6J,6DACA,yBACA,gDADA,KAGA,sDAEA,CAwKA,CAtKAA,mDACA,cAEAvD,mCAHA,CAKA,sBACA,cACA,sCAEA,iBACAmE,8BACAA,oCADA,CAEAA,mCAFA,CAMAhE,cACAA,mCADA,CAEA,qCACAjQ,oEACA,CAFA,CAFA,GAMAkQ,IANA,CAMA,WACA+D,8DACApS,4EADA,EAEA6M,wCACA7M,2CADA,CAEAA,aAFA,EAKA,CAPA,CADA,CAUAoS,+BAVA,CAWAA,2BAXA,CAYAnE,MACA,CAnBA,EAoBAK,KApBA,CAoBA,cAIA,KAFAL,OAEA,4CACA,CAzBA,CA0BA,CAhCA,CAgCAmE,mCAhCA,CADA,KAmCA,2CAEA,CAzCA,CA2CA,qBAhDA,CAiDA,8BAjDA,CAmDAxP,QAEA,CAiHA,CA/GA4O,wDACA,cACA,cACA,6CACA,8BACA1H,4BADA,CAEAuI,iDAFA,CAGAD,qDACA,UACAtI,4BADA,CAEA+C,uDAFA,KAGA,CACA,4BACA1O,4BAFA,GAGAiU,uDAHA,CAIAtI,wCAJA,CAKA+C,mEALA,CAOA,CACA,CAZA,CAaA,CACA,CACA,CAyFA,CAnFA2E,4EACAY,UADA,CAEAjG,gDAFA,CAGAA,iBAHA,GAIAA,yBAJA,EAMAA,qEACA,+CACAmG,2CAFA,CAGAC,WAHA,EAIAA,6BAEA,CANA,CAOA,CAsEA,CApEAf,wCACA,oBADA,CAEA,qBACA,CAiEA,CA/DAA,+CACAC,aADA,CAEAe,wCAFA,CAcA,MAVArU,8CACA,gBACA,IACA+J,kCACA,UACA5H,gBACA,CACAmR,0DACA,CARA,CAUA,UACA,CAgDA,CA9CAD,4CACAE,UADA,CAEAc,wCAFA,CAcA,MAVArU,8CACA,aACA,IACA6F,4BACA,UACA1D,gBACA,CACAoR,oDACA,CARA,CAUA,OACA,CA+BA,CA7BAF,6DACA,sBACA,CA2BA,CAzBAA,gFACA,wDADA,MAIAiB,cAJA,CAKAnB,kCACA,SADA,CAEA,gBAFA,CAGA,aAHA,CAIAV,WAJA,CAKAjJ,QALA,CAMAoF,cANA,CALA,CAcAwE,iCACA,SADA,CAEA,gBAFA,CAGA,aAHA,CAIAX,WAJA,CAKAjJ,QALA,CAMAoF,cANA,CASA,CAEA,UAEA,CArTA,C,CAuTA/R,MCvTA,4IAqFA0X,UArFA,CAEAvU,qEAFA,CAGAyC,mGAHA,CAQA,uBACA+R,4CACA,WACAC,UADA,CAoBA,MAjBAzU,4BACAyC,uBADA,CAGA,QAHA,GAEAiS,UAFA,CAIA3Q,uBAJA,CAMA,YANA,GAEA2Q,UAFA,CAOA3Q,gBAPA,CAUAA,WAVA,CAYA/D,YAZA,EAaA+D,4CAEA,CAfA,CAiBA,IACA,CAvBA,CAwBA4Q,oDACA,WACAF,UADA,CA0BA,MAvBAzU,4BACA,WACAA,aAFA,CAGA,oBAHA,EAIA0L,+BAJA,CAKAA,MALA,EAMA3H,gBANA,EAQA,wBARA,EASA2H,2CATA,CAUAA,MAVA,EAWA3H,gBAXA,EAcAA,WAdA,CAgBA/D,YAhBA,CAiBA+D,oDAjBA,CAmBAA,WAEA,CArBA,CAuBA,IACA,CApDA,CAqDA6Q,iCACA,SACAC,IADA,CAEAC,GAFA,CAIA,qBACA,qCACA,sBACApJ,oBAFA,GAGAmJ,WAHA,EAKAE,cALA,CAMAD,GACA,CAPA,IAQA,sDAIA,6BACA,UAGA,SACA,EACAE,2CADA,OAEAH,IAFA,EAGA,aACAE,SARA,CASAA,QATA,CAYA,QACA,CArFA,CAsFAE,sDACA,+CADA,MAEAvJ,OAFA,CAGAA,WAHA,CAKA,EAEA,CA7FA,EAgGA,wBAEA,CA1GA,C,CA4GA7O,MC5GA,8SAkKA,8BACA,0GACA,CAlKAmD,qEAFA,CAGA2B,qEAHA,CAIAc,mGAJA,CAKAyS,qJALA,CAMAd,uHANA,CAOAe,4HAPA,CAQA3M,4HARA,CASA2I,kHATA,CAiCA,kBACA,6BAlCA,GAmCAG,wBAnCA,OAsCA8D,qBACA,YADA,CAEA,gBAFA,CAGA,YAHA,CAIA,qBAJA,CAKA,oBALA,CAMA,oBANA,CAOA,qBAPA,CAQA,UARA,CASA,QATA,CAUA,KAVA,CAWA,YAXA,CAYA,MAZA,CAaA,QAbA,CAcA,OAdA,CAeA,eAfA,CAgBA,aAhBA,CAiBA,sBAjBA,CAkBA,mBAlBA,CAmBA,yBAnBA,CAoBA,qBApBA,CAqBA,6BArBA,CAsBA,4BAtBA,CAuBA,yBAvBA,CAwBA,oBAxBA,CAyBA,oBAzBA,CA0BA,yBA1BA,CA2BA,kBA3BA,CA4BA,kBA5BA,CA6BA,kBA7BA,CA8BA,wBA9BA,CA+BA,mBA/BA,CAgCA,sBAhCA,CAiCA,mBAjCA,CAkCA,uBAlCA,CAmCA,mBAnCA,CAoCA,QApCA,CAqCA,mBArCA,CAsCA,KAtCA,CAuCA,QAvCA,CAwCA,SAxCA,CAyCA,eAzCA,CA0CA,SA1CA,CA2CA,cA3CA,CA4CA,wBA5CA,CA6CA,cA7CA,CA8CA,aA9CA,CA+CA,SA/CA,CAgDA,iBAhDA,CAtCA,CA4FAC,eACAtY,mEADA,CAEAW,0BAFA,CAGAU,+CAHA,CAIAC,kCAJA,CAKAG,qCALA,CAMAC,iDANA,CAOAC,yDAPA,CAQAC,yCARA,CASAC,oCATA,CAUAC,8BAVA,CAWAC,wCAXA,CAYAC,2CAZA,CAaAE,iCAbA,CA5FA,CA+GAqW,uBACApX,kEADA,CAEAC,qDAFA,CA/GA,CAuHAoX,WACAX,iBADA,CAvHA,CA2HAY,oCACA,aAEA,6BACA,SAGA,oBACA,qBACA,sDACAC,eADA,KAEA,CACA,yCACA,eACA/S,wCADA,CAEAgT,uCAFA,CAGAJ,uFAHA,GAIAG,eAJA,CAMA,CACA,CAEA,iBAEA,KADAE,SACA,kFAGA,sBAEA,KADAA,SACA,4EAGA,YACA,CA5JA,CAgLAC,2BA8CA,8CACA,eASA,MARA,yBAQA,EANAC,uBAMA,CALAC,UAKA,EAJAC,oBAIA,GAHAC,+BAGA,CAFAF,UAEA,SACA,CAzDA,KAIAC,cAJA,CASAF,aATA,CAWA3T,yCAXA,CAaA,kBAbA,CAeA,YAfA,CAkBA,uBAlBA,CAwBA,2CACA,aACA,wBACA6B,wBADA,KAEA,CACA,gCACA,KAFA,GAGArB,8BAHA,CAIAmT,oBAJA,GAKA9R,wBALA,EAQA,CACA,UACA,CAdA,CAyCA,mCAIA,MAHA,oBAGA,GAFA7B,kBAEA,MACA,CAtEA,CA6EA,+BAEA,MADAA,+BACA,KACA,CAhFA,CAuFA,mCACA,kCADA,CAEAA,YAFA,CAIA,IACA,CA5FA,CA8FA,wEACA,0CADA,MAEAuL,4FAFA,CAIA6D,6CAJA,CAMA,IAEA,CAtGA,CA4GA,gDACA,2BACA,CA9GA,CAoHA,8CACA,uBACA,CAtHA,CAgIA,qDACA2E,IADA,CAEAlS,MAFA,MAGArB,uCAHA,CAIAV,oCAJA,CAKAkU,uCALA,CAOA,+CACA,gFAiCA,MA7BAlW,wDA6BA,GAtBAiW,0CAsBA,CArBAjW,eAqBA,GApBA+D,QAoBA,GAfAA,4BAeA,CAZA/D,sDAYA,GALAiW,yCAKA,CAJAjW,eAIA,GAHA+D,QAGA,MACA,CA1KA,CA4KA,gDACA,aADA,KAEArB,uCAFA,CAGAV,oCAHA,CAWA,MANAA,SAMA,EALA,mCAKA,GAJA+B,4CAIA,KACA,CAxLA,CA0LA,qCACA,4BACA,CA5LA,CA8LA,0DACA,aADA,KAEArB,0CAFA,CAGAV,oCAHA,CAKA,YACA+B,4CADA,KAGA,2EAEA,UACA,CAzMA,CA2MA,2DACArB,0CADA,CAEAV,oCAFA,CAIA,gDACA,iDAEA,CAlNA,CAoNA,+DACA,WADA,KAEAU,8CAFA,CAGAV,oCAHA,CAKA,aASA,qEATA,IACA,6CACA+B,2DADA,CAEA,iEACAiK,0CAHA,EAIAA,2DAEA,CAIA,UACA,CArOA,CAuOA,sDACA,WADA,KAEAtL,8CAFA,CAGAV,oCAHA,CAKA,YACA,uCADA,GAEA+B,kDAFA,MAKA,sEAEA,UACA,CApPA,CAsPA,wDACA,WADA,KAEArB,8CAFA,CAGAV,oCAHA,CAKA,YACA,yCADA,GAEA+B,oDAFA,MAKA,sEAEA,UACA,CAnQA,CA+QA,mDACA,WADA,KAEArB,8CAFA,CAGAV,oCAHA,CAKA,YAEA+B,GAFA,CACA/D,+BADA,CAEAgC,2CAFA,CAIAA,8CAJA,KAOA,sEAEA,UACA,CA9RA,CA0SA,8DACAU,8CADA,CAEAV,oCAFA,CAIA,YACAhC,+BADA,CAEAgC,iDAFA,EAIAA,gDAJA,CAKAA,oDALA,MAQA,qEAEA,CAxTA,CAgUA,kDACA,WADA,KAEAU,8CAFA,CAGAV,oCAHA,CAKA,YACAhC,8BADA,GAEA+D,8CAFA,MAKA,sEAEA,UACA,CA7UA,CA+UA,mCACA,iBACA,CAjVA,CAmVA,2CACA/D,uCACA,CArVA,CAuVA,6CACA,gBACA,gBAEA,mDAaA,GAZAmW,SAYA,GAXAjU,wBAWA,EATAA,cASA,GAPAA,wDAOA,CANAlC,yDACAkC,gEACA,CAFA,CAMA,CAHA,kEAGA,mBAyCAiH,6BAzCA,KACA,+BAEAD,kEAFA,CAKAlJ,0CACA,mCACAoW,IAFA,GAGAlN,6CAHA,CAKA,CALA,CALA,CAYAlJ,6CACA,uBACA,mCACAqW,kFADA,CAEArW,6CACA,GACA,wDACA,yCAFA,CAIA,gBACAiU,UACA,6CADA,CAEAvR,QAFA,CAGA,cAHA,CAIAX,QALA,CAQA,CAbA,CAFA,KAiBA,8CACA,iFAGA,CAvBA,CAZA,KAqCA,qFAqBA,MAfAyG,yBACA8N,OADA,CACAnN,+CADA,EAEAoN,IAFA,GAGArG,IAHA,CAGAsG,SACAA,uBACAhB,uBADA,GAEAK,gCAFA,CAKA,CALA,CADA,CAOA,2BAPA,EAQArM,8BAEA,CAbA,CAeA,KACA,CApaA,CAyaA,8BAIA,MAHA,iBAGA,EAFA4K,oCAEA,KACA,CA9aA,CAubA,yEACA3R,sCADA,GAEA,sDACAyS,qEADA,CAEA,QAFA,CAFA,CAOA,CA9bA,CAwcA,wEAEAvS,OAFA,CAEArC,CAFA,CACAmW,UADA,CAIA,2CAIA,GAHA9T,8BAGA,0CAcAF,2CAdA,CAeAzC,yCACA,OADA,EAEAA,iEACA0L,gDACA,CAFA,CAIA,CANA,CAfA,CAuBA1L,8DACAyW,iDACA,CAFA,CAvBA,KACA,gDAEA,IADA,+BACA,aACAA,sEADA,CAEA,4DAFA,CAFA,IAOAA,mEAPA,CAQA,sDARA,CALA,MAkCA,oDAlCA,CAmCAvB,sDAnCA,CAuCAlV,gBACA,CAEA,QACA,CAvfA,CAyfA,6BACA,iBACA,CA3fA,CA6fA,6BACA,iBACA,CA/fA,CAsgBA,+CACAkC,qBADA,CAIA,kCAJA,CAKAA,iCALA,QAEAwU,GAKA,CA7gBA,CAkhBA,qCAKA,GAHAvU,8DAGA,mCACA,mCAGA,+FAEA,cAFA,IAGA,CACA,cACA,0DAWA,GATAwU,0CASA,EARA3W,kEACA,sCAEA,MADA4W,sDACA,GAEA,CALA,CAQA,QACA,cADA,IAEA,CACA,8DACA,qBACA,CACA,CACA,CAljBA,CAojBA,sDACA,2BACA,CAtjBA,CAwjBA,4CACA,oBACA,uBAEA,CA5jBA,CA8jBA,8CACA,oCACA,CACA,CAjvBA,CAuvBA,gBAOAC,uDACA,6BACA,4DAEAjB,oBAHA,CAKA,iCALA,CAMA,kBANA,CAOA,uDACA,CARA,CAUA,MADAkB,yCACA,YACA,CAnBA,EAsBA,iBAEA,CA/wBA,C,CCkBAja,uIACA,aADA,GAGAka,0BAHA,CAIAC,wBACAC,SADA,CAJA,CAQAC,qDACA,+CAEAC,QAFA,CACAC,uBADA,CAGAC,aAHA,CAIAC,UAJA,OAMAC,2BANA,MAUAJ,wBAVA,CAYAnX,kEAZA,EAaAA,sDACAA,qBADA,CAEAqX,8CAFA,CAIAG,cAJA,CAKAF,oDALA,CAMAE,cANA,EAOAH,mDAGA,CAVA,CAbA,CA0BAza,8BAEA,sBAEAwa,qDAJA,CAMA,yBANA,GAQAE,8CACA,qCACA,CAFA,CAEAA,OAFA,CARA,CAYAtX,0DACAyX,0DADA,GAEAC,wBAFA,CAIA,CAJA,CAZA,CAkBAJ,uCAlBA,CAoBAtX,qCACAyX,oCADA,CAEAL,oDACA,2CACA,CAFA,CAGA,CALA,CApBA,EA4BAO,6BAEA,CA9BA,CA8BAC,MA9BA,CA1BA,EAOAA,0BAoDA,CA3DA,CA4DA,CArEA,CA4EAC,uEACA,4CACA,CA9EA,CAgFA,oDAEAC,WAFA,CAGAC,cAHA,CASA,0CACAC,YADA,CASAC,yCAEA,wCAEAC,QAFA,CAGAlY,wDAHA,CAMAA,sCAGA,CApBA,CA4BAmY,gEAGA,MAFAJ,0EAEA,CADAD,UACA,KACA,CAhCA,CAsCAM,yCAGA,MAFAL,eAEA,CADAD,UACA,KACA,CA1CA,CAkDAO,iDAEAC,YAFA,CACArE,SADA,CA2BA,MAtBAqE,YAsBA,CAvBAR,wBAuBA,CAtBA7H,mBAsBA,CApBA,qCACA,4BACAjQ,0CACA,eADA,EAEAuY,6BAEA,CAJA,CAFA,CAOAxB,2CACA/W,mDACA6X,mCADA,GAEAE,kDAFA,CAIA,CAJA,CADA,CAMAJ,oBANA,CAOAG,UAPA,CAQA7D,2CACA,CATA,CASA2D,MATA,CAUA,CAjBA,CAoBA,YACA,CA9EA,CAoFAY,yCACA,WAIA,MAHAxY,8CACAyY,iCACA,CAFA,CAGA,IACA,CA1FA,CAkGAC,uDACA,qDADA,MAEA7P,gBAFA,CAGA7I,kCACAE,iCADA,CAEAyY,2BAFA,CAGAxB,+BAHA,CAIAyB,2BAJA,EAHA,KAUA,uBACA7K,2CADA,CAEA8K,6BAFA,CAGAX,eAHA,EAMA,CAlHA,CA0HAY,uDACA,qDADA,MAEAjQ,yCAFA,CAGA7I,kCACAE,iCADA,CAEAyY,2BAFA,CAGAxB,+BAHA,CAIApN,iCAJA,CAKA6O,2BALA,CAMAG,2BANA,EAHA,KAYA,uBACAhL,2CADA,CAEA8K,6BAFA,CAGAX,eAHA,EAMA,CA5IA,CAkJAc,+CACA,WASA,MARAhZ,8CACA,iCAGAiZ,kEAJA,GAKAR,mBALA,CAOA,CAPA,CAQA,IACA,CA7JA,CAqKAS,uDACA,6CADA,MAEAC,QAFA,CAGAA,eAHA,CAKA,EACA,CA3KA,CAqLAC,+CAEAd,YAFA,CACArE,SADA,CAwDA,MApDA/R,uDAoDA,CAlDAoW,iEAEA,iBASA,MAPAtY,wCACAqZ,QADA,EAEAC,+BAEA,CAJA,CAOA,+CAEA,0BAeA,MAZArF,qDACA,yBACA,CAFA,CAEAA,kBAFA,CAYA,CAPAjU,kEACAA,uEADA,OAIAuZ,oEACA,CALA,CAOA,8DACA,oEACA,yBACA,CAFA,CAEA,EAFA,EAMAxC,+CACA,CARA,CASA,CA1BA,CA4BA,CAvCA,CAkDA,CARAuB,YACApI,IADA,CACA,WACA+D,8BACA,CAHA,EAIA9D,KAJA,CAIA,cACA8D,yBACA,CANA,CAQA,YACA,CA9OA,CAwPAuF,+CACAlB,YADA,CAEArE,SAFA,CA2DA,MAvDA/R,uDAuDA,CArDAoW,uDACA,4BADA,MAGAtY,0DACA,kDACA,oEACA,iCACA,2EACA,SAFA,KAKA,6EACA,SAGAyZ,gFACA,CACA,CAdA,CAHA,CAmBAA,2BAnBA,CAoBA,qCAEA1C,2CACA,gBACA/W,0CACAE,mCADA,CAEAwZ,iCAFA,CAGApZ,wEAHA,CAIA,GAJA,CAKA2T,4FALA,EAOAA,gDAPA,CAQA0F,wBARA,CAUA,CAVA,CAFA,CAaAhC,iBACA,CAdA,CAcAC,MAdA,CAeA,CAjBA,CApBA,CAuCA3H,mBAGA,CA1CA,CAqDA,CATAqI,YACApI,IADA,CACA,mBAEA,MADA+D,wCACA,SACA,CAJA,EAKA9D,KALA,CAKA,cACA8D,yBACA,CAPA,CASA,YACA,CApTA,CA4TA2F,+CACA,qDAIA,MAHA/Q,gBAGA,GAFAA,0BAEA,MACA,CAlUA,CA0UAgR,iDACA,qDAIA,MAHAhR,gBAGA,GAFAA,0BAEA,MACA,CAhVA,CAwVAiR,qDACA,qDACA,oDACA,CA3VA,GA6VA,CACA,CAvbA,C,CCEAjd,kIACA,aAEA,mBACAkd,SAEAC,iEAFA,CAGAC,aACAC,kDADA,CAEAC,mBAFA,CAGAC,WAHA,CAHA,CAQAC,cACAH,mDADA,CAEAC,mBAFA,CAGAC,WAHA,CARA,CAaAE,+FAbA,CAcAC,cACAL,mDADA,CAEAC,mBAFA,CAGAC,WAHA,CAdA,CAmBAI,yCAnBA,CAoBAC,2CApBA,CAqBAC,6CArBA,CAsBAC,yCAtBA,CAuBAC,iEAvBA,CAyBAC,8DAzBA,CA0BAC,sCA1BA,CA2BAC,4DA3BA,CA4BAC,mFA5BA,CA6BAC,uFA7BA,CA8BAC,uDA9BA,CA+BAC,qDA/BA,CAgCAC,gEAhCA,CAiCAje,mEAjCA,CAkCAke,uDAlCA,CAmCAC,gFAnCA,CAoCAC,gFApCA,CAqCAhe,6FArCA,CAsCAie,uCAtCA,CAuCA3b,OACAqa,kDADA,CAEAC,6DAFA,CAGAsB,QAHA,CAvCA,CA4CAC,wDA5CA,CA6CAC,wDA7CA,CA8CAC,wDA9CA,CA+CAC,mCA/CA,CAgDAC,mCAhDA,CAiDAC,4DAjDA,CAkDAC,qCAlDA,CAmDAC,wCAnDA,CAoDAC,2CApDA,CAqDAC,qCArDA,CAsDAC,uCAtDA,CAuDAC,wCAvDA,CAwDAC,wCAxDA,CAyDAC,uCAzDA,CA0DAC,sCA1DA,CA2DAlc,qCA3DA,CA4DAmc,uCA5DA,CA6DAC,qCA7DA,CA8DAC,wCA9DA,CA+DAC,yCA/DA,CAgEAC,wCAhEA,CAiEAC,0CAjEA,CAkEAC,uCAlEA,CAmEAC,uCAnEA,CAoEAC,sCApEA,CAqEAC,uCArEA,CAsEAC,6CAtEA,CAuEAC,0CAvEA,CAwEAC,qCAxEA,CAyEAC,qCAzEA,CA0EAC,qCA1EA,CA2EAC,qCA3EA,CA4EAC,qCA5EA,CA6EAC,qCA7EA,CA8EAC,oCA9EA,CA+EAC,sCA/EA,CAgFAvgB,4FAhFA,CAiFAwgB,sCAjFA,CAmFAle,uEAnFA,CAoFAme,sDApFA,CAqFAte,kEArFA,CAsFAD,8CAtFA,CAuFA7B,4CAvFA,CAwFAqgB,gEAxFA,CAyFAC,kEAzFA,CA0FApgB,qCA1FA,CA2FAI,gFA3FA,CA4FA8B,6FA5FA,CA6FAZ,iEA7FA,CA8FA+e,gDA9FA,CA+FAC,eACAhE,sDADA,CAEAC,wBAFA,CAGAgE,MAHA,CA/FA,CAoGAC,gBACAlE,uDADA,CAEAC,yBAFA,CAGAgE,MAHA,CApGA,CAyGA9f,uDAzGA,CA0GAD,0DA1GA,CA2GAa,sDA3GA,CA4GAF,sDA5GA,CA6GAF,wDA7GA,CA8GAL,yDA9GA,CA+GAQ,sDA/GA,CAgHAI,uDAhHA,CAiHAE,uDAjHA,CAkHA+e,wDAlHA,CAmHAC,wDAnHA,CAoHA1f,0DApHA,CAqHAH,mEArHA,CAsHAE,+DAtHA,CAuHAD,kEAvHA,CAwHAS,8DAxHA,CAyHAE,+EAzHA,CA0HAd,iFA1HA,CA2HAO,8DA3HA,CA4HAR,4DA5HA,CA6HAoB,iEA7HA,CA8HA5C,qCA9HA,CADA,CAkIAyhB,6CAlIA,CAoIAC,kDACA,yDACA,kBACA,qBACAzE,cADA,GAGA0E,6BAHA,EAWA,MAJAA,WAIA,GAHAA,sDAGA,iFACA,CAnJA,CAqJAC,+BACA,QACA,2CACA3a,2CADA,KAEA,CACAA,MADA,CAEA,wDACA,uCACA,wCACA,mBACA,uDACA4a,gBAFA,GAGA,eAHA,EAIA5a,gBAJA,CAMAA,uDANA,CAQA,CACA,CACA6a,2CACA,CAEA,UACA,CA5KA,CA8KAC,+CACA,WACAC,mBAFA,CAIA,0CACA,yBACA,6BACA,gCACA,sBACAA,mBADA,CAIA/a,iBAJA,CAOA,uDACA,uBACA,wBACA+a,cAFA,GAGAA,iBAHA,CAKA/a,eALA,CAQAgb,SARA,GASAhb,iEATA,EAYA,CAGAgb,SAvBA,GAwBAhb,mEAxBA,CA0BA,CACA,CAIA,wDACA,qBACAA,8EAGA,qBACA,CA3NA,CA6NAib,kDACA,uEACA,mDACA,CAhOA,CAkOAC,qCACA,QACA,kDACAlb,uCADA,KAEA,CAEA,GADAA,MACA,iCACAA,yCADA,CAEAgb,SAFA,EAEA,CACA,iBACAhb,gEAEAA,kBACA,CAEA6a,uCACA,CAEA,UACA,CArPA,CAuPAM,yCACA,QACA,gCACA,oGACAnb,mDADA,KAEA,CAEA,iBADAA,OACA,sBACA,wCACA,oCAFA,GAGAqB,IAHA,CAIAwT,WAJA,EAKA7U,gBALA,CAQAA,gBARA,CAUAgb,SAVA,GAWAhb,mEAXA,EAcA,CACA6a,oCAjBA,GAkBAA,uCAlBA,EAoBAA,mDACA,CAEA,UACA,CApRA,CAsRAO,kBACA,uCACA,CAxRA,CA0RAC,mBACA,wCACA,CA5RA,CA8RArc,sBACA,uBACA,SADA,IAEA,CACA,wDACA,qCACA,CACA,CArSA,CA4SAsc,0BACA,sCADA,CAEAC,2IAFA,EAIA,+BAJA,EAKAA,kGAGA,CApTA,CA2TAC,qCACAC,YACAC,4CADA,CAEAC,4CAFA,CAGAC,8CAHA,CADA,CAOAC,mBACAvhB,mBACAsa,8BADA,CAEAkH,eACA,6FADA,CAFA,CAKAC,kBALA,CAMAC,kBANA,CAOArd,4BAPA,CAQAsd,yCARA,CASAC,2BATA,CADA,CAYAhhB,kBACA0Z,6BADA,CAEAmH,iBAFA,CAGAD,iEAHA,CAIAE,iBAJA,CAKArd,2BALA,CAMAsd,8CANA,CAOAC,2BAPA,CAZA,CAqBA7hB,sBACAua,iCADA,CAEAmH,qBAFA,CAGAD,0DAHA,CAIAE,qBAJA,CAKArd,+BALA,CAMAsd,iDANA,CAOAC,2BAPA,CArBA,CA8BAlhB,kBACA4Z,6BADA,CAEAmH,iBAFA,CAGAD,eACA,0FADA,CAHA,CAMAE,iBANA,CAOArd,2BAPA,CAQAsd,iDARA,CASAC,2BATA,CA9BA,CAyCAphB,oBACA8Z,+BADA,CAEAmH,mBAFA,CAGAD,wEAHA,CAIAE,mBAJA,CAKArd,6BALA,CAMAsd,0CANA,CAOAC,2BAPA,CAzCA,CAkDAzhB,qBACAma,iCADA,CAEAmH,qBAFA,CAGAD,oEAHA,CAIAE,qBAJA,CAKArd,8BALA,CAMAsd,wDANA,CAOAC,2BAPA,CAlDA,CA2DA7gB,mBACAuZ,8BADA,CAEAmH,kBAFA,CAGAD,0DAHA,CAIAE,kBAJA,CAKArd,4BALA,CAMAsd,6CANA,CAOAC,2BAPA,CA3DA,CAoEA1hB,yBACAoa,qCADA,CAEAmH,yBAFA,CAGAD,eACA,yFADA,CAHA,CAMAE,yBANA,CAOArd,kCAPA,CAQAsd,0CARA,CASAC,2BATA,CApEA,CA+EA3gB,mBACAqZ,mCADA,CAEAmH,kBAFA,CAGAD,0EAHA,CAIAE,uBAJA,CAKArd,4BALA,CAMAsd,6CANA,CAOAC,2BAPA,CA/EA,CAwFAjhB,kBACA2Z,6BADA,CAEAmH,iBAFA,CAGAD,eACA,8HADA,CAHA,CAMAE,iBANA,CAOArd,2BAPA,CAQAsd,2CARA,CASAC,2BATA,CAxFA,CAmGAnjB,YACA6b,sBADA,CAEAmH,gBAFA,CAGAD,eACA,uHADA,CAHA,CAMAE,iBANA,CAOArd,qBAPA,CAQAsd,0CARA,CASAC,2BATA,CAnGA,CA8GAnhB,yBACA6Z,qCADA,CAEAmH,yBAFA,CAGAD,wDAHA,CAIAE,yBAJA,CAKArd,kCALA,CAMAsd,+DANA,CAOAC,2BAPA,CA9GA,CAuHA5gB,sBACAsZ,kCADA,CAEAmH,sBAFA,CAGAD,eACA,mFADA,CAHA,CAMAE,sBANA,CAOArd,+BAPA,CAQAsd,gEARA,CASAC,2BATA,CAvHA,CAkIA3hB,uBACAqa,mCADA,CAEAmH,uBAFA,CAGAD,sDAHA,CAIAE,uBAJA,CAKArd,gCALA,CAMAsd,2EANA,CAOAC,2BAPA,CAlIA,CA2IArhB,oBACA+Z,+BADA,CAEAmH,mBAFA,CAGAD,8EAHA,CAIAE,mBAJA,CAKArd,6BALA,CAMAsd,0CANA,CAOAC,4BAPA,CA3IA,CAoJAthB,yBACAga,qCADA,CAEAmH,yBAFA,CAGAD,oEAHA,CAIAE,iBAJA,CAKArd,kCALA,CAMAsd,+CANA,CAOAC,4BAPA,CApJA,CA6JAxhB,6BACAka,yCADA,CAEAmH,6BAFA,CAGAD,wFAHA,CAIAE,qBAJA,CAKArd,sCALA,CAMAsd,kDANA,CAOAC,4BAPA,CA7JA,CAsKAvhB,4BACAia,yCADA,CAEAmH,uBAFA,CAGAD,4EAHA,CAIAE,qBAJA,CAKArd,qCALA,CAMAsd,kDANA,CAOAC,4BAPA,CAtKA,CA+KA9gB,wBACAwZ,oCADA,CAEAmH,wBAFA,CAGAD,8FAHA,CAIAE,wBAJA,CAKArd,iCALA,CAMAsd,oCANA,CAOAC,4BAPA,CA/KA,CAPA,CAkMAC,oBAlMA,CAmMA,iEACA,yBADA,GAEAA,oCAFA,EAKA,wBACA,CApgBA,EAugBA,kBACA,CA3gBA,C,CCFArjB,gEACA,QADA,CAEA,MAFA,CAGA,oDAHA,CAIA,0CAJA,EAKA,mDACA,aAQA,4CACA,gCASAsjB,uGACAje,0DADA,MAEAke,kDAFA,CAGA1d,uDAHA,CAIA,GACA0d,UACAA,gBADA,EAEAA,qBAFA,EAGAA,qBAHA,GAIAA,uEAJA,CADA,CAOA,OACAzH,oBADA,CAEAmH,sFAFA,CAGAC,oBAHA,CAIAF,gCAJA,CAKAnd,QALA,CAMAsd,uDANA,CAOAC,2BAPA,CAUA,CA9BA,GA+BAI,EA/BA,CA+BA,gBA/BA,CA+BA,WACA,wCACArgB,oDACAsgB,4DACApG,6BADA,CAEAiE,MAFA,CAIA,CALA,CAMA,CAvCA,CAwCA,CACA,CAxDA,C,CCAAthB,iKACA,aADA,GAIA0jB,sBAJA,CAKAC,YALA,CAMAC,sBANA,CAkBA,MAVAA,yBAUA,GATAD,0BASA,EANAxgB,oCACAqZ,8BADA,EAEAkH,0CAEA,CAJA,CAMA,SACA,CAnBA,C,CCAA1jB,gEACA,QADA,CAEA,oDAFA,EAGA,oCACA,aAOA,sCACA,gCACA,CAEA,CAfA,C,CCAAA,iKACA,aADA,GAIA0jB,sBAJA,CAKAC,YALA,CAMAC,sBANA,CAkBA,MAVAA,yBAUA,GATAD,0BASA,EANAxgB,oCACAqZ,8BADA,EAEAkH,0CAEA,CAJA,CAMA,SACA,CAnBA,C,CCAA1jB,gFACA,+CADA,CAEA,+CAFA,EAGA,gCACA,aAEA,sDACA6jB,+BADA,CAEAA,qCAFA,CAIAC,8BAJA,CAKAA,qCALA,CAOA9H,cACA,CAIA,OACAlF,8BADA,CAEAiN,mDAEA,uBACA,wCAHA,MAIAlK,0BAJA,CAKAA,iGACA,2DADA,MAEAmK,gBAFA,CAGAA,2BAHA,CAKAC,SACA,CANA,CALA,OAaA,CAfA,CAiBA,CAnCA,C,CAoCAjkB,MCtDA,mUAEAmD,qEAFA,CAGAgR,mGAHA,CAIA+P,8FAJA,CAKAC,+JALA,CAMAC,2IANA,CAOA5X,8FAPA,CAQA6X,yKARA,IA4BAC,+BA5BA,CA6BAC,4BA7BA,CAgCAC,iCACA,CACA,CACA1N,YADA,CAEAiN,iCACA,GACAO,YACAzK,QADA,GAEAA,qFAFA,CADA,CAKA,sCAEA,CAVA,CADA,CAaAuK,wBAbA,CAcAA,wBAdA,CAeAA,sBAfA,CAgBAA,8BAhBA,CAiBAA,uBAjBA,CAkBAC,qBAlBA,CADA,CAqBA,YArBA,CAhCA,CAyDAI,WACAvkB,4DADA,CAEAD,6DAFA,CAGAG,sBAHA,CAIA8C,yDAJA,CAKA7C,8DALA,CAMAM,qBANA,CAOAC,sBAPA,CAQAT,qBARA,CASAI,sDATA,CAUAC,gDAVA,CAWAC,8DAXA,CAYAH,kDAZA,CAaAI,sDAbA,CAcAsC,oDAdA,CAeAC,wEAfA,CAgBApC,gEAhBA,CAiBA+B,oEAjBA,CAkBAP,mEAlBA,CAmBAb,yFAnBA,CAoBAE,qGApBA,CAqBAU,uFArBA,CAsBAb,+FAtBA,CAuBAW,uFAvBA,CAwBAM,+FAxBA,CAyBAD,yFAzBA,CA0BAN,qGA1BA,CA2BA,gHA3BA,CA4BA,8GA5BA,CA6BAd,gEA7BA,CA8BAJ,wDA9BA,CA+BAE,gEA/BA,CAgCA,0CACA,wFAjCA,CAkCA,8CACA,4FAnCA,CAoCAG,0EApCA,CAqCAY,2FArCA,CAsCAD,2FAtCA,CAuCAb,gBAvCA,CAwCAS,6FAxCA,CAyCAW,mGAzCA,CA0CAR,qGA1CA,CA2CAK,uFA3CA,CA4CAM,yFA5CA,CA6CAZ,2GA7CA,CA8CAb,8DA9CA,CA+CAY,6GA/CA,CAgDAd,oBAhDA,CAiDA+B,iGAjDA,CAkDAC,wEAlDA,CAmDAC,wDAnDA,CAoDAtB,iGApDA,CAzDA,CAgHAmiB,QACA9M,qBADA,CAEA2N,mBAFA,CAGApf,SACAmf,yBADA,CAEAN,iBAFA,CAGAQ,mBACAC,6CADA,CAEAC,2CAFA,CAGAC,yDAHA,CAIAtT,qCAJA,CAHA,CASAX,8BATA,CAHA,CAhHA,CAgIA,aAEA,CAlIA,C,CAoIA5Q,MCpIA,mLAEA8kB,kHAFA,CAGAlB,8FAHA,CAuBA,2EAEA,eAEA,CA3BA,C,CA6BA5jB,MC7BA,sGAEAmD,qEAFA,CAGAqJ,8FAHA,CAuBA,iBAMAkN,gCACA,2BADA,MAGAqL,oCAHA,GAIAnB,yDAJA,CAKAmB,8BALA,CAOAA,cAPA,EAUAA,kBAVA,CAaA,qCACArlB,sCACAyD,yCACA6hB,yCADA,EAEAA,iBAEA,CAJA,CADA,CAMAlK,SACA,CAPA,CAOA,cACAC,mBACA,CATA,CAUA,CAXA,CAbA,CAWA3H,iBAcA,CA/BA,EAkCA,kBAEA,CA3DA,C,CCiBApT,0CACA,QADA,CAEA,QAFA,CAGA,QAHA,CAIA,qCAJA,CAKA,iDALA,CAMA,gBANA,CAOA,cAPA,CAQA,gDARA,EASA,2EACA,aAaA,MAVAilB,4BAUA,mCAGAvlB,0DACAwlB,wBADA,CAEAC,mCAFA,CAGAC,gGAHA,CAKAjgB,qBALA,CASAzF,0BATA,CAWAwlB,6BAXA,CAYAA,+BAZA,CAcAA,+CAEAA,uDAEAA,0CAIAG,oBAJA,CAKAzB,sBALA,CAMAA,sFANA,GAOAyB,sCAPA,EASAN,sCACA1R,IADA,CACA,WAGAlQ,oCAHA,EAIApD,6CACAoD,yCACAA,6BADA,EAEA6hB,iDAEA,CAJA,CAKA,CANA,CAJA,CAaAnT,mCAbA,CAgBA1O,mBACAzD,cACA,CAFA,CAGA,CApBA,EAqBA4T,KArBA,CAqBA,cACA,uDACA,CAvBA,CAyBA,CAlCA,CAmCA,CArCA,CAsCA,CAxCA,CAyCA,CA1DA,CA6DAnQ,mBAEA0O,kCACA,CAHA,CAKA,CACA,CA1FA,C,CCCA7R,uCACA,iCADA,CAEA,2BAFA,EAGA,uBACA,aAEA,OACAslB,uBAEA,8CACAC,2BACA,CALA,CAOA,CAbA,C,CCjBAvlB,uD,CACAN,MCFA,QDEA,CCFA,iE","names":["loaderScript","configUrl","bundle","loadController","controllerOptions","controllerPath","params","window","controller","document","startController","bundles","require","define","_container","assessmentItem","responseProcessing","_simpleFeedbackRule","stylesheet","math","figure","img","figcaption","object","outcomeDeclaration","responseDeclaration","rubricBlock","associableHotspot","gap","gapImg","gapText","hotspotChoice","hottext","inlineChoice","simpleAssociableChoice","simpleChoice","associateInteraction","choiceInteraction","endAttemptInteraction","extendedTextInteraction","gapMatchInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","matchInteraction","mediaInteraction","orderInteraction","prompt","selectPointInteraction","sliderInteraction","textEntryInteraction","uploadInteraction","feedbackBlock","feedbackInline","modalFeedback","customInteraction","infoControl","include","table","printedVariable","_tooltip","_","buildSerial","id","chars","buildId","usedIds","i","suffix","exists","buildIdentifier","useSuffix","prefix","replace","findInCollection","collectionNames","collection","elt","found","addMarkupNamespace","ns","markup","$0","$1","$3","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","$","getOptionsFromArguments","data","placeholder","subclass","renderer","arg","options","console","loggerFactory","util","rendererConfig","_instances","logger","Element","qtiClass","serial","rootElement","init","attributes","is","getSerial","getUsedIdentifiers","elts","getUsedIds","attr","removeData","removeAttr","setAttributes","getAttributes","removeAttributes","attrNames","getComposingElements","append","getUsedClasses","composingElts","ret","find","body","parent","setRelatedItem","setRootElement","getRelatedItem","getRootElement","setRenderer","getRenderer","render","rendering","args","_renderer","tplData","defaultData","tag","postRender","postRenderers","getContainer","toArray","type","arr","isEmpty","addClass","_containClass","hasClass","removeClass","clazz","toggleClass","state","isset","unset","stripNs","pattern","openRegEx","closeRegEx","restoreNs","xmlCopy","ignoreMarkup","xmlRe","tagRe","xmlMatch","imsXsd","html5Ns","prefixAtt","xml","tagMatch","MATCH_CORRECT","responseIf","expression","expressions","identifier","responseRules","baseType","value","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","NONE","isUsingTemplate","tpl","isValidTemplateName","getTemplateUriFromName","getTemplateNameFromUri","tplName","getTemplateNameFromResponseRules","outcomeRules","outcomeIdentifier","Object","key","qtiClasses","xmlNsHandler","moduleLoader","responseHelper","itemScoreHelper","loadPortableCustomElementProperties","properties","portableElement","loadPortableCustomElementData","setClassesLocation","getRequiredClasses","loadRequiredClasses","requiredClasses","required","requiredClass","module","category","loadeded","callback","getLoadedClasses","loadItemData","outcome","feedback","responseIdentifier","responseRuleItemIndex","response","responseRule","feedbackRules","map","responseKey","responseIdentifiers","some","loadAndBuildElement","loadElement","loadElements","elementData","allElements","buildResponse","buildSimpleFeedbackRule","feedbackRule","buildOutcome","buildResponseProcessing","customResponseProcessing","rp","loadContainer","bodyObject","eltData","element","buildElement","loadElementData","loadInteractionData","buildInteractionChoices","choice","interaction","loadChoiceData","loadObjectData","loadMathData","loadTooltipData","tooltip","loadPciData","loadPicData","getRawValues","html","_setDomClass","$bodyDom","$wrapper","oldClass","newClass","dataName","_getEncodedDataString","_setBodyDomClass","$body","regex","matches","_prefix","container","setEncodedData","hasEncodedData","getEncodedData","removeEncodedData","setEncodedDataToDom","firstFeedback","interactionsDisplayInfo","messages","renderedFeebacks","renderingQueue","$itemContainer","$itemBody","feedbackIds","message","$container","comparedOutcome","_currentMessageGroupId","interactionInfo","order","clearModalFeedbacks","renderModalFeedback","renderingToken","loader","$$1","iframeNotifier","autoscroll","onShowCallback","replaceControl","me","max","currentScrollTop","minScrollTop","maxScrollTop","scrollTop","$element","messageGroupId","$displayContainer","$interactionContainer","interactionContainer","displayContainer","interactionOrder","_interactionInfo","$modalFeedback","inline","done","renderedCallback","dom","Promise","then","catch","$scope","$controls","$toggleContainer","initControlToggle","toggleButtonTemplate","fb","uncover","$ok","cover","$interaction","toLowerCase","trim","context","pci","containerHelper","Handlebars","__","DOMPurify","hb","keyValueGlue","fragmentGlue","wrapper","fragment","fragments","startIndex","stopIndex","increment","var1","Helpers0","helpers","buffer","escapeExpression","Template$1","timeout","inlineRenderer","showFeedbacks","feedbacksToBeDisplayed","itemSession","count","endCallback","onCloseCallback","callstack","cb","async","$feedbackBox","$feedback","ItemLoader","modalFeedbackInline","modalFeedbackModal","QtiRunner","responses","states","variables","base","file","name","mime","that","oldStateVariables","itemApi","killCallback","self","responseId","themeName","themeLoader","interactions","inlineDisplay","Math","convertChoices","_this","outputType","findChoices","shuffleChoices","f","j","r","k","serialToIdentifier","interactionHelper","themesHelper","_renderableClasses","_dependencies","_renderableSubclasses","_defaults","_isValidRenderer","classCorrect","subClass","valid","Renderer","_renderers","success","_locations","list","res","decorators","themeData","deps","requiredSubClasses","addList","load","loaded","choices","url","runtimeLocations","absUrl","build","NewRenderer","_requirejs","_defaultLoadingOptions","reload","loadModuleConfig","baseUrl","requireConfigAliases","reqConfigs","modules","manifest","pciConfig","paths","runtimeModules","resolve","reject","isPortableElementProvider","_loaded","__providers","_registry","get","version","registerProvider","resetProviders","loadProviders","loadPromise","providerLoadingStack","getAllVersions","all","getRuntime","label","model","typeIdentifier","getCreator","xmlns","getLatestCreators","lastVersion","getBaseUrl","runtime","loadRuntimes","provider","loadStack","configLoadingStack","loadCreators","requiredCreatorHooks","portableElementModel","creators","enable","disable","isEnabled","classes","itemBody","atomicBlock","parents","contains","abstract","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","col","colgroup","div","dl","dt","dd","hr","li","ol","ul","param","xhtml","tbody","tfoot","thead","td","th","tr","a","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","p","pre","br","textRun","blockInteraction","inlineInteraction","templateElement","templateBlock","qti","templateInline","drawingInteraction","graphicInteraction","cache","getAllowedContainersElements","jqSelector","getAllowedContainers","intersect","QtiElements","getAllowedContents","checked","recursive","isAllowedClass","getParentClasses","getChildClasses","isBlock","isInline","isVisible","featuresService","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","getAuthoringData","pciModel","on","qtiElements","registry","providers","config","ciRegistry","icRegistry","handle","runtimeLocation","fullmatch","themes","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","assetManager","locations","enableDragAndDrop","associate","gapMatch","graphicGapMatch","Renderer$1","userModules","dependency","history","qtiRunner","coreItemData","variableElementsData","userModulesOverride","start","qtiBootstrap"],"sources":["loader/bootstrap.js","taoQtiItem/qtiItem/core/qtiClasses.js","taoQtiItem/qtiItem/helper/util.js","taoQtiItem/qtiItem/helper/rendererConfig.js","taoQtiItem/qtiItem/core/Element.js","taoQtiItem/qtiItem/helper/xmlNsHandler.js","taoQtiItem/qtiItem/helper/responseRules.js","taoQtiItem/qtiItem/helper/response.js","taoQtiItem/qtiItem/helper/itemScore.js","taoQtiItem/qtiItem/core/Loader.js","taoQtiItem/qtiItem/helper/pci.js","taoQtiItem/qtiItem/helper/container.js","taoQtiItem/qtiRunner/modalFeedback/inlineRenderer.js","taoQtiItem/qtiRunner/modalFeedback/modalRenderer.js","taoQtiItem/qtiRunner/core/QtiRunner.js","taoQtiItem/qtiItem/helper/interactionHelper.js","taoQtiItem/qtiRunner/core/Renderer.js","taoQtiItem/portableElementRegistry/factory/factory.js","taoQtiItem/qtiCreator/helper/qtiElements.js","taoQtiItem/portableElementRegistry/factory/ciRegistry.js","taoQtiItem/portableElementRegistry/ciRegistry.js","taoQtiItem/portableElementRegistry/factory/icRegistry.js","taoQtiItem/portableElementRegistry/icRegistry.js","taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy.js","taoQtiItem/qtiCommonRenderer/renderers/config.js","taoQtiItem/qtiCommonRenderer/renderers/Renderer.js","taoQtiItem/runner/provider/manager/userModules.js","taoQtiItem/runtime/qtiBootstrap.js","taoQtiItem/runtime/qtiLoader.js","module-create.js","C:/work/silviaLoza/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Bootstrap the app, start the entry controller\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\n(function(){\r\n    'use strict';\r\n\r\n\r\n\r\n    var loaderScript = document.getElementById('amd-loader');\r\n    var configUrl = loaderScript.getAttribute('data-config');\r\n    var bundle  = loaderScript.getAttribute('data-bundle');\r\n\r\n    var loadController = function loadController(){\r\n        var controllerOptions = {};\r\n        var controllerPath = loaderScript.getAttribute('data-controller');\r\n        var params = loaderScript.getAttribute('data-params');\r\n        try{\r\n            controllerOptions = JSON.parse(params);\r\n        } catch(err){\r\n            controllerOptions = {};\r\n        }\r\n        window.require([controllerPath], function(controller) {\r\n            var startController = function startController(){\r\n                if(!window.started){\r\n                    window.started = true;\r\n                    controller.start(controllerOptions);\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', startController, false);\r\n            if (document.readyState === 'complete') {\r\n                startController();\r\n            }\r\n        });\r\n    };\r\n\r\n    //always start to load the config\r\n    window.require([configUrl], function() {\r\n\r\n        //define the global loading mechanism\r\n        if(!window.loadBundles){\r\n            //keep tracl of loaded bundles, even if require does it,\r\n            //this prevent some unecessary cycles\r\n            window.loaded = {};\r\n\r\n            /**\r\n             * Loading entry point for inter bundle dependency,\r\n             * always take the bundles from the params and window.bundles\r\n             * @param {String[]} [bundles] - an optional list of bundle to load\r\n             */\r\n            window.loadBundles = function loadBundles(bundles){\r\n                bundles = bundles || [];\r\n                bundles = bundles.concat(window.bundles)\r\n                bundles = bundles.filter( function(item, index){\r\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\r\n                });\r\n                require(bundles, function(){\r\n                    bundles.forEach( function( item ) {\r\n                        window.loaded[item] = true;\r\n                    });\r\n                    loadController();\r\n                });\r\n            }\r\n        }\r\n\r\n        if(bundle || (window.bundles && window.bundles.length)) {\r\n            window.loadBundles([bundle]);\r\n        } else {\r\n            loadController();\r\n        }\r\n    });\r\n})();\r\n\ndefine(\"loader/bootstrap\", function(){});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\r\n        _container: 'taoQtiItem/qtiItem/core/Container',\r\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\r\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\r\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\r\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\r\n        math: 'taoQtiItem/qtiItem/core/Math',\r\n        figure: 'taoQtiItem/qtiItem/core/Figure',\r\n        img: 'taoQtiItem/qtiItem/core/Img',\r\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\r\n        object: 'taoQtiItem/qtiItem/core/Object',\r\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\r\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\r\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\r\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\r\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\r\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\r\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\r\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\r\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\r\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\r\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\r\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\r\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\r\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\r\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\r\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\r\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\r\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\r\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\r\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\r\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\r\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\r\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\r\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\r\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\r\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\r\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\r\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\r\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\r\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\r\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\r\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\r\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\r\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\r\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\r\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\r\n        include: 'taoQtiItem/qtiItem/core/Include',\r\n        table: 'taoQtiItem/qtiItem/core/Table',\r\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\r\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\r\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    var util = {\r\n        buildSerial: function buildSerial(prefix) {\r\n            var id = prefix || '';\r\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n            for (var i = 0; i < 22; i++) {\r\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n            }\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an id for a Qti element (the generation is different from identifier)\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildId: function buildId(item, prefix) {\r\n            var id;\r\n            var usedIds;\r\n            var i = 1;\r\n            var suffix = '';\r\n            var exists = false;\r\n\r\n            if (!item) {\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            usedIds = item.getUsedIds();\r\n\r\n            do {\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if (_.contains(usedIds, id)) {\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while (exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an identifier for a Qti element\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\r\n            var id;\r\n            var usedIds;\r\n            var suffix = '';\r\n            var i = 1;\r\n            var exists = false;\r\n\r\n            if (!item) {\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            if (!prefix) {\r\n                throw new TypeError('Prefix is required to build an identifier');\r\n            }\r\n\r\n            usedIds = item.getUsedIdentifiers();\r\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\r\n\r\n            if (prefix) {\r\n                prefix = prefix\r\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\r\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\r\n                    .replace(/(_)+/gi, '_');\r\n                if (useSuffix) {\r\n                    suffix = '_' + i;\r\n                }\r\n            }\r\n\r\n            do {\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if (usedIds[id]) {\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while (exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\r\n            var found = null;\r\n\r\n            if (_.isString(collectionNames)) {\r\n                collectionNames = [collectionNames];\r\n            }\r\n\r\n            if (_.isArray(collectionNames)) {\r\n                _.each(collectionNames, function(collectionName) {\r\n                    //get collection to search in (resolving case like interaction.choices.0\r\n                    var collection = element;\r\n                    _.each(collectionName.split('.'), function(nameToken) {\r\n                        collection = collection[nameToken];\r\n                    });\r\n                    var elt = collection[searchedSerial];\r\n\r\n                    if (elt) {\r\n                        found = { parent: element, element: elt };\r\n                        return false; //break the each loop\r\n                    }\r\n\r\n                    //search inside each elements:\r\n                    _.each(collection, function(elt) {\r\n                        if (_.isFunction(elt.find)) {\r\n                            found = elt.find(searchedSerial);\r\n                            if (found) {\r\n                                return false; //break the each loop\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (found) {\r\n                        return false; //break the each loop\r\n                    }\r\n                });\r\n            } else {\r\n                throw new Error('invalid argument : collectionNames must be an array or a string');\r\n            }\r\n\r\n            return found;\r\n        },\r\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\r\n            if (ns) {\r\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4) {\r\n                    if ($2.indexOf(':') > 0) {\r\n                        return $0;\r\n                    }\r\n                    $1 = $1 || '';\r\n                    $3 = $3 || '';\r\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\r\n                });\r\n                return markup;\r\n            }\r\n            return markup;\r\n        },\r\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\r\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\r\n        },\r\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\r\n            var namespaces = [];\r\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node) {\r\n                namespaces.push(ns);\r\n                return '<' + slash + node + '>';\r\n            });\r\n            return _.uniq(namespaces);\r\n        }\r\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\r\n\r\n    rendererConfigHelper.getOptionsFromArguments = function(args) {\r\n        var options = {\r\n            data: {},\r\n            placeholder: null,\r\n            subclass: '',\r\n            renderer: null\r\n        };\r\n\r\n        _.each(args, function(arg) {\r\n            if (arg) {\r\n                if (arg.isRenderer) {\r\n                    options.renderer = arg;\r\n                } else if (arg instanceof $ && arg.length) {\r\n                    options.placeholder = arg;\r\n                } else if (_.isString(arg)) {\r\n                    options.subclass = arg;\r\n                } else if (_.isPlainObject(arg)) {\r\n                    options.data = arg;\r\n                } else {\r\n                    console.log('invalid arg', arg, args);\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    var _instances = {};\r\n\r\n    /**\r\n     * Create a logger\r\n     */\r\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\r\n\r\n    var Element = Class.extend({\r\n        qtiClass: '',\r\n        serial: '',\r\n        rootElement: null,\r\n        init: function(serial, attributes) {\r\n            //init own attributes\r\n            this.attributes = {};\r\n\r\n            //system properties, for item creator internal use only\r\n            this.metaData = {};\r\n\r\n            //init call in the format init(attributes)\r\n            if (typeof serial === 'object') {\r\n                attributes = serial;\r\n                serial = '';\r\n            }\r\n\r\n            if (!serial) {\r\n                serial = util.buildSerial(this.qtiClass + '_');\r\n            }\r\n\r\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\r\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\r\n            }\r\n\r\n            if (!_instances[serial]) {\r\n                _instances[serial] = this;\r\n                this.serial = serial;\r\n                this.setAttributes(attributes || {});\r\n            } else {\r\n                throw 'a QTI Element with the same serial already exists ' + serial;\r\n            }\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                this.initContainer(arguments[2] || '');\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                this.initObject();\r\n            }\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === this.qtiClass;\r\n        },\r\n        placeholder: function() {\r\n            return '{{' + this.serial + '}}';\r\n        },\r\n        getSerial: function() {\r\n            return this.serial;\r\n        },\r\n        getUsedIdentifiers: function() {\r\n            var usedIds = {};\r\n            var elts = this.getComposingElements();\r\n            for (var i in elts) {\r\n                var elt = elts[i];\r\n                var id = elt.attr('identifier');\r\n                if (id) {\r\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\r\n                    usedIds[id] = elt;\r\n                }\r\n            }\r\n            return usedIds;\r\n        },\r\n\r\n        /**\r\n         * Get the ids in use. (id is different from identifier)\r\n         * @returns {Array} of the ids in use\r\n         */\r\n        getUsedIds: function getUsedIds() {\r\n            var usedIds = [];\r\n            _.forEach(this.getComposingElements(), function(elt) {\r\n                var id = elt.attr('id');\r\n                if (id && !_.contains(usedIds, id)) {\r\n                    usedIds.push(id);\r\n                }\r\n            });\r\n            return usedIds;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name) {\r\n                if (value !== undefined) {\r\n                    this.attributes[name] = value;\r\n                } else {\r\n                    if (typeof name === 'object') {\r\n                        for (var prop in name) {\r\n                            this.attr(prop, name[prop]);\r\n                        }\r\n                    } else if (typeof name === 'string') {\r\n                        if (this.attributes[name] === undefined) {\r\n                            return undefined;\r\n                        } else {\r\n                            return this.attributes[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        data: function(name, value) {\r\n            if (name) {\r\n                if (value !== undefined) {\r\n                    this.metaData[name] = value;\r\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\r\n                } else {\r\n                    if (typeof name === 'object') {\r\n                        for (var prop in name) {\r\n                            this.data(prop, name[prop]);\r\n                        }\r\n                    } else if (typeof name === 'string') {\r\n                        if (this.metaData[name] === undefined) {\r\n                            return undefined;\r\n                        } else {\r\n                            return this.metaData[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeData: function(name) {\r\n            delete this.metaData[name];\r\n            return this;\r\n        },\r\n        removeAttr: function(name) {\r\n            return this.removeAttributes(name);\r\n        },\r\n        setAttributes: function(attributes) {\r\n            if (!_.isPlainObject(attributes)) {\r\n                logger.warn('attributes should be a plain object');\r\n            }\r\n            this.attributes = attributes;\r\n            return this;\r\n        },\r\n        getAttributes: function() {\r\n            return _.clone(this.attributes);\r\n        },\r\n        removeAttributes: function(attrNames) {\r\n            if (typeof attrNames === 'string') {\r\n                attrNames = [attrNames];\r\n            }\r\n            for (var i in attrNames) {\r\n                delete this.attributes[attrNames[i]];\r\n            }\r\n            return this;\r\n        },\r\n        getComposingElements: function() {\r\n            var elts = {};\r\n            function append(element) {\r\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\r\n                elts = _.extend(elts, element.getComposingElements());\r\n            }\r\n            if (typeof this.initContainer === 'function') {\r\n                append(this.getBody());\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                append(this.getObject());\r\n            }\r\n            _.each(this.metaData, function(v) {\r\n                if (Element.isA(v, '_container')) {\r\n                    append(v);\r\n                } else if (_.isArray(v)) {\r\n                    _.each(v, function(v) {\r\n                        if (Element.isA(v, '_container')) {\r\n                            append(v);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return elts;\r\n        },\r\n        getUsedClasses: function() {\r\n            var ret = [this.qtiClass],\r\n                composingElts = this.getComposingElements();\r\n\r\n            _.each(composingElts, function(elt) {\r\n                ret.push(elt.qtiClass);\r\n            });\r\n\r\n            return _.uniq(ret);\r\n        },\r\n        find: function(serial) {\r\n            var found = null;\r\n            var object, body;\r\n\r\n            if (typeof this.initObject === 'function') {\r\n                object = this.getObject();\r\n                if (object.serial === serial) {\r\n                    found = { parent: this, element: object, location: 'object' };\r\n                }\r\n            }\r\n\r\n            if (!found && typeof this.initContainer === 'function') {\r\n                body = this.getBody();\r\n                if (body.serial === serial) {\r\n                    found = { parent: this, element: body, location: 'body' };\r\n                } else {\r\n                    found = this.getBody().find(serial, this);\r\n                }\r\n            }\r\n\r\n            return found;\r\n        },\r\n        parent: function() {\r\n            var item = this.getRootElement();\r\n            if (item) {\r\n                var found = item.find(this.getSerial());\r\n                if (found) {\r\n                    return found.parent;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        /**\r\n         * @deprecated - use setRootElement() instead\r\n         */\r\n        setRelatedItem: function(item) {\r\n            logger.warn('Deprecated use of setRelatedItem()');\r\n            this.setRootElement(item);\r\n        },\r\n        setRootElement: function(item) {\r\n            var composingElts, i;\r\n\r\n            if (Element.isA(item, 'assessmentItem')) {\r\n                this.rootElement = item;\r\n                composingElts = this.getComposingElements();\r\n                for (i in composingElts) {\r\n                    composingElts[i].setRootElement(item);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @deprecated - use getRootElement() instead\r\n         */\r\n        getRelatedItem: function() {\r\n            logger.warn('Deprecated use of getRelatedItem()');\r\n            return this.getRootElement();\r\n        },\r\n        getRootElement: function() {\r\n            var ret = null;\r\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\r\n                ret = this.rootElement;\r\n            }\r\n            return ret;\r\n        },\r\n        setRenderer: function(renderer) {\r\n            if (renderer && renderer.isRenderer) {\r\n                this.renderer = renderer;\r\n                var elts = this.getComposingElements();\r\n                for (var serial in elts) {\r\n                    elts[serial].setRenderer(renderer);\r\n                }\r\n            } else {\r\n                throw 'invalid qti rendering engine';\r\n            }\r\n        },\r\n        getRenderer: function() {\r\n            return this.renderer;\r\n        },\r\n        /**\r\n         * Render the element. Arguments are all optional and can be given in any order.\r\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\r\n         * @param {Renderer} renderer - specify which renderer to use\r\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\r\n         * @param {Object} data - template data for the rendering\r\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\r\n         * @returns {String} - the rendered element as an HTML string\r\n         */\r\n        render: function render() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments);\r\n            var _renderer = args.renderer || this.getRenderer();\r\n            var rendering;\r\n\r\n            var tplData = {},\r\n                defaultData = {\r\n                    tag: this.qtiClass,\r\n                    serial: this.serial,\r\n                    attributes: this.getAttributes()\r\n                };\r\n\r\n            if (!_renderer) {\r\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\r\n            }\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                defaultData.body = this.getBody().render(args.renderer);\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                defaultData.object = {\r\n                    attributes: this.object.getAttributes()\r\n                };\r\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\r\n            }\r\n\r\n            tplData = _.merge(defaultData, args.data || {});\r\n            tplData = _renderer.getData(this, tplData, args.subclass);\r\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\r\n            if (args.placeholder) {\r\n                args.placeholder.replaceWith(rendering);\r\n            }\r\n\r\n            return rendering;\r\n        },\r\n        postRender: function(data, altClassName, renderer) {\r\n            var postRenderers = [];\r\n            var _renderer = renderer || this.getRenderer();\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                postRenderers = this.getBody().postRender(data, '', renderer);\r\n            }\r\n\r\n            if (_renderer) {\r\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\r\n            } else {\r\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n\r\n            return _.compact(postRenderers);\r\n        },\r\n        getContainer: function($scope, subclass) {\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                return renderer.getContainer(this, $scope, subclass);\r\n            } else {\r\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n        },\r\n        toArray: function() {\r\n            var arr = {\r\n                serial: this.serial,\r\n                type: this.qtiClass,\r\n                attributes: this.getAttributes()\r\n            };\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                arr.body = this.getBody().toArray();\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                arr.object = this.object.toArray();\r\n            }\r\n\r\n            return arr;\r\n        },\r\n        isEmpty: function() {\r\n            //tells whether the element should be considered empty or not, from the rendering point of view\r\n            return false;\r\n        },\r\n        addClass: function(className) {\r\n            var clazz = this.attr('class') || '';\r\n            if (!_containClass(clazz, className)) {\r\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\r\n            }\r\n        },\r\n        hasClass: function(className) {\r\n            return _containClass(this.attr('class'), className);\r\n        },\r\n        removeClass: function(className) {\r\n            var clazz = this.attr('class') || '';\r\n            if (clazz) {\r\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\r\n                clazz = clazz.replace(regex, ' ').trim();\r\n\r\n                if (clazz) {\r\n                    this.attr('class', clazz);\r\n                } else {\r\n                    this.removeAttr('class');\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Add or remove class. Setting the optional state will force addition/removal.\r\n         * State is here to keep the jQuery syntax\r\n         *\r\n         * @param {String} className\r\n         * @param {Boolean} [state]\r\n         */\r\n        toggleClass: function(className, state) {\r\n            if (typeof state === 'boolean') {\r\n                return state ? this.addClass(className) : this.removeClass(className);\r\n            }\r\n\r\n            if (this.hasClass(className)) {\r\n                return this.removeClass(className);\r\n            }\r\n            return this.addClass(className);\r\n        },\r\n        isset: function() {\r\n            return Element.issetElement(this.serial);\r\n        },\r\n        unset: function() {\r\n            return Element.unsetElement(this.serial);\r\n        }\r\n    });\r\n\r\n    var _containClass = function(allClassStr, className) {\r\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\r\n        return allClassStr && regex.test(allClassStr);\r\n    };\r\n\r\n    //helpers\r\n    Element.isA = function(qtiElement, qtiClass) {\r\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\r\n    };\r\n\r\n    Element.getElementBySerial = function(serial) {\r\n        return _instances[serial];\r\n    };\r\n\r\n    Element.issetElement = function(serial) {\r\n        return !!_instances[serial];\r\n    };\r\n\r\n    /**\r\n     * Unset a registered element from it's serial\r\n     * @param {String} serial - the element serial\r\n     * @returns {Boolean} true if unset\r\n     */\r\n    Element.unsetElement = function(serial) {\r\n        var element = Element.getElementBySerial(serial);\r\n\r\n        if (element) {\r\n            var composingElements = element.getComposingElements();\r\n            _.each(composingElements, function(elt) {\r\n                delete _instances[elt.serial];\r\n            });\r\n            delete _instances[element.serial];\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA\r\n     */\r\n\r\n    /**\r\n     * XML namespace handling\r\n     */\r\n\r\n    /**\r\n     * Elements that need to be prefixed\r\n     *\r\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\r\n     * @type {string}\r\n     */\r\n    const prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\r\n\r\n    /**\r\n     * Find a possibly existing prefix\r\n     *\r\n     * @param namespaces\r\n     * @param html5Ns\r\n     * @returns {*}\r\n     */\r\n    function getPrefix(namespaces, html5Ns) {\r\n        let key;\r\n        for (key in namespaces) {\r\n            if (namespaces[key] === html5Ns) {\r\n                return key;\r\n            }\r\n        }\r\n        return 'qh5';\r\n    }\r\n\r\n    var xmlNsHandler = {\r\n        /**\r\n         * Remove prefix to make sure elements are properly displayed\r\n         *\r\n         * @param body\r\n         */\r\n        stripNs: function stripNs(body) {\r\n            const pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\r\n            const openRegEx = new RegExp('(<' + pattern + ')', 'gi');\r\n            const closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\r\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\r\n        },\r\n\r\n        /**\r\n         * Add a prefix to those elements that require one\r\n         *\r\n         * @param xml\r\n         * @param namespaces\r\n         * @returns {*}\r\n         */\r\n        restoreNs: function restoreNs(xml, namespaces, ignoreMarkup = false) {\r\n            let xmlCopy = xml;\r\n            if (ignoreMarkup) {\r\n                // cut from xmlCopy <markup...>...</markup>\r\n                // because markup should be html without namespace qh5\r\n                xmlCopy = xml.replace(/((?=<markup)(.|\\n)*?(?:<\\/markup>)+)/gim, '');\r\n            }\r\n            const xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\r\n            const tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\r\n            const xmlMatch = xmlCopy.match(xmlRe);\r\n            const imsXsd = 'http://www.imsglobal.org/xsd';\r\n            const html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\r\n            const prefix = getPrefix(namespaces, html5Ns);\r\n            const prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\r\n            let i = xmlMatch ? xmlMatch.length : 0;\r\n\r\n            if (!xmlMatch) {\r\n                return xml;\r\n            }\r\n\r\n            while (i--) {\r\n                const tagMatch = xmlMatch[i].match(tagRe);\r\n                xml = xml.replace(\r\n                    xmlMatch[i],\r\n                    tagMatch[5]\r\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\r\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\r\n                );\r\n            }\r\n\r\n            // we found matches but no namespace has been set\r\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\r\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\r\n            }\r\n\r\n            // make sure the item is set to qti 2.2\r\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\r\n            xml = xml.replace(\r\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\r\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\r\n            );\r\n\r\n            return xml;\r\n        }\r\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n    var responseRules = {\r\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'match',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'variable',\r\n                            attributes: {\r\n                                identifier: responseIdentifier,\r\n                            },\r\n                        },\r\n                        {\r\n                            qtiClass: 'correct',\r\n                            attributes: {\r\n                                identifier: responseIdentifier,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    },\r\n                                },\r\n                                {\r\n                                    qtiClass: 'baseValue',\r\n                                    attributes: {\r\n                                        baseType: 'integer'\r\n                                    },\r\n                                    value: '1',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'not',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'isNull',\r\n                            expressions: [{\r\n                                qtiClass: 'variable',\r\n                                attributes: {\r\n                                    identifier: responseIdentifier,\r\n                                },\r\n                            }],\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    qtiClass: 'mapResponse',\r\n                                    attributes: {\r\n                                        identifier: responseIdentifier,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'not',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'isNull',\r\n                            expressions: [{\r\n                                qtiClass: 'variable',\r\n                                attributes: {\r\n                                    identifier: responseIdentifier,\r\n                                },\r\n                            }],\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    qtiClass: 'mapResponsePoint',\r\n                                    attributes: {\r\n                                        identifier: responseIdentifier,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const _templateNames = {\r\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\r\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\r\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\r\n        NONE: 'no_response_processing'\r\n    };\r\n\r\n\r\n    var response = {\r\n        isUsingTemplate(response, tpl) {\r\n            if (_.isString(tpl)) {\r\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n        isValidTemplateName(tplName) {\r\n            return !!this.getTemplateUriFromName(tplName);\r\n        },\r\n        getTemplateUriFromName(tplName) {\r\n            return _templateNames[tplName] || '';\r\n        },\r\n        getTemplateNameFromUri(tplUri) {\r\n            let tplName = '';\r\n\r\n            _.forIn(_templateNames, (uri, name) => {\r\n                if (uri === tplUri) {\r\n                    tplName = name;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return tplName;\r\n        },\r\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\r\n            if (!responseRules) {\r\n                return 'NONE';\r\n            }\r\n\r\n            const {\r\n                responseIf: {\r\n                    responseRules: [outcomeRules = {}] = [],\r\n                } = {}\r\n            } = responseRules;\r\n            const {\r\n                attributes: {\r\n                    identifier: outcomeIdentifier,\r\n                } = {},\r\n            } = outcomeRules;\r\n\r\n            if (!outcomeIdentifier) {\r\n                return '';\r\n            }\r\n\r\n            return Object.keys(responseRulesHelper).find(\r\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\r\n            );\r\n        }\r\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Returns iteraction score response rule object\r\n     *\r\n     * @param {String} responseIdentifiers interactions reponse indentifiers\r\n     * @returns {Obeject}\r\n     */\r\n    var itemScore = (responseIdentifiers) => {\r\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\r\n            qtiClass: 'variable',\r\n            attributes: {\r\n                identifier: `SCORE_${outcomeIdentifier}`,\r\n            },\r\n        }));\r\n\r\n        return {\r\n            qtiClass: 'setOutcomeValue',\r\n            attributes: {\r\n                identifier: 'SCORE',\r\n            },\r\n            expression: {\r\n                qtiClass: 'sum',\r\n                expressions: outcomeExpressions,\r\n            },\r\n        };\r\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\r\n     *\r\n     */\r\n\r\n    /**\r\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\r\n     */\r\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\r\n        var properties = {};\r\n\r\n        _.forOwn(rawProperties, (value, key) => {\r\n            try {\r\n                properties[key] = JSON.parse(value);\r\n            } catch (e) {\r\n                properties[key] = value;\r\n            }\r\n        });\r\n        portableElement.properties = properties;\r\n    };\r\n\r\n    const loadPortableCustomElementData = (portableElement, data) => {\r\n        portableElement.typeIdentifier = data.typeIdentifier;\r\n        portableElement.markup = data.markup;\r\n        portableElement.entryPoint = data.entryPoint;\r\n        portableElement.libraries = data.libraries;\r\n        portableElement.setNamespace('', data.xmlns);\r\n\r\n        loadPortableCustomElementProperties(portableElement, data.properties);\r\n    };\r\n\r\n    var Loader = Class.extend({\r\n        init(item, classesLocation) {\r\n            this.qti = {}; //loaded qti classes are store here\r\n            this.classesLocation = {};\r\n            this.item = item || null; //starts either from scratch or with an existing item object\r\n\r\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\r\n        },\r\n        setClassesLocation(qtiClassesList) {\r\n            _.extend(this.classesLocation, qtiClassesList);\r\n\r\n            return this;\r\n        },\r\n        getRequiredClasses(data) {\r\n            let ret = [];\r\n\r\n            for (let i in data) {\r\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\r\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\r\n                    ret.push(data[i]);\r\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\r\n                    //responseRules should'nt be part of the parsing\r\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        },\r\n        loadRequiredClasses(data, callback, reload) {\r\n            let requiredClass;\r\n            const requiredClasses = this.getRequiredClasses(data, reload);\r\n            const required = [];\r\n\r\n            for (let i in requiredClasses) {\r\n                requiredClass = requiredClasses[i];\r\n                if (this.classesLocation[requiredClass]) {\r\n                    required.push({\r\n                        module: this.classesLocation[requiredClass],\r\n                        category: 'qti'\r\n                    });\r\n                } else {\r\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\r\n                }\r\n            }\r\n\r\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\r\n                loadeded.forEach(QtiClass => {\r\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\r\n                });\r\n                callback.call(this, this.qti);\r\n            });\r\n        },\r\n        getLoadedClasses() {\r\n            return _.keys(this.qti);\r\n        },\r\n        loadItemData(data, callback) {\r\n            this.loadRequiredClasses(data, Qti => {\r\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\r\n                    //unload an item from it's serial (in case of a reload)\r\n                    if (data.serial) {\r\n                        Element.unsetElement(data.serial);\r\n                    }\r\n\r\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\r\n                    this.loadContainer(this.item.getBody(), data.body);\r\n\r\n                    for (let i in data.outcomes) {\r\n                        const outcome = this.buildOutcome(data.outcomes[i]);\r\n\r\n                        if (outcome) {\r\n                            this.item.addOutcomeDeclaration(outcome);\r\n                        }\r\n                    }\r\n\r\n                    for (let i in data.feedbacks) {\r\n                        const feedback = this.buildElement(data.feedbacks[i]);\r\n\r\n                        if (feedback) {\r\n                            this.item.addModalFeedback(feedback);\r\n                        }\r\n                    }\r\n\r\n                    for (let i in data.stylesheets) {\r\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\r\n\r\n                        if (stylesheet) {\r\n                            this.item.addStylesheet(stylesheet);\r\n                        }\r\n                    }\r\n\r\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\r\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\r\n                        ? [...data.responseProcessing.responseRules]\r\n                        : [];\r\n                    for (let i in data.responses) {\r\n                        const responseIdentifier = data.responses[i].identifier;\r\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\r\n                            expression: {\r\n                                expressions: [expression = {}] = [],\r\n                            } = {}\r\n                        } = {} }) => expression.attributes\r\n                        && expression.attributes.identifier === responseIdentifier\r\n                            || (\r\n                                expression.expressions\r\n                                && expression.expressions[0]\r\n                                && expression.expressions[0].attributes\r\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\r\n                            )\r\n                        );\r\n                        const [responseRule] = responseRuleItemIndex !== -1\r\n                            ? responseRules.splice(responseRuleItemIndex, 1)\r\n                            : [];\r\n\r\n                        const response = this.buildResponse(\r\n                            data.responses[i],\r\n                            responseRule\r\n                        );\r\n\r\n                        if (response) {\r\n                            this.item.addResponseDeclaration(response);\r\n\r\n                            const feedbackRules = data.responses[i].feedbackRules;\r\n\r\n                            if (feedbackRules) {\r\n                                _.forIn(feedbackRules, (fbData, serial) => {\r\n                                    const {\r\n                                        attributes: {\r\n                                            identifier: feedbackOutcomeIdentifier,\r\n                                        } = {}\r\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\r\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\r\n\r\n                                    // remove feedback response rule from response rules array\r\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\r\n                                        responseIf: {\r\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\r\n                                        } = {}\r\n                                    }) => {\r\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\r\n                                        const outcomeIdentifier = attributes.identifier;\r\n\r\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\r\n                                            && qtiClass === 'setOutcomeValue';\r\n                                    });\r\n\r\n                                    if (feedbackResponseRuleIndex !== -1) {\r\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\r\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\r\n\r\n                    if (data.responseProcessing) {\r\n                        const customResponseProcessing =\r\n                            (\r\n                                responseRules.length > 0\r\n                                && !(\r\n                                    responseRules.length === 1\r\n                                    && _.isEqual(\r\n                                        responseRules[0],\r\n                                        itemScoreHelper(\r\n                                            responseIdentifiers\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                            || (\r\n                                this.item.responses\r\n                                && Object.keys(this.item.responses)\r\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\r\n                            );\r\n\r\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\r\n                    }\r\n                    this.item.setNamespaces(data.namespaces);\r\n                    this.item.setSchemaLocations(data.schemaLocations);\r\n                    this.item.setApipAccessibility(data.apipAccessibility);\r\n                }\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, this.item);\r\n                }\r\n            });\r\n        },\r\n        loadAndBuildElement(data, callback) {\r\n            this.loadRequiredClasses(data, () => {\r\n                const element = this.buildElement(data);\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, element);\r\n                }\r\n            });\r\n        },\r\n        loadElement(element, data, callback) {\r\n            this.loadRequiredClasses(data, () => {\r\n                this.loadElementData(element, data);\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, element);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Load ALL given elements into existing loaded item\r\n         *\r\n         * @todo to be renamed to loadItemElements\r\n         * @param {object} data\r\n         * @param {function} callback\r\n         * @returns {undefined}\r\n         */\r\n        loadElements(data, callback) {\r\n            if (!this.item) {\r\n                throw new Error('QtiLoader : cannot load elements in empty item');\r\n            }\r\n\r\n            this.loadRequiredClasses(data, () => {\r\n                const allElements = this.item.getComposingElements();\r\n\r\n                for (let i in data) {\r\n                    const elementData = data[i];\r\n\r\n                    if (elementData && elementData.qtiClass && elementData.serial) {\r\n                        //find and update element\r\n                        if (allElements[elementData.serial]) {\r\n                            this.loadElementData(allElements[elementData.serial], elementData);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, this.item);\r\n                }\r\n            });\r\n        },\r\n        buildResponse(data, responseRule) {\r\n            const response = this.buildElement(data);\r\n\r\n            response.template = responseHelper.getTemplateUriFromName(\r\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\r\n            )\r\n                || data.howMatch\r\n                || null;\r\n\r\n            response.defaultValue = data.defaultValue || null;\r\n            response.correctResponse = data.correctResponses || null;\r\n\r\n            if (_.size(data.mapping)) {\r\n                response.mapEntries = data.mapping;\r\n            } else if (_.size(data.areaMapping)) {\r\n                response.mapEntries = data.areaMapping;\r\n            } else {\r\n                response.mapEntries = {};\r\n            }\r\n\r\n            response.mappingAttributes = data.mappingAttributes || {};\r\n\r\n            return response;\r\n        },\r\n        buildSimpleFeedbackRule(data, response) {\r\n            const feedbackRule = this.buildElement(data);\r\n\r\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\r\n\r\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\r\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\r\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\r\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\r\n\r\n            //associate the compared outcome to the feedbacks if applicable\r\n            const comparedOutcome = feedbackRule.comparedOutcome;\r\n\r\n            if (feedbackRule.feedbackThen) {\r\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\r\n            }\r\n\r\n            if (feedbackRule.feedbackElse) {\r\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\r\n            }\r\n\r\n            return feedbackRule;\r\n        },\r\n        buildOutcome(data) {\r\n            const outcome = this.buildElement(data);\r\n            outcome.defaultValue = data.defaultValue || null;\r\n\r\n            return outcome;\r\n        },\r\n        buildResponseProcessing(data, customResponseProcessing) {\r\n            const rp = this.buildElement(data);\r\n\r\n            if (customResponseProcessing) {\r\n                rp.xml = data.data;\r\n                rp.processingType = 'custom';\r\n            } else {\r\n                rp.processingType = 'templateDriven';\r\n            }\r\n\r\n            return rp;\r\n        },\r\n        loadContainer(bodyObject, bodyData) {\r\n            if (!Element.isA(bodyObject, '_container')) {\r\n                throw new Error('bodyObject must be a QTI Container');\r\n            }\r\n\r\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\r\n                throw new Error('wrong bodydata format');\r\n            }\r\n            //merge attributes when loading element data\r\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\r\n            bodyObject.setAttributes(attributes);\r\n\r\n            for (let serial in bodyData.elements) {\r\n                const eltData = bodyData.elements[serial];\r\n                const element = this.buildElement(eltData);\r\n\r\n                //check if class is loaded:\r\n                if (element) {\r\n                    bodyObject.setElement(element, bodyData.body);\r\n                }\r\n            }\r\n\r\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\r\n        },\r\n        buildElement(elementData) {\r\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\r\n                throw new Error('wrong elementData format');\r\n            }\r\n\r\n            const className = elementData.qtiClass;\r\n\r\n            if (!this.qti[className]) {\r\n                throw new Error(`the qti element class does not exist: ${className}`);\r\n            }\r\n\r\n            const elt = new this.qti[className](elementData.serial);\r\n            this.loadElementData(elt, elementData);\r\n\r\n            return elt;\r\n        },\r\n        loadElementData(element, data) {\r\n            //merge attributes when loading element data\r\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\r\n            element.setAttributes(attributes);\r\n\r\n            if (element.body && data.body) {\r\n                if (element.bdy) {\r\n                    this.loadContainer(element.getBody(), data.body);\r\n                }\r\n            }\r\n\r\n            if (element.object && data.object) {\r\n                if (element.object) {\r\n                    this.loadObjectData(element.object, data.object);\r\n                }\r\n            }\r\n\r\n            if (Element.isA(element, 'interaction')) {\r\n                this.loadInteractionData(element, data);\r\n            } else if (Element.isA(element, 'choice')) {\r\n                this.loadChoiceData(element, data);\r\n            } else if (Element.isA(element, 'math')) {\r\n                this.loadMathData(element, data);\r\n            } else if (Element.isA(element, 'infoControl')) {\r\n                this.loadPicData(element, data);\r\n            } else if (Element.isA(element, '_tooltip')) {\r\n                this.loadTooltipData(element, data);\r\n            }\r\n\r\n            return element;\r\n        },\r\n        loadInteractionData(interaction, data) {\r\n            if (Element.isA(interaction, 'blockInteraction')) {\r\n                if (data.prompt) {\r\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\r\n                }\r\n            }\r\n\r\n            this.buildInteractionChoices(interaction, data);\r\n\r\n            if (Element.isA(interaction, 'customInteraction')) {\r\n                this.loadPciData(interaction, data);\r\n            }\r\n        },\r\n        buildInteractionChoices(interaction, data) {\r\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\r\n            if (data.choices) {\r\n                if (Element.isA(interaction, 'matchInteraction')) {\r\n                    for (let set = 0; set < 2; set++) {\r\n                        if (!data.choices[set]) {\r\n                            throw new Error(`missing match set #${set}`);\r\n                        }\r\n\r\n                        const matchSet = data.choices[set];\r\n\r\n                        for (let serial in matchSet) {\r\n                            const choice = this.buildElement(matchSet[serial]);\r\n\r\n                            if (choice) {\r\n                                interaction.addChoice(choice, set);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let serial in data.choices) {\r\n                        const choice = this.buildElement(data.choices[serial]);\r\n\r\n                        if (choice) {\r\n                            interaction.addChoice(choice);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\r\n                    if (data.gapImgs) {\r\n                        for (let serial in data.gapImgs) {\r\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\r\n\r\n                            if (gapImg) {\r\n                                interaction.addGapImg(gapImg);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        loadChoiceData(choice, data) {\r\n            if (Element.isA(choice, 'textVariableChoice')) {\r\n                choice.val(data.text);\r\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\r\n                // this ensure compatibility of Qti 2.1 items\r\n                if (!choice.body()) {\r\n                    choice.body(data.text);\r\n                }\r\n            } else if (Element.isA(choice, 'containerChoice')) ;\r\n        },\r\n        loadObjectData(object, data) {\r\n            object.setAttributes(data.attributes);\r\n\r\n            //@todo: manage object like a container\r\n            if (data._alt) {\r\n                if (data._alt.qtiClass === 'object') {\r\n                    object._alt = Loader.buildElement(data._alt);\r\n                } else {\r\n                    object._alt = data._alt;\r\n                }\r\n            }\r\n        },\r\n        loadMathData(math, data) {\r\n            math.ns = data.ns || {};\r\n            math.setMathML(data.mathML || '');\r\n            _.forIn(data.annotations || {}, (value, encoding) => {\r\n                math.setAnnotation(encoding, value);\r\n            });\r\n        },\r\n        loadTooltipData(tooltip, data) {\r\n            tooltip.content(data.content);\r\n        },\r\n        loadPciData(pci, data) {\r\n            loadPortableCustomElementData(pci, data);\r\n        },\r\n        loadPicData(pic, data) {\r\n            loadPortableCustomElementData(pic, data);\r\n        }\r\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\r\n        getRawValues: function(pciVar) {\r\n            if (_.isPlainObject(pciVar)) {\r\n                if (pciVar.base !== undefined) {\r\n                    return _.values(pciVar.base);\r\n                } else if (pciVar.list) {\r\n                    return _.values(pciVar.list);\r\n                }\r\n            }\r\n            throw 'unsupported type ';\r\n        }\r\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\r\n     **/\r\n\r\n    /**\r\n     * Prefix used to the variable storage\r\n     * @type String\r\n     */\r\n    var _prefix = 'x-tao-';\r\n\r\n    /**\r\n     * Check if the element is of a qti container type\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @returns {Boolean}\r\n     */\r\n    function _checkContainerType(element) {\r\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\r\n            return true;\r\n        } else {\r\n            throw 'the element is not of a container type';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the body element of the container\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @returns {JQuery}\r\n     */\r\n    function _getBodyDom(element) {\r\n        if (_checkContainerType(element)) {\r\n            return $('<div>')\r\n                .html(element.body())\r\n                .find('.x-tao-wrapper');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a class to the body element of the qti container\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @param {String} newClass\r\n     * @param {String} [oldClass]\r\n     */\r\n    function _setBodyDomClass(element, newClass, oldClass) {\r\n        if (_checkContainerType(element) && (oldClass || newClass)) {\r\n            var $wrapper = $('<div>').html(element.body());\r\n            //set css class to element\r\n            _setDomClass($wrapper, newClass, oldClass);\r\n            //set to the model\r\n            element.body($wrapper.html());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Switch class to the wrapped DOM\r\n     *\r\n     * @param {JQuery} $wrapper\r\n     * @param {String} newClass\r\n     * @param {String} oldClass\r\n     * @returns {undefined}\r\n     */\r\n    function _setDomClass($wrapper, newClass, oldClass) {\r\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\r\n        if (!$bodyDom.length) {\r\n            //create one\r\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\r\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\r\n        }\r\n        if (oldClass) {\r\n            $bodyDom.removeClass(oldClass);\r\n        }\r\n        if (newClass) {\r\n            $bodyDom.addClass(newClass);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add manually the encoded information to a dom element\r\n     *\r\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\r\n     * @param {String} dataName - the name of the information\r\n     * @param {String} newValue - the new value to be added\r\n     * @param {String} [oldValue] - the old value to be removed\r\n     * @returns {undefined}\r\n     */\r\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\r\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\r\n    }\r\n\r\n    /**\r\n     * Get the full variable name for the data store\r\n     *\r\n     * @param {String} dataName\r\n     * @param {String} value\r\n     * @returns {String}\r\n     */\r\n    function _getEncodedDataString(dataName, value) {\r\n        if (dataName && value) {\r\n            return _prefix + dataName + '-' + value;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Set a data string to the element identified by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @param {String} newValue\r\n     * @returns {undefined}\r\n     */\r\n    function setEncodedData(element, dataName, newValue) {\r\n        var oldValue = getEncodedData(element, dataName);\r\n        return _setBodyDomClass(\r\n            element,\r\n            _getEncodedDataString(dataName, newValue),\r\n            _getEncodedDataString(dataName, oldValue)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Remove the stored data from the element by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @returns {unresolved}\r\n     */\r\n    function removeEncodedData(element, dataName) {\r\n        var oldValue = getEncodedData(element, dataName);\r\n        if (dataName && oldValue) {\r\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the stored data exist\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @param {String} value\r\n     * @returns {Boolean}\r\n     */\r\n    function hasEncodedData(element, dataName, value) {\r\n        var $body = _getBodyDom(element);\r\n        if ($body && $body.length && dataName && value) {\r\n            return $body.hasClass(_getEncodedDataString(dataName, value));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get the encoded data identified by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @returns {String}\r\n     */\r\n    function getEncodedData(element, dataName) {\r\n        var regex, matches;\r\n        var $body = _getBodyDom(element);\r\n        if (dataName && $body && $body.length && $body.attr('class')) {\r\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\r\n            matches = $body.attr('class').match(regex);\r\n            if (matches) {\r\n                return matches[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\r\n     */\r\n    var container = {\r\n        setEncodedData: setEncodedData,\r\n        hasEncodedData: hasEncodedData,\r\n        getEncodedData: getEncodedData,\r\n        removeEncodedData: removeEncodedData,\r\n        setEncodedDataToDom: setEncodedDataToDom\r\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/inlineRenderer',['lodash', 'jquery', 'context', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container', 'handlebars', 'i18n', 'lib/dompurify/purify', 'iframeNotifier'], function (_, $$1, context, pci, containerHelper, Handlebars, __, DOMPurify, iframeNotifier) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<li class=\\\"small btn-info action action-button rgt\\\" id=\\\"preview-feedback-ok-button\\\">\\r\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\r\\n        <span class=\\\"label\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"OK\", options) : helperMissing.call(depth0, \"__\", \"OK\", options)))\n        + \"</span>\\r\\n    </a>\\r\\n</li>\";\n      return buffer;\n      });\n    function previewOkBtn(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<li data-control=\\\"feedback-ok\\\" class=\\\"small btn-info action forward\\\" title=\\\"Feedback ok and ready to proceed.\\\">\\r\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\r\\n        <span class=\\\"icon-result-ok\\\"></span>\\r\\n        <span class=\\\"text\\\">OK</span>\\r\\n    </a>\\r\\n</li>\";\n      });\n    function deliveryOkBtn(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\r\n     *\r\n     */\r\n\r\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\r\n\r\n    /**\r\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\r\n     *\r\n     * @param {Object} item - the standard tao qti item object\r\n     * @param {Object} loader - the item loader instance\r\n     * @param {Object} renderer - the item render instance\r\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\r\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\r\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\r\n     * @returns {Number} Number of feedbacks to be displayed\r\n     */\r\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\r\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\r\n        var messages = {};\r\n        var renderedFeebacks = [];\r\n        var renderingQueue = [];\r\n        var $itemContainer = item.getContainer();\r\n        var $itemBody = $itemContainer.children('.qti-itemBody');\r\n        var firstFeedback;\r\n\r\n        _.each(item.modalFeedbacks, function(feedback) {\r\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\r\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\r\n            var order = -1;\r\n\r\n            //verify if the feedback should be displayed\r\n            if (itemSession[outcomeIdentifier]) {\r\n                //is the feedback in the list of feedbacks to be displayed ?\r\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\r\n                if (_.indexOf(feedbackIds, feedback.id()) === -1) {\r\n                    return true; //continue with next feedback\r\n                }\r\n\r\n                //which group of feedbacks (interaction related) the feedback belongs to ?\r\n                message = getFeedbackMessageSignature(feedback);\r\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\r\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\r\n                if (comparedOutcome && interactionInfo) {\r\n                    $container = interactionInfo.displayContainer;\r\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\r\n                    order = interactionInfo.order;\r\n                } else {\r\n                    $container = $itemBody;\r\n                    _currentMessageGroupId = '__item__';\r\n                }\r\n                //is this message already displayed ?\r\n                if (!messages[_currentMessageGroupId]) {\r\n                    messages[_currentMessageGroupId] = [];\r\n                }\r\n                if (_.indexOf(messages[_currentMessageGroupId], message) >= 0) {\r\n                    return true; //continue\r\n                } else {\r\n                    messages[_currentMessageGroupId].push(message);\r\n                }\r\n\r\n                //ok, display feedback\r\n                renderingQueue.push({\r\n                    feedback: feedback,\r\n                    $container: $container,\r\n                    order: order\r\n                });\r\n            }\r\n        });\r\n\r\n        if (renderingQueue.length) {\r\n            renderingQueue = _.sortBy(renderingQueue, 'order');\r\n\r\n            //clear previously displayed feedbacks\r\n            clearModalFeedbacks($itemContainer);\r\n\r\n            //process rendering queue\r\n            _.each(renderingQueue, function(renderingToken) {\r\n                renderModalFeedback(\r\n                    renderingToken.feedback,\r\n                    loader,\r\n                    renderer,\r\n                    renderingToken.$container,\r\n                    $itemContainer,\r\n                    function(renderingData) {\r\n                        // keep the first feedback to force focus on it if needed\r\n                        if (!firstFeedback) {\r\n                            firstFeedback = $$1(renderingData.dom);\r\n                        }\r\n\r\n                        $$1('img', renderingData.dom).on('load', function() {\r\n                            iframeNotifier.parent('itemcontentchange');\r\n                        });\r\n\r\n                        //record rendered feedback for later reference\r\n                        renderedFeebacks.push(renderingData);\r\n                        if (renderedFeebacks.length === renderingQueue.length) {\r\n                            //rendering processing queue completed\r\n                            iframeNotifier.parent('itemcontentchange');\r\n\r\n                            // set the focus on the first feedback if needed\r\n                            // TODO: this is heavily related to the old TestRunner, with the ugly iframes.\r\n                            // To make this working, a search is made accross parent frames.\r\n                            // When the InlineFeedbacks will be ported to the new TestRunner, a strong improvement will be needed!\r\n                            if (firstFeedback) {\r\n                                autoscroll(firstFeedback);\r\n                            }\r\n\r\n                            //if an optional \"on show modal\" callback has been provided, execute it\r\n                            if (_.isFunction(onShowCallback)) {\r\n                                onShowCallback();\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n\r\n            //if any feedback is displayed, replace the controls by a \"ok\" button\r\n            replaceControl(renderedFeebacks, $itemContainer, onCloseCallback);\r\n        }\r\n\r\n        return renderingQueue.length;\r\n    }\r\n\r\n    /**\r\n     * Gets the QTI Container element\r\n     * @returns {jQuery|null}\r\n     */\r\n    function getQtiContainer() {\r\n        var me = window;\r\n        var $container = null;\r\n        var max = 10;\r\n\r\n        while (me && me.__knownParent__ && max--) {\r\n            me = me.parent;\r\n            if (me && me.$) {\r\n                $container = me.$('#qti-content');\r\n                if ($container.length) {\r\n                    return $container;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Keeps an element visible inside the QTI container.\r\n     * If the element is outside the container viewport, scroll to display it.\r\n     * @param {String|jQuery|HTMLElement} element\r\n     */\r\n    function autoscroll(element) {\r\n        var $element = $$1(element);\r\n        var $container = getQtiContainer();\r\n        var currentScrollTop, minScrollTop, maxScrollTop, scrollTop;\r\n\r\n        if ($element.length && $container) {\r\n            currentScrollTop = $container.scrollTop();\r\n            maxScrollTop = $element.offset().top;\r\n            minScrollTop = maxScrollTop - $container.height() + $element.outerHeight();\r\n            scrollTop = Math.max(Math.min(maxScrollTop, currentScrollTop), minScrollTop);\r\n            if (scrollTop !== currentScrollTop) {\r\n                $container.animate({ scrollTop: scrollTop });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extract the display information for an interaction-related feedback\r\n     *\r\n     * @private\r\n     * @param {Object} interaction - a qti interaction object\r\n     * @returns {Object} Object containing useful display information\r\n     */\r\n    function extractDisplayInfo(interaction) {\r\n        var $interactionContainer = interaction.getContainer();\r\n        var responseIdentifier = interaction.attr('responseIdentifier');\r\n        var messageGroupId, $displayContainer;\r\n\r\n        if (interaction.is('inlineInteraction')) {\r\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\r\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\r\n            if (!messageGroupId) {\r\n                //generate a messageFroupId\r\n                messageGroupId = _.uniqueId('inline_message_group_');\r\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\r\n            }\r\n        } else {\r\n            messageGroupId = responseIdentifier;\r\n            $displayContainer = $interactionContainer;\r\n        }\r\n\r\n        return {\r\n            responseIdentifier: responseIdentifier,\r\n            interactionContainer: $interactionContainer,\r\n            displayContainer: $displayContainer,\r\n            messageGroupId: messageGroupId,\r\n            order: -1\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get interaction display information sorted in the order of appearance within the item\r\n     *\r\n     * @param {Object} item\r\n     * @returns {Array}\r\n     */\r\n    function getInteractionsDisplayInfo(item) {\r\n        var interactionsDisplayInfo = [];\r\n        var $itemContainer = item.getContainer();\r\n        var interactionOrder = 0;\r\n\r\n        //extract all interction related information needed to display their\r\n        _.each(item.getComposingElements(), function(element) {\r\n            var responseIdentifier;\r\n            if (element.is('interaction')) {\r\n                responseIdentifier = element.attr('responseIdentifier');\r\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\r\n            }\r\n        });\r\n\r\n        //sort interactionsDisplayInfo on the item level\r\n        $itemContainer.find('.qti-interaction').each(function() {\r\n            var interactionContainer = this;\r\n            _.each(interactionsDisplayInfo, function(_interactionInfo) {\r\n                if (_interactionInfo.interactionContainer[0] === interactionContainer) {\r\n                    _interactionInfo.order = interactionOrder;\r\n                    return false;\r\n                }\r\n            });\r\n            interactionOrder++;\r\n        });\r\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\r\n\r\n        return interactionsDisplayInfo;\r\n    }\r\n\r\n    /**\r\n     * Remove previously displayed feedbacks contained in the given container element\r\n     *\r\n     * @param {JQuery} $itemContainer\r\n     */\r\n    function clearModalFeedbacks($itemContainer) {\r\n        $itemContainer.find('.qti-modalFeedback').remove();\r\n    }\r\n\r\n    /**\r\n     * Render a modal feedback into a given container, scoped within an item container\r\n     *\r\n     * @private\r\n     * @param {type} feedback - feedback object\r\n     * @param {type} loader - loader instance\r\n     * @param {type} renderer - renderer instance\r\n     * @param {JQuery} $container - the targeted feedback container\r\n     * @param {JQuery} $itemContainer - the item container\r\n     * @param {type} renderedCallback - callback when the feedback has been rendered\r\n     * @returns {undefined}\r\n     */\r\n    function renderModalFeedback(feedback, loader, renderer, $container, $itemContainer, renderedCallback) {\r\n        //load (potential) new qti classes used in the modal feedback (e.g. math, img)\r\n        renderer.load(function() {\r\n            //render the modal feedback\r\n            var $modalFeedback = $$1(\r\n                feedback.render({\r\n                    inline: true\r\n                })\r\n            );\r\n            var done = function done() {\r\n                renderedCallback({\r\n                    identifier: feedback.id(),\r\n                    serial: feedback.getSerial(),\r\n                    dom: $modalFeedback\r\n                });\r\n            };\r\n            $container.append($modalFeedback);\r\n\r\n            // Race between postRendering and timeout\r\n            // postRendering waits for everything to be resolved or one reject\r\n            Promise.race([\r\n                Promise.all(\r\n                    _.map(feedback.getComposingElements(), function(elt) {\r\n                        //render also internal elements, such as math or img\r\n                        return elt.postRender({}, '', renderer).pop();\r\n                    })\r\n                ),\r\n                new Promise(function(resolve, reject) {\r\n                    _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\r\n                })\r\n            ])\r\n                .then(done)\r\n                .catch(function(err) {\r\n                    //in case of postRendering issue, we are also done\r\n                    done();\r\n                    throw new Error('Error in post rendering : ' + err);\r\n                });\r\n        }, loader.getLoadedClasses());\r\n    }\r\n\r\n    /**\r\n     * Replace the controls in the running environment  with an \"OK\" button to trigger the end of the feedback state\r\n     *\r\n     * @private\r\n     * @todo FIX ME ! replace the hack to preview and delivery toolbar with a proper plugin in the new test runner is ready\r\n     * @param {Array} renderedFeebacks\r\n     * @param {JQuery} $itemContainer\r\n     * @param {Function} callback\r\n     */\r\n    function replaceControl(renderedFeebacks, $itemContainer, callback) {\r\n        var $scope, $controls, $toggleContainer;\r\n        if (window.parent && window.parent.parent && window.parent.parent.$) {\r\n            if ($itemContainer.parents('.tao-preview-scope').length) {\r\n                //preview mode\r\n                $scope = window.parent.parent.$('#preview-console');\r\n                $controls = $scope.find('.preview-console-header .action-bar li:visible');\r\n                $toggleContainer = $scope.find('.console-button-action-bar');\r\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, previewOkBtn, callback);\r\n            } else {\r\n                //delivery delivery\r\n                $scope = window.parent.parent.$('body.qti-test-scope .bottom-action-bar');\r\n                $controls = $scope.find('li:visible');\r\n                $toggleContainer = $scope.find('.navi-box-list');\r\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, deliveryOkBtn, callback);\r\n            }\r\n        } else {\r\n            //not in an iframe, add to item body for now\r\n            $scope = $itemContainer.find('#modalFeedbacks');\r\n            initControlToggle(renderedFeebacks, $itemContainer, $$1(), $scope, previewOkBtn, callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize the \"OK\" button to trigger the end of the feedback mode\r\n     *\r\n     * @private\r\n     * @param {Array} renderedFeebacks\r\n     * @param {JQuery} $itemContainer\r\n     * @param {JQuery} $controls\r\n     * @param {JQuery} $toggleContainer\r\n     * @param {Function} toggleButtonTemplate\r\n     * @param {Function} callback\r\n     */\r\n    function initControlToggle(\r\n        renderedFeebacks,\r\n        $itemContainer,\r\n        $controls,\r\n        $toggleContainer,\r\n        toggleButtonTemplate,\r\n        callback\r\n    ) {\r\n        var $ok = $$1(toggleButtonTemplate()).click(function() {\r\n            //end feedback mode, hide feedbacks\r\n            _.each(renderedFeebacks, function(fb) {\r\n                fb.dom.hide();\r\n            });\r\n\r\n            //restore controls\r\n            uncover([$itemContainer]);\r\n            $ok.remove();\r\n            $controls.show();\r\n\r\n            //exec callback\r\n            callback();\r\n        });\r\n\r\n        $controls.hide();\r\n        $toggleContainer.append($ok);\r\n        cover([$itemContainer]);\r\n    }\r\n\r\n    /**\r\n     * Cover the given interaction containers with a transparent layer to prevent user interacting with the item\r\n     * @private\r\n     * @param {Array} interactionContainers\r\n     */\r\n    function cover(interactionContainers) {\r\n        var $cover = $$1('<div class=\"interaction-cover modal-bg\">');\r\n        _.each(interactionContainers, function($interaction) {\r\n            $interaction.append($cover);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove the layer set by the function cover()\r\n     * @private\r\n     * @param {Array} interactionContainers\r\n     */\r\n    function uncover(interactionContainers) {\r\n        _.each(interactionContainers, function($interaction) {\r\n            $interaction.find('.interaction-cover').remove();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\r\n     *\r\n     * @param {type} feedback\r\n     * @returns {String}\r\n     */\r\n    function getFeedbackMessageSignature(feedback) {\r\n        return ('' + feedback.body() + feedback.attr('title'))\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\r\n    }\r\n\r\n    var inlineRenderer = {\r\n        showFeedbacks: showFeedbacks\r\n    };\n\n    return inlineRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/modalRenderer',['lodash', 'jquery', 'async', 'taoQtiItem/qtiItem/helper/pci'], function (_, $, async, pci) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    async = async && Object.prototype.hasOwnProperty.call(async, 'default') ? async['default'] : async;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\r\n     *\r\n     * @param {Object} item - the standard tao qti item object\r\n     * @param {Object} loader - the item loader instance\r\n     * @param {Object} renderer - the item render instance\r\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\r\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\r\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\r\n     * @returns {Number} Number of feedbacks to be displayed\r\n     */\r\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\r\n        var count,\r\n            messages = [],\r\n            feedbacksToBeDisplayed = [];\r\n\r\n        //find which modal feedbacks should be displayed according to the current item session:\r\n        _.each(item.modalFeedbacks, function(feedback) {\r\n            var feedbackIds, message;\r\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\r\n\r\n            if (itemSession[outcomeIdentifier]) {\r\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\r\n                message = getFeedbackMessageSignature(feedback);\r\n                if (_.indexOf(feedbackIds, feedback.id()) >= 0 && _.indexOf(messages, message) === -1) {\r\n                    //check content if is already in the display queue\r\n                    feedbacksToBeDisplayed.push(feedback);\r\n                    messages.push(message);\r\n                }\r\n            }\r\n        });\r\n\r\n        //record the number of feedbacks to be displayed:\r\n        count = feedbacksToBeDisplayed.length;\r\n        if (count) {\r\n            //show in reverse order\r\n            var callstack = [];\r\n\r\n            //iterate from the right because the modal popup will pile up.\r\n            _.eachRight(feedbacksToBeDisplayed, function(feedback) {\r\n                //the end callback should be executed to the last displayed modal, which is the last displayed one\r\n                var endCallback;\r\n                if (callstack.length === 0) {\r\n                    endCallback = function() {\r\n                        onCloseCallback();\r\n                    };\r\n                }\r\n\r\n                callstack.push(function(cb) {\r\n                    renderModalFeedback(\r\n                        feedback,\r\n                        loader,\r\n                        renderer,\r\n                        function() {\r\n                            cb(null);\r\n                        },\r\n                        endCallback\r\n                    );\r\n                });\r\n            });\r\n\r\n            async.series(callstack, function() {\r\n                //all modal are ready and displayed\r\n                if (_.isFunction(onShowCallback)) {\r\n                    onShowCallback();\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Render modal feedback as a modal popup\r\n     *\r\n     * @param {Object} feedback - object\r\n     * @param {Object} loader - loader instance\r\n     * @param {Object} renderer - renderer instance\r\n     * @param {Function} [closeCallback] - feedback to be executed when the popop closes\r\n     * @returns {undefined}\r\n     */\r\n    function renderModalFeedback(feedback, loader, renderer, renderedCallback, closeCallback) {\r\n        var $feedback,\r\n            $feedbackBox = $('#modalFeedbacks'); //feedback.getItem().getContainer().find('#')\r\n\r\n        if (feedback.is('modalFeedback')) {\r\n            //load (potential) new qti classes used in the modal feedback (e.g. math, img)\r\n            renderer.load(function() {\r\n                $feedback = $feedbackBox.find('#' + feedback.getSerial());\r\n                if (!$feedback.length) {\r\n                    //render the modal feedback\r\n                    $feedback = feedback.render();\r\n                    $feedbackBox.append($feedback);\r\n                } else {\r\n                    $feedback.modal();\r\n                }\r\n\r\n                renderedCallback();\r\n\r\n                feedback.postRender({\r\n                    callback: closeCallback\r\n                });\r\n            }, loader.getLoadedClasses());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\r\n     *\r\n     * @param {type} feedback\r\n     * @returns {String}\r\n     */\r\n    function getFeedbackMessageSignature(feedback) {\r\n        return ('' + feedback.body() + feedback.attr('title'))\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\r\n    }\r\n\r\n    var modalRenderer = {\r\n        showFeedbacks: showFeedbacks\r\n    };\n\n    return modalRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/QtiRunner',['jquery', 'lodash', 'context', 'module', 'iframeNotifier', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiRunner/modalFeedback/inlineRenderer', 'taoQtiItem/qtiRunner/modalFeedback/modalRenderer'], function ($, _, context, module, iframeNotifier, ItemLoader, modalFeedbackInline, modalFeedbackModal) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n    ItemLoader = ItemLoader && Object.prototype.hasOwnProperty.call(ItemLoader, 'default') ? ItemLoader['default'] : ItemLoader;\n    modalFeedbackInline = modalFeedbackInline && Object.prototype.hasOwnProperty.call(modalFeedbackInline, 'default') ? modalFeedbackInline['default'] : modalFeedbackInline;\n    modalFeedbackModal = modalFeedbackModal && Object.prototype.hasOwnProperty.call(modalFeedbackModal, 'default') ? modalFeedbackModal['default'] : modalFeedbackModal;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013 (original work) Open Assessment Techonologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\r\n\r\n    var QtiRunner = function() {\r\n        this.item = null;\r\n        this.rpEngine = null;\r\n        this.renderer = null;\r\n        this.loader = null;\r\n        this.itemApi = undefined;\r\n    };\r\n\r\n    QtiRunner.prototype.updateItemApi = function() {\r\n        var responses = this.getResponses();\r\n        var states = this.getStates();\r\n        var variables = [];\r\n        // Transform responses into state variables.\r\n        for (var key in states) {\r\n            var value = states[key];\r\n            // This is where we set variables that will be collected and stored\r\n            // as the Item State. We do not want to store large files into\r\n            // the state, and force the client to download these files\r\n            // all over again. We then transform them as a place holder, that will\r\n            // simply indicate that a file composes the state.\r\n\r\n            if (value.response && typeof value.response.base !== 'undefined') {\r\n                for (var property in value.response.base) {\r\n                    if (property === 'file') {\r\n                        var file = value.response.base.file;\r\n                        // QTI File found! Replace it with an appropriate placeholder.\r\n                        // The data is base64('qti_file_datatype_placeholder_data')\r\n                        value.response = {\r\n                            base: {\r\n                                file: {\r\n                                    name: file.name,\r\n                                    mime: 'qti+application/octet-stream',\r\n                                    data: 'cXRpX2ZpbGVfZGF0YXR5cGVfcGxhY2Vob2xkZXJfZGF0YQ=='\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n\r\n            variables[key] = value;\r\n        }\r\n\r\n        //set all variables at once\r\n        this.itemApi.setVariables(variables);\r\n\r\n        // Save the responses that will be used for response processing.\r\n        this.itemApi.saveResponses(responses);\r\n        this.itemApi.resultApi.setQtiRunner(this);\r\n    };\r\n\r\n    QtiRunner.prototype.setItemApi = function(itemApi) {\r\n        this.itemApi = itemApi;\r\n        var that = this;\r\n        var oldStateVariables = JSON.stringify(itemApi.stateVariables);\r\n\r\n        itemApi.onKill(function(killCallback) {\r\n            // If the responses did not change,\r\n            // just close gracefully.\r\n\r\n            // Collect new responses and update item API.\r\n            that.updateItemApi();\r\n            var newStateVariables = JSON.stringify(itemApi.stateVariables);\r\n\r\n            // Store the results.\r\n            if (oldStateVariables !== newStateVariables || itemApi.serviceApi.getHasBeenPaused()) {\r\n                itemApi.submit(function() {\r\n                    // Send successful signal.\r\n                    itemApi.serviceApi.setHasBeenPaused(false);\r\n                    killCallback(0);\r\n                });\r\n            } else {\r\n                killCallback(0);\r\n            }\r\n        });\r\n    };\r\n\r\n    QtiRunner.prototype.setRenderer = function(renderer) {\r\n        if (renderer.isRenderer) {\r\n            this.renderer = renderer;\r\n        } else {\r\n            throw 'invalid renderer';\r\n        }\r\n    };\r\n\r\n    QtiRunner.prototype.getLoader = function() {\r\n        if (!this.loader) {\r\n            this.loader = new ItemLoader();\r\n        }\r\n        return this.loader;\r\n    };\r\n\r\n    QtiRunner.prototype.loadItemData = function(data, callback) {\r\n        var self = this;\r\n        this.getLoader().loadItemData(data, function(item) {\r\n            self.item = item;\r\n            callback(self.item);\r\n        });\r\n    };\r\n\r\n    QtiRunner.prototype.loadElements = function(elements, callback) {\r\n        if (this.getLoader().item) {\r\n            this.getLoader().loadElements(elements, callback);\r\n        } else {\r\n            throw 'QtiRunner : cannot load elements in empty item';\r\n        }\r\n    };\r\n\r\n    QtiRunner.prototype.renderItem = function(data, done) {\r\n        var self = this;\r\n\r\n        done = _.isFunction(done) ? done : _.noop;\r\n\r\n        var render = function() {\r\n            if (!self.item) {\r\n                throw 'cannot render item: empty item';\r\n            }\r\n            if (self.renderer) {\r\n                self.renderer.load(function() {\r\n                    self.item.setRenderer(self.renderer);\r\n                    self.item.render({}, $('#qti_item'));\r\n\r\n                    // Race between postRendering and timeout\r\n                    // postRendering waits for everything to be resolved or one reject\r\n                    Promise.race([\r\n                        Promise.all(self.item.postRender()),\r\n                        new Promise(function(resolve, reject) {\r\n                            _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\r\n                        })\r\n                    ])\r\n                        .then(function() {\r\n                            self.item.getContainer().on('responseChange', function(e, data) {\r\n                                if (data.interaction && data.interaction.attr('responseIdentifier') && data.response) {\r\n                                    iframeNotifier.parent('responsechange', [\r\n                                        data.interaction.attr('responseIdentifier'),\r\n                                        data.response\r\n                                    ]);\r\n                                }\r\n                            });\r\n\r\n                            self.initInteractionsResponse();\r\n                            self.listenForThemeChange();\r\n                            done();\r\n                        })\r\n                        .catch(function(err) {\r\n                            //in case of postRendering issue, we are also done\r\n                            done();\r\n\r\n                            throw new Error('Error in post rendering : ' + err);\r\n                        });\r\n                }, self.getLoader().getLoadedClasses());\r\n            } else {\r\n                throw 'cannot render item: no rendered set';\r\n            }\r\n        };\r\n\r\n        if (typeof data === 'object') {\r\n            this.loadItemData(data, render);\r\n        } else {\r\n            render();\r\n        }\r\n    };\r\n\r\n    QtiRunner.prototype.initInteractionsResponse = function() {\r\n        var self = this;\r\n        if (self.item) {\r\n            var interactions = self.item.getInteractions();\r\n            for (var i in interactions) {\r\n                var interaction = interactions[i];\r\n                var responseId = interaction.attr('responseIdentifier');\r\n                self.itemApi.getVariable(responseId, function(values) {\r\n                    if (values) {\r\n                        interaction.setState(values);\r\n                        iframeNotifier.parent('stateready', [responseId, values]);\r\n                    } else {\r\n                        var states = self.getStates();\r\n                        if (_.indexOf(states, responseId)) {\r\n                            self.itemApi.setVariable(responseId, states[responseId]);\r\n                            interaction.setState(states[responseId]);\r\n                            iframeNotifier.parent('stateready', [responseId, states[responseId]]);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * If an event 'themechange' bubbles to \"#qti_item\" node\r\n     * then we tell the renderer to switch the theme.\r\n     */\r\n    QtiRunner.prototype.listenForThemeChange = function listenForThemeChange() {\r\n        var self = this;\r\n        var $container = this.renderer.getContainer(this.item);\r\n        if (!$container.length) {\r\n            $container = $('.qti-item');\r\n        }\r\n        $container.off('themechange').on('themechange', function(e, themeName) {\r\n            var themeLoader = self.renderer.getThemeLoader();\r\n            themeName = themeName || e.originalEvent.detail;\r\n            if (themeLoader) {\r\n                themeLoader.change(themeName);\r\n            }\r\n        });\r\n    };\r\n\r\n    QtiRunner.prototype.validate = function() {\r\n        this.updateItemApi();\r\n        this.itemApi.finish();\r\n    };\r\n\r\n    QtiRunner.prototype.getResponses = function() {\r\n        var responses = {};\r\n        var interactions = this.item.getInteractions();\r\n\r\n        _.forEach(interactions, function(interaction) {\r\n            var response = {};\r\n            try {\r\n                response = interaction.getResponse();\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            responses[interaction.attr('responseIdentifier')] = response;\r\n        });\r\n\r\n        return responses;\r\n    };\r\n\r\n    QtiRunner.prototype.getStates = function() {\r\n        var states = {};\r\n        var interactions = this.item.getInteractions();\r\n\r\n        _.forEach(interactions, function(interaction) {\r\n            var state = {};\r\n            try {\r\n                state = interaction.getState();\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            states[interaction.attr('responseIdentifier')] = state;\r\n        });\r\n\r\n        return states;\r\n    };\r\n\r\n    QtiRunner.prototype.setResponseProcessing = function(callback) {\r\n        this.rpEngine = callback;\r\n    };\r\n\r\n    QtiRunner.prototype.showFeedbacks = function(itemSession, callback, onShowCallback) {\r\n        var inlineDisplay = !!module.config().inlineModalFeedback;\r\n\r\n        //currently only modal feedbacks are available\r\n        if (inlineDisplay) {\r\n            return modalFeedbackInline.showFeedbacks(\r\n                this.item,\r\n                this.getLoader(),\r\n                this.renderer,\r\n                itemSession,\r\n                callback,\r\n                onShowCallback\r\n            );\r\n        } else {\r\n            return modalFeedbackModal.showFeedbacks(\r\n                this.item,\r\n                this.getLoader(),\r\n                this.renderer,\r\n                itemSession,\r\n                callback,\r\n                onShowCallback\r\n            );\r\n        }\r\n    };\n\n    return QtiRunner;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\r\n     * Common helper functions\r\n     */\r\n    var interactionHelper = {\r\n        convertChoices: function(choices, outputType) {\r\n            var ret = [],\r\n                _this = this;\r\n\r\n            _.each(choices, function(c) {\r\n                if (Element.isA(c, 'choice')) {\r\n                    switch (outputType) {\r\n                        case 'serial':\r\n                            ret.push(c.getSerial());\r\n                            break;\r\n                        case 'identifier':\r\n                            ret.push(c.id());\r\n                            break;\r\n                        default:\r\n                            ret.push(c);\r\n                    }\r\n                } else if (_.isArray(c)) {\r\n                    ret.push(_this.convertChoices(c, outputType));\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        findChoices: function(interaction, choices, inputType) {\r\n            var ret = [],\r\n                _this = this;\r\n\r\n            _.each(choices, function(c) {\r\n                var choice;\r\n                if (_.isString(c)) {\r\n                    if (inputType === 'serial') {\r\n                        choice = interaction.getChoice(c);\r\n                        if (choice) {\r\n                            ret.push(choice);\r\n                        }\r\n                    } else if (inputType === 'identifier') {\r\n                        choice = interaction.getChoiceByIdentifier(c);\r\n                        if (choice) {\r\n                            ret.push(choice);\r\n                        }\r\n                    } else {\r\n                        ret.push(c);\r\n                    }\r\n                } else if (_.isArray(c)) {\r\n                    ret.push(_this.findChoices(interaction, c, inputType));\r\n                } else {\r\n                    ret.push(c);\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        shuffleChoices: function(choices) {\r\n            var r = [], //returned array\r\n                f = {}, //fixed choices array\r\n                j = 0;\r\n\r\n            for (var i in choices) {\r\n                if (Element.isA(choices[i], 'choice')) {\r\n                    var choice = choices[i];\r\n                    if (choice.attr('fixed')) {\r\n                        f[j] = choice;\r\n                    }\r\n                    r.push(choice);\r\n                    j++;\r\n                } else {\r\n                    throw 'invalid element in array: is not a qti choice';\r\n                }\r\n            }\r\n\r\n            for (var n = 0; n < r.length - 1; n++) {\r\n                if (f[n]) {\r\n                    continue;\r\n                }\r\n                var k = -1;\r\n                do {\r\n                    k = n + Math.floor(Math.random() * (r.length - n));\r\n                } while (f[k]);\r\n                var tmp = r[k];\r\n                r[k] = r[n];\r\n                r[n] = tmp;\r\n            }\r\n\r\n            return r;\r\n        },\r\n        serialToIdentifier: function(interaction, choiceSerial) {\r\n            var choice = interaction.getChoice(choiceSerial);\r\n            if (choice) {\r\n                return choice.id();\r\n            } else {\r\n                return '';\r\n            }\r\n        }\r\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    //webpack trick : handlebar is usale only from cjs.\r\n    //but anyway we should deprecate the practice to invoke\r\n    //directly Handlebars at runtimej\r\n    let hb = Handlebars;\r\n    if(typeof hb.compile !== 'function'){\r\n        hb = require('handlebars');\r\n    }\r\n\r\n    const _renderableClasses = [\r\n        '_container',\r\n        'assessmentItem',\r\n        'stylesheet',\r\n        'responseDeclaration',\r\n        'outcomeDeclaration',\r\n        'responseProcessing',\r\n        '_simpleFeedbackRule',\r\n        '_tooltip',\r\n        'figure',\r\n        'img',\r\n        'figcaption',\r\n        'math',\r\n        'object',\r\n        'table',\r\n        'modalFeedback',\r\n        'rubricBlock',\r\n        'associateInteraction',\r\n        'choiceInteraction',\r\n        'extendedTextInteraction',\r\n        'gapMatchInteraction',\r\n        'graphicAssociateInteraction',\r\n        'graphicGapMatchInteraction',\r\n        'graphicOrderInteraction',\r\n        'hotspotInteraction',\r\n        'hottextInteraction',\r\n        'inlineChoiceInteraction',\r\n        'matchInteraction',\r\n        'mediaInteraction',\r\n        'orderInteraction',\r\n        'selectPointInteraction',\r\n        'sliderInteraction',\r\n        'textEntryInteraction',\r\n        'uploadInteraction',\r\n        'endAttemptInteraction',\r\n        'customInteraction',\r\n        'prompt',\r\n        'associableHotspot',\r\n        'gap',\r\n        'gapImg',\r\n        'gapText',\r\n        'hotspotChoice',\r\n        'hottext',\r\n        'inlineChoice',\r\n        'simpleAssociableChoice',\r\n        'simpleChoice',\r\n        'infoControl',\r\n        'include',\r\n        'printedVariable'\r\n    ];\r\n\r\n    /**\r\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\r\n     */\r\n    const _dependencies = {\r\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\r\n        rubricBlock: ['_container'],\r\n        associateInteraction: ['simpleAssociableChoice'],\r\n        choiceInteraction: ['simpleChoice'],\r\n        gapMatchInteraction: ['gap', 'gapText'],\r\n        graphicAssociateInteraction: ['associableHotspot'],\r\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\r\n        graphicOrderInteraction: ['hotspotChoice'],\r\n        hotspotInteraction: ['hotspotChoice'],\r\n        hottextInteraction: ['hottext'],\r\n        inlineChoiceInteraction: ['inlineChoice'],\r\n        matchInteraction: ['simpleAssociableChoice'],\r\n        orderInteraction: ['simpleChoice']\r\n    };\r\n\r\n    /**\r\n     * The list of supported qti subclasses.\r\n     */\r\n    const _renderableSubclasses = {\r\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\r\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\r\n    };\r\n\r\n    /**\r\n     * List of the default properties for the item\r\n     */\r\n    const _defaults = {\r\n        shuffleChoices: true\r\n    };\r\n\r\n    const _isValidRenderer = function(renderer) {\r\n        let valid = true;\r\n\r\n        if (typeof renderer !== 'object') {\r\n            return false;\r\n        }\r\n\r\n        let classCorrect = false;\r\n        if (renderer.qtiClass) {\r\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\r\n                classCorrect = true;\r\n            } else {\r\n                const pos = renderer.qtiClass.indexOf('.');\r\n                if (pos > 0) {\r\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\r\n                    const subClass = renderer.qtiClass.slice(pos + 1);\r\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\r\n                        classCorrect = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!classCorrect) {\r\n            valid = false;\r\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        if (!renderer.template) {\r\n            valid = false;\r\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    /**\r\n     * Get the location of the document, useful to define a baseUrl for the required context\r\n     * @returns {String}\r\n     */\r\n    function getDocumentBaseUrl() {\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\r\n    }\r\n\r\n    /**\r\n     * The built Renderer class\r\n     * @constructor\r\n     * @param {Object} [options] - the renderer options\r\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\r\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\r\n     * @param {Object} [options.decorators] - to set up rendering decorator\r\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\r\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\r\n     */\r\n    const Renderer = function(options) {\r\n        /**\r\n         * Store the registered renderer location\r\n         */\r\n        const _locations = {};\r\n\r\n        /**\r\n         * Store loaded renderers\r\n         */\r\n        const _renderers = {};\r\n\r\n        options = _.defaults(options || {}, _defaults);\r\n\r\n        this.isRenderer = true;\r\n\r\n        this.name = '';\r\n\r\n        //store shuffled choice here\r\n        this.shuffledChoices = [];\r\n\r\n        /**\r\n         * Get the actual renderer of the give qti class or subclass:\r\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\r\n         */\r\n        const _getClassRenderer = function(qtiClass) {\r\n            let ret = null;\r\n            if (_renderers[qtiClass]) {\r\n                ret = _renderers[qtiClass];\r\n            } else {\r\n                const pos = qtiClass.indexOf('.');\r\n                if (pos > 0) {\r\n                    qtiClass = qtiClass.slice(0, pos);\r\n                    if (_renderers[qtiClass]) {\r\n                        ret = _renderers[qtiClass];\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Registers a QTI renderer class\r\n         * @param {String} qtiClass\r\n         * @param {Array} list\r\n         * @returns {Boolean} `true` if the class has been successfully registered\r\n         */\r\n        function registerRendererClass(qtiClass, list) {\r\n            let success = false;\r\n            if (_locations[qtiClass] === false) {\r\n                //mark this class as not renderable\r\n                _renderers[qtiClass] = false;\r\n                success = true;\r\n            } else if (_locations[qtiClass]) {\r\n                list.push(_locations[qtiClass]);\r\n                success = true;\r\n            }\r\n            return success;\r\n        }\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {String} key - the name of the option\r\n         * @param {*} value - the option vallue\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOption = function(key, value) {\r\n            if (typeof key === 'string') {\r\n                options[key] = value;\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {Object} opts - the options\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOptions = function(opts) {\r\n            options = _.extend(options, opts);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Get the renderer option\r\n         * @param {String} key - the name of the option\r\n         * @returns {*|null} the option vallue\r\n         */\r\n        this.getOption = function(key) {\r\n            if (typeof key === 'string' && options[key]) {\r\n                return options[key];\r\n            }\r\n            return null;\r\n        };\r\n\r\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\r\n            const messages = this.getOption('messages');\r\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\r\n                //currently not translatable but potentially could be if the need raises\r\n                return hb.compile(messages[elementName][messageKey]);\r\n            } else {\r\n                return null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the bound assetManager\r\n         * @returns {AssetManager} the assetManager\r\n         */\r\n        this.getAssetManager = function getAssetManager() {\r\n            return options.assetManager;\r\n        };\r\n\r\n        /**\r\n         * Get the bound theme loader\r\n         * @returns {Object} the themeLoader\r\n         */\r\n        this.getThemeLoader = function getThemeLoader() {\r\n            return this.themeLoader;\r\n        };\r\n\r\n        /**\r\n         * Renders the template\r\n         * @param {Object} element - the QTI model element\r\n         * @param {Object} data - the data to give to the template\r\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n         * @returns {String} the template results\r\n         * @throws {Error} if the renderer is not set or has no template bound\r\n         */\r\n        this.renderTpl = function(element, data, qtiSubclass) {\r\n            let res;\r\n            let ret = '';\r\n            const qtiClass = qtiSubclass || element.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n            const decorators = this.getOption('decorators');\r\n\r\n            if (!renderer || !_.isFunction(renderer.template)) {\r\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\r\n            }\r\n\r\n            //pre rendering decoration\r\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\r\n                /**\r\n                 * @callback preRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.before(element, qtiSubclass);\r\n                if (_.isString(res)) {\r\n                    ret += res;\r\n                }\r\n            }\r\n\r\n            //render the template\r\n            ret += renderer.template(data);\r\n\r\n            //post rendering decoration\r\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\r\n                /**\r\n                 * @callback postRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.after(element, qtiSubclass);\r\n                if (_.isString(res)) {\r\n                    ret += res;\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getData = function(element, data, qtiSubclass) {\r\n            let ret = data;\r\n            const qtiClass = qtiSubclass || element.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.getData === 'function') {\r\n                    ret = renderer.getData.call(this, element, data);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        };\r\n\r\n        this.renderDirect = function(tpl, data) {\r\n            return hb.compile(tpl)(data);\r\n        };\r\n\r\n        this.getContainer = function(qtiElement, $scope, qtiSubclass) {\r\n            let ret = null;\r\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                ret = renderer.getContainer(qtiElement, $scope);\r\n            } else {\r\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.postRender = function(qtiElement, data, qtiSubclass) {\r\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer && typeof renderer.render === 'function') {\r\n                return renderer.render.call(this, qtiElement, data);\r\n            }\r\n        };\r\n\r\n        this.setResponse = function(qtiInteraction, response, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.setResponse === 'function') {\r\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\r\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\r\n                    if ($container instanceof $ && $container.length) {\r\n                        $container.trigger('responseSet', [qtiInteraction, response]);\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getResponse = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.getResponse === 'function') {\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.resetResponse = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.resetResponse === 'function') {\r\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         * @returns {Object} the interaction's state\r\n         *\r\n         * @throws {Error} if no renderer is registered\r\n         */\r\n        this.getState = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.getState)) {\r\n                    ret = renderer.getState.call(this, qtiInteraction);\r\n                } else {\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {Object} state - the interaction's state\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.setState = function(qtiInteraction, state, qtiSubclass) {\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.setState)) {\r\n                    renderer.setState.call(this, qtiInteraction, state);\r\n                } else {\r\n                    renderer.resetResponse.call(this, qtiInteraction);\r\n                    renderer.setResponse.call(this, qtiInteraction, state);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Calls the renderer destroy.\r\n         * Ask the renderer to run destroy if exists.\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.destroy = function(qtiInteraction, qtiSubclass) {\r\n            let ret = false;\r\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            const renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.destroy)) {\r\n                    ret = renderer.destroy.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw new Error('no renderer registered under the name : ' + qtiClass);\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getLoadedRenderers = function() {\r\n            return _renderers;\r\n        };\r\n\r\n        this.register = function(renderersLocations) {\r\n            _.extend(_locations, renderersLocations);\r\n        };\r\n\r\n        this.load = function(callback, requiredClasses) {\r\n            const self = this;\r\n            let required = [];\r\n\r\n            const themeData = themesHelper.getCurrentThemeData();\r\n            if (themeData) {\r\n                options.themes = themeData;\r\n            }\r\n            if (options.themes) {\r\n                //resolve themes paths\r\n                options.themes.base = this.resolveUrl(options.themes.base);\r\n                _.forEach(options.themes.available, function(theme, index) {\r\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\r\n                });\r\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\r\n            }\r\n\r\n            if (requiredClasses) {\r\n                if (_.isArray(requiredClasses)) {\r\n                    //exclude abstract classes\r\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\r\n\r\n                    //add dependencies\r\n                    _.each(requiredClasses, function(reqClass) {\r\n                        const deps = _dependencies[reqClass];\r\n                        if (deps) {\r\n                            requiredClasses = _.union(requiredClasses, deps);\r\n                        }\r\n                    });\r\n\r\n                    _.forEach(requiredClasses, function(qtiClass) {\r\n                        let requiredSubClasses;\r\n                        if (_renderableSubclasses[qtiClass]) {\r\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\r\n                            _.each(requiredSubClasses, function(subclass) {\r\n                                if (\r\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\r\n                                    !registerRendererClass(qtiClass, required)\r\n                                ) {\r\n                                    throw new Error(\r\n                                        self.name +\r\n                                            ' : missing qti class location declaration: ' +\r\n                                            qtiClass +\r\n                                            ', subclass: ' +\r\n                                            subclass\r\n                                    );\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (!registerRendererClass(qtiClass, required)) {\r\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\r\n                }\r\n            } else {\r\n                required = _.values(_locations);\r\n            }\r\n\r\n            moduleLoader([], ()=> true)\r\n                .addList( required.map( module => ({ module, category: 'qti'}) ) )\r\n                .load()\r\n                .then( loaded => {\r\n                    loaded.forEach( clazz => {\r\n                        if (_isValidRenderer(clazz)) {\r\n                            _renderers[clazz.qtiClass] = clazz;\r\n                        }\r\n\r\n                    });\r\n                    if (typeof callback === 'function') {\r\n                        callback.call(self, _renderers);\r\n                    }\r\n                });\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Unload the renderer\r\n         */\r\n        this.unload = function unload() {\r\n            if (this.themeLoader) {\r\n                themeLoader(options.themes).unload();\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Define the shuffling manually\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Array} choices - the shuffled choices\r\n         * @param {String} identificationType -\r\n         */\r\n        this.setShuffledChoices = function(interaction, choices, identificationType) {\r\n            if (Element.isA(interaction, 'interaction')) {\r\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(\r\n                    interactionHelper.findChoices(interaction, choices, identificationType),\r\n                    'serial'\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the choices shuffled for this interaction.\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\r\n         * @param {String} returnedType - the choice type\r\n         * @returns {Array} the choices\r\n         */\r\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType) {\r\n            let choices = [];\r\n            let serial, i;\r\n\r\n            if (Element.isA(interaction, 'interaction')) {\r\n                serial = interaction.getSerial();\r\n\r\n                //1st time, we shuffle (or asked to force shuffling)\r\n                if (!this.shuffledChoices[serial] || reshuffle) {\r\n                    if (Element.isA(interaction, 'matchInteraction')) {\r\n                        this.shuffledChoices[serial] = [];\r\n                        for (i = 0; i < 2; i++) {\r\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\r\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\r\n                        }\r\n                    } else {\r\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\r\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\r\n                    }\r\n\r\n                    //otherwise get the choices from the serials\r\n                } else {\r\n                    if (Element.isA(interaction, 'matchInteraction')) {\r\n                        _.forEach(choices, function(choice, index) {\r\n                            if (index < 2) {\r\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial) {\r\n                                    choice.push(interaction.getChoice(choiceSerial));\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial) {\r\n                            choices.push(interaction.getChoice(choiceSerial));\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //do some type convertion\r\n                if (returnedType === 'serial' || returnedType === 'identifier') {\r\n                    return interactionHelper.convertChoices(choices, returnedType);\r\n                }\r\n\r\n                //pass value only, not ref\r\n                return _.clone(choices);\r\n            }\r\n\r\n            return [];\r\n        };\r\n\r\n        this.getRenderers = function() {\r\n            return _renderers;\r\n        };\r\n\r\n        this.getLocations = function() {\r\n            return _locations;\r\n        };\r\n\r\n        /**\r\n         * Resolve URLs using the defined assetManager's strategies\r\n         * @param {String} url - the URL to resolve\r\n         * @returns {String} the resolved URL\r\n         */\r\n        this.resolveUrl = function resolveUrl(url) {\r\n            if (!options.assetManager) {\r\n                return url;\r\n            }\r\n            if (typeof url === 'string' && url.length > 0) {\r\n                return options.assetManager.resolve(url);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @deprecated in favor of resolveUrl\r\n         */\r\n        this.getAbsoluteUrl = function(relUrl) {\r\n            //let until method is removed\r\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\r\n\r\n            //allow relative url output only if explicitely said so\r\n            if (this.getOption('userRelativeUrl')) {\r\n                return relUrl.replace(/^\\.?\\//, '');\r\n            }\r\n\r\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\r\n                //already absolute or base64 encoded\r\n                return relUrl;\r\n            } else {\r\n                let absUrl = '';\r\n                const runtimeLocations = this.getOption('runtimeLocations');\r\n\r\n                if (runtimeLocations && _.size(runtimeLocations)) {\r\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier) {\r\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\r\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\r\n                            return false; //break\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (absUrl) {\r\n                    return absUrl;\r\n                } else {\r\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\r\n                    return baseUrl + relUrl;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\r\n            this._areaBroker = areaBroker;\r\n        };\r\n\r\n        this.getAreaBroker = function getAreaBroker() {\r\n            if (this._areaBroker) {\r\n                return this._areaBroker;\r\n            }\r\n        };\r\n\r\n        this.getItemCreator = function getItemCreator() {\r\n            return this.getOption('itemCreator');\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Expose the renderer's factory\r\n     * @exports taoQtiItem/qtiRunner/core/Renderer\r\n     */\r\n    var Renderer$1 = {\r\n        /**\r\n         * Creates a new Renderer by extending the Renderer's prototype\r\n         * @param {Object} renderersLocations -\r\n         * @param {String} [name] - the new renderer name\r\n         * @param {Object} [defaultOptions] - the renderer options\r\n         */\r\n        build: function(renderersLocations, name, defaultOptions) {\r\n            const NewRenderer = function() {\r\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\r\n\r\n                Renderer.apply(this);\r\n\r\n                this.register(renderersLocations);\r\n                this.name = name || '';\r\n                this.setOptions(_.defaults(options, defaultOptions || {}));\r\n            };\r\n            NewRenderer.prototype = Renderer.prototype;\r\n            return NewRenderer;\r\n        }\r\n    };\n\n    return Renderer$1;\n\n});\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\r\n    'use strict';\r\n\r\n    var _requirejs = window.require;\r\n    var _defaultLoadingOptions = {\r\n        reload: false\r\n    };\r\n\r\n    var loadModuleConfig = function loadModuleConfig(manifest){\r\n        return new Promise(function(resolve, reject){\r\n            var requireConfigAliases = {};\r\n            var baseUrl;\r\n            var reqConfigs = [];\r\n            var modules = {};\r\n\r\n            if(!manifest || !manifest.runtime){\r\n                return reject('invalid manifest');\r\n            }\r\n\r\n            baseUrl = manifest.baseUrl;\r\n\r\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\r\n                _.forEach(manifest.runtime.config, function(pciConfig){\r\n                    if(_.isString(pciConfig)){\r\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\r\n                    }else{\r\n                        if(pciConfig.data){\r\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\r\n                        }else if(pciConfig.file){\r\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            require(reqConfigs, function(){\r\n\r\n                var runtimeModules = {};\r\n\r\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\r\n\r\n                if(manifest.model === 'IMSPCI'){\r\n\r\n                    modules = _.reduce(arguments, function(acc, conf){\r\n                        return _.defaults(acc, conf.paths || {});\r\n                    }, modules);\r\n\r\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\r\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\r\n                            runtimeModules[id] = paths;\r\n                        }\r\n                    });\r\n\r\n                    modules = _.merge(modules, runtimeModules);\r\n\r\n                    _.forEach(modules, function(paths, id){\r\n                        paths = _.isArray(paths) ? paths : [paths];\r\n                        requireConfigAliases[id] = _.map(paths, function(path){\r\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\r\n                        });\r\n                    });\r\n                }\r\n\r\n                resolve(requireConfigAliases);\r\n\r\n            }, reject);\r\n\r\n\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Evaluate if the given object is a proper portable element provider\r\n     * @param {Object} provider\r\n     * @returns {Boolean}\r\n     */\r\n    var isPortableElementProvider = function isPortableElementProvider(provider){\r\n        return (provider && _.isFunction(provider.load));\r\n    };\r\n\r\n    return function portableElementRegistry(methods){\r\n\r\n        var _loaded = false;\r\n        var __providers = {};\r\n\r\n        /**\r\n         * The portable element registry instance\r\n         * @typedef {portableElementRegistry}\r\n         */\r\n        return eventifier(_.defaults(methods || {}, {\r\n            _registry : {},\r\n\r\n            /**\r\n             * Get a register portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} version\r\n             * @returns {Object}\r\n             */\r\n            get : function get(typeIdentifier, version){\r\n\r\n                if(this._registry[typeIdentifier]){\r\n                    //check version\r\n                    if(version){\r\n                        return _.find(this._registry[typeIdentifier], {version : version});\r\n                    }else{\r\n                        //latest\r\n                        return _.last(this._registry[typeIdentifier]);\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Register a portable element provider\r\n             * @param moduleName\r\n             * @param {String|Object }provider - the portable provider object or module name\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            registerProvider : function registerProvider(moduleName, provider){\r\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\r\n                _loaded = false;\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Clear all previously registered providers\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            resetProviders : function resetProviders(){\r\n                __providers = {};\r\n                _loaded = false;\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Load the providers\r\n             * @param {Object} [options]\r\n             * @param {Boolean} [options.reload] - force to reload the registered providers\r\n             * @returns {Promise}\r\n             */\r\n            loadProviders : function loadProviders(options){\r\n                var self = this;\r\n                var loadPromise;\r\n\r\n                if(_loaded && !options.reload){\r\n                    loadPromise = Promise.resolve([]);\r\n                } else {\r\n                    loadPromise = new Promise(function(resolve, reject) {\r\n                        var providerLoadingStack = [];\r\n                        _.forIn(__providers, function(provider, id){\r\n                            if(provider === null){\r\n                                providerLoadingStack.push(id);\r\n                            }\r\n                        });\r\n                        _requirejs(providerLoadingStack, function(){\r\n                            _.each([].slice.call(arguments), function(provider){\r\n                                if(isPortableElementProvider(provider)){\r\n                                    __providers[providerLoadingStack.shift()] = provider;\r\n                                }\r\n                            });\r\n                            resolve(__providers);\r\n                            _loaded = true;\r\n                            self.trigger('providersloaded', __providers);\r\n                        }, reject);\r\n                    });\r\n                }\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * Get all versions of all portable elements registered\r\n             * @returns {Object} - all portable elements and their versions\r\n             */\r\n            getAllVersions : function getAllVersions(){\r\n                var all = {};\r\n                _.forIn(this._registry, function (versions, id){\r\n                    all[id] = _.map(versions, 'version');\r\n                });\r\n                return all;\r\n            },\r\n\r\n            /**\r\n             * Get the runtime for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {Object} the runtime model\r\n             */\r\n            getRuntime : function getRuntime(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    return _.assign(portableElement.runtime, {\r\n                        id : portableElement.typeIdentifier,\r\n                        label : portableElement.label,\r\n                        baseUrl : portableElement.baseUrl,\r\n                        model : portableElement.model\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the creator model for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {Object} the creator model\r\n             */\r\n            getCreator : function getCreator(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement && portableElement.creator){\r\n                    return _.assign(portableElement.creator, {\r\n                        id : portableElement.typeIdentifier,\r\n                        label : portableElement.label,\r\n                        baseUrl : portableElement.baseUrl,\r\n                        response : portableElement.response,\r\n                        model : portableElement.model,\r\n                        xmlns : portableElement.xmlns\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Returned all enabled created from the registry\r\n             * @returns {Object} the collection of creators\r\n             */\r\n            getLatestCreators : function getLatestCreators(){\r\n                var all = {};\r\n                _.forIn(this._registry, function (versions, id){\r\n                    var lastVersion = _.last(versions);\r\n\r\n                    //check if the portable element is creatable:\r\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\r\n                        all[id] = lastVersion;\r\n                    }\r\n                });\r\n                return all;\r\n            },\r\n\r\n            /**\r\n             * Get the baseUrl for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {String} the base url\r\n             */\r\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\r\n                var runtime = this.get(typeIdentifier, version);\r\n                if(runtime){\r\n                    return runtime.baseUrl;\r\n                }\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Load the runtimes from registered portable element provider(s)\r\n             *\r\n             * @param {Object} [options]\r\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\r\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\r\n             * @returns {Promise}\r\n             */\r\n            loadRuntimes : function loadRuntimes(options){\r\n                var self = this;\r\n                var loadPromise;\r\n\r\n                options = _.defaults(options||{}, _defaultLoadingOptions);\r\n\r\n                    loadPromise = self.loadProviders(options).then(function(providers){\r\n\r\n                        var loadStack = [];\r\n\r\n                        _.forEach(providers, function (provider){\r\n                            if(provider){//check that the provider is loaded\r\n                                loadStack.push(provider.load());\r\n                            }\r\n                        });\r\n\r\n                        //performs the loadings in parallel\r\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\r\n\r\n                                var configLoadingStack = [];\r\n\r\n                                //update registry\r\n                                self._registry = _.reduce(results, function (acc, _pcis){\r\n                                    return _.merge(acc, _pcis);\r\n                                }, self._registry || {});//incremental loading\r\n\r\n                                //pre-configuring the baseUrl of the portable element's source\r\n                                _.forIn(self._registry, function (versions, typeIdentifier){\r\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\r\n                                        return true;\r\n                                    }\r\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\r\n                                });\r\n\r\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\r\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\r\n                                        return _.merge(acc, paths);\r\n                                    }, {});\r\n\r\n                                    //save the required libs name => path to global require alias\r\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\r\n                                    _requirejs.config({paths : requireConfigAliases});\r\n                                });\r\n                            });\r\n\r\n                    });\r\n\r\n\r\n                loadPromise\r\n                    .then(function() {\r\n                        self.trigger('runtimesloaded');\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * Load the creators from registered portable element provider(s)\r\n             *\r\n             * @param {Object} [options]\r\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\r\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\r\n             * @returns {Promise}\r\n             */\r\n            loadCreators : function loadCreators(options){\r\n                var loadPromise;\r\n                var self = this;\r\n\r\n                options = _.defaults(options||{}, _defaultLoadingOptions);\r\n\r\n                loadPromise = self.loadRuntimes(options).then(function(){\r\n                    var requiredCreatorHooks = [];\r\n\r\n                    _.forIn(self._registry, function (versions, typeIdentifier){\r\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\r\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\r\n                            if(portableElementModel.enabled){\r\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\r\n                                    return true;\r\n                                }\r\n                            }else{\r\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\r\n                        }\r\n                    });\r\n\r\n                    if(requiredCreatorHooks.length){\r\n                        return new Promise(function(resolve, reject){\r\n                            //@todo support caching?\r\n                            _requirejs(requiredCreatorHooks, function (){\r\n                                var creators = {};\r\n                                _.each(arguments, function (creatorHook){\r\n                                    var id = creatorHook.getTypeIdentifier();\r\n                                    var portableElementModel = self.get(id);\r\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\r\n                                    if(i < 0){\r\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\r\n                                    }else{\r\n                                        self._registry[id][i].creator.module = creatorHook;\r\n                                        creators[id] = creatorHook;\r\n                                    }\r\n                                });\r\n                                resolve(creators);\r\n                            }, reject);\r\n                        });\r\n                    }else{\r\n                        return Promise.resolve({});\r\n                    }\r\n\r\n                });\r\n\r\n                loadPromise\r\n                    .then(function(creators) {\r\n                        self.trigger('creatorsloaded', creators);\r\n                        return creators;\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * enable a portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            enable: function enable(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    portableElement.enabled = true;\r\n                }\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * disable a portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            disable: function disable(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    portableElement.enabled = false;\r\n                }\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * check is a portable element is enabled\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            isEnabled: function isEnabled(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                return (portableElement && portableElement.enabled === true);\r\n            }\r\n        }));\r\n    };\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * Utility to retrieve and manipualte QTI Elements\r\n */\r\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\r\n    'use strict';\r\n\r\n    const QtiElements = {\r\n        classes: {\r\n            //abstract classes:\r\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\r\n            atomicBlock: {\r\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\r\n                contains: ['inline'],\r\n                abstract: true\r\n            },\r\n            atomicInline: {\r\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\r\n                contains: ['inline'],\r\n                abstract: true\r\n            },\r\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\r\n            simpleInline: {\r\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\r\n                contains: ['inline'],\r\n                abstract: true\r\n            },\r\n            flowStatic: { parents: ['flow'], abstract: true },\r\n            blockStatic: { parents: ['block'], abstract: true },\r\n            inlineStatic: { parents: ['inline'], abstract: true },\r\n            flow: { parents: ['objectFlow'], abstract: true },\r\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\r\n            //html-derived qti elements:\r\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\r\n            col: { parents: ['bodyElement'], xhtml: true },\r\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\r\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\r\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\r\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\r\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\r\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\r\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\r\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\r\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\r\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\r\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\r\n            param: { parents: ['objectFlow'], xhtml: true },\r\n            table: {\r\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\r\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\r\n                xhtml: true\r\n            },\r\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\r\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\r\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\r\n            td: { parents: ['tableCell'], xhtml: true },\r\n            th: { parents: ['tableCell'], xhtml: true },\r\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\r\n            a: { parents: ['simpleInline'], xhtml: true },\r\n            abbr: { parents: ['simpleInline'], xhtml: true },\r\n            acronym: { parents: ['simpleInline'], xhtml: true },\r\n            b: { parents: ['simpleInline'], xhtml: true },\r\n            big: { parents: ['simpleInline'], xhtml: true },\r\n            cite: { parents: ['simpleInline'], xhtml: true },\r\n            code: { parents: ['simpleInline'], xhtml: true },\r\n            dfn: { parents: ['simpleInline'], xhtml: true },\r\n            em: { parents: ['simpleInline'], xhtml: true },\r\n            i: { parents: ['simpleInline'], xhtml: true },\r\n            kbd: { parents: ['simpleInline'], xhtml: true },\r\n            q: { parents: ['simpleInline'], xhtml: true },\r\n            samp: { parents: ['simpleInline'], xhtml: true },\r\n            small: { parents: ['simpleInline'], xhtml: true },\r\n            span: { parents: ['simpleInline'], xhtml: true },\r\n            strong: { parents: ['simpleInline'], xhtml: true },\r\n            sub: { parents: ['simpleInline'], xhtml: true },\r\n            sup: { parents: ['simpleInline'], xhtml: true },\r\n            tt: { parents: ['simpleInline'], xhtml: true },\r\n            var: { parents: ['simpleInline'], xhtml: true },\r\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\r\n            address: { parents: ['atomicBlock'], xhtml: true },\r\n            h1: { parents: ['atomicBlock'], xhtml: true },\r\n            h2: { parents: ['atomicBlock'], xhtml: true },\r\n            h3: { parents: ['atomicBlock'], xhtml: true },\r\n            h4: { parents: ['atomicBlock'], xhtml: true },\r\n            h5: { parents: ['atomicBlock'], xhtml: true },\r\n            h6: { parents: ['atomicBlock'], xhtml: true },\r\n            p: { parents: ['atomicBlock'], xhtml: true },\r\n            pre: { parents: ['atomicBlock'], xhtml: true },\r\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\r\n            br: { parents: ['atomicInline'], xhtml: true },\r\n            //qti elements:\r\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\r\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\r\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\r\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\r\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\r\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\r\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\r\n            gap: { parents: ['inlineStatic'], qti: true },\r\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\r\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\r\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\r\n            templateElement: { parents: ['bodyElement'], qti: true },\r\n            templateBlock: {\r\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\r\n                contains: ['blockStatic'],\r\n                qti: true\r\n            },\r\n            templateInline: {\r\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\r\n                contains: ['inlineStatic'],\r\n                qti: true\r\n            },\r\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\r\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\r\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\r\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\r\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\r\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\r\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\r\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\r\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\r\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\r\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\r\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\r\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\r\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\r\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\r\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\r\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\r\n        },\r\n\r\n        cache: { containable: {}, children: {}, parents: {} },\r\n\r\n        getAllowedContainersElements(qtiClass, $container) {\r\n            const classes = QtiElements.getAllowedContainers(qtiClass);\r\n            let jqSelector = '';\r\n            for (let i in classes) {\r\n                if (!classes[i].qti) {\r\n                    //html element:\r\n                    jqSelector += `${classes[i]}, `;\r\n                }\r\n            }\r\n\r\n            if (jqSelector) {\r\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\r\n            }\r\n\r\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\r\n        },\r\n\r\n        getAllowedContainers(qtiClass) {\r\n            let ret;\r\n            if (QtiElements.cache.containable[qtiClass]) {\r\n                ret = QtiElements.cache.containable[qtiClass];\r\n            } else {\r\n                ret = [];\r\n                const parents = QtiElements.getParentClasses(qtiClass, true);\r\n                for (let aClass in QtiElements.classes) {\r\n                    const model = QtiElements.classes[aClass];\r\n                    if (model.contains) {\r\n                        const intersect = _.intersection(model.contains, parents);\r\n                        if (intersect.length) {\r\n                            if (!model.abstract) {\r\n                                ret.push(aClass);\r\n                            }\r\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\r\n                        }\r\n                    }\r\n                }\r\n                QtiElements.cache.containable[qtiClass] = ret;\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        getAllowedContents(qtiClass, recursive, checked) {\r\n            let ret = [];\r\n            checked = checked || {};\r\n\r\n            const model = QtiElements.classes[qtiClass];\r\n            if (model && model.contains) {\r\n                for (let i in model.contains) {\r\n                    const contain = model.contains[i];\r\n                    if (!checked[contain]) {\r\n                        checked[contain] = true;\r\n\r\n                        //qtiClass can contain everything defined as its contents\r\n                        ret.push(contain);\r\n\r\n                        //qtiClass can also contain subclass of its contents\r\n                        const children = QtiElements.getChildClasses(contain, true);\r\n                        for (let j in children) {\r\n                            const child = children[j];\r\n                            if (!checked[child]) {\r\n                                checked[child] = true;\r\n\r\n                                ret.push(child);\r\n\r\n                                //adding children allowed contents depends on the option \"recursive\"\r\n                                if (recursive) {\r\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\r\n                        if (recursive) {\r\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //qtiClass can contain all allowed contents of its parents:\r\n            const parents = QtiElements.getParentClasses(qtiClass, true);\r\n            for (let i in parents) {\r\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\r\n            }\r\n\r\n            return _.uniq(ret, false);\r\n        },\r\n\r\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\r\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\r\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\r\n        },\r\n\r\n        getParentClasses(qtiClass, recursive) {\r\n            let ret;\r\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\r\n                ret = QtiElements.cache.parents[qtiClass];\r\n            } else {\r\n                ret = [];\r\n                if (QtiElements.classes[qtiClass]) {\r\n                    ret = QtiElements.classes[qtiClass].parents;\r\n                    if (recursive) {\r\n                        for (let i in ret) {\r\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\r\n                        }\r\n                        ret = _.uniq(ret, false);\r\n                    }\r\n                }\r\n                QtiElements.cache.parents[qtiClass] = ret;\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        getChildClasses(qtiClass, recursive, type) {\r\n            let ret;\r\n            const cacheType = type ? type : 'all';\r\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\r\n                ret = QtiElements.cache.children[qtiClass][cacheType];\r\n            } else {\r\n                ret = [];\r\n                for (let aClass in QtiElements.classes) {\r\n                    const model = QtiElements.classes[aClass];\r\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\r\n                        if (type) {\r\n                            if (model[type]) {\r\n                                ret.push(aClass);\r\n                            }\r\n                        } else {\r\n                            ret.push(aClass);\r\n                        }\r\n                        if (recursive) {\r\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\r\n                        }\r\n                    }\r\n                }\r\n                if (!QtiElements.cache.children[qtiClass]) {\r\n                    QtiElements.cache.children[qtiClass] = {};\r\n                }\r\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        isBlock(qtiClass) {\r\n            return QtiElements.is(qtiClass, 'block');\r\n        },\r\n\r\n        isInline(qtiClass) {\r\n            return QtiElements.is(qtiClass, 'inline');\r\n        },\r\n\r\n        is(qtiClass, topClass) {\r\n            if (qtiClass === topClass) {\r\n                return true;\r\n            } else {\r\n                const parents = QtiElements.getParentClasses(qtiClass, true);\r\n                return _.indexOf(parents, topClass) >= 0;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check wether an element is visible, using the feature viibility service\r\n         * @param {string} qtiClass - see the list of available classes\r\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\r\n         */\r\n        isVisible(qtiClass) {\r\n            if (this.is(qtiClass, 'customInteraction')) {\r\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\r\n            }\r\n            if (this.is(qtiClass, 'interaction')) {\r\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Get the list of available elements for the authoring side\r\n         * The list of those element is statically defined, but we filter out elements that should be visible\r\n         * @returns {Object} the available elements\r\n         */\r\n        getAvailableAuthoringElements() {\r\n            const tagTitles = {\r\n                commonInteractions: __('Common Interactions'),\r\n                inlineInteractions: __('Inline Interactions'),\r\n                graphicInteractions: __('Graphic Interactions')\r\n            };\r\n\r\n            const authoringElements = {\r\n                choiceInteraction: {\r\n                    label: __('Choice Interaction'),\r\n                    description: __(\r\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\r\n                    ),\r\n                    icon: 'icon-choice',\r\n                    short: __('Choice'),\r\n                    qtiClass: 'choiceInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'mcq'],\r\n                    group: 'common-interactions'\r\n                },\r\n                orderInteraction: {\r\n                    label: __('Order Interaction'),\r\n                    icon: 'icon-order',\r\n                    description: __('Arrange a list of choices in the correct order.'),\r\n                    short: __('Order'),\r\n                    qtiClass: 'orderInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'ordering'],\r\n                    group: 'common-interactions'\r\n                },\r\n                associateInteraction: {\r\n                    label: __('Associate Interaction'),\r\n                    icon: 'icon-associate',\r\n                    description: __('Create pair(s) from a series of choices.'),\r\n                    short: __('Associate'),\r\n                    qtiClass: 'associateInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'association'],\r\n                    group: 'common-interactions'\r\n                },\r\n                matchInteraction: {\r\n                    label: __('Match Interaction'),\r\n                    icon: 'icon-match',\r\n                    description: __(\r\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\r\n                    ),\r\n                    short: __('Match'),\r\n                    qtiClass: 'matchInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'association'],\r\n                    group: 'common-interactions'\r\n                },\r\n                hottextInteraction: {\r\n                    label: __('Hottext Interaction'),\r\n                    icon: 'icon-hottext',\r\n                    description: __('Select one or more text parts (hottext) within a text.'),\r\n                    short: __('Hottext'),\r\n                    qtiClass: 'hottextInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'text'],\r\n                    group: 'common-interactions'\r\n                },\r\n                gapMatchInteraction: {\r\n                    label: __('Gap Match Interaction'),\r\n                    icon: 'icon-gap-match',\r\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\r\n                    short: __('Gap Match'),\r\n                    qtiClass: 'gapMatchInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\r\n                    group: 'common-interactions'\r\n                },\r\n                sliderInteraction: {\r\n                    label: __('Slider Interaction'),\r\n                    icon: 'icon-slider',\r\n                    description: __('Select a value within a numerical range.'),\r\n                    short: __('Slider'),\r\n                    qtiClass: 'sliderInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'special'],\r\n                    group: 'common-interactions'\r\n                },\r\n                extendedTextInteraction: {\r\n                    label: __('Extended Text Interaction'),\r\n                    icon: 'icon-extended-text',\r\n                    description: __(\r\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\r\n                    ),\r\n                    short: __('Extended Text'),\r\n                    qtiClass: 'extendedTextInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'text'],\r\n                    group: 'common-interactions'\r\n                },\r\n                uploadInteraction: {\r\n                    label: __('File Upload Interaction'),\r\n                    icon: 'icon-upload',\r\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\r\n                    short: __('File Upload'),\r\n                    qtiClass: 'uploadInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'special'],\r\n                    group: 'common-interactions'\r\n                },\r\n                mediaInteraction: {\r\n                    label: __('Media Interaction'),\r\n                    icon: 'icon-media',\r\n                    description: __(\r\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\r\n                    ),\r\n                    short: __('Media'),\r\n                    qtiClass: 'mediaInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'media'],\r\n                    group: 'common-interactions'\r\n                },\r\n                _container: {\r\n                    label: __('Text Block'),\r\n                    icon: 'icon-font',\r\n                    description: __(\r\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\r\n                    ),\r\n                    short: __('Block'),\r\n                    qtiClass: '_container',\r\n                    tags: [tagTitles.inlineInteractions, 'text'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                inlineChoiceInteraction: {\r\n                    label: __('Inline Choice Interaction'),\r\n                    icon: 'icon-inline-choice',\r\n                    description: __('Select a choice from a drop-down list.'),\r\n                    short: __('Inline Choice'),\r\n                    qtiClass: 'inlineChoiceInteraction',\r\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                textEntryInteraction: {\r\n                    label: __('Text Entry Interaction'),\r\n                    icon: 'icon-text-entry',\r\n                    description: __(\r\n                        'Collect open-ended information in a short text input (strings or numeric values).'\r\n                    ),\r\n                    short: __('Text Entry'),\r\n                    qtiClass: 'textEntryInteraction',\r\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                endAttemptInteraction: {\r\n                    label: __('End Attempt Interaction'),\r\n                    icon: 'icon-end-attempt',\r\n                    description: __('Trigger the end of the item attempt.'),\r\n                    short: __('End Attempt'),\r\n                    qtiClass: 'endAttemptInteraction',\r\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                hotspotInteraction: {\r\n                    label: __('Hotspot Interaction'),\r\n                    icon: 'icon-hotspot',\r\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\r\n                    short: __('Hotspot'),\r\n                    qtiClass: 'hotspotInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                graphicOrderInteraction: {\r\n                    label: __('Graphic Order Interaction'),\r\n                    icon: 'icon-graphic-order',\r\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\r\n                    short: __('Order'),\r\n                    qtiClass: 'graphicOrderInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                graphicAssociateInteraction: {\r\n                    label: __('Graphic Associate Interaction'),\r\n                    icon: 'icon-graphic-associate',\r\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\r\n                    short: __('Associate'),\r\n                    qtiClass: 'graphicAssociateInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'association'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                graphicGapMatchInteraction: {\r\n                    label: __('Graphic Gap Match Interaction'),\r\n                    icon: 'icon-graphic-gap',\r\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\r\n                    short: __('Gap Match'),\r\n                    qtiClass: 'graphicGapMatchInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'association'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                selectPointInteraction: {\r\n                    label: __('Select Point Interaction'),\r\n                    icon: 'icon-select-point',\r\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\r\n                    short: __('Select Point'),\r\n                    qtiClass: 'selectPointInteraction',\r\n                    tags: [tagTitles.graphicInteractions],\r\n                    group: 'graphic-interactions'\r\n                }\r\n            };\r\n\r\n            //filter out hidden elements\r\n            const availableElements = {};\r\n            for (const [elementId, element] of Object.entries(authoringElements)) {\r\n                if (this.isVisible(elementId)) {\r\n                    availableElements[elementId] = element;\r\n                }\r\n            }\r\n            return availableElements;\r\n        }\r\n    };\r\n\r\n    return QtiElements;\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\r\n    'lodash',\r\n    'i18n',\r\n    'taoQtiItem/portableElementRegistry/factory/factory',\r\n    'taoQtiItem/qtiCreator/helper/qtiElements'\r\n], function (_, __, portableElementRegistry, qtiElements) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Create a ney interaction registry instance\r\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function customInteractionRegistry() {\r\n        return portableElementRegistry({\r\n            /**\r\n             * Get the authoring information for a given custom interaction\r\n             * @param {string} typeIdentifier - the interaction type identifier\r\n             * @param {Object} [options]\r\n             * @param {string|number} [options.version] - the interaction version\r\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\r\n             * @returns {Object} the authoring info\r\n             */\r\n            getAuthoringData(typeIdentifier, options = {}) {\r\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\r\n                const pciModel = this.get(typeIdentifier, options.version);\r\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\r\n                if (\r\n                    pciModel &&\r\n                    pciModel.creator &&\r\n                    pciModel.creator.hook &&\r\n                    pciModel.creator.icon &&\r\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\r\n                ) {\r\n                    return {\r\n                        label: pciModel.label, //currently no translation available\r\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\r\n                        short: pciModel.short,\r\n                        description: pciModel.description,\r\n                        qtiClass, //custom interaction is block type\r\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\r\n                        group: 'custom-interactions'\r\n                    };\r\n                }\r\n            }\r\n        }).on('creatorsloaded', function () {\r\n            const creators = this.getLatestCreators();\r\n            _.forEach(creators, function (creator, typeIdentifier) {\r\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\r\n                    parents: ['customInteraction'],\r\n                    qti: true\r\n                };\r\n            });\r\n        });\r\n    };\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of ciRegistry\r\n    var registry = ciRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\r\n    'lodash',\r\n    'taoQtiItem/portableElementRegistry/factory/factory'\r\n], function (_, portableElementRegistry){\r\n    'use strict';\r\n\r\n    /**\r\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function infoControlRegistry(){\r\n        return portableElementRegistry();\r\n    }\r\n\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of icRegistry\r\n    var registry = icRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\r\n    'taoQtiItem/portableElementRegistry/ciRegistry',\r\n    'taoQtiItem/portableElementRegistry/icRegistry'\r\n], function (ciRegistry, icRegistry) {\r\n    'use strict';\r\n\r\n    function getBaseUrlByIdentifier(typeIdentifier) {\r\n        if (ciRegistry.get(typeIdentifier)) {\r\n            return ciRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        if (icRegistry.get(typeIdentifier)) {\r\n            return icRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        return typeIdentifier;\r\n    }\r\n\r\n    //strategy to resolve portable info control and portable interactions paths.\r\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\r\n    return {\r\n        name: 'portableElementLocation',\r\n        handle: function handlePortableElementLocation(url) {\r\n\r\n            if (url.file === url.path) {\r\n                return getBaseUrlByIdentifier(url.file);\r\n            } else if (url.source === url.relative) {\r\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\r\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\r\n                    if (runtimeLocation) {\r\n                        return runtimeLocation + '/' + relPath;\r\n                    }\r\n                    return fullmatch;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var itemThemes = themes.get('items');\r\n    var moduleConfig = module.config();\r\n\r\n    //Create asset manager stack\r\n    var assetManager = assetManagerFactory(\r\n        [\r\n            {\r\n                name: 'theme',\r\n                handle: function handleTheme(url) {\r\n                    if (\r\n                        itemThemes &&\r\n                        url.path &&\r\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\r\n                    ) {\r\n                        return context.root_url + url.toString();\r\n                    }\r\n                }\r\n            },\r\n            assetStrategies.taomedia,\r\n            assetStrategies.external,\r\n            assetStrategies.base64,\r\n            assetStrategies.itemCssNoCache,\r\n            assetStrategies.baseUrl,\r\n            portableAssetStrategy\r\n        ],\r\n        { baseUrl: '' }\r\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\r\n\r\n    //renderers locations\r\n    var locations = {\r\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\r\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\r\n        _simpleFeedbackRule: false,\r\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\r\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\r\n        outcomeDeclaration: false,\r\n        responseDeclaration: false,\r\n        responseProcessing: false,\r\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\r\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\r\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\r\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\r\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\r\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\r\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\r\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\r\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\r\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\r\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\r\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\r\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\r\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\r\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\r\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\r\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\r\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\r\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\r\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\r\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\r\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\r\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\r\n        'simpleAssociableChoice.matchInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\r\n        'simpleAssociableChoice.associateInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\r\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\r\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\r\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\r\n        hotspotChoice: false,\r\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\r\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\r\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\r\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\r\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\r\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\r\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\r\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\r\n        associableHotspot: false,\r\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\r\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\r\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\r\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\r\n    };\r\n\r\n    var config = {\r\n        name: 'commonRenderer',\r\n        locations: locations,\r\n        options: {\r\n            assetManager: assetManager,\r\n            themes: itemThemes,\r\n            enableDragAndDrop: {\r\n                associate: !!moduleConfig.associateDragAndDrop,\r\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\r\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\r\n                order: !!moduleConfig.orderDragAndDrop\r\n            },\r\n            messages: moduleConfig.messages\r\n        }\r\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\r\n\t * This program is free software; you can redistribute it and/or\r\n\t * modify it under the terms of the GNU General Public License\r\n\t * as published by the Free Software Foundation; under version 2\r\n\t * of the License (non-upgradable).\r\n\t *\r\n\t * This program is distributed in the hope that it will be useful,\r\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\t * GNU General Public License for more details.\r\n\t *\r\n\t * You should have received a copy of the GNU General Public License\r\n\t * along with this program; if not, write to the Free Software\r\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n\t *\r\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n\t */\r\n\r\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    var userModules = {\r\n        /**\r\n         * Load user modules defined in the module config\r\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\r\n         * @returns {Promise}\r\n         */\r\n        load: function load(userModules) {\r\n            var config = module.config();\r\n\r\n            if (!userModules || !_.isArray(userModules)) {\r\n                if (config && config.userModules && _.isArray(config.userModules)) {\r\n                    userModules = config.userModules;\r\n                } else {\r\n                    userModules = [];\r\n                }\r\n            }\r\n            if(!userModules.length){\r\n                return Promise.resolve();\r\n            }\r\n            return new Promise(function(resolve, reject) {\r\n                window.require(userModules, function() {\r\n                    _.forEach(arguments, function(dependency) {\r\n                        if (dependency && _.isFunction(dependency.exec)) {\r\n                            dependency.exec();\r\n                        }\r\n                    });\r\n                    resolve();\r\n                }, function(err) {\r\n                    reject(err.message);\r\n                });\r\n            });\r\n        }\r\n    };\n\n    return userModules;\n\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\ndefine('taoQtiItem/runtime/qtiBootstrap',[\r\n    'jquery',\r\n    'lodash',\r\n    'module',\r\n    'taoQtiItem/qtiRunner/core/QtiRunner',\r\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\r\n    'iframeNotifier',\r\n    'core/history',\r\n    'taoQtiItem/runner/provider/manager/userModules'\r\n], function($, _, module, QtiRunner, Renderer, iframeNotifier, history, userModules){\r\n    'use strict';\r\n\r\n    //fix backspace going back into the history\r\n    history.fixBrokenBrowsers();\r\n\r\n    /**\r\n     * The bootstrap is used to set up a QTI item at runtime. It connects to the itemApi.\r\n     *\r\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n     * @exports taoQtiItem/runtime/qtiBootstrap\r\n     *\r\n     * @param {Object} runnerContext - the item context\r\n     */\r\n    return function bootstrap (runnerContext){\r\n\r\n        //reconnect to global itemApi function\r\n        window.onItemApiReady = function onItemApiReady(itemApi) {\r\n            var qtiRunner = new QtiRunner();\r\n            var coreItemData = runnerContext.itemData;\r\n            var variableElementsData = _.merge(runnerContext.variableElements, itemApi.params.contentVariables || {});\r\n\r\n            var renderer = new Renderer();\r\n\r\n            // Makes the runner interface available from outside the frame\r\n            // for preview.\r\n            window.qtiRunner = qtiRunner;\r\n\r\n            qtiRunner.setItemApi(itemApi);\r\n            qtiRunner.setRenderer(renderer);\r\n\r\n            qtiRunner.loadItemData(coreItemData, function() {\r\n\r\n                qtiRunner.loadElements(variableElementsData, function() {\r\n\r\n                    qtiRunner.renderItem(undefined, function() {\r\n\r\n                        //userModules loading\r\n                        //we use any user modules bound to this module configuration instead of the ones bound to the new test runner\r\n                        var userModulesOverride;\r\n                        var config = module.config();\r\n                        if (config && config.userModules && _.isArray(config.userModules) && config.userModules.length > 0) {\r\n                            userModulesOverride = config.userModules;\r\n                        }\r\n                        userModules.load(userModulesOverride)\r\n                            .then(function() {\r\n\r\n                                //exec user scripts\r\n                                if (_.isArray(runnerContext.userScripts)) {\r\n                                    require(runnerContext.userScripts, function() {\r\n                                        _.forEach(arguments, function(dependency) {\r\n                                            if (_.isFunction(dependency.exec)) {\r\n                                                dependency.exec.call(null, runnerContext.userVars);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n\r\n                                iframeNotifier.parent('itemloaded');\r\n\r\n                                //IE9/10 loose the iframe focus, so we force getting it back.\r\n                                _.defer(function(){\r\n                                    window.focus();\r\n                                });\r\n                            })\r\n                            .catch(function(err) {\r\n                                throw new Error('Error in user modules : ' + err.message);\r\n                            });\r\n\r\n                    });\r\n                });\r\n            });\r\n        };\r\n\r\n        //if the item is longer to load,\r\n        _.defer(function(){\r\n           //tell the parent to connect the item api\r\n           iframeNotifier.parent('itemready');\r\n       });\r\n\r\n    };\r\n});\r\n\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\ndefine('taoQtiItem/runtime/qtiLoader',[\r\n    'taoQtiItem/runtime/qtiBootstrap',\r\n    'css!taoCss/tao-main-style'\r\n], function(qtiBootstrap){\r\n    'use strict';\r\n\r\n    return {\r\n        start : function start(){\r\n            //the context is set into the template and bound to the tao namespace in global scope\r\n            var runnerContext = window.tao.qtiRunnerContext;\r\n            qtiBootstrap(runnerContext);\r\n        }\r\n    };\r\n});\r\n\n","\ndefine(\"taoQtiItem\\loader\\qtiLoader.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\"]);\n"]}