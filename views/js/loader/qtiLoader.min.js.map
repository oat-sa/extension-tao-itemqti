{"version":3,"sources":["loader/bootstrap.js","taoQtiItem/qtiItem/core/qtiClasses.js","taoQtiItem/qtiItem/helper/util.js","taoQtiItem/qtiItem/helper/rendererConfig.js","taoQtiItem/qtiItem/core/Element.js","taoQtiItem/qtiItem/helper/xmlNsHandler.js","taoQtiItem/qtiItem/helper/responseRules.js","taoQtiItem/qtiItem/helper/response.js","taoQtiItem/qtiItem/helper/itemScore.js","taoQtiItem/qtiItem/core/Loader.js","taoQtiItem/qtiItem/helper/pci.js","taoQtiItem/qtiItem/helper/container.js","taoQtiItem/qtiRunner/modalFeedback/inlineRenderer.js","taoQtiItem/qtiRunner/modalFeedback/modalRenderer.js","taoQtiItem/qtiRunner/core/QtiRunner.js","taoQtiItem/qtiItem/helper/interactionHelper.js","taoQtiItem/qtiRunner/core/Renderer.js","taoQtiItem/portableElementRegistry/factory/factory.js","taoQtiItem/qtiCreator/helper/qtiElements.js","taoQtiItem/portableElementRegistry/factory/ciRegistry.js","taoQtiItem/portableElementRegistry/ciRegistry.js","taoQtiItem/portableElementRegistry/factory/icRegistry.js","taoQtiItem/portableElementRegistry/icRegistry.js","taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy.js","taoQtiItem/qtiCommonRenderer/renderers/config.js","taoQtiItem/qtiCommonRenderer/renderers/Renderer.js","taoQtiItem/runner/provider/manager/userModules.js","taoQtiItem/runtime/qtiBootstrap.js","taoQtiItem/runtime/qtiLoader.js","module-create.js","C:/work/test-dev2/package-tao/tao/views/build/config-wrap-end-default.js"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Bootstrap the app, start the entry controller\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\n(function(){\r\n    'use strict';\r\n\r\n\r\n\r\n    var loaderScript = document.getElementById('amd-loader');\r\n    var configUrl = loaderScript.getAttribute('data-config');\r\n    var bundle  = loaderScript.getAttribute('data-bundle');\r\n\r\n    var loadController = function loadController(){\r\n        var controllerOptions = {};\r\n        var controllerPath = loaderScript.getAttribute('data-controller');\r\n        var params = loaderScript.getAttribute('data-params');\r\n        try{\r\n            controllerOptions = JSON.parse(params);\r\n        } catch(err){\r\n            controllerOptions = {};\r\n        }\r\n        window.require([controllerPath], function(controller) {\r\n            var startController = function startController(){\r\n                if(!window.started){\r\n                    window.started = true;\r\n                    controller.start(controllerOptions);\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', startController, false);\r\n            if (document.readyState === 'complete') {\r\n                startController();\r\n            }\r\n        });\r\n    };\r\n\r\n    //always start to load the config\r\n    window.require([configUrl], function() {\r\n\r\n        //define the global loading mechanism\r\n        if(!window.loadBundles){\r\n            //keep tracl of loaded bundles, even if require does it,\r\n            //this prevent some unecessary cycles\r\n            window.loaded = {};\r\n\r\n            /**\r\n             * Loading entry point for inter bundle dependency,\r\n             * always take the bundles from the params and window.bundles\r\n             * @param {String[]} [bundles] - an optional list of bundle to load\r\n             */\r\n            window.loadBundles = function loadBundles(bundles){\r\n                bundles = bundles || [];\r\n                bundles = bundles.concat(window.bundles)\r\n                bundles = bundles.filter( function(item, index){\r\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\r\n                });\r\n                require(bundles, function(){\r\n                    bundles.forEach( function( item ) {\r\n                        window.loaded[item] = true;\r\n                    });\r\n                    loadController();\r\n                });\r\n            }\r\n        }\r\n\r\n        if(bundle || (window.bundles && window.bundles.length)) {\r\n            window.loadBundles([bundle]);\r\n        } else {\r\n            loadController();\r\n        }\r\n    });\r\n})();\r\n\ndefine(\"loader/bootstrap\", function(){});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\r\n        _container: 'taoQtiItem/qtiItem/core/Container',\r\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\r\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\r\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\r\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\r\n        math: 'taoQtiItem/qtiItem/core/Math',\r\n        img: 'taoQtiItem/qtiItem/core/Img',\r\n        object: 'taoQtiItem/qtiItem/core/Object',\r\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\r\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\r\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\r\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\r\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\r\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\r\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\r\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\r\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\r\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\r\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\r\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\r\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\r\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\r\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\r\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\r\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\r\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\r\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\r\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\r\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\r\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\r\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\r\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\r\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\r\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\r\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\r\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\r\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\r\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\r\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\r\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\r\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\r\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\r\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\r\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\r\n        include: 'taoQtiItem/qtiItem/core/Include',\r\n        table: 'taoQtiItem/qtiItem/core/Table',\r\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\r\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\r\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    var util = {\r\n        buildSerial: function buildSerial(prefix) {\r\n            var id = prefix || '';\r\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n            for (var i = 0; i < 22; i++) {\r\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n            }\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an id for a Qti element (the generation is different from identifier)\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildId: function buildId(item, prefix) {\r\n            var id;\r\n            var usedIds;\r\n            var i = 1;\r\n            var suffix = '';\r\n            var exists = false;\r\n\r\n            if (!item) {\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            usedIds = item.getUsedIds();\r\n\r\n            do {\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if (_.contains(usedIds, id)) {\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while (exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Generates an identifier for a Qti element\r\n         * @param {Object} item - the element related item\r\n         * @param {String} prefix - identifier prefix\r\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\r\n         * @returns {String} the identifier\r\n         * @throws {TypeError} if there is no item\r\n         */\r\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\r\n            var id;\r\n            var usedIds;\r\n            var suffix = '';\r\n            var i = 1;\r\n            var exists = false;\r\n\r\n            if (!item) {\r\n                throw new TypeError('A item is required to generate a unique identifier');\r\n            }\r\n\r\n            if (!prefix) {\r\n                throw new TypeError('Prefix is required to build an identifier');\r\n            }\r\n\r\n            usedIds = item.getUsedIdentifiers();\r\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\r\n\r\n            if (prefix) {\r\n                prefix = prefix\r\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\r\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\r\n                    .replace(/(_)+/gi, '_');\r\n                if (useSuffix) {\r\n                    suffix = '_' + i;\r\n                }\r\n            }\r\n\r\n            do {\r\n                exists = false;\r\n                id = prefix + suffix;\r\n                if (usedIds[id]) {\r\n                    exists = true;\r\n                    suffix = '_' + i;\r\n                    i++;\r\n                }\r\n            } while (exists);\r\n\r\n            return id;\r\n        },\r\n\r\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\r\n            var found = null;\r\n\r\n            if (_.isString(collectionNames)) {\r\n                collectionNames = [collectionNames];\r\n            }\r\n\r\n            if (_.isArray(collectionNames)) {\r\n                _.each(collectionNames, function(collectionName) {\r\n                    //get collection to search in (resolving case like interaction.choices.0\r\n                    var collection = element;\r\n                    _.each(collectionName.split('.'), function(nameToken) {\r\n                        collection = collection[nameToken];\r\n                    });\r\n                    var elt = collection[searchedSerial];\r\n\r\n                    if (elt) {\r\n                        found = { parent: element, element: elt };\r\n                        return false; //break the each loop\r\n                    }\r\n\r\n                    //search inside each elements:\r\n                    _.each(collection, function(elt) {\r\n                        if (_.isFunction(elt.find)) {\r\n                            found = elt.find(searchedSerial);\r\n                            if (found) {\r\n                                return false; //break the each loop\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (found) {\r\n                        return false; //break the each loop\r\n                    }\r\n                });\r\n            } else {\r\n                throw new Error('invalid argument : collectionNames must be an array or a string');\r\n            }\r\n\r\n            return found;\r\n        },\r\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\r\n            if (ns) {\r\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4) {\r\n                    if ($2.indexOf(':') > 0) {\r\n                        return $0;\r\n                    }\r\n                    $1 = $1 || '';\r\n                    $3 = $3 || '';\r\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\r\n                });\r\n                return markup;\r\n            }\r\n            return markup;\r\n        },\r\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\r\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\r\n        },\r\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\r\n            var namespaces = [];\r\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node) {\r\n                namespaces.push(ns);\r\n                return '<' + slash + node + '>';\r\n            });\r\n            return _.uniq(namespaces);\r\n        }\r\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\r\n\r\n    rendererConfigHelper.getOptionsFromArguments = function(args) {\r\n        var options = {\r\n            data: {},\r\n            placeholder: null,\r\n            subclass: '',\r\n            renderer: null\r\n        };\r\n\r\n        _.each(args, function(arg) {\r\n            if (arg) {\r\n                if (arg.isRenderer) {\r\n                    options.renderer = arg;\r\n                } else if (arg instanceof $ && arg.length) {\r\n                    options.placeholder = arg;\r\n                } else if (_.isString(arg)) {\r\n                    options.subclass = arg;\r\n                } else if (_.isPlainObject(arg)) {\r\n                    options.data = arg;\r\n                } else {\r\n                    console.log('invalid arg', arg, args);\r\n                }\r\n            }\r\n        });\r\n\r\n        return options;\r\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\r\n     *\r\n     */\r\n\r\n    var _instances = {};\r\n\r\n    /**\r\n     * Create a logger\r\n     */\r\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\r\n\r\n    var Element = Class.extend({\r\n        qtiClass: '',\r\n        serial: '',\r\n        rootElement: null,\r\n        init: function(serial, attributes) {\r\n            //init own attributes\r\n            this.attributes = {};\r\n\r\n            //system properties, for item creator internal use only\r\n            this.metaData = {};\r\n\r\n            //init call in the format init(attributes)\r\n            if (typeof serial === 'object') {\r\n                attributes = serial;\r\n                serial = '';\r\n            }\r\n\r\n            if (!serial) {\r\n                serial = util.buildSerial(this.qtiClass + '_');\r\n            }\r\n\r\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\r\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\r\n            }\r\n\r\n            if (!_instances[serial]) {\r\n                _instances[serial] = this;\r\n                this.serial = serial;\r\n                this.setAttributes(attributes || {});\r\n            } else {\r\n                throw 'a QTI Element with the same serial already exists ' + serial;\r\n            }\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                this.initContainer(arguments[2] || '');\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                this.initObject();\r\n            }\r\n        },\r\n        is: function(qtiClass) {\r\n            return qtiClass === this.qtiClass;\r\n        },\r\n        placeholder: function() {\r\n            return '{{' + this.serial + '}}';\r\n        },\r\n        getSerial: function() {\r\n            return this.serial;\r\n        },\r\n        getUsedIdentifiers: function() {\r\n            var usedIds = {};\r\n            var elts = this.getComposingElements();\r\n            for (var i in elts) {\r\n                var elt = elts[i];\r\n                var id = elt.attr('identifier');\r\n                if (id) {\r\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\r\n                    usedIds[id] = elt;\r\n                }\r\n            }\r\n            return usedIds;\r\n        },\r\n\r\n        /**\r\n         * Get the ids in use. (id is different from identifier)\r\n         * @returns {Array} of the ids in use\r\n         */\r\n        getUsedIds: function getUsedIds() {\r\n            var usedIds = [];\r\n            _.forEach(this.getComposingElements(), function(elt) {\r\n                var id = elt.attr('id');\r\n                if (id && !_.contains(usedIds, id)) {\r\n                    usedIds.push(id);\r\n                }\r\n            });\r\n            return usedIds;\r\n        },\r\n\r\n        attr: function(name, value) {\r\n            if (name) {\r\n                if (value !== undefined) {\r\n                    this.attributes[name] = value;\r\n                } else {\r\n                    if (typeof name === 'object') {\r\n                        for (var prop in name) {\r\n                            this.attr(prop, name[prop]);\r\n                        }\r\n                    } else if (typeof name === 'string') {\r\n                        if (this.attributes[name] === undefined) {\r\n                            return undefined;\r\n                        } else {\r\n                            return this.attributes[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        data: function(name, value) {\r\n            if (name) {\r\n                if (value !== undefined) {\r\n                    this.metaData[name] = value;\r\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\r\n                } else {\r\n                    if (typeof name === 'object') {\r\n                        for (var prop in name) {\r\n                            this.data(prop, name[prop]);\r\n                        }\r\n                    } else if (typeof name === 'string') {\r\n                        if (this.metaData[name] === undefined) {\r\n                            return undefined;\r\n                        } else {\r\n                            return this.metaData[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeData: function(name) {\r\n            delete this.metaData[name];\r\n            return this;\r\n        },\r\n        removeAttr: function(name) {\r\n            return this.removeAttributes(name);\r\n        },\r\n        setAttributes: function(attributes) {\r\n            if (!_.isPlainObject(attributes)) {\r\n                logger.warn('attributes should be a plain object');\r\n            }\r\n            this.attributes = attributes;\r\n            return this;\r\n        },\r\n        getAttributes: function() {\r\n            return _.clone(this.attributes);\r\n        },\r\n        removeAttributes: function(attrNames) {\r\n            if (typeof attrNames === 'string') {\r\n                attrNames = [attrNames];\r\n            }\r\n            for (var i in attrNames) {\r\n                delete this.attributes[attrNames[i]];\r\n            }\r\n            return this;\r\n        },\r\n        getComposingElements: function() {\r\n            var elts = {};\r\n            function append(element) {\r\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\r\n                elts = _.extend(elts, element.getComposingElements());\r\n            }\r\n            if (typeof this.initContainer === 'function') {\r\n                append(this.getBody());\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                append(this.getObject());\r\n            }\r\n            _.each(this.metaData, function(v) {\r\n                if (Element.isA(v, '_container')) {\r\n                    append(v);\r\n                } else if (_.isArray(v)) {\r\n                    _.each(v, function(v) {\r\n                        if (Element.isA(v, '_container')) {\r\n                            append(v);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return elts;\r\n        },\r\n        getUsedClasses: function() {\r\n            var ret = [this.qtiClass],\r\n                composingElts = this.getComposingElements();\r\n\r\n            _.each(composingElts, function(elt) {\r\n                ret.push(elt.qtiClass);\r\n            });\r\n\r\n            return _.uniq(ret);\r\n        },\r\n        find: function(serial) {\r\n            var found = null;\r\n            var object, body;\r\n\r\n            if (typeof this.initObject === 'function') {\r\n                object = this.getObject();\r\n                if (object.serial === serial) {\r\n                    found = { parent: this, element: object, location: 'object' };\r\n                }\r\n            }\r\n\r\n            if (!found && typeof this.initContainer === 'function') {\r\n                body = this.getBody();\r\n                if (body.serial === serial) {\r\n                    found = { parent: this, element: body, location: 'body' };\r\n                } else {\r\n                    found = this.getBody().find(serial, this);\r\n                }\r\n            }\r\n\r\n            return found;\r\n        },\r\n        parent: function() {\r\n            var item = this.getRootElement();\r\n            if (item) {\r\n                var found = item.find(this.getSerial());\r\n                if (found) {\r\n                    return found.parent;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        /**\r\n         * @deprecated - use setRootElement() instead\r\n         */\r\n        setRelatedItem: function(item) {\r\n            logger.warn('Deprecated use of setRelatedItem()');\r\n            this.setRootElement(item);\r\n        },\r\n        setRootElement: function(item) {\r\n            var composingElts, i;\r\n\r\n            if (Element.isA(item, 'assessmentItem')) {\r\n                this.rootElement = item;\r\n                composingElts = this.getComposingElements();\r\n                for (i in composingElts) {\r\n                    composingElts[i].setRootElement(item);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @deprecated - use getRootElement() instead\r\n         */\r\n        getRelatedItem: function() {\r\n            logger.warn('Deprecated use of getRelatedItem()');\r\n            return this.getRootElement();\r\n        },\r\n        getRootElement: function() {\r\n            var ret = null;\r\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\r\n                ret = this.rootElement;\r\n            }\r\n            return ret;\r\n        },\r\n        setRenderer: function(renderer) {\r\n            if (renderer && renderer.isRenderer) {\r\n                this.renderer = renderer;\r\n                var elts = this.getComposingElements();\r\n                for (var serial in elts) {\r\n                    elts[serial].setRenderer(renderer);\r\n                }\r\n            } else {\r\n                throw 'invalid qti rendering engine';\r\n            }\r\n        },\r\n        getRenderer: function() {\r\n            return this.renderer;\r\n        },\r\n        /**\r\n         * Render the element. Arguments are all optional and can be given in any order.\r\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\r\n         * @param {Renderer} renderer - specify which renderer to use\r\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\r\n         * @param {Object} data - template data for the rendering\r\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\r\n         * @returns {String} - the rendered element as an HTML string\r\n         */\r\n        render: function render() {\r\n            var args = rendererConfig.getOptionsFromArguments(arguments);\r\n            var _renderer = args.renderer || this.getRenderer();\r\n            var rendering;\r\n\r\n            var tplData = {},\r\n                defaultData = {\r\n                    tag: this.qtiClass,\r\n                    serial: this.serial,\r\n                    attributes: this.getAttributes()\r\n                };\r\n\r\n            if (!_renderer) {\r\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\r\n            }\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                defaultData.body = this.getBody().render(args.renderer);\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                defaultData.object = {\r\n                    attributes: this.object.getAttributes()\r\n                };\r\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\r\n            }\r\n\r\n            tplData = _.merge(defaultData, args.data || {});\r\n            tplData = _renderer.getData(this, tplData, args.subclass);\r\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\r\n            if (args.placeholder) {\r\n                args.placeholder.replaceWith(rendering);\r\n            }\r\n\r\n            return rendering;\r\n        },\r\n        postRender: function(data, altClassName, renderer) {\r\n            var postRenderers = [];\r\n            var _renderer = renderer || this.getRenderer();\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                //allow body to have a different renderer if it has its own renderer set\r\n                postRenderers = this.getBody().postRender(data, '', renderer);\r\n            }\r\n\r\n            if (_renderer) {\r\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\r\n            } else {\r\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n\r\n            return _.compact(postRenderers);\r\n        },\r\n        getContainer: function($scope, subclass) {\r\n            var renderer = this.getRenderer();\r\n            if (renderer) {\r\n                return renderer.getContainer(this, $scope, subclass);\r\n            } else {\r\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\r\n            }\r\n        },\r\n        toArray: function() {\r\n            var arr = {\r\n                serial: this.serial,\r\n                type: this.qtiClass,\r\n                attributes: this.getAttributes()\r\n            };\r\n\r\n            if (typeof this.initContainer === 'function') {\r\n                arr.body = this.getBody().toArray();\r\n            }\r\n            if (typeof this.initObject === 'function') {\r\n                arr.object = this.object.toArray();\r\n            }\r\n\r\n            return arr;\r\n        },\r\n        isEmpty: function() {\r\n            //tells whether the element should be considered empty or not, from the rendering point of view\r\n            return false;\r\n        },\r\n        addClass: function(className) {\r\n            var clazz = this.attr('class') || '';\r\n            if (!_containClass(clazz, className)) {\r\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\r\n            }\r\n        },\r\n        hasClass: function(className) {\r\n            return _containClass(this.attr('class'), className);\r\n        },\r\n        removeClass: function(className) {\r\n            var clazz = this.attr('class') || '';\r\n            if (clazz) {\r\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\r\n                clazz = clazz.replace(regex, ' ').trim();\r\n\r\n                if (clazz) {\r\n                    this.attr('class', clazz);\r\n                } else {\r\n                    this.removeAttr('class');\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Add or remove class. Setting the optional state will force addition/removal.\r\n         * State is here to keep the jQuery syntax\r\n         *\r\n         * @param {String} className\r\n         * @param {Boolean} [state]\r\n         */\r\n        toggleClass: function(className, state) {\r\n            if (typeof state === 'boolean') {\r\n                return state ? this.addClass(className) : this.removeClass(className);\r\n            }\r\n\r\n            if (this.hasClass(className)) {\r\n                return this.removeClass(className);\r\n            }\r\n            return this.addClass(className);\r\n        },\r\n        isset: function() {\r\n            return Element.issetElement(this.serial);\r\n        },\r\n        unset: function() {\r\n            return Element.unsetElement(this.serial);\r\n        }\r\n    });\r\n\r\n    var _containClass = function(allClassStr, className) {\r\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\r\n        return allClassStr && regex.test(allClassStr);\r\n    };\r\n\r\n    //helpers\r\n    Element.isA = function(qtiElement, qtiClass) {\r\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\r\n    };\r\n\r\n    Element.getElementBySerial = function(serial) {\r\n        return _instances[serial];\r\n    };\r\n\r\n    Element.issetElement = function(serial) {\r\n        return !!_instances[serial];\r\n    };\r\n\r\n    /**\r\n     * Unset a registered element from it's serial\r\n     * @param {String} serial - the element serial\r\n     * @returns {Boolean} true if unset\r\n     */\r\n    Element.unsetElement = function(serial) {\r\n        var element = Element.getElementBySerial(serial);\r\n\r\n        if (element) {\r\n            var composingElements = element.getComposingElements();\r\n            _.each(composingElements, function(elt) {\r\n                delete _instances[elt.serial];\r\n            });\r\n            delete _instances[element.serial];\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA\r\n     */\r\n\r\n    /**\r\n     * XML namespace handling\r\n     */\r\n\r\n    /**\r\n     * Elements that need to be prefixed\r\n     *\r\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\r\n     * @type {string}\r\n     */\r\n    var prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\r\n\r\n    /**\r\n     * Find a possibly existing prefix\r\n     *\r\n     * @param namespaces\r\n     * @param html5Ns\r\n     * @returns {*}\r\n     */\r\n    function getPrefix(namespaces, html5Ns) {\r\n        var key;\r\n        for (key in namespaces) {\r\n            if (namespaces[key] === html5Ns) {\r\n                return key;\r\n            }\r\n        }\r\n        return 'qh5';\r\n    }\r\n\r\n    var xmlNsHandler = {\r\n        /**\r\n         * Remove prefix to make sure elements are properly displayed\r\n         *\r\n         * @param body\r\n         */\r\n        stripNs: function stripNs(body) {\r\n            var pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\r\n            var openRegEx = new RegExp('(<' + pattern + ')', 'gi');\r\n            var closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\r\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\r\n        },\r\n\r\n        /**\r\n         * Add a prefix to those elements that require one\r\n         *\r\n         * @param xml\r\n         * @param namespaces\r\n         * @returns {*}\r\n         */\r\n        restoreNs: function restoreNs(xml, namespaces) {\r\n            var xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\r\n            var tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\r\n            var xmlMatch = xml.match(xmlRe);\r\n            var imsXsd = 'http://www.imsglobal.org/xsd';\r\n            var html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\r\n            var prefix = getPrefix(namespaces, html5Ns);\r\n            var prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\r\n            var i = xmlMatch ? xmlMatch.length : 0;\r\n            var tagMatch;\r\n\r\n            if (!xmlMatch) {\r\n                return xml;\r\n            }\r\n\r\n            while (i--) {\r\n                tagMatch = xmlMatch[i].match(tagRe);\r\n                xml = xml.replace(\r\n                    xmlMatch[i],\r\n                    tagMatch[5]\r\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\r\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\r\n                );\r\n            }\r\n\r\n            // we found matches but no namespace has been set\r\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\r\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\r\n            }\r\n\r\n            // make sure the item is set to qti 2.2\r\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\r\n            xml = xml.replace(\r\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\r\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\r\n            );\r\n\r\n            return xml;\r\n        }\r\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n    var responseRules = {\r\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'match',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'variable',\r\n                            attributes: {\r\n                                identifier: responseIdentifier,\r\n                            },\r\n                        },\r\n                        {\r\n                            qtiClass: 'correct',\r\n                            attributes: {\r\n                                identifier: responseIdentifier,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    },\r\n                                },\r\n                                {\r\n                                    qtiClass: 'baseValue',\r\n                                    attributes: {\r\n                                        baseType: 'integer'\r\n                                    },\r\n                                    value: '1',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'not',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'isNull',\r\n                            expressions: [{\r\n                                qtiClass: 'variable',\r\n                                attributes: {\r\n                                    identifier: responseIdentifier,\r\n                                },\r\n                            }],\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    qtiClass: 'mapResponse',\r\n                                    attributes: {\r\n                                        identifier: responseIdentifier,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\r\n            qtiClass: 'responseCondition',\r\n            responseIf: {\r\n                qtiClass: 'responseIf',\r\n                expression: {\r\n                    qtiClass: 'not',\r\n                    expressions: [\r\n                        {\r\n                            qtiClass: 'isNull',\r\n                            expressions: [{\r\n                                qtiClass: 'variable',\r\n                                attributes: {\r\n                                    identifier: responseIdentifier,\r\n                                },\r\n                            }],\r\n                        },\r\n                    ],\r\n                },\r\n                responseRules: [\r\n                    {\r\n                        qtiClass: 'setOutcomeValue',\r\n                        attributes: {\r\n                            identifier: outcomeIdentifier,\r\n                        },\r\n                        expression: {\r\n                            qtiClass: 'sum',\r\n                            expressions: [\r\n                                {\r\n                                    qtiClass: 'variable',\r\n                                    attributes: {\r\n                                        identifier: outcomeIdentifier,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    qtiClass: 'mapResponsePoint',\r\n                                    attributes: {\r\n                                        identifier: responseIdentifier,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        }),\r\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    const _templateNames = {\r\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\r\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\r\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\r\n        NONE: 'no_response_processing'\r\n    };\r\n\r\n\r\n    var response = {\r\n        isUsingTemplate(response, tpl) {\r\n            if (_.isString(tpl)) {\r\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n        isValidTemplateName(tplName) {\r\n            return !!this.getTemplateUriFromName(tplName);\r\n        },\r\n        getTemplateUriFromName(tplName) {\r\n            return _templateNames[tplName] || '';\r\n        },\r\n        getTemplateNameFromUri(tplUri) {\r\n            let tplName = '';\r\n\r\n            _.forIn(_templateNames, (uri, name) => {\r\n                if (uri === tplUri) {\r\n                    tplName = name;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return tplName;\r\n        },\r\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\r\n            if (!responseRules) {\r\n                return 'NONE';\r\n            }\r\n\r\n            const {\r\n                responseIf: {\r\n                    responseRules: [outcomeRules = {}] = [],\r\n                } = {}\r\n            } = responseRules;\r\n            const {\r\n                attributes: {\r\n                    identifier: outcomeIdentifier,\r\n                } = {},\r\n            } = outcomeRules;\r\n\r\n            if (!outcomeIdentifier) {\r\n                return '';\r\n            }\r\n\r\n            return Object.keys(responseRulesHelper).find(\r\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\r\n            );\r\n        }\r\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Returns iteraction score response rule object\r\n     *\r\n     * @param {String} responseIdentifiers interactions reponse indentifiers\r\n     * @returns {Obeject}\r\n     */\r\n    var itemScore = (responseIdentifiers) => {\r\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\r\n            qtiClass: 'variable',\r\n            attributes: {\r\n                identifier: `SCORE_${outcomeIdentifier}`,\r\n            },\r\n        }));\r\n\r\n        return {\r\n            qtiClass: 'setOutcomeValue',\r\n            attributes: {\r\n                identifier: 'SCORE',\r\n            },\r\n            expression: {\r\n                qtiClass: 'sum',\r\n                expressions: outcomeExpressions,\r\n            },\r\n        };\r\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\r\n     *\r\n     */\r\n\r\n    /**\r\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\r\n     */\r\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\r\n        var properties = {};\r\n\r\n        _.forOwn(rawProperties, (value, key) => {\r\n            try {\r\n                properties[key] = JSON.parse(value);\r\n            } catch (e) {\r\n                properties[key] = value;\r\n            }\r\n        });\r\n        portableElement.properties = properties;\r\n    };\r\n\r\n    const loadPortableCustomElementData = (portableElement, data) => {\r\n        portableElement.typeIdentifier = data.typeIdentifier;\r\n        portableElement.markup = data.markup;\r\n        portableElement.entryPoint = data.entryPoint;\r\n        portableElement.libraries = data.libraries;\r\n        portableElement.setNamespace('', data.xmlns);\r\n\r\n        loadPortableCustomElementProperties(portableElement, data.properties);\r\n    };\r\n\r\n    var Loader = Class.extend({\r\n        init(item, classesLocation) {\r\n            this.qti = {}; //loaded qti classes are store here\r\n            this.classesLocation = {};\r\n            this.item = item || null; //starts either from scratch or with an existing item object\r\n\r\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\r\n        },\r\n        setClassesLocation(qtiClassesList) {\r\n            _.extend(this.classesLocation, qtiClassesList);\r\n\r\n            return this;\r\n        },\r\n        getRequiredClasses(data) {\r\n            let ret = [];\r\n\r\n            for (let i in data) {\r\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\r\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\r\n                    ret.push(data[i]);\r\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\r\n                    //responseRules should'nt be part of the parsing\r\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        },\r\n        loadRequiredClasses(data, callback, reload) {\r\n            let requiredClass;\r\n            const requiredClasses = this.getRequiredClasses(data, reload);\r\n            const required = [];\r\n\r\n            for (let i in requiredClasses) {\r\n                requiredClass = requiredClasses[i];\r\n                if (this.classesLocation[requiredClass]) {\r\n                    required.push({\r\n                        module: this.classesLocation[requiredClass],\r\n                        category: 'qti'\r\n                    });\r\n                } else {\r\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\r\n                }\r\n            }\r\n\r\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\r\n                loadeded.forEach(QtiClass => {\r\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\r\n                });\r\n                callback.call(this, this.qti);\r\n            });\r\n        },\r\n        getLoadedClasses() {\r\n            return _.keys(this.qti);\r\n        },\r\n        loadItemData(data, callback) {\r\n            this.loadRequiredClasses(data, Qti => {\r\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\r\n                    //unload an item from it's serial (in case of a reload)\r\n                    if (data.serial) {\r\n                        Element.unsetElement(data.serial);\r\n                    }\r\n\r\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\r\n                    this.loadContainer(this.item.getBody(), data.body);\r\n\r\n                    for (let i in data.outcomes) {\r\n                        const outcome = this.buildOutcome(data.outcomes[i]);\r\n\r\n                        if (outcome) {\r\n                            this.item.addOutcomeDeclaration(outcome);\r\n                        }\r\n                    }\r\n\r\n                    for (let i in data.feedbacks) {\r\n                        const feedback = this.buildElement(data.feedbacks[i]);\r\n\r\n                        if (feedback) {\r\n                            this.item.addModalFeedback(feedback);\r\n                        }\r\n                    }\r\n\r\n                    for (let i in data.stylesheets) {\r\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\r\n\r\n                        if (stylesheet) {\r\n                            this.item.addStylesheet(stylesheet);\r\n                        }\r\n                    }\r\n\r\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\r\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\r\n                        ? [...data.responseProcessing.responseRules]\r\n                        : [];\r\n                    for (let i in data.responses) {\r\n                        const responseIdentifier = data.responses[i].identifier;\r\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\r\n                            expression: {\r\n                                expressions: [expression = {}] = [],\r\n                            } = {}\r\n                        } = {} }) => expression.attributes\r\n                        && expression.attributes.identifier === responseIdentifier\r\n                            || (\r\n                                expression.expressions\r\n                                && expression.expressions[0]\r\n                                && expression.expressions[0].attributes\r\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\r\n                            )\r\n                        );\r\n                        const [responseRule] = responseRuleItemIndex !== -1\r\n                            ? responseRules.splice(responseRuleItemIndex, 1)\r\n                            : [];\r\n\r\n                        const response = this.buildResponse(\r\n                            data.responses[i],\r\n                            responseRule\r\n                        );\r\n\r\n                        if (response) {\r\n                            this.item.addResponseDeclaration(response);\r\n\r\n                            const feedbackRules = data.responses[i].feedbackRules;\r\n\r\n                            if (feedbackRules) {\r\n                                _.forIn(feedbackRules, (fbData, serial) => {\r\n                                    const {\r\n                                        attributes: {\r\n                                            identifier: feedbackOutcomeIdentifier,\r\n                                        } = {}\r\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\r\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\r\n\r\n                                    // remove feedback response rule from response rules array\r\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\r\n                                        responseIf: {\r\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\r\n                                        } = {}\r\n                                    }) => {\r\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\r\n                                        const outcomeIdentifier = attributes.identifier;\r\n\r\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\r\n                                            && qtiClass === 'setOutcomeValue';\r\n                                    });\r\n\r\n                                    if (feedbackResponseRuleIndex !== -1) {\r\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\r\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\r\n\r\n                    if (data.responseProcessing) {\r\n                        const customResponseProcessing =\r\n                            (\r\n                                responseRules.length > 0\r\n                                && !(\r\n                                    responseRules.length === 1\r\n                                    && _.isEqual(\r\n                                        responseRules[0],\r\n                                        itemScoreHelper(\r\n                                            responseIdentifiers\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                            || (\r\n                                this.item.responses\r\n                                && Object.keys(this.item.responses)\r\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\r\n                            );\r\n\r\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\r\n                    }\r\n                    this.item.setNamespaces(data.namespaces);\r\n                    this.item.setSchemaLocations(data.schemaLocations);\r\n                    this.item.setApipAccessibility(data.apipAccessibility);\r\n                }\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, this.item);\r\n                }\r\n            });\r\n        },\r\n        loadAndBuildElement(data, callback) {\r\n            this.loadRequiredClasses(data, () => {\r\n                const element = this.buildElement(data);\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, element);\r\n                }\r\n            });\r\n        },\r\n        loadElement(element, data, callback) {\r\n            this.loadRequiredClasses(data, () => {\r\n                this.loadElementData(element, data);\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, element);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Load ALL given elements into existing loaded item\r\n         *\r\n         * @todo to be renamed to loadItemElements\r\n         * @param {object} data\r\n         * @param {function} callback\r\n         * @returns {undefined}\r\n         */\r\n        loadElements(data, callback) {\r\n            if (!this.item) {\r\n                throw new Error('QtiLoader : cannot load elements in empty item');\r\n            }\r\n\r\n            this.loadRequiredClasses(data, () => {\r\n                const allElements = this.item.getComposingElements();\r\n\r\n                for (let i in data) {\r\n                    const elementData = data[i];\r\n\r\n                    if (elementData && elementData.qtiClass && elementData.serial) {\r\n                        //find and update element\r\n                        if (allElements[elementData.serial]) {\r\n                            this.loadElementData(allElements[elementData.serial], elementData);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (typeof callback === 'function') {\r\n                    callback.call(this, this.item);\r\n                }\r\n            });\r\n        },\r\n        buildResponse(data, responseRule) {\r\n            const response = this.buildElement(data);\r\n\r\n            response.template = responseHelper.getTemplateUriFromName(\r\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\r\n            )\r\n                || data.howMatch\r\n                || null;\r\n\r\n            response.defaultValue = data.defaultValue || null;\r\n            response.correctResponse = data.correctResponses || null;\r\n\r\n            if (_.size(data.mapping)) {\r\n                response.mapEntries = data.mapping;\r\n            } else if (_.size(data.areaMapping)) {\r\n                response.mapEntries = data.areaMapping;\r\n            } else {\r\n                response.mapEntries = {};\r\n            }\r\n\r\n            response.mappingAttributes = data.mappingAttributes || {};\r\n\r\n            return response;\r\n        },\r\n        buildSimpleFeedbackRule(data, response) {\r\n            const feedbackRule = this.buildElement(data);\r\n\r\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\r\n\r\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\r\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\r\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\r\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\r\n\r\n            //associate the compared outcome to the feedbacks if applicable\r\n            const comparedOutcome = feedbackRule.comparedOutcome;\r\n\r\n            if (feedbackRule.feedbackThen) {\r\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\r\n            }\r\n\r\n            if (feedbackRule.feedbackElse) {\r\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\r\n            }\r\n\r\n            return feedbackRule;\r\n        },\r\n        buildOutcome(data) {\r\n            const outcome = this.buildElement(data);\r\n            outcome.defaultValue = data.defaultValue || null;\r\n\r\n            return outcome;\r\n        },\r\n        buildResponseProcessing(data, customResponseProcessing) {\r\n            const rp = this.buildElement(data);\r\n\r\n            if (customResponseProcessing) {\r\n                rp.xml = data.data;\r\n                rp.processingType = 'custom';\r\n            } else {\r\n                rp.processingType = 'templateDriven';\r\n            }\r\n\r\n            return rp;\r\n        },\r\n        loadContainer(bodyObject, bodyData) {\r\n            if (!Element.isA(bodyObject, '_container')) {\r\n                throw new Error('bodyObject must be a QTI Container');\r\n            }\r\n\r\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\r\n                throw new Error('wrong bodydata format');\r\n            }\r\n            //merge attributes when loading element data\r\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\r\n            bodyObject.setAttributes(attributes);\r\n\r\n            for (let serial in bodyData.elements) {\r\n                const eltData = bodyData.elements[serial];\r\n                const element = this.buildElement(eltData);\r\n\r\n                //check if class is loaded:\r\n                if (element) {\r\n                    bodyObject.setElement(element, bodyData.body);\r\n                }\r\n            }\r\n\r\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\r\n        },\r\n        buildElement(elementData) {\r\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\r\n                throw new Error('wrong elementData format');\r\n            }\r\n\r\n            const className = elementData.qtiClass;\r\n\r\n            if (!this.qti[className]) {\r\n                throw new Error(`the qti element class does not exist: ${className}`);\r\n            }\r\n\r\n            const elt = new this.qti[className](elementData.serial);\r\n            this.loadElementData(elt, elementData);\r\n\r\n            return elt;\r\n        },\r\n        loadElementData(element, data) {\r\n            //merge attributes when loading element data\r\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\r\n            element.setAttributes(attributes);\r\n\r\n            if (element.body && data.body) {\r\n                if (element.bdy) {\r\n                    this.loadContainer(element.getBody(), data.body);\r\n                }\r\n            }\r\n\r\n            if (element.object && data.object) {\r\n                if (element.object) {\r\n                    this.loadObjectData(element.object, data.object);\r\n                }\r\n            }\r\n\r\n            if (Element.isA(element, 'interaction')) {\r\n                this.loadInteractionData(element, data);\r\n            } else if (Element.isA(element, 'choice')) {\r\n                this.loadChoiceData(element, data);\r\n            } else if (Element.isA(element, 'math')) {\r\n                this.loadMathData(element, data);\r\n            } else if (Element.isA(element, 'infoControl')) {\r\n                this.loadPicData(element, data);\r\n            } else if (Element.isA(element, '_tooltip')) {\r\n                this.loadTooltipData(element, data);\r\n            }\r\n\r\n            return element;\r\n        },\r\n        loadInteractionData(interaction, data) {\r\n            if (Element.isA(interaction, 'blockInteraction')) {\r\n                if (data.prompt) {\r\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\r\n                }\r\n            }\r\n\r\n            this.buildInteractionChoices(interaction, data);\r\n\r\n            if (Element.isA(interaction, 'customInteraction')) {\r\n                this.loadPciData(interaction, data);\r\n            }\r\n        },\r\n        buildInteractionChoices(interaction, data) {\r\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\r\n            if (data.choices) {\r\n                if (Element.isA(interaction, 'matchInteraction')) {\r\n                    for (let set = 0; set < 2; set++) {\r\n                        if (!data.choices[set]) {\r\n                            throw new Error(`missing match set #${set}`);\r\n                        }\r\n\r\n                        const matchSet = data.choices[set];\r\n\r\n                        for (let serial in matchSet) {\r\n                            const choice = this.buildElement(matchSet[serial]);\r\n\r\n                            if (choice) {\r\n                                interaction.addChoice(choice, set);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let serial in data.choices) {\r\n                        const choice = this.buildElement(data.choices[serial]);\r\n\r\n                        if (choice) {\r\n                            interaction.addChoice(choice);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\r\n                    if (data.gapImgs) {\r\n                        for (let serial in data.gapImgs) {\r\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\r\n\r\n                            if (gapImg) {\r\n                                interaction.addGapImg(gapImg);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        loadChoiceData(choice, data) {\r\n            if (Element.isA(choice, 'textVariableChoice')) {\r\n                choice.val(data.text);\r\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\r\n                // this ensure compatibility of Qti 2.1 items\r\n                if (!choice.body()) {\r\n                    choice.body(data.text);\r\n                }\r\n            } else if (Element.isA(choice, 'containerChoice')) ;\r\n        },\r\n        loadObjectData(object, data) {\r\n            object.setAttributes(data.attributes);\r\n\r\n            //@todo: manage object like a container\r\n            if (data._alt) {\r\n                if (data._alt.qtiClass === 'object') {\r\n                    object._alt = Loader.buildElement(data._alt);\r\n                } else {\r\n                    object._alt = data._alt;\r\n                }\r\n            }\r\n        },\r\n        loadMathData(math, data) {\r\n            math.ns = data.ns || {};\r\n            math.setMathML(data.mathML || '');\r\n            _.forIn(data.annotations || {}, (value, encoding) => {\r\n                math.setAnnotation(encoding, value);\r\n            });\r\n        },\r\n        loadTooltipData(tooltip, data) {\r\n            tooltip.content(data.content);\r\n        },\r\n        loadPciData(pci, data) {\r\n            loadPortableCustomElementData(pci, data);\r\n        },\r\n        loadPicData(pic, data) {\r\n            loadPortableCustomElementData(pic, data);\r\n        }\r\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\r\n        getRawValues: function(pciVar) {\r\n            if (_.isPlainObject(pciVar)) {\r\n                if (pciVar.base !== undefined) {\r\n                    return _.values(pciVar.base);\r\n                } else if (pciVar.list) {\r\n                    return _.values(pciVar.list);\r\n                }\r\n            }\r\n            throw 'unsupported type ';\r\n        }\r\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\r\n     **/\r\n\r\n    /**\r\n     * Prefix used to the variable storage\r\n     * @type String\r\n     */\r\n    var _prefix = 'x-tao-';\r\n\r\n    /**\r\n     * Check if the element is of a qti container type\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @returns {Boolean}\r\n     */\r\n    function _checkContainerType(element) {\r\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\r\n            return true;\r\n        } else {\r\n            throw 'the element is not of a container type';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the body element of the container\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @returns {JQuery}\r\n     */\r\n    function _getBodyDom(element) {\r\n        if (_checkContainerType(element)) {\r\n            return $('<div>')\r\n                .html(element.body())\r\n                .find('.x-tao-wrapper');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a class to the body element of the qti container\r\n     *\r\n     * @private\r\n     * @param {Object} element\r\n     * @param {String} newClass\r\n     * @param {String} [oldClass]\r\n     */\r\n    function _setBodyDomClass(element, newClass, oldClass) {\r\n        if (_checkContainerType(element) && (oldClass || newClass)) {\r\n            var $wrapper = $('<div>').html(element.body());\r\n            //set css class to element\r\n            _setDomClass($wrapper, newClass, oldClass);\r\n            //set to the model\r\n            element.body($wrapper.html());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Switch class to the wrapped DOM\r\n     *\r\n     * @param {JQuery} $wrapper\r\n     * @param {String} newClass\r\n     * @param {String} oldClass\r\n     * @returns {undefined}\r\n     */\r\n    function _setDomClass($wrapper, newClass, oldClass) {\r\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\r\n        if (!$bodyDom.length) {\r\n            //create one\r\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\r\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\r\n        }\r\n        if (oldClass) {\r\n            $bodyDom.removeClass(oldClass);\r\n        }\r\n        if (newClass) {\r\n            $bodyDom.addClass(newClass);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add manually the encoded information to a dom element\r\n     *\r\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\r\n     * @param {String} dataName - the name of the information\r\n     * @param {String} newValue - the new value to be added\r\n     * @param {String} [oldValue] - the old value to be removed\r\n     * @returns {undefined}\r\n     */\r\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\r\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\r\n    }\r\n\r\n    /**\r\n     * Get the full variable name for the data store\r\n     *\r\n     * @param {String} dataName\r\n     * @param {String} value\r\n     * @returns {String}\r\n     */\r\n    function _getEncodedDataString(dataName, value) {\r\n        if (dataName && value) {\r\n            return _prefix + dataName + '-' + value;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Set a data string to the element identified by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @param {String} newValue\r\n     * @returns {undefined}\r\n     */\r\n    function setEncodedData(element, dataName, newValue) {\r\n        var oldValue = getEncodedData(element, dataName);\r\n        return _setBodyDomClass(\r\n            element,\r\n            _getEncodedDataString(dataName, newValue),\r\n            _getEncodedDataString(dataName, oldValue)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Remove the stored data from the element by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @returns {unresolved}\r\n     */\r\n    function removeEncodedData(element, dataName) {\r\n        var oldValue = getEncodedData(element, dataName);\r\n        if (dataName && oldValue) {\r\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the stored data exist\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @param {String} value\r\n     * @returns {Boolean}\r\n     */\r\n    function hasEncodedData(element, dataName, value) {\r\n        var $body = _getBodyDom(element);\r\n        if ($body && $body.length && dataName && value) {\r\n            return $body.hasClass(_getEncodedDataString(dataName, value));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get the encoded data identified by its dataName\r\n     *\r\n     * @param {Object} element\r\n     * @param {String} dataName\r\n     * @returns {String}\r\n     */\r\n    function getEncodedData(element, dataName) {\r\n        var regex, matches;\r\n        var $body = _getBodyDom(element);\r\n        if (dataName && $body && $body.length && $body.attr('class')) {\r\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\r\n            matches = $body.attr('class').match(regex);\r\n            if (matches) {\r\n                return matches[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\r\n     */\r\n    var container = {\r\n        setEncodedData: setEncodedData,\r\n        hasEncodedData: hasEncodedData,\r\n        getEncodedData: getEncodedData,\r\n        removeEncodedData: removeEncodedData,\r\n        setEncodedDataToDom: setEncodedDataToDom\r\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/inlineRenderer',['lodash', 'jquery', 'context', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container', 'handlebars', 'i18n', 'lib/dompurify/purify', 'iframeNotifier'], function (_, $$1, context, pci, containerHelper, Handlebars, __, DOMPurify, iframeNotifier) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var Helpers0 = hb => {\r\n        //register a i18n helper\r\n        hb.registerHelper('__', function(key) {\r\n            return __(key);\r\n        });\r\n\r\n        /**\r\n         * Register dompurify helper\r\n         *\r\n         * https://github.com/cure53/DOMPurify\r\n         * with config SAFE_FOR_TEMPLATES: true\r\n         * to make output safe for template systems\r\n         */\r\n        hb.registerHelper('dompurify', function(context) {\r\n            return DOMPurify.sanitize(context);\r\n        });\r\n\r\n        /**\r\n         * Register join helper\r\n         *\r\n         * Example :\r\n         * var values = {a:v1, b:v2, c:v3};\r\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\r\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\r\n         */\r\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\r\n            var fragments = [];\r\n\r\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\r\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\r\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\r\n\r\n            _.forIn(arr, function(value, key) {\r\n                var fragment = '';\r\n                if (value !== null || value !== undefined) {\r\n                    if (typeof value === 'boolean') {\r\n                        value = value ? 'true' : 'false';\r\n                    } else if (typeof value === 'object') {\r\n                        value = _.values(value).join(' ');\r\n                    }\r\n                } else {\r\n                    value = '';\r\n                }\r\n                if (keyValueGlue !== undefined) {\r\n                    fragment += key + keyValueGlue;\r\n                }\r\n                fragment += wrapper + value + wrapper;\r\n                fragments.push(fragment);\r\n            });\r\n\r\n            return fragments.join(fragmentGlue);\r\n        });\r\n\r\n        //register a classic \"for loop\" helper\r\n        //it also adds a local variable \"i\" as the index in each iteration loop\r\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\r\n            var ret = '';\r\n            startIndex = parseInt(startIndex);\r\n            stopIndex = parseInt(stopIndex);\r\n            increment = parseInt(increment);\r\n\r\n            for (var i = startIndex; i < stopIndex; i += increment) {\r\n                ret += options.fn(_.extend({}, this, { i: i }));\r\n            }\r\n\r\n            return ret;\r\n        });\r\n\r\n        hb.registerHelper('equal', function(var1, var2, options) {\r\n            if (var1 == var2) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        });\r\n\r\n        // register a \"get property\" helper\r\n        // it gets the named property from the provided context\r\n        hb.registerHelper('property', function(name, context) {\r\n            return context[name] || '';\r\n        });\r\n\r\n        // register an 'includes' helper\r\n        // it checks if value is in array\r\n        hb.registerHelper('includes', function(haystack, needle, options) {\r\n            if (_.contains(haystack, needle)) {\r\n                return options.fn(this);\r\n            }\r\n        });\r\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<li class=\\\"small btn-info action action-button rgt\\\" id=\\\"preview-feedback-ok-button\\\">\\r\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\r\\n        <span class=\\\"label\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"OK\", options) : helperMissing.call(depth0, \"__\", \"OK\", options)))\n        + \"</span>\\r\\n    </a>\\r\\n</li>\";\n      return buffer;\n      });\n    function previewOkBtn(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<li data-control=\\\"feedback-ok\\\" class=\\\"small btn-info action forward\\\" title=\\\"Feedback ok and ready to proceed.\\\">\\r\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\r\\n        <span class=\\\"icon-result-ok\\\"></span>\\r\\n        <span class=\\\"text\\\">OK</span>\\r\\n    </a>\\r\\n</li>\";\n      });\n    function deliveryOkBtn(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\r\n     *\r\n     */\r\n\r\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\r\n\r\n    /**\r\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\r\n     *\r\n     * @param {Object} item - the standard tao qti item object\r\n     * @param {Object} loader - the item loader instance\r\n     * @param {Object} renderer - the item render instance\r\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\r\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\r\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\r\n     * @returns {Number} Number of feedbacks to be displayed\r\n     */\r\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\r\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\r\n        var messages = {};\r\n        var renderedFeebacks = [];\r\n        var renderingQueue = [];\r\n        var $itemContainer = item.getContainer();\r\n        var $itemBody = $itemContainer.children('.qti-itemBody');\r\n        var firstFeedback;\r\n\r\n        _.each(item.modalFeedbacks, function(feedback) {\r\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\r\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\r\n            var order = -1;\r\n\r\n            //verify if the feedback should be displayed\r\n            if (itemSession[outcomeIdentifier]) {\r\n                //is the feedback in the list of feedbacks to be displayed ?\r\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\r\n                if (_.indexOf(feedbackIds, feedback.id()) === -1) {\r\n                    return true; //continue with next feedback\r\n                }\r\n\r\n                //which group of feedbacks (interaction related) the feedback belongs to ?\r\n                message = getFeedbackMessageSignature(feedback);\r\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\r\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\r\n                if (comparedOutcome && interactionInfo) {\r\n                    $container = interactionInfo.displayContainer;\r\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\r\n                    order = interactionInfo.order;\r\n                } else {\r\n                    $container = $itemBody;\r\n                    _currentMessageGroupId = '__item__';\r\n                }\r\n                //is this message already displayed ?\r\n                if (!messages[_currentMessageGroupId]) {\r\n                    messages[_currentMessageGroupId] = [];\r\n                }\r\n                if (_.indexOf(messages[_currentMessageGroupId], message) >= 0) {\r\n                    return true; //continue\r\n                } else {\r\n                    messages[_currentMessageGroupId].push(message);\r\n                }\r\n\r\n                //ok, display feedback\r\n                renderingQueue.push({\r\n                    feedback: feedback,\r\n                    $container: $container,\r\n                    order: order\r\n                });\r\n            }\r\n        });\r\n\r\n        if (renderingQueue.length) {\r\n            renderingQueue = _.sortBy(renderingQueue, 'order');\r\n\r\n            //clear previously displayed feedbacks\r\n            clearModalFeedbacks($itemContainer);\r\n\r\n            //process rendering queue\r\n            _.each(renderingQueue, function(renderingToken) {\r\n                renderModalFeedback(\r\n                    renderingToken.feedback,\r\n                    loader,\r\n                    renderer,\r\n                    renderingToken.$container,\r\n                    $itemContainer,\r\n                    function(renderingData) {\r\n                        // keep the first feedback to force focus on it if needed\r\n                        if (!firstFeedback) {\r\n                            firstFeedback = $$1(renderingData.dom);\r\n                        }\r\n\r\n                        $$1('img', renderingData.dom).on('load', function() {\r\n                            iframeNotifier.parent('itemcontentchange');\r\n                        });\r\n\r\n                        //record rendered feedback for later reference\r\n                        renderedFeebacks.push(renderingData);\r\n                        if (renderedFeebacks.length === renderingQueue.length) {\r\n                            //rendering processing queue completed\r\n                            iframeNotifier.parent('itemcontentchange');\r\n\r\n                            // set the focus on the first feedback if needed\r\n                            // TODO: this is heavily related to the old TestRunner, with the ugly iframes.\r\n                            // To make this working, a search is made accross parent frames.\r\n                            // When the InlineFeedbacks will be ported to the new TestRunner, a strong improvement will be needed!\r\n                            if (firstFeedback) {\r\n                                autoscroll(firstFeedback);\r\n                            }\r\n\r\n                            //if an optional \"on show modal\" callback has been provided, execute it\r\n                            if (_.isFunction(onShowCallback)) {\r\n                                onShowCallback();\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n\r\n            //if any feedback is displayed, replace the controls by a \"ok\" button\r\n            replaceControl(renderedFeebacks, $itemContainer, onCloseCallback);\r\n        }\r\n\r\n        return renderingQueue.length;\r\n    }\r\n\r\n    /**\r\n     * Gets the QTI Container element\r\n     * @returns {jQuery|null}\r\n     */\r\n    function getQtiContainer() {\r\n        var me = window;\r\n        var $container = null;\r\n        var max = 10;\r\n\r\n        while (me && me.__knownParent__ && max--) {\r\n            me = me.parent;\r\n            if (me && me.$) {\r\n                $container = me.$('#qti-content');\r\n                if ($container.length) {\r\n                    return $container;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Keeps an element visible inside the QTI container.\r\n     * If the element is outside the container viewport, scroll to display it.\r\n     * @param {String|jQuery|HTMLElement} element\r\n     */\r\n    function autoscroll(element) {\r\n        var $element = $$1(element);\r\n        var $container = getQtiContainer();\r\n        var currentScrollTop, minScrollTop, maxScrollTop, scrollTop;\r\n\r\n        if ($element.length && $container) {\r\n            currentScrollTop = $container.scrollTop();\r\n            maxScrollTop = $element.offset().top;\r\n            minScrollTop = maxScrollTop - $container.height() + $element.outerHeight();\r\n            scrollTop = Math.max(Math.min(maxScrollTop, currentScrollTop), minScrollTop);\r\n            if (scrollTop !== currentScrollTop) {\r\n                $container.animate({ scrollTop: scrollTop });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extract the display information for an interaction-related feedback\r\n     *\r\n     * @private\r\n     * @param {Object} interaction - a qti interaction object\r\n     * @returns {Object} Object containing useful display information\r\n     */\r\n    function extractDisplayInfo(interaction) {\r\n        var $interactionContainer = interaction.getContainer();\r\n        var responseIdentifier = interaction.attr('responseIdentifier');\r\n        var messageGroupId, $displayContainer;\r\n\r\n        if (interaction.is('inlineInteraction')) {\r\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\r\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\r\n            if (!messageGroupId) {\r\n                //generate a messageFroupId\r\n                messageGroupId = _.uniqueId('inline_message_group_');\r\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\r\n            }\r\n        } else {\r\n            messageGroupId = responseIdentifier;\r\n            $displayContainer = $interactionContainer;\r\n        }\r\n\r\n        return {\r\n            responseIdentifier: responseIdentifier,\r\n            interactionContainer: $interactionContainer,\r\n            displayContainer: $displayContainer,\r\n            messageGroupId: messageGroupId,\r\n            order: -1\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get interaction display information sorted in the order of appearance within the item\r\n     *\r\n     * @param {Object} item\r\n     * @returns {Array}\r\n     */\r\n    function getInteractionsDisplayInfo(item) {\r\n        var interactionsDisplayInfo = [];\r\n        var $itemContainer = item.getContainer();\r\n        var interactionOrder = 0;\r\n\r\n        //extract all interction related information needed to display their\r\n        _.each(item.getComposingElements(), function(element) {\r\n            var responseIdentifier;\r\n            if (element.is('interaction')) {\r\n                responseIdentifier = element.attr('responseIdentifier');\r\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\r\n            }\r\n        });\r\n\r\n        //sort interactionsDisplayInfo on the item level\r\n        $itemContainer.find('.qti-interaction').each(function() {\r\n            var interactionContainer = this;\r\n            _.each(interactionsDisplayInfo, function(_interactionInfo) {\r\n                if (_interactionInfo.interactionContainer[0] === interactionContainer) {\r\n                    _interactionInfo.order = interactionOrder;\r\n                    return false;\r\n                }\r\n            });\r\n            interactionOrder++;\r\n        });\r\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\r\n\r\n        return interactionsDisplayInfo;\r\n    }\r\n\r\n    /**\r\n     * Remove previously displayed feedbacks contained in the given container element\r\n     *\r\n     * @param {JQuery} $itemContainer\r\n     */\r\n    function clearModalFeedbacks($itemContainer) {\r\n        $itemContainer.find('.qti-modalFeedback').remove();\r\n    }\r\n\r\n    /**\r\n     * Render a modal feedback into a given container, scoped within an item container\r\n     *\r\n     * @private\r\n     * @param {type} feedback - feedback object\r\n     * @param {type} loader - loader instance\r\n     * @param {type} renderer - renderer instance\r\n     * @param {JQuery} $container - the targeted feedback container\r\n     * @param {JQuery} $itemContainer - the item container\r\n     * @param {type} renderedCallback - callback when the feedback has been rendered\r\n     * @returns {undefined}\r\n     */\r\n    function renderModalFeedback(feedback, loader, renderer, $container, $itemContainer, renderedCallback) {\r\n        //load (potential) new qti classes used in the modal feedback (e.g. math, img)\r\n        renderer.load(function() {\r\n            //render the modal feedback\r\n            var $modalFeedback = $$1(\r\n                feedback.render({\r\n                    inline: true\r\n                })\r\n            );\r\n            var done = function done() {\r\n                renderedCallback({\r\n                    identifier: feedback.id(),\r\n                    serial: feedback.getSerial(),\r\n                    dom: $modalFeedback\r\n                });\r\n            };\r\n            $container.append($modalFeedback);\r\n\r\n            // Race between postRendering and timeout\r\n            // postRendering waits for everything to be resolved or one reject\r\n            Promise.race([\r\n                Promise.all(\r\n                    _.map(feedback.getComposingElements(), function(elt) {\r\n                        //render also internal elements, such as math or img\r\n                        return elt.postRender({}, '', renderer).pop();\r\n                    })\r\n                ),\r\n                new Promise(function(resolve, reject) {\r\n                    _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\r\n                })\r\n            ])\r\n                .then(done)\r\n                .catch(function(err) {\r\n                    //in case of postRendering issue, we are also done\r\n                    done();\r\n                    throw new Error('Error in post rendering : ' + err);\r\n                });\r\n        }, loader.getLoadedClasses());\r\n    }\r\n\r\n    /**\r\n     * Replace the controls in the running environment  with an \"OK\" button to trigger the end of the feedback state\r\n     *\r\n     * @private\r\n     * @todo FIX ME ! replace the hack to preview and delivery toolbar with a proper plugin in the new test runner is ready\r\n     * @param {Array} renderedFeebacks\r\n     * @param {JQuery} $itemContainer\r\n     * @param {Function} callback\r\n     */\r\n    function replaceControl(renderedFeebacks, $itemContainer, callback) {\r\n        var $scope, $controls, $toggleContainer;\r\n        if (window.parent && window.parent.parent && window.parent.parent.$) {\r\n            if ($itemContainer.parents('.tao-preview-scope').length) {\r\n                //preview mode\r\n                $scope = window.parent.parent.$('#preview-console');\r\n                $controls = $scope.find('.preview-console-header .action-bar li:visible');\r\n                $toggleContainer = $scope.find('.console-button-action-bar');\r\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, previewOkBtn, callback);\r\n            } else {\r\n                //delivery delivery\r\n                $scope = window.parent.parent.$('body.qti-test-scope .bottom-action-bar');\r\n                $controls = $scope.find('li:visible');\r\n                $toggleContainer = $scope.find('.navi-box-list');\r\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, deliveryOkBtn, callback);\r\n            }\r\n        } else {\r\n            //not in an iframe, add to item body for now\r\n            $scope = $itemContainer.find('#modalFeedbacks');\r\n            initControlToggle(renderedFeebacks, $itemContainer, $$1(), $scope, previewOkBtn, callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize the \"OK\" button to trigger the end of the feedback mode\r\n     *\r\n     * @private\r\n     * @param {Array} renderedFeebacks\r\n     * @param {JQuery} $itemContainer\r\n     * @param {JQuery} $controls\r\n     * @param {JQuery} $toggleContainer\r\n     * @param {Function} toggleButtonTemplate\r\n     * @param {Function} callback\r\n     */\r\n    function initControlToggle(\r\n        renderedFeebacks,\r\n        $itemContainer,\r\n        $controls,\r\n        $toggleContainer,\r\n        toggleButtonTemplate,\r\n        callback\r\n    ) {\r\n        var $ok = $$1(toggleButtonTemplate()).click(function() {\r\n            //end feedback mode, hide feedbacks\r\n            _.each(renderedFeebacks, function(fb) {\r\n                fb.dom.hide();\r\n            });\r\n\r\n            //restore controls\r\n            uncover([$itemContainer]);\r\n            $ok.remove();\r\n            $controls.show();\r\n\r\n            //exec callback\r\n            callback();\r\n        });\r\n\r\n        $controls.hide();\r\n        $toggleContainer.append($ok);\r\n        cover([$itemContainer]);\r\n    }\r\n\r\n    /**\r\n     * Cover the given interaction containers with a transparent layer to prevent user interacting with the item\r\n     * @private\r\n     * @param {Array} interactionContainers\r\n     */\r\n    function cover(interactionContainers) {\r\n        var $cover = $$1('<div class=\"interaction-cover modal-bg\">');\r\n        _.each(interactionContainers, function($interaction) {\r\n            $interaction.append($cover);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove the layer set by the function cover()\r\n     * @private\r\n     * @param {Array} interactionContainers\r\n     */\r\n    function uncover(interactionContainers) {\r\n        _.each(interactionContainers, function($interaction) {\r\n            $interaction.find('.interaction-cover').remove();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\r\n     *\r\n     * @param {type} feedback\r\n     * @returns {String}\r\n     */\r\n    function getFeedbackMessageSignature(feedback) {\r\n        return ('' + feedback.body() + feedback.attr('title'))\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\r\n    }\r\n\r\n    var inlineRenderer = {\r\n        showFeedbacks: showFeedbacks\r\n    };\n\n    return inlineRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/modalRenderer',['lodash', 'jquery', 'async', 'taoQtiItem/qtiItem/helper/pci'], function (_, $, async, pci) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    async = async && Object.prototype.hasOwnProperty.call(async, 'default') ? async['default'] : async;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\r\n     *\r\n     */\r\n\r\n    /**\r\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\r\n     *\r\n     * @param {Object} item - the standard tao qti item object\r\n     * @param {Object} loader - the item loader instance\r\n     * @param {Object} renderer - the item render instance\r\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\r\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\r\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\r\n     * @returns {Number} Number of feedbacks to be displayed\r\n     */\r\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\r\n        var count,\r\n            messages = [],\r\n            feedbacksToBeDisplayed = [];\r\n\r\n        //find which modal feedbacks should be displayed according to the current item session:\r\n        _.each(item.modalFeedbacks, function(feedback) {\r\n            var feedbackIds, message;\r\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\r\n\r\n            if (itemSession[outcomeIdentifier]) {\r\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\r\n                message = getFeedbackMessageSignature(feedback);\r\n                if (_.indexOf(feedbackIds, feedback.id()) >= 0 && _.indexOf(messages, message) === -1) {\r\n                    //check content if is already in the display queue\r\n                    feedbacksToBeDisplayed.push(feedback);\r\n                    messages.push(message);\r\n                }\r\n            }\r\n        });\r\n\r\n        //record the number of feedbacks to be displayed:\r\n        count = feedbacksToBeDisplayed.length;\r\n        if (count) {\r\n            //show in reverse order\r\n            var callstack = [];\r\n\r\n            //iterate from the right because the modal popup will pile up.\r\n            _.eachRight(feedbacksToBeDisplayed, function(feedback) {\r\n                //the end callback should be executed to the last displayed modal, which is the last displayed one\r\n                var endCallback;\r\n                if (callstack.length === 0) {\r\n                    endCallback = function() {\r\n                        onCloseCallback();\r\n                    };\r\n                }\r\n\r\n                callstack.push(function(cb) {\r\n                    renderModalFeedback(\r\n                        feedback,\r\n                        loader,\r\n                        renderer,\r\n                        function() {\r\n                            cb(null);\r\n                        },\r\n                        endCallback\r\n                    );\r\n                });\r\n            });\r\n\r\n            async.series(callstack, function() {\r\n                //all modal are ready and displayed\r\n                if (_.isFunction(onShowCallback)) {\r\n                    onShowCallback();\r\n                }\r\n            });\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Render modal feedback as a modal popup\r\n     *\r\n     * @param {Object} feedback - object\r\n     * @param {Object} loader - loader instance\r\n     * @param {Object} renderer - renderer instance\r\n     * @param {Function} [closeCallback] - feedback to be executed when the popop closes\r\n     * @returns {undefined}\r\n     */\r\n    function renderModalFeedback(feedback, loader, renderer, renderedCallback, closeCallback) {\r\n        var $feedback,\r\n            $feedbackBox = $('#modalFeedbacks'); //feedback.getItem().getContainer().find('#')\r\n\r\n        if (feedback.is('modalFeedback')) {\r\n            //load (potential) new qti classes used in the modal feedback (e.g. math, img)\r\n            renderer.load(function() {\r\n                $feedback = $feedbackBox.find('#' + feedback.getSerial());\r\n                if (!$feedback.length) {\r\n                    //render the modal feedback\r\n                    $feedback = feedback.render();\r\n                    $feedbackBox.append($feedback);\r\n                } else {\r\n                    $feedback.modal();\r\n                }\r\n\r\n                renderedCallback();\r\n\r\n                feedback.postRender({\r\n                    callback: closeCallback\r\n                });\r\n            }, loader.getLoadedClasses());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\r\n     *\r\n     * @param {type} feedback\r\n     * @returns {String}\r\n     */\r\n    function getFeedbackMessageSignature(feedback) {\r\n        return ('' + feedback.body() + feedback.attr('title'))\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\r\n    }\r\n\r\n    var modalRenderer = {\r\n        showFeedbacks: showFeedbacks\r\n    };\n\n    return modalRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/QtiRunner',['jquery', 'lodash', 'context', 'module', 'iframeNotifier', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiRunner/modalFeedback/inlineRenderer', 'taoQtiItem/qtiRunner/modalFeedback/modalRenderer'], function ($, _, context, module, iframeNotifier, ItemLoader, modalFeedbackInline, modalFeedbackModal) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n    ItemLoader = ItemLoader && Object.prototype.hasOwnProperty.call(ItemLoader, 'default') ? ItemLoader['default'] : ItemLoader;\n    modalFeedbackInline = modalFeedbackInline && Object.prototype.hasOwnProperty.call(modalFeedbackInline, 'default') ? modalFeedbackInline['default'] : modalFeedbackInline;\n    modalFeedbackModal = modalFeedbackModal && Object.prototype.hasOwnProperty.call(modalFeedbackModal, 'default') ? modalFeedbackModal['default'] : modalFeedbackModal;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2013 (original work) Open Assessment Techonologies SA (under the project TAO-PRODUCT);\r\n     *\r\n     *\r\n     */\r\n\r\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\r\n\r\n    var QtiRunner = function() {\r\n        this.item = null;\r\n        this.rpEngine = null;\r\n        this.renderer = null;\r\n        this.loader = null;\r\n        this.itemApi = undefined;\r\n    };\r\n\r\n    QtiRunner.prototype.updateItemApi = function() {\r\n        var responses = this.getResponses();\r\n        var states = this.getStates();\r\n        var variables = [];\r\n        // Transform responses into state variables.\r\n        for (var key in states) {\r\n            var value = states[key];\r\n            // This is where we set variables that will be collected and stored\r\n            // as the Item State. We do not want to store large files into\r\n            // the state, and force the client to download these files\r\n            // all over again. We then transform them as a place holder, that will\r\n            // simply indicate that a file composes the state.\r\n\r\n            if (value.response && typeof value.response.base !== 'undefined') {\r\n                for (var property in value.response.base) {\r\n                    if (property === 'file') {\r\n                        var file = value.response.base.file;\r\n                        // QTI File found! Replace it with an appropriate placeholder.\r\n                        // The data is base64('qti_file_datatype_placeholder_data')\r\n                        value.response = {\r\n                            base: {\r\n                                file: {\r\n                                    name: file.name,\r\n                                    mime: 'qti+application/octet-stream',\r\n                                    data: 'cXRpX2ZpbGVfZGF0YXR5cGVfcGxhY2Vob2xkZXJfZGF0YQ=='\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n\r\n            variables[key] = value;\r\n        }\r\n\r\n        //set all variables at once\r\n        this.itemApi.setVariables(variables);\r\n\r\n        // Save the responses that will be used for response processing.\r\n        this.itemApi.saveResponses(responses);\r\n        this.itemApi.resultApi.setQtiRunner(this);\r\n    };\r\n\r\n    QtiRunner.prototype.setItemApi = function(itemApi) {\r\n        this.itemApi = itemApi;\r\n        var that = this;\r\n        var oldStateVariables = JSON.stringify(itemApi.stateVariables);\r\n\r\n        itemApi.onKill(function(killCallback) {\r\n            // If the responses did not change,\r\n            // just close gracefully.\r\n\r\n            // Collect new responses and update item API.\r\n            that.updateItemApi();\r\n            var newStateVariables = JSON.stringify(itemApi.stateVariables);\r\n\r\n            // Store the results.\r\n            if (oldStateVariables !== newStateVariables || itemApi.serviceApi.getHasBeenPaused()) {\r\n                itemApi.submit(function() {\r\n                    // Send successful signal.\r\n                    itemApi.serviceApi.setHasBeenPaused(false);\r\n                    killCallback(0);\r\n                });\r\n            } else {\r\n                killCallback(0);\r\n            }\r\n        });\r\n    };\r\n\r\n    QtiRunner.prototype.setRenderer = function(renderer) {\r\n        if (renderer.isRenderer) {\r\n            this.renderer = renderer;\r\n        } else {\r\n            throw 'invalid renderer';\r\n        }\r\n    };\r\n\r\n    QtiRunner.prototype.getLoader = function() {\r\n        if (!this.loader) {\r\n            this.loader = new ItemLoader();\r\n        }\r\n        return this.loader;\r\n    };\r\n\r\n    QtiRunner.prototype.loadItemData = function(data, callback) {\r\n        var self = this;\r\n        this.getLoader().loadItemData(data, function(item) {\r\n            self.item = item;\r\n            callback(self.item);\r\n        });\r\n    };\r\n\r\n    QtiRunner.prototype.loadElements = function(elements, callback) {\r\n        if (this.getLoader().item) {\r\n            this.getLoader().loadElements(elements, callback);\r\n        } else {\r\n            throw 'QtiRunner : cannot load elements in empty item';\r\n        }\r\n    };\r\n\r\n    QtiRunner.prototype.renderItem = function(data, done) {\r\n        var self = this;\r\n\r\n        done = _.isFunction(done) ? done : _.noop;\r\n\r\n        var render = function() {\r\n            if (!self.item) {\r\n                throw 'cannot render item: empty item';\r\n            }\r\n            if (self.renderer) {\r\n                self.renderer.load(function() {\r\n                    self.item.setRenderer(self.renderer);\r\n                    self.item.render({}, $('#qti_item'));\r\n\r\n                    // Race between postRendering and timeout\r\n                    // postRendering waits for everything to be resolved or one reject\r\n                    Promise.race([\r\n                        Promise.all(self.item.postRender()),\r\n                        new Promise(function(resolve, reject) {\r\n                            _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\r\n                        })\r\n                    ])\r\n                        .then(function() {\r\n                            self.item.getContainer().on('responseChange', function(e, data) {\r\n                                if (data.interaction && data.interaction.attr('responseIdentifier') && data.response) {\r\n                                    iframeNotifier.parent('responsechange', [\r\n                                        data.interaction.attr('responseIdentifier'),\r\n                                        data.response\r\n                                    ]);\r\n                                }\r\n                            });\r\n\r\n                            self.initInteractionsResponse();\r\n                            self.listenForThemeChange();\r\n                            done();\r\n                        })\r\n                        .catch(function(err) {\r\n                            //in case of postRendering issue, we are also done\r\n                            done();\r\n\r\n                            throw new Error('Error in post rendering : ' + err);\r\n                        });\r\n                }, self.getLoader().getLoadedClasses());\r\n            } else {\r\n                throw 'cannot render item: no rendered set';\r\n            }\r\n        };\r\n\r\n        if (typeof data === 'object') {\r\n            this.loadItemData(data, render);\r\n        } else {\r\n            render();\r\n        }\r\n    };\r\n\r\n    QtiRunner.prototype.initInteractionsResponse = function() {\r\n        var self = this;\r\n        if (self.item) {\r\n            var interactions = self.item.getInteractions();\r\n            for (var i in interactions) {\r\n                var interaction = interactions[i];\r\n                var responseId = interaction.attr('responseIdentifier');\r\n                self.itemApi.getVariable(responseId, function(values) {\r\n                    if (values) {\r\n                        interaction.setState(values);\r\n                        iframeNotifier.parent('stateready', [responseId, values]);\r\n                    } else {\r\n                        var states = self.getStates();\r\n                        if (_.indexOf(states, responseId)) {\r\n                            self.itemApi.setVariable(responseId, states[responseId]);\r\n                            interaction.setState(states[responseId]);\r\n                            iframeNotifier.parent('stateready', [responseId, states[responseId]]);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * If an event 'themechange' bubbles to \"#qti_item\" node\r\n     * then we tell the renderer to switch the theme.\r\n     */\r\n    QtiRunner.prototype.listenForThemeChange = function listenForThemeChange() {\r\n        var self = this;\r\n        var $container = this.renderer.getContainer(this.item);\r\n        if (!$container.length) {\r\n            $container = $('.qti-item');\r\n        }\r\n        $container.off('themechange').on('themechange', function(e, themeName) {\r\n            var themeLoader = self.renderer.getThemeLoader();\r\n            themeName = themeName || e.originalEvent.detail;\r\n            if (themeLoader) {\r\n                themeLoader.change(themeName);\r\n            }\r\n        });\r\n    };\r\n\r\n    QtiRunner.prototype.validate = function() {\r\n        this.updateItemApi();\r\n        this.itemApi.finish();\r\n    };\r\n\r\n    QtiRunner.prototype.getResponses = function() {\r\n        var responses = {};\r\n        var interactions = this.item.getInteractions();\r\n\r\n        _.forEach(interactions, function(interaction) {\r\n            var response = {};\r\n            try {\r\n                response = interaction.getResponse();\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            responses[interaction.attr('responseIdentifier')] = response;\r\n        });\r\n\r\n        return responses;\r\n    };\r\n\r\n    QtiRunner.prototype.getStates = function() {\r\n        var states = {};\r\n        var interactions = this.item.getInteractions();\r\n\r\n        _.forEach(interactions, function(interaction) {\r\n            var state = {};\r\n            try {\r\n                state = interaction.getState();\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            states[interaction.attr('responseIdentifier')] = state;\r\n        });\r\n\r\n        return states;\r\n    };\r\n\r\n    QtiRunner.prototype.setResponseProcessing = function(callback) {\r\n        this.rpEngine = callback;\r\n    };\r\n\r\n    QtiRunner.prototype.showFeedbacks = function(itemSession, callback, onShowCallback) {\r\n        var inlineDisplay = !!module.config().inlineModalFeedback;\r\n\r\n        //currently only modal feedbacks are available\r\n        if (inlineDisplay) {\r\n            return modalFeedbackInline.showFeedbacks(\r\n                this.item,\r\n                this.getLoader(),\r\n                this.renderer,\r\n                itemSession,\r\n                callback,\r\n                onShowCallback\r\n            );\r\n        } else {\r\n            return modalFeedbackModal.showFeedbacks(\r\n                this.item,\r\n                this.getLoader(),\r\n                this.renderer,\r\n                itemSession,\r\n                callback,\r\n                onShowCallback\r\n            );\r\n        }\r\n    };\n\n    return QtiRunner;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\r\n     * Common helper functions\r\n     */\r\n    var interactionHelper = {\r\n        convertChoices: function(choices, outputType) {\r\n            var ret = [],\r\n                _this = this;\r\n\r\n            _.each(choices, function(c) {\r\n                if (Element.isA(c, 'choice')) {\r\n                    switch (outputType) {\r\n                        case 'serial':\r\n                            ret.push(c.getSerial());\r\n                            break;\r\n                        case 'identifier':\r\n                            ret.push(c.id());\r\n                            break;\r\n                        default:\r\n                            ret.push(c);\r\n                    }\r\n                } else if (_.isArray(c)) {\r\n                    ret.push(_this.convertChoices(c, outputType));\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        findChoices: function(interaction, choices, inputType) {\r\n            var ret = [],\r\n                _this = this;\r\n\r\n            _.each(choices, function(c) {\r\n                var choice;\r\n                if (_.isString(c)) {\r\n                    if (inputType === 'serial') {\r\n                        choice = interaction.getChoice(c);\r\n                        if (choice) {\r\n                            ret.push(choice);\r\n                        }\r\n                    } else if (inputType === 'identifier') {\r\n                        choice = interaction.getChoiceByIdentifier(c);\r\n                        if (choice) {\r\n                            ret.push(choice);\r\n                        }\r\n                    } else {\r\n                        ret.push(c);\r\n                    }\r\n                } else if (_.isArray(c)) {\r\n                    ret.push(_this.findChoices(interaction, c, inputType));\r\n                } else {\r\n                    ret.push(c);\r\n                }\r\n            });\r\n\r\n            return ret;\r\n        },\r\n        shuffleChoices: function(choices) {\r\n            var r = [], //returned array\r\n                f = {}, //fixed choices array\r\n                j = 0;\r\n\r\n            for (var i in choices) {\r\n                if (Element.isA(choices[i], 'choice')) {\r\n                    var choice = choices[i];\r\n                    if (choice.attr('fixed')) {\r\n                        f[j] = choice;\r\n                    }\r\n                    r.push(choice);\r\n                    j++;\r\n                } else {\r\n                    throw 'invalid element in array: is not a qti choice';\r\n                }\r\n            }\r\n\r\n            for (var n = 0; n < r.length - 1; n++) {\r\n                if (f[n]) {\r\n                    continue;\r\n                }\r\n                var k = -1;\r\n                do {\r\n                    k = n + Math.floor(Math.random() * (r.length - n));\r\n                } while (f[k]);\r\n                var tmp = r[k];\r\n                r[k] = r[n];\r\n                r[n] = tmp;\r\n            }\r\n\r\n            return r;\r\n        },\r\n        serialToIdentifier: function(interaction, choiceSerial) {\r\n            var choice = interaction.getChoice(choiceSerial);\r\n            if (choice) {\r\n                return choice.id();\r\n            } else {\r\n                return '';\r\n            }\r\n        }\r\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\r\n     *\r\n     */\r\n\r\n    //webpack trick : handlebar is usale only from cjs.\r\n    //but anyway we should deprecate the practice to invoke\r\n    //directly Handlebars at runtimej\r\n    let hb = Handlebars;\r\n    if(typeof hb.compile !== 'function'){\r\n        hb = require('handlebars');\r\n    }\r\n\r\n    var _isValidRenderer = function(renderer) {\r\n        var valid = true;\r\n\r\n        if (typeof renderer !== 'object') {\r\n            return false;\r\n        }\r\n\r\n        var classCorrect = false;\r\n        if (renderer.qtiClass) {\r\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\r\n                classCorrect = true;\r\n            } else {\r\n                var pos = renderer.qtiClass.indexOf('.');\r\n                if (pos > 0) {\r\n                    var qtiClass = renderer.qtiClass.slice(0, pos);\r\n                    var subClass = renderer.qtiClass.slice(pos + 1);\r\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\r\n                        classCorrect = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!classCorrect) {\r\n            valid = false;\r\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        if (!renderer.template) {\r\n            valid = false;\r\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\r\n        }\r\n\r\n        return valid;\r\n    };\r\n\r\n    var _renderableClasses = [\r\n        '_container',\r\n        'assessmentItem',\r\n        'stylesheet',\r\n        'responseDeclaration',\r\n        'outcomeDeclaration',\r\n        'responseProcessing',\r\n        '_simpleFeedbackRule',\r\n        '_tooltip',\r\n        'img',\r\n        'math',\r\n        'object',\r\n        'table',\r\n        'modalFeedback',\r\n        'rubricBlock',\r\n        'associateInteraction',\r\n        'choiceInteraction',\r\n        'extendedTextInteraction',\r\n        'gapMatchInteraction',\r\n        'graphicAssociateInteraction',\r\n        'graphicGapMatchInteraction',\r\n        'graphicOrderInteraction',\r\n        'hotspotInteraction',\r\n        'hottextInteraction',\r\n        'inlineChoiceInteraction',\r\n        'matchInteraction',\r\n        'mediaInteraction',\r\n        'orderInteraction',\r\n        'selectPointInteraction',\r\n        'sliderInteraction',\r\n        'textEntryInteraction',\r\n        'uploadInteraction',\r\n        'endAttemptInteraction',\r\n        'customInteraction',\r\n        'prompt',\r\n        'associableHotspot',\r\n        'gap',\r\n        'gapImg',\r\n        'gapText',\r\n        'hotspotChoice',\r\n        'hottext',\r\n        'inlineChoice',\r\n        'simpleAssociableChoice',\r\n        'simpleChoice',\r\n        'infoControl',\r\n        'include',\r\n        'printedVariable'\r\n    ];\r\n\r\n    /**\r\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\r\n     */\r\n    var _dependencies = {\r\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\r\n        rubricBlock: ['_container'],\r\n        associateInteraction: ['simpleAssociableChoice'],\r\n        choiceInteraction: ['simpleChoice'],\r\n        gapMatchInteraction: ['gap', 'gapText'],\r\n        graphicAssociateInteraction: ['associableHotspot'],\r\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\r\n        graphicOrderInteraction: ['hotspotChoice'],\r\n        hotspotInteraction: ['hotspotChoice'],\r\n        hottextInteraction: ['hottext'],\r\n        inlineChoiceInteraction: ['inlineChoice'],\r\n        matchInteraction: ['simpleAssociableChoice'],\r\n        orderInteraction: ['simpleChoice']\r\n    };\r\n\r\n    /**\r\n     * The list of supported qti subclasses.\r\n     */\r\n    var _renderableSubclasses = {\r\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\r\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\r\n    };\r\n\r\n    /**\r\n     * List of the default properties for the item\r\n     */\r\n    var _defaults = {\r\n        shuffleChoices: true\r\n    };\r\n\r\n    /**\r\n     * Get the location of the document, useful to define a baseUrl for the required context\r\n     * @returns {String}\r\n     */\r\n    function getDocumentBaseUrl() {\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\r\n    }\r\n\r\n    /**\r\n     * The built Renderer class\r\n     * @constructor\r\n     * @param {Object} [options] - the renderer options\r\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\r\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\r\n     * @param {Object} [options.decorators] - to set up rendering decorator\r\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\r\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\r\n     */\r\n    var Renderer = function(options) {\r\n        /**\r\n         * Store the registered renderer location\r\n         */\r\n        var _locations = {};\r\n\r\n        /**\r\n         * Store loaded renderers\r\n         */\r\n        var _renderers = {};\r\n\r\n        options = _.defaults(options || {}, _defaults);\r\n\r\n        this.isRenderer = true;\r\n\r\n        this.name = '';\r\n\r\n        //store shuffled choice here\r\n        this.shuffledChoices = [];\r\n\r\n        /**\r\n         * Get the actual renderer of the give qti class or subclass:\r\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\r\n         */\r\n        var _getClassRenderer = function(qtiClass) {\r\n            var ret = null;\r\n            if (_renderers[qtiClass]) {\r\n                ret = _renderers[qtiClass];\r\n            } else {\r\n                var pos = qtiClass.indexOf('.');\r\n                if (pos > 0) {\r\n                    qtiClass = qtiClass.slice(0, pos);\r\n                    if (_renderers[qtiClass]) {\r\n                        ret = _renderers[qtiClass];\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Registers a QTI renderer class\r\n         * @param {String} qtiClass\r\n         * @param {Array} list\r\n         * @returns {Boolean} `true` if the class has been successfully registered\r\n         */\r\n        function registerRendererClass(qtiClass, list) {\r\n            var success = false;\r\n            if (_locations[qtiClass] === false) {\r\n                //mark this class as not renderable\r\n                _renderers[qtiClass] = false;\r\n                success = true;\r\n            } else if (_locations[qtiClass]) {\r\n                list.push(_locations[qtiClass]);\r\n                success = true;\r\n            }\r\n            return success;\r\n        }\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {String} key - the name of the option\r\n         * @param {*} value - the option vallue\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOption = function(key, value) {\r\n            if (typeof key === 'string') {\r\n                options[key] = value;\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Set the renderer options\r\n         * @param {Object} opts - the options\r\n         * @returns {Renderer} for chaining\r\n         */\r\n        this.setOptions = function(opts) {\r\n            options = _.extend(options, opts);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Get the renderer option\r\n         * @param {String} key - the name of the option\r\n         * @returns {*|null} the option vallue\r\n         */\r\n        this.getOption = function(key) {\r\n            if (typeof key === 'string' && options[key]) {\r\n                return options[key];\r\n            }\r\n            return null;\r\n        };\r\n\r\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\r\n            var messages = this.getOption('messages');\r\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\r\n                //currently not translatable but potentially could be if the need raises\r\n                return hb.compile(messages[elementName][messageKey]);\r\n            } else {\r\n                return null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the bound assetManager\r\n         * @returns {AssetManager} the assetManager\r\n         */\r\n        this.getAssetManager = function getAssetManager() {\r\n            return options.assetManager;\r\n        };\r\n\r\n        /**\r\n         * Get the bound theme loader\r\n         * @returns {Object} the themeLoader\r\n         */\r\n        this.getThemeLoader = function getThemeLoader() {\r\n            return this.themeLoader;\r\n        };\r\n\r\n        /**\r\n         * Renders the template\r\n         * @param {Object} element - the QTI model element\r\n         * @param {Object} data - the data to give to the template\r\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n         * @returns {String} the template results\r\n         * @throws {Error} if the renderer is not set or has no template bound\r\n         */\r\n        this.renderTpl = function(element, data, qtiSubclass) {\r\n            var res;\r\n            var ret = '';\r\n            var qtiClass = qtiSubclass || element.qtiClass;\r\n            var renderer = _getClassRenderer(qtiClass);\r\n            var decorators = this.getOption('decorators');\r\n\r\n            if (!renderer || !_.isFunction(renderer.template)) {\r\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\r\n            }\r\n\r\n            //pre rendering decoration\r\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\r\n                /**\r\n                 * @callback preRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.before(element, qtiSubclass);\r\n                if (_.isString(res)) {\r\n                    ret += res;\r\n                }\r\n            }\r\n\r\n            //render the template\r\n            ret += renderer.template(data);\r\n\r\n            //post rendering decoration\r\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\r\n                /**\r\n                 * @callback postRenderDecoractor\r\n                 * @param {Object} element - the QTI model element\r\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\r\n                 * @returns {String} the decorator result\r\n                 */\r\n                res = decorators.after(element, qtiSubclass);\r\n                if (_.isString(res)) {\r\n                    ret += res;\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getData = function(element, data, qtiSubclass) {\r\n            var ret = data,\r\n                qtiClass = qtiSubclass || element.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.getData === 'function') {\r\n                    ret = renderer.getData.call(this, element, data);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        };\r\n\r\n        this.renderDirect = function(tpl, data) {\r\n            return hb.compile(tpl)(data);\r\n        };\r\n\r\n        this.getContainer = function(qtiElement, $scope, qtiSubclass) {\r\n            var ret = null,\r\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                ret = renderer.getContainer(qtiElement, $scope);\r\n            } else {\r\n                throw 'no renderer found for the class : ' + qtiElement.qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.postRender = function(qtiElement, data, qtiSubclass) {\r\n            var qtiClass = qtiSubclass || qtiElement.qtiClass;\r\n            var renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer && typeof renderer.render === 'function') {\r\n                return renderer.render.call(this, qtiElement, data);\r\n            }\r\n        };\r\n\r\n        this.setResponse = function(qtiInteraction, response, qtiSubclass) {\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.setResponse === 'function') {\r\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\r\n                    var $container = renderer.getContainer.call(this, qtiInteraction);\r\n                    if ($container instanceof $ && $container.length) {\r\n                        $container.trigger('responseSet', [qtiInteraction, response]);\r\n                    }\r\n                }\r\n            } else {\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getResponse = function(qtiInteraction, qtiSubclass) {\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.getResponse === 'function') {\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.resetResponse = function(qtiInteraction, qtiSubclass) {\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (typeof renderer.resetResponse === 'function') {\r\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         * @returns {Object} the interaction's state\r\n         *\r\n         * @throws {Error} if no renderer is registered\r\n         */\r\n        this.getState = function(qtiInteraction, qtiSubclass) {\r\n            var ret = false;\r\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            var renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.getState)) {\r\n                    ret = renderer.getState.call(this, qtiInteraction);\r\n                } else {\r\n                    ret = renderer.getResponse.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        /**\r\n         * Retrieve the state of the interaction.\r\n         * If the renderer has no state management, it falls back to the response management.\r\n         *\r\n         * @param {Object} qtiInteraction - the interaction\r\n         * @param {Object} state - the interaction's state\r\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.setState = function(qtiInteraction, state, qtiSubclass) {\r\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\r\n            var renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.setState)) {\r\n                    renderer.setState.call(this, qtiInteraction, state);\r\n                } else {\r\n                    renderer.resetResponse.call(this, qtiInteraction);\r\n                    renderer.setResponse.call(this, qtiInteraction, state);\r\n                }\r\n            } else {\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Calls the renderer destroy.\r\n         * Ask the renderer to run destroy if exists.\r\n         *\r\n         * @throws {Error} if no renderer is found\r\n         */\r\n        this.destroy = function(qtiInteraction, qtiSubclass) {\r\n            var ret = false,\r\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\r\n                renderer = _getClassRenderer(qtiClass);\r\n\r\n            if (renderer) {\r\n                if (_.isFunction(renderer.destroy)) {\r\n                    ret = renderer.destroy.call(this, qtiInteraction);\r\n                }\r\n            } else {\r\n                throw 'no renderer registered under the name : ' + qtiClass;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        this.getLoadedRenderers = function() {\r\n            return _renderers;\r\n        };\r\n\r\n        this.register = function(renderersLocations) {\r\n            _.extend(_locations, renderersLocations);\r\n        };\r\n\r\n        this.load = function(callback, requiredClasses) {\r\n            var self = this;\r\n            var required = [];\r\n\r\n            var themeData = themesHelper.getCurrentThemeData();\r\n            if (themeData) {\r\n                options.themes = themeData;\r\n            }\r\n            if (options.themes) {\r\n                //resolve themes paths\r\n                options.themes.base = this.resolveUrl(options.themes.base);\r\n                _.forEach(options.themes.available, function(theme, index) {\r\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\r\n                });\r\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\r\n            }\r\n\r\n            if (requiredClasses) {\r\n                if (_.isArray(requiredClasses)) {\r\n                    //exclude abstract classes\r\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\r\n\r\n                    //add dependencies\r\n                    _.each(requiredClasses, function(reqClass) {\r\n                        var deps = _dependencies[reqClass];\r\n                        if (deps) {\r\n                            requiredClasses = _.union(requiredClasses, deps);\r\n                        }\r\n                    });\r\n\r\n                    _.forEach(requiredClasses, function(qtiClass) {\r\n                        var requiredSubClasses;\r\n                        if (_renderableSubclasses[qtiClass]) {\r\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\r\n                            _.each(requiredSubClasses, function(subclass) {\r\n                                if (\r\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\r\n                                    !registerRendererClass(qtiClass, required)\r\n                                ) {\r\n                                    throw new Error(\r\n                                        self.name +\r\n                                            ' : missing qti class location declaration: ' +\r\n                                            qtiClass +\r\n                                            ', subclass: ' +\r\n                                            subclass\r\n                                    );\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (!registerRendererClass(qtiClass, required)) {\r\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\r\n                }\r\n            } else {\r\n                required = _.values(_locations);\r\n            }\r\n\r\n            moduleLoader([], ()=> true)\r\n                .addList( required.map( module => ({ module, category: 'qti'}) ) )\r\n                .load()\r\n                .then( loaded => {\r\n                    loaded.forEach( clazz => {\r\n                        if (_isValidRenderer(clazz)) {\r\n                            _renderers[clazz.qtiClass] = clazz;\r\n                        }\r\n\r\n                    });\r\n                    if (typeof callback === 'function') {\r\n                        callback.call(self, _renderers);\r\n                    }\r\n                });\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Unload the renderer\r\n         */\r\n        this.unload = function unload() {\r\n            if (this.themeLoader) {\r\n                themeLoader(options.themes).unload();\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Define the shuffling manually\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Array} choices - the shuffled choices\r\n         * @param {String} identificationType -\r\n         */\r\n        this.setShuffledChoices = function(interaction, choices, identificationType) {\r\n            if (Element.isA(interaction, 'interaction')) {\r\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(\r\n                    interactionHelper.findChoices(interaction, choices, identificationType),\r\n                    'serial'\r\n                );\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Get the choices shuffled for this interaction.\r\n         *\r\n         * @param {Object} interaction - the interaction\r\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\r\n         * @param {String} returnedType - the choice type\r\n         * @returns {Array} the choices\r\n         */\r\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType) {\r\n            var choices = [];\r\n            var serial, i;\r\n\r\n            if (Element.isA(interaction, 'interaction')) {\r\n                serial = interaction.getSerial();\r\n\r\n                //1st time, we shuffle (or asked to force shuffling)\r\n                if (!this.shuffledChoices[serial] || reshuffle) {\r\n                    if (Element.isA(interaction, 'matchInteraction')) {\r\n                        this.shuffledChoices[serial] = [];\r\n                        for (i = 0; i < 2; i++) {\r\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\r\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\r\n                        }\r\n                    } else {\r\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\r\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\r\n                    }\r\n\r\n                    //otherwise get the choices from the serials\r\n                } else {\r\n                    if (Element.isA(interaction, 'matchInteraction')) {\r\n                        _.forEach(choices, function(choice, index) {\r\n                            if (index < 2) {\r\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial) {\r\n                                    choice.push(interaction.getChoice(choiceSerial));\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial) {\r\n                            choices.push(interaction.getChoice(choiceSerial));\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //do some type convertion\r\n                if (returnedType === 'serial' || returnedType === 'identifier') {\r\n                    return interactionHelper.convertChoices(choices, returnedType);\r\n                }\r\n\r\n                //pass value only, not ref\r\n                return _.clone(choices);\r\n            }\r\n\r\n            return [];\r\n        };\r\n\r\n        this.getRenderers = function() {\r\n            return _renderers;\r\n        };\r\n\r\n        this.getLocations = function() {\r\n            return _locations;\r\n        };\r\n\r\n        /**\r\n         * Resolve URLs using the defined assetManager's strategies\r\n         * @param {String} url - the URL to resolve\r\n         * @returns {String} the resolved URL\r\n         */\r\n        this.resolveUrl = function resolveUrl(url) {\r\n            if (!options.assetManager) {\r\n                return url;\r\n            }\r\n            if (typeof url === 'string' && url.length > 0) {\r\n                return options.assetManager.resolve(url);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @deprecated in favor of resolveUrl\r\n         */\r\n        this.getAbsoluteUrl = function(relUrl) {\r\n            //let until method is removed\r\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\r\n\r\n            //allow relative url output only if explicitely said so\r\n            if (this.getOption('userRelativeUrl')) {\r\n                return relUrl.replace(/^\\.?\\//, '');\r\n            }\r\n\r\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\r\n                //already absolute or base64 encoded\r\n                return relUrl;\r\n            } else {\r\n                var absUrl = '';\r\n                var runtimeLocations = this.getOption('runtimeLocations');\r\n\r\n                if (runtimeLocations && _.size(runtimeLocations)) {\r\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier) {\r\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\r\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\r\n                            return false; //break\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (absUrl) {\r\n                    return absUrl;\r\n                } else {\r\n                    var baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\r\n                    return baseUrl + relUrl;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\r\n            this._areaBroker = areaBroker;\r\n        };\r\n\r\n        this.getAreaBroker = function getAreaBroker() {\r\n            if (this._areaBroker) {\r\n                return this._areaBroker;\r\n            }\r\n        };\r\n\r\n        this.getItemCreator = function getItemCreator() {\r\n            return this.getOption('itemCreator');\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Expose the renderer's factory\r\n     * @exports taoQtiItem/qtiRunner/core/Renderer\r\n     */\r\n    var Renderer$1 = {\r\n        /**\r\n         * Creates a new Renderer by extending the Renderer's prototype\r\n         * @param {Object} renderersLocations -\r\n         * @param {String} [name] - the new renderer name\r\n         * @param {Object} [defaultOptions] - the renderer options\r\n         */\r\n        build: function(renderersLocations, name, defaultOptions) {\r\n            var NewRenderer = function() {\r\n                var options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\r\n\r\n                Renderer.apply(this);\r\n\r\n                this.register(renderersLocations);\r\n                this.name = name || '';\r\n                this.setOptions(_.defaults(options, defaultOptions || {}));\r\n            };\r\n            NewRenderer.prototype = Renderer.prototype;\r\n            return NewRenderer;\r\n        }\r\n    };\n\n    return Renderer$1;\n\n});\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\r\n    'use strict';\r\n\r\n    var _requirejs = window.require;\r\n    var _defaultLoadingOptions = {\r\n        reload: false\r\n    };\r\n\r\n    var loadModuleConfig = function loadModuleConfig(manifest){\r\n        return new Promise(function(resolve, reject){\r\n            var requireConfigAliases = {};\r\n            var baseUrl;\r\n            var reqConfigs = [];\r\n            var modules = {};\r\n\r\n            if(!manifest || !manifest.runtime){\r\n                return reject('invalid manifest');\r\n            }\r\n\r\n            baseUrl = manifest.baseUrl;\r\n\r\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\r\n                _.forEach(manifest.runtime.config, function(pciConfig){\r\n                    if(_.isString(pciConfig)){\r\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\r\n                    }else{\r\n                        if(pciConfig.data){\r\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\r\n                        }else if(pciConfig.file){\r\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            require(reqConfigs, function(){\r\n\r\n                var runtimeModules = {};\r\n\r\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\r\n\r\n                if(manifest.model === 'IMSPCI'){\r\n\r\n                    modules = _.reduce(arguments, function(acc, conf){\r\n                        return _.defaults(acc, conf.paths || {});\r\n                    }, modules);\r\n\r\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\r\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\r\n                            runtimeModules[id] = paths;\r\n                        }\r\n                    });\r\n\r\n                    modules = _.merge(modules, runtimeModules);\r\n\r\n                    _.forEach(modules, function(paths, id){\r\n                        paths = _.isArray(paths) ? paths : [paths];\r\n                        requireConfigAliases[id] = _.map(paths, function(path){\r\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\r\n                        });\r\n                    });\r\n                }\r\n\r\n                resolve(requireConfigAliases);\r\n\r\n            }, reject);\r\n\r\n\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Evaluate if the given object is a proper portable element provider\r\n     * @param {Object} provider\r\n     * @returns {Boolean}\r\n     */\r\n    var isPortableElementProvider = function isPortableElementProvider(provider){\r\n        return (provider && _.isFunction(provider.load));\r\n    };\r\n\r\n    return function portableElementRegistry(methods){\r\n\r\n        var _loaded = false;\r\n        var __providers = {};\r\n\r\n        /**\r\n         * The portable element registry instance\r\n         * @typedef {portableElementRegistry}\r\n         */\r\n        return eventifier(_.defaults(methods || {}, {\r\n            _registry : {},\r\n\r\n            /**\r\n             * Get a register portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} version\r\n             * @returns {Object}\r\n             */\r\n            get : function get(typeIdentifier, version){\r\n\r\n                if(this._registry[typeIdentifier]){\r\n                    //check version\r\n                    if(version){\r\n                        return _.find(this._registry[typeIdentifier], {version : version});\r\n                    }else{\r\n                        //latest\r\n                        return _.last(this._registry[typeIdentifier]);\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Register a portable element provider\r\n             * @param moduleName\r\n             * @param {String|Object }provider - the portable provider object or module name\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            registerProvider : function registerProvider(moduleName, provider){\r\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\r\n                _loaded = false;\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Clear all previously registered providers\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            resetProviders : function resetProviders(){\r\n                __providers = {};\r\n                _loaded = false;\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Load the providers\r\n             * @param {Object} [options]\r\n             * @param {Boolean} [options.reload] - force to reload the registered providers\r\n             * @returns {Promise}\r\n             */\r\n            loadProviders : function loadProviders(options){\r\n                var self = this;\r\n                var loadPromise;\r\n\r\n                if(_loaded && !options.reload){\r\n                    loadPromise = Promise.resolve([]);\r\n                } else {\r\n                    loadPromise = new Promise(function(resolve, reject) {\r\n                        var providerLoadingStack = [];\r\n                        _.forIn(__providers, function(provider, id){\r\n                            if(provider === null){\r\n                                providerLoadingStack.push(id);\r\n                            }\r\n                        });\r\n                        _requirejs(providerLoadingStack, function(){\r\n                            _.each([].slice.call(arguments), function(provider){\r\n                                if(isPortableElementProvider(provider)){\r\n                                    __providers[providerLoadingStack.shift()] = provider;\r\n                                }\r\n                            });\r\n                            resolve(__providers);\r\n                            _loaded = true;\r\n                            self.trigger('providersloaded', __providers);\r\n                        }, reject);\r\n                    });\r\n                }\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * Get all versions of all portable elements registered\r\n             * @returns {Object} - all portable elements and their versions\r\n             */\r\n            getAllVersions : function getAllVersions(){\r\n                var all = {};\r\n                _.forIn(this._registry, function (versions, id){\r\n                    all[id] = _.map(versions, 'version');\r\n                });\r\n                return all;\r\n            },\r\n\r\n            /**\r\n             * Get the runtime for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {Object} the runtime model\r\n             */\r\n            getRuntime : function getRuntime(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    return _.assign(portableElement.runtime, {\r\n                        id : portableElement.typeIdentifier,\r\n                        label : portableElement.label,\r\n                        baseUrl : portableElement.baseUrl,\r\n                        model : portableElement.model\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the creator model for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {Object} the creator model\r\n             */\r\n            getCreator : function getCreator(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement && portableElement.creator){\r\n                    return _.assign(portableElement.creator, {\r\n                        id : portableElement.typeIdentifier,\r\n                        label : portableElement.label,\r\n                        baseUrl : portableElement.baseUrl,\r\n                        response : portableElement.response,\r\n                        model : portableElement.model,\r\n                        xmlns : portableElement.xmlns\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Returned all enabled created from the registry\r\n             * @returns {Object} the collection of creators\r\n             */\r\n            getLatestCreators : function getLatestCreators(){\r\n                var all = {};\r\n                _.forIn(this._registry, function (versions, id){\r\n                    var lastVersion = _.last(versions);\r\n\r\n                    //check if the portable element is creatable:\r\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\r\n                        all[id] = lastVersion;\r\n                    }\r\n                });\r\n                return all;\r\n            },\r\n\r\n            /**\r\n             * Get the baseUrl for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {String} the base url\r\n             */\r\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\r\n                var runtime = this.get(typeIdentifier, version);\r\n                if(runtime){\r\n                    return runtime.baseUrl;\r\n                }\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Load the runtimes from registered portable element provider(s)\r\n             *\r\n             * @param {Object} [options]\r\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\r\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\r\n             * @returns {Promise}\r\n             */\r\n            loadRuntimes : function loadRuntimes(options){\r\n                var self = this;\r\n                var loadPromise;\r\n\r\n                options = _.defaults(options||{}, _defaultLoadingOptions);\r\n\r\n                    loadPromise = self.loadProviders(options).then(function(providers){\r\n\r\n                        var loadStack = [];\r\n\r\n                        _.forEach(providers, function (provider){\r\n                            if(provider){//check that the provider is loaded\r\n                                loadStack.push(provider.load());\r\n                            }\r\n                        });\r\n\r\n                        //performs the loadings in parallel\r\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\r\n\r\n                                var configLoadingStack = [];\r\n\r\n                                //update registry\r\n                                self._registry = _.reduce(results, function (acc, _pcis){\r\n                                    return _.merge(acc, _pcis);\r\n                                }, self._registry || {});//incremental loading\r\n\r\n                                //pre-configuring the baseUrl of the portable element's source\r\n                                _.forIn(self._registry, function (versions, typeIdentifier){\r\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\r\n                                        return true;\r\n                                    }\r\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\r\n                                });\r\n\r\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\r\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\r\n                                        return _.merge(acc, paths);\r\n                                    }, {});\r\n\r\n                                    //save the required libs name => path to global require alias\r\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\r\n                                    _requirejs.config({paths : requireConfigAliases});\r\n                                });\r\n                            });\r\n\r\n                    });\r\n\r\n\r\n                loadPromise\r\n                    .then(function() {\r\n                        self.trigger('runtimesloaded');\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * Load the creators from registered portable element provider(s)\r\n             *\r\n             * @param {Object} [options]\r\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\r\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\r\n             * @returns {Promise}\r\n             */\r\n            loadCreators : function loadCreators(options){\r\n                var loadPromise;\r\n                var self = this;\r\n\r\n                options = _.defaults(options||{}, _defaultLoadingOptions);\r\n\r\n                loadPromise = self.loadRuntimes(options).then(function(){\r\n                    var requiredCreatorHooks = [];\r\n\r\n                    _.forIn(self._registry, function (versions, typeIdentifier){\r\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\r\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\r\n                            if(portableElementModel.enabled){\r\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\r\n                                    return true;\r\n                                }\r\n                            }else{\r\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\r\n                        }\r\n                    });\r\n\r\n                    if(requiredCreatorHooks.length){\r\n                        return new Promise(function(resolve, reject){\r\n                            //@todo support caching?\r\n                            _requirejs(requiredCreatorHooks, function (){\r\n                                var creators = {};\r\n                                _.each(arguments, function (creatorHook){\r\n                                    var id = creatorHook.getTypeIdentifier();\r\n                                    var portableElementModel = self.get(id);\r\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\r\n                                    if(i < 0){\r\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\r\n                                    }else{\r\n                                        self._registry[id][i].creator.module = creatorHook;\r\n                                        creators[id] = creatorHook;\r\n                                    }\r\n                                });\r\n                                resolve(creators);\r\n                            }, reject);\r\n                        });\r\n                    }else{\r\n                        return Promise.resolve({});\r\n                    }\r\n\r\n                });\r\n\r\n                loadPromise\r\n                    .then(function(creators) {\r\n                        self.trigger('creatorsloaded', creators);\r\n                        return creators;\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * enable a portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            enable: function enable(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    portableElement.enabled = true;\r\n                }\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * disable a portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            disable: function disable(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    portableElement.enabled = false;\r\n                }\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * check is a portable element is enabled\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            isEnabled: function isEnabled(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                return (portableElement && portableElement.enabled === true);\r\n            }\r\n        }));\r\n    };\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Sam <sams@taotesting.com>\r\n * @requires jquery\r\n * @requires lodash\r\n */\r\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n'], function($, _, __){\r\n    \"use strict\";\r\n\r\n    var QtiElements = {};\r\n\r\n    QtiElements.classes = {\r\n        //abstract classes:\r\n        'itemBody' : {'parents' : ['bodyElement'], 'contains' : ['block'], 'abstract' : true},\r\n        'atomicBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['inline'], 'abstract' : true},\r\n        'atomicInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\r\n        'simpleBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['block'], 'abstract' : true},\r\n        'simpleInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\r\n        'flowStatic' : {'parents' : ['flow'], 'abstract' : true},\r\n        'blockStatic' : {'parents' : ['block'], 'abstract' : true},\r\n        'inlineStatic' : {'parents' : ['inline'], 'abstract' : true},\r\n        'flow' : {'parents' : ['objectFlow'], 'abstract' : true},\r\n        'tableCell' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'abstract' : true},\r\n        //html-derived qti elements:\r\n        'caption' : {'parents' : ['bodyElement'], 'contains' : ['inline'], 'xhtml' : true},\r\n        'col' : {'parents' : ['bodyElement'], 'xhtml' : true},\r\n        'colgroup' : {'parents' : ['bodyElement'], 'contains' : ['col'], 'xhtml' : true},\r\n        'div' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['flow'], 'xhtml' : true},\r\n        'dl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['dlElement'], 'xhtml' : true},\r\n        'dt' : {'parents' : ['dlElement'], 'contains' : ['inline'], 'xhtml' : true},\r\n        'dd' : {'parents' : ['dlElement'], 'contains' : ['flow'], 'xhtml' : true},\r\n        'hr' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'xhtml' : true},\r\n        'math' : {'parents' : ['blockStatic', 'flowStatic', 'inlineStatic'], 'xhtml' : true},\r\n        'li' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'xhtml' : true},\r\n        'ol' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\r\n        'ul' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\r\n        'object' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['objectFlow'], 'xhtml' : true},\r\n        'param' : {'parents' : ['objectFlow'], 'xhtml' : true},\r\n        'table' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'], 'xhtml' : true},\r\n        'tbody' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\r\n        'tfoot' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\r\n        'thead' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\r\n        'td' : {'parents' : ['tableCell'], 'xhtml' : true},\r\n        'th' : {'parents' : ['tableCell'], 'xhtml' : true},\r\n        'tr' : {'parents' : ['bodyElement'], 'contains' : ['tableCell'], 'xhtml' : true},\r\n        'a' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'abbr' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'acronym' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'b' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'big' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'cite' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'code' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'dfn' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'em' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'i' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'kbd' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'q' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'samp' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'small' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'span' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'strong' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'sub' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'sup' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'tt' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'var' : {'parents' : ['simpleInline'], 'xhtml' : true},\r\n        'blockquote' : {'parents' : ['simpleBlock'], 'xhtml' : true},\r\n        'address' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h1' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h2' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h3' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h4' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h5' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'h6' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'p' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'pre' : {'parents' : ['atomicBlock'], 'xhtml' : true},\r\n        'img' : {'parents' : ['atomicInline'], 'xhtml' : true, attributes : ['src', 'alt', 'longdesc', 'height', 'width']},\r\n        'br' : {'parents' : ['atomicInline'], 'xhtml' : true},\r\n        //qti elements:\r\n        'infoControl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'qti' : true},\r\n        'textRun' : {'parents' : ['inlineStatic', 'flowstatic'], 'qti' : true},\r\n        'feedbackInline' : {'parents' : ['simpleInline', 'feedbackElement'], 'qti' : true},\r\n        'feedbackBlock' : {'parents' : ['simpleBlock'], 'qti' : true},\r\n        'rubricBlock' : {'parents' : ['simpleBlock'], 'qti' : true}, //strange qti 2.1 exception, marked as simpleBlock instead of\r\n        'blockInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\r\n        'inlineInteraction' : {'parents' : ['inline', 'flow', 'interaction'], 'qti' : true},\r\n        'gap' : {'parents' : ['inlineStatic'], 'qti' : true},\r\n        'hottext' : {'parents' : ['flowstatic', 'inlineStatic'], 'contains' : ['inlineStatic'], 'qti' : true},\r\n        'printedVariable' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], 'qti' : true},\r\n        'prompt' : {'parents' : ['bodyElement'], 'contains' : ['inlineStatic'], 'qti' : true},\r\n        'templateElement' : {'parents' : ['bodyElement'], 'qti' : true},\r\n        'templateBlock' : {'parents' : ['blockStatic', 'flowStatic', 'templateElement'], 'contains' : ['blockStatic'], 'qti' : true},\r\n        'templateInline' : {'parents' : ['inlineStatic', 'flowStatic', 'templateElement'], 'contains' : ['inlineStatic'], 'qti' : true},\r\n        'choiceInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'associateInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'orderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'matchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'hottextInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'gapMatchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'mediaInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'sliderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'uploadInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'drawingInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'graphicInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\r\n        'hotspotInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'graphicAssociateInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'graphicOrderInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'graphicGapMatchInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'selectPointInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\r\n        'textEntryInteraction' : {'parents' : ['stringInteraction', 'inlineInteraction'], 'qti' : true},\r\n        'extendedTextInteraction' : {'parents' : ['stringInteraction', 'blockInteraction'], 'qti' : true},\r\n        'inlineChoiceInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\r\n        'endAttemptInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\r\n        'customInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\r\n        '_container' : {'parents' : ['block'], 'qti' : true}//a pseudo class introduced in TAO\r\n    };\r\n\r\n    QtiElements.cache = {containable : {}, children : {}, parents : {}};\r\n\r\n    QtiElements.getAllowedContainersElements = function(qtiClass, $container){\r\n        var classes = QtiElements.getAllowedContainers(qtiClass);\r\n        var jqSelector = '';\r\n        for(var i in classes){\r\n            if(!classes[i].qti){\r\n                //html element:\r\n                jqSelector += classes[i] + ', ';\r\n            }\r\n        }\r\n\r\n        if(jqSelector){\r\n            jqSelector = jqSelector.substring(0, jqSelector.length - 2);\r\n        }\r\n\r\n        return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\r\n    };\r\n\r\n    QtiElements.getAllowedContainers = function(qtiClass){\r\n        var ret;\r\n        if(QtiElements.cache.containable[qtiClass]){\r\n            ret = QtiElements.cache.containable[qtiClass];\r\n        }else{\r\n            ret = [];\r\n            var parents = QtiElements.getParentClasses(qtiClass, true);\r\n            for(var aClass in QtiElements.classes){\r\n                var model = QtiElements.classes[aClass];\r\n                if(model.contains){\r\n                    var intersect = _.intersection(model.contains, parents);\r\n                    if(intersect.length){\r\n                        if(!model.abstract){\r\n                            ret.push(aClass);\r\n                        }\r\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\r\n                    }\r\n                }\r\n            }\r\n            QtiElements.cache.containable[qtiClass] = ret;\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    QtiElements.getAllowedContents = function(qtiClass, recursive, checked){\r\n\r\n        var ret = [];\r\n        checked = checked || {};\r\n\r\n        var model = QtiElements.classes[qtiClass];\r\n        if(model && model.contains){\r\n            for(var i in model.contains){\r\n                var contain = model.contains[i];\r\n                if(!checked[contain]){\r\n                    checked[contain] = true;\r\n\r\n                    //qtiClass can contain everything defined as its contents\r\n                    ret.push(contain);\r\n\r\n                    //qtiClass can also contain subclass of its contents\r\n                    var children = QtiElements.getChildClasses(contain, true);\r\n                    for(var i in children){\r\n                        var child = children[i];\r\n                        if(!checked[child]){\r\n                            checked[child] = true;\r\n\r\n                            ret.push(child);\r\n\r\n                            //adding children allowed contents depends on the option \"recursive\"\r\n                            if(recursive){\r\n                                ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\r\n                    if(recursive){\r\n                        ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        //qtiClass can contain all allowed contents of its parents:\r\n        var parents = QtiElements.getParentClasses(qtiClass, true);\r\n        for(var i in parents){\r\n            ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\r\n        }\r\n\r\n        return _.uniq(ret, false);\r\n    };\r\n\r\n    QtiElements.isAllowedClass = function(qtiContainerClass, qtiContentClass){\r\n        var allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\r\n        return (_.indexOf(allowedClasses, qtiContentClass) >= 0);\r\n    };\r\n\r\n    QtiElements.getParentClasses = function(qtiClass, recursive){\r\n        var ret;\r\n        if(recursive && QtiElements.cache.parents[qtiClass]){\r\n            ret = QtiElements.cache.parents[qtiClass];\r\n        }else{\r\n            ret = [];\r\n            if(QtiElements.classes[qtiClass]){\r\n                ret = QtiElements.classes[qtiClass].parents;\r\n                if(recursive){\r\n                    for(var i in ret){\r\n                        ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\r\n                    }\r\n                    ret = _.uniq(ret, false);\r\n                }\r\n            }\r\n            QtiElements.cache.parents[qtiClass] = ret;\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    QtiElements.getChildClasses = function(qtiClass, recursive, type){\r\n        var ret;\r\n        var cacheType = type ? type : 'all';\r\n        if(recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]){\r\n            ret = QtiElements.cache.children[qtiClass][cacheType];\r\n        }else{\r\n            ret = [];\r\n            for(var aClass in QtiElements.classes){\r\n                var model = QtiElements.classes[aClass];\r\n                if(_.indexOf(model.parents, qtiClass) >= 0){\r\n                    if(type){\r\n                        if(model[type]){\r\n                            ret.push(aClass);\r\n                        }\r\n                    }else{\r\n                        ret.push(aClass);\r\n                    }\r\n                    if(recursive){\r\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\r\n                    }\r\n                }\r\n            }\r\n            if(!QtiElements.cache.children[qtiClass]){\r\n                QtiElements.cache.children[qtiClass] = {};\r\n            }\r\n            QtiElements.cache.children[qtiClass][cacheType] = ret;\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    QtiElements.isBlock = function(qtiClass){\r\n        return QtiElements.is(qtiClass, 'block');\r\n    };\r\n\r\n    QtiElements.isInline = function(qtiClass){\r\n        return QtiElements.is(qtiClass, 'inline');\r\n    };\r\n\r\n    QtiElements.is = function(qtiClass, topClass){\r\n        if(qtiClass === topClass){\r\n            return true;\r\n        }else{\r\n            var parents = QtiElements.getParentClasses(qtiClass, true);\r\n            return (_.indexOf(parents, topClass) >= 0);\r\n        }\r\n    };\r\n\r\n    QtiElements.getAvailableAuthoringElements = function(){\r\n\r\n        var tagTitles = {\r\n            commonInteractions: __('Common Interactions'),\r\n            inlineInteractions: __('Inline Interactions'),\r\n            graphicInteractions: __('Graphic Interactions')\r\n        }\r\n\r\n        return {\r\n            choiceInteraction : {\r\n                label : __('Choice Interaction'),\r\n                description : __('Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'),\r\n                icon : 'icon-choice',\r\n                short : __('Choice'),\r\n                qtiClass : 'choiceInteraction',\r\n                tags:[tagTitles.commonInteractions, 'mcq'],\r\n                group: 'common-interactions'\r\n            },\r\n            orderInteraction : {\r\n                label : __('Order Interaction'),\r\n                icon : 'icon-order',\r\n                description : __('Arrange a list of choices in the correct order.'),\r\n                short : __('Order'),\r\n                qtiClass : 'orderInteraction',\r\n                tags:[tagTitles.commonInteractions, 'ordering'],\r\n                group: 'common-interactions'\r\n\r\n            },\r\n            associateInteraction : {\r\n                label : __('Associate Interaction'),\r\n                icon : 'icon-associate',\r\n                description : __('Create pair(s) from a series of choices.'),\r\n                short : __('Associate'),\r\n                qtiClass : 'associateInteraction',\r\n                tags:[tagTitles.commonInteractions, 'association'],\r\n                group: 'common-interactions'\r\n            },\r\n            matchInteraction : {\r\n                label : __('Match Interaction'),\r\n                icon : 'icon-match',\r\n                description : __('Create association(s) between two sets of choices displayed in a table (row and column).'),\r\n                short : __('Match'),\r\n                qtiClass : 'matchInteraction',\r\n                tags:[tagTitles.commonInteractions, 'association'],\r\n                group: 'common-interactions'\r\n            },\r\n            hottextInteraction : {\r\n                label : __('Hottext Interaction'),\r\n                icon : 'icon-hottext',\r\n                description : __('Select one or more text parts (hottext) within a text.'),\r\n                short : __('Hottext'),\r\n                qtiClass : 'hottextInteraction',\r\n                tags:[tagTitles.commonInteractions, 'text'],\r\n                group: 'common-interactions'\r\n            },\r\n            gapMatchInteraction : {\r\n                label : __('Gap Match Interaction'),\r\n                icon : 'icon-gap-match',\r\n                description : __(' Fill in the gaps in a text from a set of choices.'),\r\n                short : __('Gap Match'),\r\n                qtiClass : 'gapMatchInteraction',\r\n                tags:[tagTitles.commonInteractions, 'text', 'association'],\r\n                group: 'common-interactions'\r\n            },\r\n            sliderInteraction : {\r\n                label : __('Slider Interaction'),\r\n                icon : 'icon-slider',\r\n                description :__('Select a value within a numerical range.'),\r\n                short : __('Slider'),\r\n                qtiClass : 'sliderInteraction',\r\n                tags:[tagTitles.commonInteractions, 'special'],\r\n                group: 'common-interactions'\r\n            },\r\n            extendedTextInteraction : {\r\n                label : __('Extended Text Interaction'),\r\n                icon : 'icon-extended-text',\r\n                description : __('Collect open-ended information in one or more text area(s) (strings or numeric values).'),\r\n                short : __('Extended Text'),\r\n                qtiClass : 'extendedTextInteraction',\r\n                tags:[tagTitles.commonInteractions, 'text'],\r\n                group: 'common-interactions'\r\n            },\r\n            uploadInteraction : {\r\n                label : __('File Upload Interaction'),\r\n                icon : 'icon-upload',\r\n                description : __('Upload a file (e.g. document, picture...) as a response.'),\r\n                short : __('File Upload'),\r\n                qtiClass : 'uploadInteraction',\r\n                tags:[tagTitles.commonInteractions, 'special'],\r\n                group: 'common-interactions'\r\n            },\r\n            mediaInteraction : {\r\n                label : __('Media Interaction'),\r\n                icon : 'icon-media',\r\n                description : __('Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'),\r\n                short : __('Media'),\r\n                qtiClass : 'mediaInteraction',\r\n                tags:[tagTitles.commonInteractions, 'media'],\r\n                group: 'common-interactions'\r\n            },\r\n            _container : {\r\n                label : __('Text Block'),\r\n                icon : 'icon-font',\r\n                description : __('Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'),\r\n                short : __('Block'),\r\n                qtiClass : '_container',\r\n                tags:[tagTitles.inlineInteractions, 'text'],\r\n                group: 'inline-interactions'\r\n            },\r\n            inlineChoiceInteraction : {\r\n                label : __('Inline Choice Interaction'),\r\n                icon : 'icon-inline-choice',\r\n                description : __('Select a choice from a drop-down list.'),\r\n                short : __('Inline Choice'),\r\n                qtiClass : 'inlineChoiceInteraction',\r\n                tags:[tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\r\n                group: 'inline-interactions'\r\n            },\r\n            textEntryInteraction : {\r\n                label : __('Text Entry Interaction'),\r\n                icon : 'icon-text-entry',\r\n                description : __('Collect open-ended information in a short text input (strings or numeric values).'),\r\n                short : __('Text Entry'),\r\n                qtiClass : 'textEntryInteraction',\r\n                tags:[tagTitles.inlineInteractions, 'inline-interactions', 'text'],\r\n                group: 'inline-interactions'\r\n            },\r\n            endAttemptInteraction : {\r\n                label : __('End Attempt Interaction'),\r\n                icon : 'icon-end-attempt',\r\n                description : __('Trigger the end of the item attempt.'),\r\n                short : __('End Attempt'),\r\n                qtiClass : 'endAttemptInteraction',\r\n                tags:[tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\r\n                group: 'inline-interactions'\r\n            },\r\n            hotspotInteraction : {\r\n                label : __('Hotspot Interaction'),\r\n                icon : 'icon-hotspot',\r\n                description : __('Select one or more areas (hotspots) displayed on an picture.'),\r\n                short : __('Hotspot'),\r\n                qtiClass : 'hotspotInteraction',\r\n                tags:[tagTitles.graphicInteractions, 'mcq'],\r\n                group: 'graphic-interactions'\r\n            },\r\n            graphicOrderInteraction : {\r\n                label : __('Graphic Order Interaction'),\r\n                icon : 'icon-graphic-order',\r\n                description : __('Order the areas (hotspots) displayed on a picture.'),\r\n                short : __('Order'),\r\n                qtiClass : 'graphicOrderInteraction',\r\n                tags:[tagTitles.graphicInteractions, 'ordering'],\r\n                group: 'graphic-interactions'\r\n            },\r\n            graphicAssociateInteraction : {\r\n                label : __('Graphic Associate Interaction'),\r\n                icon : 'icon-graphic-associate',\r\n                description : __('Create association(s) between areas (hotspots) displayed on a picture.'),\r\n                short : __('Associate'),\r\n                qtiClass : 'graphicAssociateInteraction',\r\n                tags:[tagTitles.graphicInteractions, 'association'],\r\n                group: 'graphic-interactions'\r\n            },\r\n            graphicGapMatchInteraction : {\r\n                label : __('Graphic Gap Match Interaction'),\r\n                icon : 'icon-graphic-gap',\r\n                description : __('Fill in the gaps on a picture with a set of image choices.'),\r\n                short : __('Gap Match'),\r\n                qtiClass : 'graphicGapMatchInteraction',\r\n                tags:[tagTitles.graphicInteractions, 'association'],\r\n                group: 'graphic-interactions'\r\n            },\r\n            selectPointInteraction : {\r\n                label : __('Select Point Interaction'),\r\n                icon : 'icon-select-point',\r\n                description : __('Position one or more points on a picture (response areas are not displayed).'),\r\n                short : __('Select Point'),\r\n                qtiClass : 'selectPointInteraction',\r\n                tags:[tagTitles.graphicInteractions],\r\n                group: 'graphic-interactions'\r\n            }\r\n        };\r\n    };\r\n\r\n    return QtiElements;\r\n\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\r\n    'lodash',\r\n    'i18n',\r\n    'taoQtiItem/portableElementRegistry/factory/factory',\r\n    'taoQtiItem/qtiCreator/helper/qtiElements'\r\n], function (_, __, portableElementRegistry, qtiElements){\r\n    'use strict';\r\n\r\n    /**\r\n     * Create a ney interaction registry instance\r\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function customInteractionRegistry(){\r\n\r\n        return portableElementRegistry({\r\n            getAuthoringData : function getAuthoringData(typeIdentifier, options){\r\n                let pciModel;\r\n                options = _.defaults(options || {}, {version : 0, enabledOnly : false});\r\n                pciModel = this.get(typeIdentifier, options.version);\r\n                if(pciModel && pciModel.creator && pciModel.creator.hook && pciModel.creator.icon && (pciModel.enabled || !options.enabledOnly)){\r\n                    return {\r\n                        label : pciModel.label, //currently no translation available\r\n                        icon : pciModel.creator.icon.replace(new RegExp('^' + typeIdentifier + '\\/'), pciModel.baseUrl),\r\n                        short : pciModel.short,\r\n                        description : pciModel.description,\r\n                        qtiClass : 'customInteraction.' + pciModel.typeIdentifier, //custom interaction is block type\r\n                        tags : _.union([__('Custom Interactions')], pciModel.tags),\r\n                        group : 'custom-interactions'\r\n                    };\r\n                }\r\n            }\r\n        }).on('creatorsloaded', function(){\r\n            var creators = this.getLatestCreators();\r\n            _.forEach(creators, function(creator, typeIdentifier){\r\n                qtiElements.classes['customInteraction.' + typeIdentifier] = {parents : ['customInteraction'], qti : true};\r\n            });\r\n        });\r\n    };\r\n\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of ciRegistry\r\n    var registry = ciRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\r\n    'lodash',\r\n    'taoQtiItem/portableElementRegistry/factory/factory'\r\n], function (_, portableElementRegistry){\r\n    'use strict';\r\n\r\n    /**\r\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function infoControlRegistry(){\r\n        return portableElementRegistry();\r\n    }\r\n\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of icRegistry\r\n    var registry = icRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\r\n    'taoQtiItem/portableElementRegistry/ciRegistry',\r\n    'taoQtiItem/portableElementRegistry/icRegistry'\r\n], function (ciRegistry, icRegistry) {\r\n    'use strict';\r\n\r\n    function getBaseUrlByIdentifier(typeIdentifier) {\r\n        if (ciRegistry.get(typeIdentifier)) {\r\n            return ciRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        if (icRegistry.get(typeIdentifier)) {\r\n            return icRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        return typeIdentifier;\r\n    }\r\n\r\n    //strategy to resolve portable info control and portable interactions paths.\r\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\r\n    return {\r\n        name: 'portableElementLocation',\r\n        handle: function handlePortableElementLocation(url) {\r\n\r\n            if (url.file === url.path) {\r\n                return getBaseUrlByIdentifier(url.file);\r\n            } else if (url.source === url.relative) {\r\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\r\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\r\n                    if (runtimeLocation) {\r\n                        return runtimeLocation + '/' + relPath;\r\n                    }\r\n                    return fullmatch;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n     */\r\n\r\n    var itemThemes = themes.get('items');\r\n    var moduleConfig = module.config();\r\n\r\n    //Create asset manager stack\r\n    var assetManager = assetManagerFactory(\r\n        [\r\n            {\r\n                name: 'theme',\r\n                handle: function handleTheme(url) {\r\n                    if (\r\n                        itemThemes &&\r\n                        url.path &&\r\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\r\n                    ) {\r\n                        return context.root_url + url.toString();\r\n                    }\r\n                }\r\n            },\r\n            assetStrategies.taomedia,\r\n            assetStrategies.external,\r\n            assetStrategies.base64,\r\n            assetStrategies.itemCssNoCache,\r\n            assetStrategies.baseUrl,\r\n            portableAssetStrategy\r\n        ],\r\n        { baseUrl: '' }\r\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\r\n\r\n    //renderers locations\r\n    var locations = {\r\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\r\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\r\n        _simpleFeedbackRule: false,\r\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\r\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\r\n        outcomeDeclaration: false,\r\n        responseDeclaration: false,\r\n        responseProcessing: false,\r\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\r\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\r\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\r\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\r\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\r\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\r\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\r\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\r\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\r\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\r\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\r\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\r\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\r\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\r\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\r\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\r\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\r\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\r\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\r\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\r\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\r\n        'simpleAssociableChoice.matchInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\r\n        'simpleAssociableChoice.associateInteraction':\r\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\r\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\r\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\r\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\r\n        hotspotChoice: false,\r\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\r\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\r\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\r\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\r\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\r\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\r\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\r\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\r\n        associableHotspot: false,\r\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\r\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\r\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\r\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\r\n    };\r\n\r\n    var config = {\r\n        name: 'commonRenderer',\r\n        locations: locations,\r\n        options: {\r\n            assetManager: assetManager,\r\n            themes: itemThemes,\r\n            enableDragAndDrop: {\r\n                associate: !!moduleConfig.associateDragAndDrop,\r\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\r\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\r\n                order: !!moduleConfig.orderDragAndDrop\r\n            },\r\n            messages: moduleConfig.messages\r\n        }\r\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\r\n\t * This program is free software; you can redistribute it and/or\r\n\t * modify it under the terms of the GNU General Public License\r\n\t * as published by the Free Software Foundation; under version 2\r\n\t * of the License (non-upgradable).\r\n\t *\r\n\t * This program is distributed in the hope that it will be useful,\r\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\t * GNU General Public License for more details.\r\n\t *\r\n\t * You should have received a copy of the GNU General Public License\r\n\t * along with this program; if not, write to the Free Software\r\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n\t *\r\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\r\n\t */\r\n\r\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\r\n     * This program is free software; you can redistribute it and/or\r\n     * modify it under the terms of the GNU General Public License\r\n     * as published by the Free Software Foundation; under version 2\r\n     * of the License (non-upgradable).\r\n     *\r\n     * This program is distributed in the hope that it will be useful,\r\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n     * GNU General Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU General Public License\r\n     * along with this program; if not, write to the Free Software\r\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n     *\r\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n     */\r\n\r\n    var userModules = {\r\n        /**\r\n         * Load user modules defined in the module config\r\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\r\n         * @returns {Promise}\r\n         */\r\n        load: function load(userModules) {\r\n            var config = module.config();\r\n\r\n            if (!userModules || !_.isArray(userModules)) {\r\n                if (config && config.userModules && _.isArray(config.userModules)) {\r\n                    userModules = config.userModules;\r\n                } else {\r\n                    userModules = [];\r\n                }\r\n            }\r\n            if(!userModules.length){\r\n                return Promise.resolve();\r\n            }\r\n            return new Promise(function(resolve, reject) {\r\n                window.require(userModules, function() {\r\n                    _.forEach(arguments, function(dependency) {\r\n                        if (dependency && _.isFunction(dependency.exec)) {\r\n                            dependency.exec();\r\n                        }\r\n                    });\r\n                    resolve();\r\n                }, function(err) {\r\n                    reject(err.message);\r\n                });\r\n            });\r\n        }\r\n    };\n\n    return userModules;\n\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\ndefine('taoQtiItem/runtime/qtiBootstrap',[\r\n    'jquery',\r\n    'lodash',\r\n    'module',\r\n    'taoQtiItem/qtiRunner/core/QtiRunner',\r\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\r\n    'iframeNotifier',\r\n    'core/history',\r\n    'taoQtiItem/runner/provider/manager/userModules'\r\n], function($, _, module, QtiRunner, Renderer, iframeNotifier, history, userModules){\r\n    'use strict';\r\n\r\n    //fix backspace going back into the history\r\n    history.fixBrokenBrowsers();\r\n\r\n    /**\r\n     * The bootstrap is used to set up a QTI item at runtime. It connects to the itemApi.\r\n     *\r\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n     * @exports taoQtiItem/runtime/qtiBootstrap\r\n     *\r\n     * @param {Object} runnerContext - the item context\r\n     */\r\n    return function bootstrap (runnerContext){\r\n\r\n        //reconnect to global itemApi function\r\n        window.onItemApiReady = function onItemApiReady(itemApi) {\r\n            var qtiRunner = new QtiRunner();\r\n            var coreItemData = runnerContext.itemData;\r\n            var variableElementsData = _.merge(runnerContext.variableElements, itemApi.params.contentVariables || {});\r\n\r\n            var renderer = new Renderer();\r\n\r\n            // Makes the runner interface available from outside the frame\r\n            // for preview.\r\n            window.qtiRunner = qtiRunner;\r\n\r\n            qtiRunner.setItemApi(itemApi);\r\n            qtiRunner.setRenderer(renderer);\r\n\r\n            qtiRunner.loadItemData(coreItemData, function() {\r\n\r\n                qtiRunner.loadElements(variableElementsData, function() {\r\n\r\n                    qtiRunner.renderItem(undefined, function() {\r\n\r\n                        //userModules loading\r\n                        //we use any user modules bound to this module configuration instead of the ones bound to the new test runner\r\n                        var userModulesOverride;\r\n                        var config = module.config();\r\n                        if (config && config.userModules && _.isArray(config.userModules) && config.userModules.length > 0) {\r\n                            userModulesOverride = config.userModules;\r\n                        }\r\n                        userModules.load(userModulesOverride)\r\n                            .then(function() {\r\n\r\n                                //exec user scripts\r\n                                if (_.isArray(runnerContext.userScripts)) {\r\n                                    require(runnerContext.userScripts, function() {\r\n                                        _.forEach(arguments, function(dependency) {\r\n                                            if (_.isFunction(dependency.exec)) {\r\n                                                dependency.exec.call(null, runnerContext.userVars);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n\r\n                                iframeNotifier.parent('itemloaded');\r\n\r\n                                //IE9/10 loose the iframe focus, so we force getting it back.\r\n                                _.defer(function(){\r\n                                    window.focus();\r\n                                });\r\n                            })\r\n                            .catch(function(err) {\r\n                                throw new Error('Error in user modules : ' + err.message);\r\n                            });\r\n\r\n                    });\r\n                });\r\n            });\r\n        };\r\n\r\n        //if the item is longer to load,\r\n        _.defer(function(){\r\n           //tell the parent to connect the item api\r\n           iframeNotifier.parent('itemready');\r\n       });\r\n\r\n    };\r\n});\r\n\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\ndefine('taoQtiItem/runtime/qtiLoader',[\r\n    'taoQtiItem/runtime/qtiBootstrap',\r\n    'css!taoCss/tao-main-style'\r\n], function(qtiBootstrap){\r\n    'use strict';\r\n\r\n    return {\r\n        start : function start(){\r\n            //the context is set into the template and bound to the tao namespace in global scope\r\n            var runnerContext = window.tao.qtiRunnerContext;\r\n            qtiBootstrap(runnerContext);\r\n        }\r\n    };\r\n});\r\n\n","\ndefine(\"taoQtiItem\\loader\\qtiLoader.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\"]);\n"]}