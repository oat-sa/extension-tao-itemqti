{"version":3,"mappings":"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","names":["loaderScript","configUrl","bundle","loadController","controllerOptions","controllerPath","params","window","controller","document","startController","bundles","require","define","_container","assessmentItem","responseProcessing","_simpleFeedbackRule","stylesheet","math","figure","img","figcaption","object","outcomeDeclaration","responseDeclaration","rubricBlock","associableHotspot","gap","gapImg","gapText","hotspotChoice","hottext","inlineChoice","simpleAssociableChoice","simpleChoice","associateInteraction","choiceInteraction","endAttemptInteraction","extendedTextInteraction","gapMatchInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","matchInteraction","mediaInteraction","orderInteraction","prompt","selectPointInteraction","sliderInteraction","textEntryInteraction","uploadInteraction","feedbackBlock","feedbackInline","modalFeedback","customInteraction","infoControl","include","table","printedVariable","_tooltip","_","buildSerial","id","chars","buildId","usedIds","i","suffix","exists","buildIdentifier","useSuffix","prefix","replace","findInCollection","collectionNames","collection","elt","found","addMarkupNamespace","ns","markup","$0","$1","$3","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","$","getOptionsFromArguments","data","placeholder","subclass","renderer","arg","options","console","loggerFactory","util","rendererConfig","_instances","logger","Element","qtiClass","serial","rootElement","init","attributes","is","getSerial","getUsedIdentifiers","elts","getUsedIds","attr","removeData","removeAttr","setAttributes","getAttributes","removeAttributes","attrNames","getComposingElements","append","getUsedClasses","composingElts","ret","find","body","parent","setRelatedItem","setRootElement","getRelatedItem","getRootElement","setRenderer","getRenderer","render","rendering","args","_renderer","tplData","defaultData","tag","postRender","postRenderers","getContainer","toArray","type","arr","isEmpty","addClass","_containClass","hasClass","removeClass","clazz","toggleClass","state","isset","unset","prefixed","xmlNsHandler","stripNs","pattern","openRegEx","closeRegEx","restoreNs","tagMatch","xmlRe","tagRe","xmlMatch","imsXsd","html5Ns","prefixAtt","xml","MATCH_CORRECT","responseIf","expression","expressions","identifier","responseRules","baseType","value","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","response","isUsingTemplate","tpl","isValidTemplateName","tplName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","getTemplateNameFromResponseRules","responseIdentifier","outcomeRules","outcomeIdentifier","Object","qtiClasses","moduleLoader","responseHelper","itemScoreHelper","loadPortableCustomElementProperties","properties","portableElement","loadPortableCustomElementData","Loader","item","classesLocation","setClassesLocation","qtiClassesList","getRequiredClasses","loadRequiredClasses","callback","reload","requiredClass","requiredClasses","required","module","category","loadeded","getLoadedClasses","loadItemData","outcome","feedback","responseRuleItemIndex","responseRule","feedbackRules","feedbackOutcomeIdentifier","setOutcomeResponseRule","map","responseIdentifiers","some","loadAndBuildElement","loadElement","element","loadElements","elementData","allElements","buildResponse","buildSimpleFeedbackRule","feedbackRule","buildOutcome","buildResponseProcessing","customResponseProcessing","rp","loadContainer","bodyObject","bodyData","eltData","buildElement","loadElementData","loadInteractionData","interaction","buildInteractionChoices","choice","loadChoiceData","loadObjectData","loadMathData","loadTooltipData","tooltip","loadPciData","pci","loadPicData","pic","getRawValues","html","_setDomClass","$bodyDom","$wrapper","oldClass","newClass","dataName","_getEncodedDataString","_setBodyDomClass","$body","regex","matches","_prefix","container","setEncodedData","hasEncodedData","getEncodedData","removeEncodedData","setEncodedDataToDom","firstFeedback","interactionsDisplayInfo","messages","renderedFeebacks","renderingQueue","$itemContainer","$itemBody","feedbackIds","message","$container","comparedOutcome","_currentMessageGroupId","interactionInfo","order","clearModalFeedbacks","renderModalFeedback","renderingToken","loader","$$1","iframeNotifier","autoscroll","onShowCallback","replaceControl","me","max","currentScrollTop","minScrollTop","maxScrollTop","scrollTop","$element","messageGroupId","$displayContainer","$interactionContainer","interactionContainer","displayContainer","interactionOrder","_interactionInfo","$modalFeedback","inline","done","renderedCallback","dom","Promise","then","catch","$scope","$controls","$toggleContainer","initControlToggle","toggleButtonTemplate","fb","uncover","$ok","cover","$interaction","toLowerCase","trim","context","containerHelper","Handlebars","__","DOMPurify","hb","keyValueGlue","fragmentGlue","wrapper","fragment","fragments","startIndex","stopIndex","increment","var1","Helpers0","helpers","buffer","escapeExpression","Template$1","timeout","inlineRenderer","showFeedbacks","feedbacksToBeDisplayed","itemSession","count","endCallback","onCloseCallback","callstack","cb","async","$feedbackBox","$feedback","ItemLoader","modalFeedbackInline","modalFeedbackModal","QtiRunner","responses","states","variables","base","file","name","mime","that","oldStateVariables","itemApi","killCallback","self","responseId","themeName","themeLoader","interactions","inlineDisplay","Math","convertChoices","_this","outputType","findChoices","shuffleChoices","f","j","r","k","serialToIdentifier","interactionHelper","themesHelper","_renderableClasses","_dependencies","_renderableSubclasses","_defaults","_isValidRenderer","classCorrect","subClass","valid","Renderer","_renderers","success","_locations","list","res","decorators","themeData","deps","requiredSubClasses","addList","load","loaded","choices","url","absUrl","runtimeLocations","Renderer$1","build","NewRenderer","_requirejs","_defaultLoadingOptions","loadModuleConfig","baseUrl","requireConfigAliases","reqConfigs","modules","manifest","pciConfig","paths","runtimeModules","resolve","reject","isPortableElementProvider","_loaded","__providers","_registry","get","version","registerProvider","resetProviders","loadProviders","loadPromise","providerLoadingStack","getAllVersions","all","getRuntime","label","model","typeIdentifier","getCreator","xmlns","getLatestCreators","lastVersion","getBaseUrl","runtime","loadRuntimes","provider","loadStack","configLoadingStack","loadCreators","requiredCreatorHooks","portableElementModel","creators","enable","disable","isEnabled","classes","itemBody","atomicBlock","parents","contains","abstract","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","col","colgroup","div","dl","dt","dd","hr","li","ol","ul","param","xhtml","tbody","tfoot","thead","td","th","tr","a","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","p","pre","br","textRun","blockInteraction","inlineInteraction","templateElement","templateBlock","qti","templateInline","drawingInteraction","graphicInteraction","cache","getAllowedContainersElements","jqSelector","getAllowedContainers","intersect","QtiElements","getAllowedContents","recursive","checked","isAllowedClass","qtiContainerClass","qtiContentClass","getParentClasses","getChildClasses","cacheType","isBlock","isInline","topClass","isVisible","featuresService","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","getAuthoringData","pciModel","on","qtiElements","registry","providers","config","ciRegistry","icRegistry","handle","runtimeLocation","fullmatch","themes","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","assetManager","locations","enableDragAndDrop","associate","gapMatch","graphicGapMatch","userModules","dependency","history","qtiRunner","coreItemData","variableElementsData","userModulesOverride","start","qtiBootstrap"],"sources":["loader/bootstrap.js","taoQtiItem/qtiItem/core/qtiClasses.js","taoQtiItem/qtiItem/helper/util.js","taoQtiItem/qtiItem/helper/rendererConfig.js","taoQtiItem/qtiItem/core/Element.js","taoQtiItem/qtiItem/helper/xmlNsHandler.js","taoQtiItem/qtiItem/helper/responseRules.js","taoQtiItem/qtiItem/helper/response.js","taoQtiItem/qtiItem/helper/itemScore.js","taoQtiItem/qtiItem/core/Loader.js","taoQtiItem/qtiItem/helper/pci.js","taoQtiItem/qtiItem/helper/container.js","taoQtiItem/qtiRunner/modalFeedback/inlineRenderer.js","taoQtiItem/qtiRunner/modalFeedback/modalRenderer.js","taoQtiItem/qtiRunner/core/QtiRunner.js","taoQtiItem/qtiItem/helper/interactionHelper.js","taoQtiItem/qtiRunner/core/Renderer.js","taoQtiItem/portableElementRegistry/factory/factory.js","taoQtiItem/qtiCreator/helper/qtiElements.js","taoQtiItem/portableElementRegistry/factory/ciRegistry.js","taoQtiItem/portableElementRegistry/ciRegistry.js","taoQtiItem/portableElementRegistry/factory/icRegistry.js","taoQtiItem/portableElementRegistry/icRegistry.js","taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy.js","taoQtiItem/qtiCommonRenderer/renderers/config.js","taoQtiItem/qtiCommonRenderer/renderers/Renderer.js","taoQtiItem/runner/provider/manager/userModules.js","taoQtiItem/runtime/qtiBootstrap.js","taoQtiItem/runtime/qtiLoader.js","module-create.js","C:/work/silvia-community/tao-community/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Bootstrap the app, start the entry controller\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\n(function(){\r\n    'use strict';\r\n\r\n\r\n\r\n    var loaderScript = document.getElementById('amd-loader');\r\n    var configUrl = loaderScript.getAttribute('data-config');\r\n    var bundle  = loaderScript.getAttribute('data-bundle');\r\n\r\n    var loadController = function loadController(){\r\n        var controllerOptions = {};\r\n        var controllerPath = loaderScript.getAttribute('data-controller');\r\n        var params = loaderScript.getAttribute('data-params');\r\n        try{\r\n            controllerOptions = JSON.parse(params);\r\n        } catch(err){\r\n            controllerOptions = {};\r\n        }\r\n        window.require([controllerPath], function(controller) {\r\n            var startController = function startController(){\r\n                if(!window.started){\r\n                    window.started = true;\r\n                    controller.start(controllerOptions);\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', startController, false);\r\n            if (document.readyState === 'complete') {\r\n                startController();\r\n            }\r\n        });\r\n    };\r\n\r\n    //always start to load the config\r\n    window.require([configUrl], function() {\r\n\r\n        //define the global loading mechanism\r\n        if(!window.loadBundles){\r\n            //keep tracl of loaded bundles, even if require does it,\r\n            //this prevent some unecessary cycles\r\n            window.loaded = {};\r\n\r\n            /**\r\n             * Loading entry point for inter bundle dependency,\r\n             * always take the bundles from the params and window.bundles\r\n             * @param {String[]} [bundles] - an optional list of bundle to load\r\n             */\r\n            window.loadBundles = function loadBundles(bundles){\r\n                bundles = bundles || [];\r\n                bundles = bundles.concat(window.bundles)\r\n                bundles = bundles.filter( function(item, index){\r\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\r\n                });\r\n                require(bundles, function(){\r\n                    bundles.forEach( function( item ) {\r\n                        window.loaded[item] = true;\r\n                    });\r\n                    loadController();\r\n                });\r\n            }\r\n        }\r\n\r\n        if(bundle || (window.bundles && window.bundles.length)) {\r\n            window.loadBundles([bundle]);\r\n        } else {\r\n            loadController();\r\n        }\r\n    });\r\n})();\r\n\ndefine(\"loader/bootstrap\", function(){});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\n        _container: 'taoQtiItem/qtiItem/core/Container',\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\n        math: 'taoQtiItem/qtiItem/core/Math',\n        figure: 'taoQtiItem/qtiItem/core/Figure',\n        img: 'taoQtiItem/qtiItem/core/Img',\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\n        object: 'taoQtiItem/qtiItem/core/Object',\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        include: 'taoQtiItem/qtiItem/core/Include',\n        table: 'taoQtiItem/qtiItem/core/Table',\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var util = {\n        buildSerial: function buildSerial(prefix) {\n            var id = prefix || '';\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < 22; i++) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId: function buildId(item, prefix) {\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds = item.getUsedIds();\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (_.contains(usedIds, id)) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if (!prefix) {\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if (prefix) {\n                prefix = prefix\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\n                    .replace(/(_)+/gi, '_');\n                if (useSuffix) {\n                    suffix = '_' + i;\n                }\n            }\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds[id]) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\n            var found = null;\n\n            if (_.isString(collectionNames)) {\n                collectionNames = [collectionNames];\n            }\n\n            if (_.isArray(collectionNames)) {\n                _.each(collectionNames, function(collectionName) {\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken) {\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if (elt) {\n                        found = { parent: element, element: elt };\n                        return false; //break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt) {\n                        if (_.isFunction(elt.find)) {\n                            found = elt.find(searchedSerial);\n                            if (found) {\n                                return false; //break the each loop\n                            }\n                        }\n                    });\n\n                    if (found) {\n                        return false; //break the each loop\n                    }\n                });\n            } else {\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\n            if (ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4) {\n                    if ($2.indexOf(':') > 0) {\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\n                });\n                return markup;\n            }\n            return markup;\n        },\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node) {\n                namespaces.push(ns);\n                return '<' + slash + node + '>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args) {\n        var options = {\n            data: {},\n            placeholder: null,\n            subclass: '',\n            renderer: null\n        };\n\n        _.each(args, function(arg) {\n            if (arg) {\n                if (arg.isRenderer) {\n                    options.renderer = arg;\n                } else if (arg instanceof $ && arg.length) {\n                    options.placeholder = arg;\n                } else if (_.isString(arg)) {\n                    options.subclass = arg;\n                } else if (_.isPlainObject(arg)) {\n                    options.data = arg;\n                } else {\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n\n        return options;\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass: '',\n        serial: '',\n        rootElement: null,\n        init: function(serial, attributes) {\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if (typeof serial === 'object') {\n                attributes = serial;\n                serial = '';\n            }\n\n            if (!serial) {\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\n            }\n\n            if (!_instances[serial]) {\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            } else {\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if (typeof this.initContainer === 'function') {\n                this.initContainer(arguments[2] || '');\n            }\n            if (typeof this.initObject === 'function') {\n                this.initObject();\n            }\n        },\n        is: function(qtiClass) {\n            return qtiClass === this.qtiClass;\n        },\n        placeholder: function() {\n            return '{{' + this.serial + '}}';\n        },\n        getSerial: function() {\n            return this.serial;\n        },\n        getUsedIdentifiers: function() {\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for (var i in elts) {\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if (id) {\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds: function getUsedIds() {\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt) {\n                var id = elt.attr('id');\n                if (id && !_.contains(usedIds, id)) {\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.attributes[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.attr(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.attributes[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.data(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.metaData[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData: function(name) {\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr: function(name) {\n            return this.removeAttributes(name);\n        },\n        setAttributes: function(attributes) {\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes: function() {\n            return _.clone(this.attributes);\n        },\n        removeAttributes: function(attrNames) {\n            if (typeof attrNames === 'string') {\n                attrNames = [attrNames];\n            }\n            for (var i in attrNames) {\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements: function() {\n            var elts = {};\n            function append(element) {\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if (typeof this.initContainer === 'function') {\n                append(this.getBody());\n            }\n            if (typeof this.initObject === 'function') {\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v) {\n                if (Element.isA(v, '_container')) {\n                    append(v);\n                } else if (_.isArray(v)) {\n                    _.each(v, function(v) {\n                        if (Element.isA(v, '_container')) {\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses: function() {\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt) {\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find: function(serial) {\n            var found = null;\n            var object, body;\n\n            if (typeof this.initObject === 'function') {\n                object = this.getObject();\n                if (object.serial === serial) {\n                    found = { parent: this, element: object, location: 'object' };\n                }\n            }\n\n            if (!found && typeof this.initContainer === 'function') {\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = { parent: this, element: body, location: 'body' };\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent: function() {\n            var item = this.getRootElement();\n            if (item) {\n                var found = item.find(this.getSerial());\n                if (found) {\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem: function(item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement: function(item) {\n            var composingElts, i;\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for (i in composingElts) {\n                    composingElts[i].setRootElement(item);\n                }\n            }\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem: function() {\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement: function() {\n            var ret = null;\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer: function(renderer) {\n            if (renderer && renderer.isRenderer) {\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for (var serial in elts) {\n                    elts[serial].setRenderer(renderer);\n                }\n            } else {\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer: function() {\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    tag: this.qtiClass,\n                    serial: this.serial,\n                    attributes: this.getAttributes()\n                };\n\n            if (!_renderer) {\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if (typeof this.initObject === 'function') {\n                defaultData.object = {\n                    attributes: this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if (args.placeholder) {\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender: function(data, altClassName, renderer) {\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if (_renderer) {\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            } else {\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer: function($scope, subclass) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                return renderer.getContainer(this, $scope, subclass);\n            } else {\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray: function() {\n            var arr = {\n                serial: this.serial,\n                type: this.qtiClass,\n                attributes: this.getAttributes()\n            };\n\n            if (typeof this.initContainer === 'function') {\n                arr.body = this.getBody().toArray();\n            }\n            if (typeof this.initObject === 'function') {\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty: function() {\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (!_containClass(clazz, className)) {\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass: function(className) {\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (clazz) {\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if (clazz) {\n                    this.attr('class', clazz);\n                } else {\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass: function(className, state) {\n            if (typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if (this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset: function() {\n            return Element.issetElement(this.serial);\n        },\n        unset: function() {\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass) {\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\n    };\n\n    Element.getElementBySerial = function(serial) {\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial) {\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial) {\n        var element = Element.getElementBySerial(serial);\n\n        if (element) {\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt) {\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA\n     */\n\n    /**\n     * XML namespace handling\n     */\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    var prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        var key;\n        for (key in namespaces) {\n            if (namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    var xmlNsHandler = {\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs: function stripNs(body) {\n            var pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            var openRegEx = new RegExp('(<' + pattern + ')', 'gi');\n            var closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs: function restoreNs(xml, namespaces) {\n            var xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            var tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            var xmlMatch = xml.match(xmlRe);\n            var imsXsd = 'http://www.imsglobal.org/xsd';\n            var html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            var prefix = getPrefix(namespaces, html5Ns);\n            var prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            var i = xmlMatch ? xmlMatch.length : 0;\n            var tagMatch;\n\n            if (!xmlMatch) {\n                return xml;\n            }\n\n            while (i--) {\n                tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(\n                    xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    var responseRules = {\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'match',\n                    expressions: [\n                        {\n                            qtiClass: 'variable',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                        {\n                            qtiClass: 'correct',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    },\n                                },\n                                {\n                                    qtiClass: 'baseValue',\n                                    attributes: {\n                                        baseType: 'integer'\n                                    },\n                                    value: '1',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponse',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponsePoint',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const _templateNames = {\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        NONE: 'no_response_processing'\n    };\n\n\n    var response = {\n        isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName(tplName) {\n            return _templateNames[tplName] || '';\n        },\n        getTemplateNameFromUri(tplUri) {\n            let tplName = '';\n\n            _.forIn(_templateNames, (uri, name) => {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n\n            return tplName;\n        },\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\n            if (!responseRules) {\n                return 'NONE';\n            }\n\n            const {\n                responseIf: {\n                    responseRules: [outcomeRules = {}] = [],\n                } = {}\n            } = responseRules;\n            const {\n                attributes: {\n                    identifier: outcomeIdentifier,\n                } = {},\n            } = outcomeRules;\n\n            if (!outcomeIdentifier) {\n                return '';\n            }\n\n            return Object.keys(responseRulesHelper).find(\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\n            );\n        }\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Returns iteraction score response rule object\n     *\n     * @param {String} responseIdentifiers interactions reponse indentifiers\n     * @returns {Obeject}\n     */\n    var itemScore = (responseIdentifiers) => {\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\n            qtiClass: 'variable',\n            attributes: {\n                identifier: `SCORE_${outcomeIdentifier}`,\n            },\n        }));\n\n        return {\n            qtiClass: 'setOutcomeValue',\n            attributes: {\n                identifier: 'SCORE',\n            },\n            expression: {\n                qtiClass: 'sum',\n                expressions: outcomeExpressions,\n            },\n        };\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\n        var properties = {};\n\n        _.forOwn(rawProperties, (value, key) => {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    };\n\n    const loadPortableCustomElementData = (portableElement, data) => {\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    };\n\n    var Loader = Class.extend({\n        init(item, classesLocation) {\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n            this.item = item || null; //starts either from scratch or with an existing item object\n\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\n        },\n        setClassesLocation(qtiClassesList) {\n            _.extend(this.classesLocation, qtiClassesList);\n\n            return this;\n        },\n        getRequiredClasses(data) {\n            let ret = [];\n\n            for (let i in data) {\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\n                    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n\n            return ret;\n        },\n        loadRequiredClasses(data, callback, reload) {\n            let requiredClass;\n            const requiredClasses = this.getRequiredClasses(data, reload);\n            const required = [];\n\n            for (let i in requiredClasses) {\n                requiredClass = requiredClasses[i];\n                if (this.classesLocation[requiredClass]) {\n                    required.push({\n                        module: this.classesLocation[requiredClass],\n                        category: 'qti'\n                    });\n                } else {\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\n                }\n            }\n\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\n                loadeded.forEach(QtiClass => {\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(this, this.qti);\n            });\n        },\n        getLoadedClasses() {\n            return _.keys(this.qti);\n        },\n        loadItemData(data, callback) {\n            this.loadRequiredClasses(data, Qti => {\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\n                    //unload an item from it's serial (in case of a reload)\n                    if (data.serial) {\n                        Element.unsetElement(data.serial);\n                    }\n\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    this.loadContainer(this.item.getBody(), data.body);\n\n                    for (let i in data.outcomes) {\n                        const outcome = this.buildOutcome(data.outcomes[i]);\n\n                        if (outcome) {\n                            this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n\n                    for (let i in data.feedbacks) {\n                        const feedback = this.buildElement(data.feedbacks[i]);\n\n                        if (feedback) {\n                            this.item.addModalFeedback(feedback);\n                        }\n                    }\n\n                    for (let i in data.stylesheets) {\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\n\n                        if (stylesheet) {\n                            this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\n                        ? [...data.responseProcessing.responseRules]\n                        : [];\n                    for (let i in data.responses) {\n                        const responseIdentifier = data.responses[i].identifier;\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\n                            expression: {\n                                expressions: [expression = {}] = [],\n                            } = {}\n                        } = {} }) => expression.attributes\n                        && expression.attributes.identifier === responseIdentifier\n                            || (\n                                expression.expressions\n                                && expression.expressions[0]\n                                && expression.expressions[0].attributes\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\n                            )\n                        );\n                        const [responseRule] = responseRuleItemIndex !== -1\n                            ? responseRules.splice(responseRuleItemIndex, 1)\n                            : [];\n\n                        const response = this.buildResponse(\n                            data.responses[i],\n                            responseRule\n                        );\n\n                        if (response) {\n                            this.item.addResponseDeclaration(response);\n\n                            const feedbackRules = data.responses[i].feedbackRules;\n\n                            if (feedbackRules) {\n                                _.forIn(feedbackRules, (fbData, serial) => {\n                                    const {\n                                        attributes: {\n                                            identifier: feedbackOutcomeIdentifier,\n                                        } = {}\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\n\n                                    // remove feedback response rule from response rules array\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\n                                        responseIf: {\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\n                                        } = {}\n                                    }) => {\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\n                                        const outcomeIdentifier = attributes.identifier;\n\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\n                                            && qtiClass === 'setOutcomeValue';\n                                    });\n\n                                    if (feedbackResponseRuleIndex !== -1) {\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\n                                    }\n                                });\n                            }\n                        }\n                    }\n\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\n\n                    if (data.responseProcessing) {\n                        const customResponseProcessing =\n                            (\n                                responseRules.length > 0\n                                && !(\n                                    responseRules.length === 1\n                                    && _.isEqual(\n                                        responseRules[0],\n                                        itemScoreHelper(\n                                            responseIdentifiers\n                                        )\n                                    )\n                                )\n                            )\n                            || (\n                                this.item.responses\n                                && Object.keys(this.item.responses)\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\n                            );\n\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\n                    }\n                    this.item.setNamespaces(data.namespaces);\n                    this.item.setSchemaLocations(data.schemaLocations);\n                    this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        loadAndBuildElement(data, callback) {\n            this.loadRequiredClasses(data, () => {\n                const element = this.buildElement(data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        loadElement(element, data, callback) {\n            this.loadRequiredClasses(data, () => {\n                this.loadElementData(element, data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements(data, callback) {\n            if (!this.item) {\n                throw new Error('QtiLoader : cannot load elements in empty item');\n            }\n\n            this.loadRequiredClasses(data, () => {\n                const allElements = this.item.getComposingElements();\n\n                for (let i in data) {\n                    const elementData = data[i];\n\n                    if (elementData && elementData.qtiClass && elementData.serial) {\n                        //find and update element\n                        if (allElements[elementData.serial]) {\n                            this.loadElementData(allElements[elementData.serial], elementData);\n                        }\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        buildResponse(data, responseRule) {\n            const response = this.buildElement(data);\n\n            response.template = responseHelper.getTemplateUriFromName(\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\n            )\n                || data.howMatch\n                || null;\n\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if (_.size(data.mapping)) {\n                response.mapEntries = data.mapping;\n            } else if (_.size(data.areaMapping)) {\n                response.mapEntries = data.areaMapping;\n            } else {\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule(data, response) {\n            const feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            const comparedOutcome = feedbackRule.comparedOutcome;\n\n            if (feedbackRule.feedbackThen) {\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\n            }\n\n            if (feedbackRule.feedbackElse) {\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome(data) {\n            const outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n\n            return outcome;\n        },\n        buildResponseProcessing(data, customResponseProcessing) {\n            const rp = this.buildElement(data);\n\n            if (customResponseProcessing) {\n                rp.xml = data.data;\n                rp.processingType = 'custom';\n            } else {\n                rp.processingType = 'templateDriven';\n            }\n\n            return rp;\n        },\n        loadContainer(bodyObject, bodyData) {\n            if (!Element.isA(bodyObject, '_container')) {\n                throw new Error('bodyObject must be a QTI Container');\n            }\n\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\n                throw new Error('wrong bodydata format');\n            }\n            //merge attributes when loading element data\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\n            bodyObject.setAttributes(attributes);\n\n            for (let serial in bodyData.elements) {\n                const eltData = bodyData.elements[serial];\n                const element = this.buildElement(eltData);\n\n                //check if class is loaded:\n                if (element) {\n                    bodyObject.setElement(element, bodyData.body);\n                }\n            }\n\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n        },\n        buildElement(elementData) {\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\n                throw new Error('wrong elementData format');\n            }\n\n            const className = elementData.qtiClass;\n\n            if (!this.qti[className]) {\n                throw new Error(`the qti element class does not exist: ${className}`);\n            }\n\n            const elt = new this.qti[className](elementData.serial);\n            this.loadElementData(elt, elementData);\n\n            return elt;\n        },\n        loadElementData(element, data) {\n            //merge attributes when loading element data\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            if (element.body && data.body) {\n                if (element.bdy) {\n                    this.loadContainer(element.getBody(), data.body);\n                }\n            }\n\n            if (element.object && data.object) {\n                if (element.object) {\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if (Element.isA(element, 'interaction')) {\n                this.loadInteractionData(element, data);\n            } else if (Element.isA(element, 'choice')) {\n                this.loadChoiceData(element, data);\n            } else if (Element.isA(element, 'math')) {\n                this.loadMathData(element, data);\n            } else if (Element.isA(element, 'infoControl')) {\n                this.loadPicData(element, data);\n            } else if (Element.isA(element, '_tooltip')) {\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData(interaction, data) {\n            if (Element.isA(interaction, 'blockInteraction')) {\n                if (data.prompt) {\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if (Element.isA(interaction, 'customInteraction')) {\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices(interaction, data) {\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if (data.choices) {\n                if (Element.isA(interaction, 'matchInteraction')) {\n                    for (let set = 0; set < 2; set++) {\n                        if (!data.choices[set]) {\n                            throw new Error(`missing match set #${set}`);\n                        }\n\n                        const matchSet = data.choices[set];\n\n                        for (let serial in matchSet) {\n                            const choice = this.buildElement(matchSet[serial]);\n\n                            if (choice) {\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                } else {\n                    for (let serial in data.choices) {\n                        const choice = this.buildElement(data.choices[serial]);\n\n                        if (choice) {\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\n                    if (data.gapImgs) {\n                        for (let serial in data.gapImgs) {\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\n\n                            if (gapImg) {\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loadChoiceData(choice, data) {\n            if (Element.isA(choice, 'textVariableChoice')) {\n                choice.val(data.text);\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\n                // this ensure compatibility of Qti 2.1 items\n                if (!choice.body()) {\n                    choice.body(data.text);\n                }\n            } else if (Element.isA(choice, 'containerChoice')) ;\n        },\n        loadObjectData(object, data) {\n            object.setAttributes(data.attributes);\n\n            //@todo: manage object like a container\n            if (data._alt) {\n                if (data._alt.qtiClass === 'object') {\n                    object._alt = Loader.buildElement(data._alt);\n                } else {\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData(math, data) {\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, (value, encoding) => {\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData(tooltip, data) {\n            tooltip.content(data.content);\n        },\n        loadPciData(pci, data) {\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData(pic, data) {\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\n        getRawValues: function(pciVar) {\n            if (_.isPlainObject(pciVar)) {\n                if (pciVar.base !== undefined) {\n                    return _.values(pciVar.base);\n                } else if (pciVar.list) {\n                    return _.values(pciVar.list);\n                }\n            }\n            throw 'unsupported type ';\n        }\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n     **/\n\n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n\n    /**\n     * Check if the element is of a qti container type\n     *\n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element) {\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\n            return true;\n        } else {\n            throw 'the element is not of a container type';\n        }\n    }\n\n    /**\n     * Get the body element of the container\n     *\n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element) {\n        if (_checkContainerType(element)) {\n            return $('<div>')\n                .html(element.body())\n                .find('.x-tao-wrapper');\n        }\n    }\n\n    /**\n     * Add a class to the body element of the qti container\n     *\n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass) {\n        if (_checkContainerType(element) && (oldClass || newClass)) {\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n\n    /**\n     * Switch class to the wrapped DOM\n     *\n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass) {\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if (!$bodyDom.length) {\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if (oldClass) {\n            $bodyDom.removeClass(oldClass);\n        }\n        if (newClass) {\n            $bodyDom.addClass(newClass);\n        }\n    }\n\n    /**\n     * Add manually the encoded information to a dom element\n     *\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n\n    /**\n     * Get the full variable name for the data store\n     *\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value) {\n        if (dataName && value) {\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n\n    /**\n     * Set a data string to the element identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue) {\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(\n            element,\n            _getEncodedDataString(dataName, newValue),\n            _getEncodedDataString(dataName, oldValue)\n        );\n    }\n\n    /**\n     * Remove the stored data from the element by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName) {\n        var oldValue = getEncodedData(element, dataName);\n        if (dataName && oldValue) {\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value) {\n        var $body = _getBodyDom(element);\n        if ($body && $body.length && dataName && value) {\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n\n    /**\n     * Get the encoded data identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName) {\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if (dataName && $body && $body.length && $body.attr('class')) {\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\n            matches = $body.attr('class').match(regex);\n            if (matches) {\n                return matches[1];\n            }\n        }\n    }\n\n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    var container = {\n        setEncodedData: setEncodedData,\n        hasEncodedData: hasEncodedData,\n        getEncodedData: getEncodedData,\n        removeEncodedData: removeEncodedData,\n        setEncodedDataToDom: setEncodedDataToDom\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/inlineRenderer',['lodash', 'jquery', 'context', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container', 'handlebars', 'i18n', 'lib/dompurify/purify', 'iframeNotifier'], function (_, $$1, context, pci, containerHelper, Handlebars, __, DOMPurify, iframeNotifier) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<li class=\\\"small btn-info action action-button rgt\\\" id=\\\"preview-feedback-ok-button\\\">\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\n        <span class=\\\"label\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"OK\", options) : helperMissing.call(depth0, \"__\", \"OK\", options)))\n        + \"</span>\\n    </a>\\n</li>\";\n      return buffer;\n      });\n    function previewOkBtn(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<li data-control=\\\"feedback-ok\\\" class=\\\"small btn-info action forward\\\" title=\\\"Feedback ok and ready to proceed.\\\">\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\n        <span class=\\\"icon-result-ok\\\"></span>\\n        <span class=\\\"text\\\">OK</span>\\n    </a>\\n</li>\";\n      });\n    function deliveryOkBtn(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    /**\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} loader - the item loader instance\n     * @param {Object} renderer - the item render instance\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\n     * @returns {Number} Number of feedbacks to be displayed\n     */\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\n        var messages = {};\n        var renderedFeebacks = [];\n        var renderingQueue = [];\n        var $itemContainer = item.getContainer();\n        var $itemBody = $itemContainer.children('.qti-itemBody');\n        var firstFeedback;\n\n        _.each(item.modalFeedbacks, function(feedback) {\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n            var order = -1;\n\n            //verify if the feedback should be displayed\n            if (itemSession[outcomeIdentifier]) {\n                //is the feedback in the list of feedbacks to be displayed ?\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                if (_.indexOf(feedbackIds, feedback.id()) === -1) {\n                    return true; //continue with next feedback\n                }\n\n                //which group of feedbacks (interaction related) the feedback belongs to ?\n                message = getFeedbackMessageSignature(feedback);\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\n                if (comparedOutcome && interactionInfo) {\n                    $container = interactionInfo.displayContainer;\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\n                    order = interactionInfo.order;\n                } else {\n                    $container = $itemBody;\n                    _currentMessageGroupId = '__item__';\n                }\n                //is this message already displayed ?\n                if (!messages[_currentMessageGroupId]) {\n                    messages[_currentMessageGroupId] = [];\n                }\n                if (_.indexOf(messages[_currentMessageGroupId], message) >= 0) {\n                    return true; //continue\n                } else {\n                    messages[_currentMessageGroupId].push(message);\n                }\n\n                //ok, display feedback\n                renderingQueue.push({\n                    feedback: feedback,\n                    $container: $container,\n                    order: order\n                });\n            }\n        });\n\n        if (renderingQueue.length) {\n            renderingQueue = _.sortBy(renderingQueue, 'order');\n\n            //clear previously displayed feedbacks\n            clearModalFeedbacks($itemContainer);\n\n            //process rendering queue\n            _.each(renderingQueue, function(renderingToken) {\n                renderModalFeedback(\n                    renderingToken.feedback,\n                    loader,\n                    renderer,\n                    renderingToken.$container,\n                    $itemContainer,\n                    function(renderingData) {\n                        // keep the first feedback to force focus on it if needed\n                        if (!firstFeedback) {\n                            firstFeedback = $$1(renderingData.dom);\n                        }\n\n                        $$1('img', renderingData.dom).on('load', function() {\n                            iframeNotifier.parent('itemcontentchange');\n                        });\n\n                        //record rendered feedback for later reference\n                        renderedFeebacks.push(renderingData);\n                        if (renderedFeebacks.length === renderingQueue.length) {\n                            //rendering processing queue completed\n                            iframeNotifier.parent('itemcontentchange');\n\n                            // set the focus on the first feedback if needed\n                            // TODO: this is heavily related to the old TestRunner, with the ugly iframes.\n                            // To make this working, a search is made accross parent frames.\n                            // When the InlineFeedbacks will be ported to the new TestRunner, a strong improvement will be needed!\n                            if (firstFeedback) {\n                                autoscroll(firstFeedback);\n                            }\n\n                            //if an optional \"on show modal\" callback has been provided, execute it\n                            if (_.isFunction(onShowCallback)) {\n                                onShowCallback();\n                            }\n                        }\n                    }\n                );\n            });\n\n            //if any feedback is displayed, replace the controls by a \"ok\" button\n            replaceControl(renderedFeebacks, $itemContainer, onCloseCallback);\n        }\n\n        return renderingQueue.length;\n    }\n\n    /**\n     * Gets the QTI Container element\n     * @returns {jQuery|null}\n     */\n    function getQtiContainer() {\n        var me = window;\n        var $container = null;\n        var max = 10;\n\n        while (me && me.__knownParent__ && max--) {\n            me = me.parent;\n            if (me && me.$) {\n                $container = me.$('#qti-content');\n                if ($container.length) {\n                    return $container;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Keeps an element visible inside the QTI container.\n     * If the element is outside the container viewport, scroll to display it.\n     * @param {String|jQuery|HTMLElement} element\n     */\n    function autoscroll(element) {\n        var $element = $$1(element);\n        var $container = getQtiContainer();\n        var currentScrollTop, minScrollTop, maxScrollTop, scrollTop;\n\n        if ($element.length && $container) {\n            currentScrollTop = $container.scrollTop();\n            maxScrollTop = $element.offset().top;\n            minScrollTop = maxScrollTop - $container.height() + $element.outerHeight();\n            scrollTop = Math.max(Math.min(maxScrollTop, currentScrollTop), minScrollTop);\n            if (scrollTop !== currentScrollTop) {\n                $container.animate({ scrollTop: scrollTop });\n            }\n        }\n    }\n\n    /**\n     * Extract the display information for an interaction-related feedback\n     *\n     * @private\n     * @param {Object} interaction - a qti interaction object\n     * @returns {Object} Object containing useful display information\n     */\n    function extractDisplayInfo(interaction) {\n        var $interactionContainer = interaction.getContainer();\n        var responseIdentifier = interaction.attr('responseIdentifier');\n        var messageGroupId, $displayContainer;\n\n        if (interaction.is('inlineInteraction')) {\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\n            if (!messageGroupId) {\n                //generate a messageFroupId\n                messageGroupId = _.uniqueId('inline_message_group_');\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\n            }\n        } else {\n            messageGroupId = responseIdentifier;\n            $displayContainer = $interactionContainer;\n        }\n\n        return {\n            responseIdentifier: responseIdentifier,\n            interactionContainer: $interactionContainer,\n            displayContainer: $displayContainer,\n            messageGroupId: messageGroupId,\n            order: -1\n        };\n    }\n\n    /**\n     * Get interaction display information sorted in the order of appearance within the item\n     *\n     * @param {Object} item\n     * @returns {Array}\n     */\n    function getInteractionsDisplayInfo(item) {\n        var interactionsDisplayInfo = [];\n        var $itemContainer = item.getContainer();\n        var interactionOrder = 0;\n\n        //extract all interction related information needed to display their\n        _.each(item.getComposingElements(), function(element) {\n            var responseIdentifier;\n            if (element.is('interaction')) {\n                responseIdentifier = element.attr('responseIdentifier');\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\n            }\n        });\n\n        //sort interactionsDisplayInfo on the item level\n        $itemContainer.find('.qti-interaction').each(function() {\n            var interactionContainer = this;\n            _.each(interactionsDisplayInfo, function(_interactionInfo) {\n                if (_interactionInfo.interactionContainer[0] === interactionContainer) {\n                    _interactionInfo.order = interactionOrder;\n                    return false;\n                }\n            });\n            interactionOrder++;\n        });\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\n\n        return interactionsDisplayInfo;\n    }\n\n    /**\n     * Remove previously displayed feedbacks contained in the given container element\n     *\n     * @param {JQuery} $itemContainer\n     */\n    function clearModalFeedbacks($itemContainer) {\n        $itemContainer.find('.qti-modalFeedback').remove();\n    }\n\n    /**\n     * Render a modal feedback into a given container, scoped within an item container\n     *\n     * @private\n     * @param {type} feedback - feedback object\n     * @param {type} loader - loader instance\n     * @param {type} renderer - renderer instance\n     * @param {JQuery} $container - the targeted feedback container\n     * @param {JQuery} $itemContainer - the item container\n     * @param {type} renderedCallback - callback when the feedback has been rendered\n     * @returns {undefined}\n     */\n    function renderModalFeedback(feedback, loader, renderer, $container, $itemContainer, renderedCallback) {\n        //load (potential) new qti classes used in the modal feedback (e.g. math, img)\n        renderer.load(function() {\n            //render the modal feedback\n            var $modalFeedback = $$1(\n                feedback.render({\n                    inline: true\n                })\n            );\n            var done = function done() {\n                renderedCallback({\n                    identifier: feedback.id(),\n                    serial: feedback.getSerial(),\n                    dom: $modalFeedback\n                });\n            };\n            $container.append($modalFeedback);\n\n            // Race between postRendering and timeout\n            // postRendering waits for everything to be resolved or one reject\n            Promise.race([\n                Promise.all(\n                    _.map(feedback.getComposingElements(), function(elt) {\n                        //render also internal elements, such as math or img\n                        return elt.postRender({}, '', renderer).pop();\n                    })\n                ),\n                new Promise(function(resolve, reject) {\n                    _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\n                })\n            ])\n                .then(done)\n                .catch(function(err) {\n                    //in case of postRendering issue, we are also done\n                    done();\n                    throw new Error('Error in post rendering : ' + err);\n                });\n        }, loader.getLoadedClasses());\n    }\n\n    /**\n     * Replace the controls in the running environment  with an \"OK\" button to trigger the end of the feedback state\n     *\n     * @private\n     * @todo FIX ME ! replace the hack to preview and delivery toolbar with a proper plugin in the new test runner is ready\n     * @param {Array} renderedFeebacks\n     * @param {JQuery} $itemContainer\n     * @param {Function} callback\n     */\n    function replaceControl(renderedFeebacks, $itemContainer, callback) {\n        var $scope, $controls, $toggleContainer;\n        if (window.parent && window.parent.parent && window.parent.parent.$) {\n            if ($itemContainer.parents('.tao-preview-scope').length) {\n                //preview mode\n                $scope = window.parent.parent.$('#preview-console');\n                $controls = $scope.find('.preview-console-header .action-bar li:visible');\n                $toggleContainer = $scope.find('.console-button-action-bar');\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, previewOkBtn, callback);\n            } else {\n                //delivery delivery\n                $scope = window.parent.parent.$('body.qti-test-scope .bottom-action-bar');\n                $controls = $scope.find('li:visible');\n                $toggleContainer = $scope.find('.navi-box-list');\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, deliveryOkBtn, callback);\n            }\n        } else {\n            //not in an iframe, add to item body for now\n            $scope = $itemContainer.find('#modalFeedbacks');\n            initControlToggle(renderedFeebacks, $itemContainer, $$1(), $scope, previewOkBtn, callback);\n        }\n    }\n\n    /**\n     * Initialize the \"OK\" button to trigger the end of the feedback mode\n     *\n     * @private\n     * @param {Array} renderedFeebacks\n     * @param {JQuery} $itemContainer\n     * @param {JQuery} $controls\n     * @param {JQuery} $toggleContainer\n     * @param {Function} toggleButtonTemplate\n     * @param {Function} callback\n     */\n    function initControlToggle(\n        renderedFeebacks,\n        $itemContainer,\n        $controls,\n        $toggleContainer,\n        toggleButtonTemplate,\n        callback\n    ) {\n        var $ok = $$1(toggleButtonTemplate()).click(function() {\n            //end feedback mode, hide feedbacks\n            _.each(renderedFeebacks, function(fb) {\n                fb.dom.hide();\n            });\n\n            //restore controls\n            uncover([$itemContainer]);\n            $ok.remove();\n            $controls.show();\n\n            //exec callback\n            callback();\n        });\n\n        $controls.hide();\n        $toggleContainer.append($ok);\n        cover([$itemContainer]);\n    }\n\n    /**\n     * Cover the given interaction containers with a transparent layer to prevent user interacting with the item\n     * @private\n     * @param {Array} interactionContainers\n     */\n    function cover(interactionContainers) {\n        var $cover = $$1('<div class=\"interaction-cover modal-bg\">');\n        _.each(interactionContainers, function($interaction) {\n            $interaction.append($cover);\n        });\n    }\n\n    /**\n     * Remove the layer set by the function cover()\n     * @private\n     * @param {Array} interactionContainers\n     */\n    function uncover(interactionContainers) {\n        _.each(interactionContainers, function($interaction) {\n            $interaction.find('.interaction-cover').remove();\n        });\n    }\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    }\n\n    var inlineRenderer = {\n        showFeedbacks: showFeedbacks\n    };\n\n    return inlineRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/modalRenderer',['lodash', 'jquery', 'async', 'taoQtiItem/qtiItem/helper/pci'], function (_, $, async, pci) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    async = async && Object.prototype.hasOwnProperty.call(async, 'default') ? async['default'] : async;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\n     *\n     */\n\n    /**\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} loader - the item loader instance\n     * @param {Object} renderer - the item render instance\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\n     * @returns {Number} Number of feedbacks to be displayed\n     */\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\n        var count,\n            messages = [],\n            feedbacksToBeDisplayed = [];\n\n        //find which modal feedbacks should be displayed according to the current item session:\n        _.each(item.modalFeedbacks, function(feedback) {\n            var feedbackIds, message;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n\n            if (itemSession[outcomeIdentifier]) {\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                message = getFeedbackMessageSignature(feedback);\n                if (_.indexOf(feedbackIds, feedback.id()) >= 0 && _.indexOf(messages, message) === -1) {\n                    //check content if is already in the display queue\n                    feedbacksToBeDisplayed.push(feedback);\n                    messages.push(message);\n                }\n            }\n        });\n\n        //record the number of feedbacks to be displayed:\n        count = feedbacksToBeDisplayed.length;\n        if (count) {\n            //show in reverse order\n            var callstack = [];\n\n            //iterate from the right because the modal popup will pile up.\n            _.eachRight(feedbacksToBeDisplayed, function(feedback) {\n                //the end callback should be executed to the last displayed modal, which is the last displayed one\n                var endCallback;\n                if (callstack.length === 0) {\n                    endCallback = function() {\n                        onCloseCallback();\n                    };\n                }\n\n                callstack.push(function(cb) {\n                    renderModalFeedback(\n                        feedback,\n                        loader,\n                        renderer,\n                        function() {\n                            cb(null);\n                        },\n                        endCallback\n                    );\n                });\n            });\n\n            async.series(callstack, function() {\n                //all modal are ready and displayed\n                if (_.isFunction(onShowCallback)) {\n                    onShowCallback();\n                }\n            });\n        }\n\n        return count;\n    }\n\n    /**\n     * Render modal feedback as a modal popup\n     *\n     * @param {Object} feedback - object\n     * @param {Object} loader - loader instance\n     * @param {Object} renderer - renderer instance\n     * @param {Function} [closeCallback] - feedback to be executed when the popop closes\n     * @returns {undefined}\n     */\n    function renderModalFeedback(feedback, loader, renderer, renderedCallback, closeCallback) {\n        var $feedback,\n            $feedbackBox = $('#modalFeedbacks'); //feedback.getItem().getContainer().find('#')\n\n        if (feedback.is('modalFeedback')) {\n            //load (potential) new qti classes used in the modal feedback (e.g. math, img)\n            renderer.load(function() {\n                $feedback = $feedbackBox.find('#' + feedback.getSerial());\n                if (!$feedback.length) {\n                    //render the modal feedback\n                    $feedback = feedback.render();\n                    $feedbackBox.append($feedback);\n                } else {\n                    $feedback.modal();\n                }\n\n                renderedCallback();\n\n                feedback.postRender({\n                    callback: closeCallback\n                });\n            }, loader.getLoadedClasses());\n        }\n    }\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    }\n\n    var modalRenderer = {\n        showFeedbacks: showFeedbacks\n    };\n\n    return modalRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/QtiRunner',['jquery', 'lodash', 'context', 'module', 'iframeNotifier', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiRunner/modalFeedback/inlineRenderer', 'taoQtiItem/qtiRunner/modalFeedback/modalRenderer'], function ($, _, context, module, iframeNotifier, ItemLoader, modalFeedbackInline, modalFeedbackModal) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n    ItemLoader = ItemLoader && Object.prototype.hasOwnProperty.call(ItemLoader, 'default') ? ItemLoader['default'] : ItemLoader;\n    modalFeedbackInline = modalFeedbackInline && Object.prototype.hasOwnProperty.call(modalFeedbackInline, 'default') ? modalFeedbackInline['default'] : modalFeedbackInline;\n    modalFeedbackModal = modalFeedbackModal && Object.prototype.hasOwnProperty.call(modalFeedbackModal, 'default') ? modalFeedbackModal['default'] : modalFeedbackModal;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013 (original work) Open Assessment Techonologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    var QtiRunner = function() {\n        this.item = null;\n        this.rpEngine = null;\n        this.renderer = null;\n        this.loader = null;\n        this.itemApi = undefined;\n    };\n\n    QtiRunner.prototype.updateItemApi = function() {\n        var responses = this.getResponses();\n        var states = this.getStates();\n        var variables = [];\n        // Transform responses into state variables.\n        for (var key in states) {\n            var value = states[key];\n            // This is where we set variables that will be collected and stored\n            // as the Item State. We do not want to store large files into\n            // the state, and force the client to download these files\n            // all over again. We then transform them as a place holder, that will\n            // simply indicate that a file composes the state.\n\n            if (value.response && typeof value.response.base !== 'undefined') {\n                for (var property in value.response.base) {\n                    if (property === 'file') {\n                        var file = value.response.base.file;\n                        // QTI File found! Replace it with an appropriate placeholder.\n                        // The data is base64('qti_file_datatype_placeholder_data')\n                        value.response = {\n                            base: {\n                                file: {\n                                    name: file.name,\n                                    mime: 'qti+application/octet-stream',\n                                    data: 'cXRpX2ZpbGVfZGF0YXR5cGVfcGxhY2Vob2xkZXJfZGF0YQ=='\n                                }\n                            }\n                        };\n                    }\n                }\n            }\n\n            variables[key] = value;\n        }\n\n        //set all variables at once\n        this.itemApi.setVariables(variables);\n\n        // Save the responses that will be used for response processing.\n        this.itemApi.saveResponses(responses);\n        this.itemApi.resultApi.setQtiRunner(this);\n    };\n\n    QtiRunner.prototype.setItemApi = function(itemApi) {\n        this.itemApi = itemApi;\n        var that = this;\n        var oldStateVariables = JSON.stringify(itemApi.stateVariables);\n\n        itemApi.onKill(function(killCallback) {\n            // If the responses did not change,\n            // just close gracefully.\n\n            // Collect new responses and update item API.\n            that.updateItemApi();\n            var newStateVariables = JSON.stringify(itemApi.stateVariables);\n\n            // Store the results.\n            if (oldStateVariables !== newStateVariables || itemApi.serviceApi.getHasBeenPaused()) {\n                itemApi.submit(function() {\n                    // Send successful signal.\n                    itemApi.serviceApi.setHasBeenPaused(false);\n                    killCallback(0);\n                });\n            } else {\n                killCallback(0);\n            }\n        });\n    };\n\n    QtiRunner.prototype.setRenderer = function(renderer) {\n        if (renderer.isRenderer) {\n            this.renderer = renderer;\n        } else {\n            throw 'invalid renderer';\n        }\n    };\n\n    QtiRunner.prototype.getLoader = function() {\n        if (!this.loader) {\n            this.loader = new ItemLoader();\n        }\n        return this.loader;\n    };\n\n    QtiRunner.prototype.loadItemData = function(data, callback) {\n        var self = this;\n        this.getLoader().loadItemData(data, function(item) {\n            self.item = item;\n            callback(self.item);\n        });\n    };\n\n    QtiRunner.prototype.loadElements = function(elements, callback) {\n        if (this.getLoader().item) {\n            this.getLoader().loadElements(elements, callback);\n        } else {\n            throw 'QtiRunner : cannot load elements in empty item';\n        }\n    };\n\n    QtiRunner.prototype.renderItem = function(data, done) {\n        var self = this;\n\n        done = _.isFunction(done) ? done : _.noop;\n\n        var render = function() {\n            if (!self.item) {\n                throw 'cannot render item: empty item';\n            }\n            if (self.renderer) {\n                self.renderer.load(function() {\n                    self.item.setRenderer(self.renderer);\n                    self.item.render({}, $('#qti_item'));\n\n                    // Race between postRendering and timeout\n                    // postRendering waits for everything to be resolved or one reject\n                    Promise.race([\n                        Promise.all(self.item.postRender()),\n                        new Promise(function(resolve, reject) {\n                            _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\n                        })\n                    ])\n                        .then(function() {\n                            self.item.getContainer().on('responseChange', function(e, data) {\n                                if (data.interaction && data.interaction.attr('responseIdentifier') && data.response) {\n                                    iframeNotifier.parent('responsechange', [\n                                        data.interaction.attr('responseIdentifier'),\n                                        data.response\n                                    ]);\n                                }\n                            });\n\n                            self.initInteractionsResponse();\n                            self.listenForThemeChange();\n                            done();\n                        })\n                        .catch(function(err) {\n                            //in case of postRendering issue, we are also done\n                            done();\n\n                            throw new Error('Error in post rendering : ' + err);\n                        });\n                }, self.getLoader().getLoadedClasses());\n            } else {\n                throw 'cannot render item: no rendered set';\n            }\n        };\n\n        if (typeof data === 'object') {\n            this.loadItemData(data, render);\n        } else {\n            render();\n        }\n    };\n\n    QtiRunner.prototype.initInteractionsResponse = function() {\n        var self = this;\n        if (self.item) {\n            var interactions = self.item.getInteractions();\n            for (var i in interactions) {\n                var interaction = interactions[i];\n                var responseId = interaction.attr('responseIdentifier');\n                self.itemApi.getVariable(responseId, function(values) {\n                    if (values) {\n                        interaction.setState(values);\n                        iframeNotifier.parent('stateready', [responseId, values]);\n                    } else {\n                        var states = self.getStates();\n                        if (_.indexOf(states, responseId)) {\n                            self.itemApi.setVariable(responseId, states[responseId]);\n                            interaction.setState(states[responseId]);\n                            iframeNotifier.parent('stateready', [responseId, states[responseId]]);\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * If an event 'themechange' bubbles to \"#qti_item\" node\n     * then we tell the renderer to switch the theme.\n     */\n    QtiRunner.prototype.listenForThemeChange = function listenForThemeChange() {\n        var self = this;\n        var $container = this.renderer.getContainer(this.item);\n        if (!$container.length) {\n            $container = $('.qti-item');\n        }\n        $container.off('themechange').on('themechange', function(e, themeName) {\n            var themeLoader = self.renderer.getThemeLoader();\n            themeName = themeName || e.originalEvent.detail;\n            if (themeLoader) {\n                themeLoader.change(themeName);\n            }\n        });\n    };\n\n    QtiRunner.prototype.validate = function() {\n        this.updateItemApi();\n        this.itemApi.finish();\n    };\n\n    QtiRunner.prototype.getResponses = function() {\n        var responses = {};\n        var interactions = this.item.getInteractions();\n\n        _.forEach(interactions, function(interaction) {\n            var response = {};\n            try {\n                response = interaction.getResponse();\n            } catch (e) {\n                console.error(e);\n            }\n            responses[interaction.attr('responseIdentifier')] = response;\n        });\n\n        return responses;\n    };\n\n    QtiRunner.prototype.getStates = function() {\n        var states = {};\n        var interactions = this.item.getInteractions();\n\n        _.forEach(interactions, function(interaction) {\n            var state = {};\n            try {\n                state = interaction.getState();\n            } catch (e) {\n                console.error(e);\n            }\n            states[interaction.attr('responseIdentifier')] = state;\n        });\n\n        return states;\n    };\n\n    QtiRunner.prototype.setResponseProcessing = function(callback) {\n        this.rpEngine = callback;\n    };\n\n    QtiRunner.prototype.showFeedbacks = function(itemSession, callback, onShowCallback) {\n        var inlineDisplay = !!module.config().inlineModalFeedback;\n\n        //currently only modal feedbacks are available\n        if (inlineDisplay) {\n            return modalFeedbackInline.showFeedbacks(\n                this.item,\n                this.getLoader(),\n                this.renderer,\n                itemSession,\n                callback,\n                onShowCallback\n            );\n        } else {\n            return modalFeedbackModal.showFeedbacks(\n                this.item,\n                this.getLoader(),\n                this.renderer,\n                itemSession,\n                callback,\n                onShowCallback\n            );\n        }\n    };\n\n    return QtiRunner;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * Common helper functions\n     */\n    var interactionHelper = {\n        convertChoices: function(choices, outputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                if (Element.isA(c, 'choice')) {\n                    switch (outputType) {\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices: function(interaction, choices, inputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                var choice;\n                if (_.isString(c)) {\n                    if (inputType === 'serial') {\n                        choice = interaction.getChoice(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else if (inputType === 'identifier') {\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else {\n                        ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                } else {\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices: function(choices) {\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for (var i in choices) {\n                if (Element.isA(choices[i], 'choice')) {\n                    var choice = choices[i];\n                    if (choice.attr('fixed')) {\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                } else {\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for (var n = 0; n < r.length - 1; n++) {\n                if (f[n]) {\n                    continue;\n                }\n                var k = -1;\n                do {\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                } while (f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier: function(interaction, choiceSerial) {\n            var choice = interaction.getChoice(choiceSerial);\n            if (choice) {\n                return choice.id();\n            } else {\n                return '';\n            }\n        }\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //webpack trick : handlebar is usale only from cjs.\n    //but anyway we should deprecate the practice to invoke\n    //directly Handlebars at runtimej\n    let hb = Handlebars;\n    if(typeof hb.compile !== 'function'){\n        hb = require('handlebars');\n    }\n\n    const _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'figure',\n        'img',\n        'figcaption',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    const _dependencies = {\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock: ['_container'],\n        associateInteraction: ['simpleAssociableChoice'],\n        choiceInteraction: ['simpleChoice'],\n        gapMatchInteraction: ['gap', 'gapText'],\n        graphicAssociateInteraction: ['associableHotspot'],\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction: ['hotspotChoice'],\n        hotspotInteraction: ['hotspotChoice'],\n        hottextInteraction: ['hottext'],\n        inlineChoiceInteraction: ['inlineChoice'],\n        matchInteraction: ['simpleAssociableChoice'],\n        orderInteraction: ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    const _renderableSubclasses = {\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    const _defaults = {\n        shuffleChoices: true\n    };\n\n    const _isValidRenderer = function(renderer) {\n        let valid = true;\n\n        if (typeof renderer !== 'object') {\n            return false;\n        }\n\n        let classCorrect = false;\n        if (renderer.qtiClass) {\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\n                classCorrect = true;\n            } else {\n                const pos = renderer.qtiClass.indexOf('.');\n                if (pos > 0) {\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\n                    const subClass = renderer.qtiClass.slice(pos + 1);\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if (!classCorrect) {\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if (!renderer.template) {\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl() {\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    const Renderer = function(options) {\n        /**\n         * Store the registered renderer location\n         */\n        const _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        const _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        const _getClassRenderer = function(qtiClass) {\n            let ret = null;\n            if (_renderers[qtiClass]) {\n                ret = _renderers[qtiClass];\n            } else {\n                const pos = qtiClass.indexOf('.');\n                if (pos > 0) {\n                    qtiClass = qtiClass.slice(0, pos);\n                    if (_renderers[qtiClass]) {\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            let success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value) {\n            if (typeof key === 'string') {\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts) {\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key) {\n            if (typeof key === 'string' && options[key]) {\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\n            const messages = this.getOption('messages');\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\n                //currently not translatable but potentially could be if the need raises\n                return hb.compile(messages[elementName][messageKey]);\n            } else {\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager() {\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader() {\n            return this.themeLoader;\n        };\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass) {\n            let res;\n            let ret = '';\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n            const decorators = this.getOption('decorators');\n\n            if (!renderer || !_.isFunction(renderer.template)) {\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n            //post rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass) {\n            let ret = data;\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getData === 'function') {\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data) {\n            return hb.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass) {\n            let ret = null;\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                ret = renderer.getContainer(qtiElement, $scope);\n            } else {\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer && typeof renderer.render === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.setResponse === 'function') {\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\n                    if ($container instanceof $ && $container.length) {\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getResponse === 'function') {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.resetResponse === 'function') {\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState = function(qtiInteraction, state, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function() {\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations) {\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses) {\n            const self = this;\n            let required = [];\n\n            const themeData = themesHelper.getCurrentThemeData();\n            if (themeData) {\n                options.themes = themeData;\n            }\n            if (options.themes) {\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index) {\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\n            }\n\n            if (requiredClasses) {\n                if (_.isArray(requiredClasses)) {\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass) {\n                        const deps = _dependencies[reqClass];\n                        if (deps) {\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass) {\n                        let requiredSubClasses;\n                        if (_renderableSubclasses[qtiClass]) {\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass) {\n                                if (\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\n                                    !registerRendererClass(qtiClass, required)\n                                ) {\n                                    throw new Error(\n                                        self.name +\n                                            ' : missing qti class location declaration: ' +\n                                            qtiClass +\n                                            ', subclass: ' +\n                                            subclass\n                                    );\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            } else {\n                required = _.values(_locations);\n            }\n\n            moduleLoader([], ()=> true)\n                .addList( required.map( module => ({ module, category: 'qti'}) ) )\n                .load()\n                .then( loaded => {\n                    loaded.forEach( clazz => {\n                        if (_isValidRenderer(clazz)) {\n                            _renderers[clazz.qtiClass] = clazz;\n                        }\n\n                    });\n                    if (typeof callback === 'function') {\n                        callback.call(self, _renderers);\n                    }\n                });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload() {\n            if (this.themeLoader) {\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType) {\n            if (Element.isA(interaction, 'interaction')) {\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(\n                    interactionHelper.findChoices(interaction, choices, identificationType),\n                    'serial'\n                );\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType) {\n            let choices = [];\n            let serial, i;\n\n            if (Element.isA(interaction, 'interaction')) {\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if (!this.shuffledChoices[serial] || reshuffle) {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        this.shuffledChoices[serial] = [];\n                        for (i = 0; i < 2; i++) {\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                    //otherwise get the choices from the serials\n                } else {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        _.forEach(choices, function(choice, index) {\n                            if (index < 2) {\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial) {\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial) {\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if (returnedType === 'serial' || returnedType === 'identifier') {\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function() {\n            return _renderers;\n        };\n\n        this.getLocations = function() {\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url) {\n            if (!options.assetManager) {\n                return url;\n            }\n            if (typeof url === 'string' && url.length > 0) {\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl) {\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if (this.getOption('userRelativeUrl')) {\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\n                //already absolute or base64 encoded\n                return relUrl;\n            } else {\n                let absUrl = '';\n                const runtimeLocations = this.getOption('runtimeLocations');\n\n                if (runtimeLocations && _.size(runtimeLocations)) {\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier) {\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false; //break\n                        }\n                    });\n                }\n\n                if (absUrl) {\n                    return absUrl;\n                } else {\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    var Renderer$1 = {\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build: function(renderersLocations, name, defaultOptions) {\n            const NewRenderer = function() {\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n\n    return Renderer$1;\n\n});\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\r\n    'use strict';\r\n\r\n    var _requirejs = window.require;\r\n    var _defaultLoadingOptions = {\r\n        reload: false\r\n    };\r\n\r\n    var loadModuleConfig = function loadModuleConfig(manifest){\r\n        return new Promise(function(resolve, reject){\r\n            var requireConfigAliases = {};\r\n            var baseUrl;\r\n            var reqConfigs = [];\r\n            var modules = {};\r\n\r\n            if(!manifest || !manifest.runtime){\r\n                return reject('invalid manifest');\r\n            }\r\n\r\n            baseUrl = manifest.baseUrl;\r\n\r\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\r\n                _.forEach(manifest.runtime.config, function(pciConfig){\r\n                    if(_.isString(pciConfig)){\r\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\r\n                    }else{\r\n                        if(pciConfig.data){\r\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\r\n                        }else if(pciConfig.file){\r\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            require(reqConfigs, function(){\r\n\r\n                var runtimeModules = {};\r\n\r\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\r\n\r\n                if(manifest.model === 'IMSPCI'){\r\n\r\n                    modules = _.reduce(arguments, function(acc, conf){\r\n                        return _.defaults(acc, conf.paths || {});\r\n                    }, modules);\r\n\r\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\r\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\r\n                            runtimeModules[id] = paths;\r\n                        }\r\n                    });\r\n\r\n                    modules = _.merge(modules, runtimeModules);\r\n\r\n                    _.forEach(modules, function(paths, id){\r\n                        paths = _.isArray(paths) ? paths : [paths];\r\n                        requireConfigAliases[id] = _.map(paths, function(path){\r\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\r\n                        });\r\n                    });\r\n                }\r\n\r\n                resolve(requireConfigAliases);\r\n\r\n            }, reject);\r\n\r\n\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Evaluate if the given object is a proper portable element provider\r\n     * @param {Object} provider\r\n     * @returns {Boolean}\r\n     */\r\n    var isPortableElementProvider = function isPortableElementProvider(provider){\r\n        return (provider && _.isFunction(provider.load));\r\n    };\r\n\r\n    return function portableElementRegistry(methods){\r\n\r\n        var _loaded = false;\r\n        var __providers = {};\r\n\r\n        /**\r\n         * The portable element registry instance\r\n         * @typedef {portableElementRegistry}\r\n         */\r\n        return eventifier(_.defaults(methods || {}, {\r\n            _registry : {},\r\n\r\n            /**\r\n             * Get a register portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} version\r\n             * @returns {Object}\r\n             */\r\n            get : function get(typeIdentifier, version){\r\n\r\n                if(this._registry[typeIdentifier]){\r\n                    //check version\r\n                    if(version){\r\n                        return _.find(this._registry[typeIdentifier], {version : version});\r\n                    }else{\r\n                        //latest\r\n                        return _.last(this._registry[typeIdentifier]);\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Register a portable element provider\r\n             * @param moduleName\r\n             * @param {String|Object }provider - the portable provider object or module name\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            registerProvider : function registerProvider(moduleName, provider){\r\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\r\n                _loaded = false;\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Clear all previously registered providers\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            resetProviders : function resetProviders(){\r\n                __providers = {};\r\n                _loaded = false;\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Load the providers\r\n             * @param {Object} [options]\r\n             * @param {Boolean} [options.reload] - force to reload the registered providers\r\n             * @returns {Promise}\r\n             */\r\n            loadProviders : function loadProviders(options){\r\n                var self = this;\r\n                var loadPromise;\r\n\r\n                if(_loaded && !options.reload){\r\n                    loadPromise = Promise.resolve([]);\r\n                } else {\r\n                    loadPromise = new Promise(function(resolve, reject) {\r\n                        var providerLoadingStack = [];\r\n                        _.forIn(__providers, function(provider, id){\r\n                            if(provider === null){\r\n                                providerLoadingStack.push(id);\r\n                            }\r\n                        });\r\n                        _requirejs(providerLoadingStack, function(){\r\n                            _.each([].slice.call(arguments), function(provider){\r\n                                if(isPortableElementProvider(provider)){\r\n                                    __providers[providerLoadingStack.shift()] = provider;\r\n                                }\r\n                            });\r\n                            resolve(__providers);\r\n                            _loaded = true;\r\n                            self.trigger('providersloaded', __providers);\r\n                        }, reject);\r\n                    });\r\n                }\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * Get all versions of all portable elements registered\r\n             * @returns {Object} - all portable elements and their versions\r\n             */\r\n            getAllVersions : function getAllVersions(){\r\n                var all = {};\r\n                _.forIn(this._registry, function (versions, id){\r\n                    all[id] = _.map(versions, 'version');\r\n                });\r\n                return all;\r\n            },\r\n\r\n            /**\r\n             * Get the runtime for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {Object} the runtime model\r\n             */\r\n            getRuntime : function getRuntime(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    return _.assign(portableElement.runtime, {\r\n                        id : portableElement.typeIdentifier,\r\n                        label : portableElement.label,\r\n                        baseUrl : portableElement.baseUrl,\r\n                        model : portableElement.model\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the creator model for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {Object} the creator model\r\n             */\r\n            getCreator : function getCreator(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement && portableElement.creator){\r\n                    return _.assign(portableElement.creator, {\r\n                        id : portableElement.typeIdentifier,\r\n                        label : portableElement.label,\r\n                        baseUrl : portableElement.baseUrl,\r\n                        response : portableElement.response,\r\n                        model : portableElement.model,\r\n                        xmlns : portableElement.xmlns\r\n                    });\r\n                }else{\r\n                    this.trigger('error', {\r\n                        message : 'no portable element runtime found',\r\n                        typeIdentifier : typeIdentifier,\r\n                        version : version\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Returned all enabled created from the registry\r\n             * @returns {Object} the collection of creators\r\n             */\r\n            getLatestCreators : function getLatestCreators(){\r\n                var all = {};\r\n                _.forIn(this._registry, function (versions, id){\r\n                    var lastVersion = _.last(versions);\r\n\r\n                    //check if the portable element is creatable:\r\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\r\n                        all[id] = lastVersion;\r\n                    }\r\n                });\r\n                return all;\r\n            },\r\n\r\n            /**\r\n             * Get the baseUrl for a given portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {String} the base url\r\n             */\r\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\r\n                var runtime = this.get(typeIdentifier, version);\r\n                if(runtime){\r\n                    return runtime.baseUrl;\r\n                }\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Load the runtimes from registered portable element provider(s)\r\n             *\r\n             * @param {Object} [options]\r\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\r\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\r\n             * @returns {Promise}\r\n             */\r\n            loadRuntimes : function loadRuntimes(options){\r\n                var self = this;\r\n                var loadPromise;\r\n\r\n                options = _.defaults(options||{}, _defaultLoadingOptions);\r\n\r\n                    loadPromise = self.loadProviders(options).then(function(providers){\r\n\r\n                        var loadStack = [];\r\n\r\n                        _.forEach(providers, function (provider){\r\n                            if(provider){//check that the provider is loaded\r\n                                loadStack.push(provider.load());\r\n                            }\r\n                        });\r\n\r\n                        //performs the loadings in parallel\r\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\r\n\r\n                                var configLoadingStack = [];\r\n\r\n                                //update registry\r\n                                self._registry = _.reduce(results, function (acc, _pcis){\r\n                                    return _.merge(acc, _pcis);\r\n                                }, self._registry || {});//incremental loading\r\n\r\n                                //pre-configuring the baseUrl of the portable element's source\r\n                                _.forIn(self._registry, function (versions, typeIdentifier){\r\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\r\n                                        return true;\r\n                                    }\r\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\r\n                                });\r\n\r\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\r\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\r\n                                        return _.merge(acc, paths);\r\n                                    }, {});\r\n\r\n                                    //save the required libs name => path to global require alias\r\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\r\n                                    _requirejs.config({paths : requireConfigAliases});\r\n                                });\r\n                            });\r\n\r\n                    });\r\n\r\n\r\n                loadPromise\r\n                    .then(function() {\r\n                        self.trigger('runtimesloaded');\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * Load the creators from registered portable element provider(s)\r\n             *\r\n             * @param {Object} [options]\r\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\r\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\r\n             * @returns {Promise}\r\n             */\r\n            loadCreators : function loadCreators(options){\r\n                var loadPromise;\r\n                var self = this;\r\n\r\n                options = _.defaults(options||{}, _defaultLoadingOptions);\r\n\r\n                loadPromise = self.loadRuntimes(options).then(function(){\r\n                    var requiredCreatorHooks = [];\r\n\r\n                    _.forIn(self._registry, function (versions, typeIdentifier){\r\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\r\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\r\n                            if(portableElementModel.enabled){\r\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\r\n                                    return true;\r\n                                }\r\n                            }else{\r\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\r\n                        }\r\n                    });\r\n\r\n                    if(requiredCreatorHooks.length){\r\n                        return new Promise(function(resolve, reject){\r\n                            //@todo support caching?\r\n                            _requirejs(requiredCreatorHooks, function (){\r\n                                var creators = {};\r\n                                _.each(arguments, function (creatorHook){\r\n                                    var id = creatorHook.getTypeIdentifier();\r\n                                    var portableElementModel = self.get(id);\r\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\r\n                                    if(i < 0){\r\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\r\n                                    }else{\r\n                                        self._registry[id][i].creator.module = creatorHook;\r\n                                        creators[id] = creatorHook;\r\n                                    }\r\n                                });\r\n                                resolve(creators);\r\n                            }, reject);\r\n                        });\r\n                    }else{\r\n                        return Promise.resolve({});\r\n                    }\r\n\r\n                });\r\n\r\n                loadPromise\r\n                    .then(function(creators) {\r\n                        self.trigger('creatorsloaded', creators);\r\n                        return creators;\r\n                    })\r\n                    .catch(function(err) {\r\n                        self.trigger('error', err);\r\n                    });\r\n\r\n                return loadPromise;\r\n            },\r\n\r\n            /**\r\n             * enable a portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            enable: function enable(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    portableElement.enabled = true;\r\n                }\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * disable a portable element\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            disable: function disable(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                if(portableElement){\r\n                    portableElement.enabled = false;\r\n                }\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * check is a portable element is enabled\r\n             * @param {String} typeIdentifier\r\n             * @param {String} [version] - if the version is provided, the method will try to find that version\r\n             * @returns {portableElementRegistry}\r\n             */\r\n            isEnabled: function isEnabled(typeIdentifier, version){\r\n                var portableElement = this.get(typeIdentifier, version);\r\n                return (portableElement && portableElement.enabled === true);\r\n            }\r\n        }));\r\n    };\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * Utility to retrieve and manipualte QTI Elements\r\n */\r\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\r\n    'use strict';\r\n\r\n    const QtiElements = {\r\n        classes: {\r\n            //abstract classes:\r\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\r\n            atomicBlock: {\r\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\r\n                contains: ['inline'],\r\n                abstract: true\r\n            },\r\n            atomicInline: {\r\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\r\n                contains: ['inline'],\r\n                abstract: true\r\n            },\r\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\r\n            simpleInline: {\r\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\r\n                contains: ['inline'],\r\n                abstract: true\r\n            },\r\n            flowStatic: { parents: ['flow'], abstract: true },\r\n            blockStatic: { parents: ['block'], abstract: true },\r\n            inlineStatic: { parents: ['inline'], abstract: true },\r\n            flow: { parents: ['objectFlow'], abstract: true },\r\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\r\n            //html-derived qti elements:\r\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\r\n            col: { parents: ['bodyElement'], xhtml: true },\r\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\r\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\r\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\r\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\r\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\r\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\r\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\r\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\r\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\r\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\r\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\r\n            param: { parents: ['objectFlow'], xhtml: true },\r\n            table: {\r\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\r\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\r\n                xhtml: true\r\n            },\r\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\r\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\r\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\r\n            td: { parents: ['tableCell'], xhtml: true },\r\n            th: { parents: ['tableCell'], xhtml: true },\r\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\r\n            a: { parents: ['simpleInline'], xhtml: true },\r\n            abbr: { parents: ['simpleInline'], xhtml: true },\r\n            acronym: { parents: ['simpleInline'], xhtml: true },\r\n            b: { parents: ['simpleInline'], xhtml: true },\r\n            big: { parents: ['simpleInline'], xhtml: true },\r\n            cite: { parents: ['simpleInline'], xhtml: true },\r\n            code: { parents: ['simpleInline'], xhtml: true },\r\n            dfn: { parents: ['simpleInline'], xhtml: true },\r\n            em: { parents: ['simpleInline'], xhtml: true },\r\n            i: { parents: ['simpleInline'], xhtml: true },\r\n            kbd: { parents: ['simpleInline'], xhtml: true },\r\n            q: { parents: ['simpleInline'], xhtml: true },\r\n            samp: { parents: ['simpleInline'], xhtml: true },\r\n            small: { parents: ['simpleInline'], xhtml: true },\r\n            span: { parents: ['simpleInline'], xhtml: true },\r\n            strong: { parents: ['simpleInline'], xhtml: true },\r\n            sub: { parents: ['simpleInline'], xhtml: true },\r\n            sup: { parents: ['simpleInline'], xhtml: true },\r\n            tt: { parents: ['simpleInline'], xhtml: true },\r\n            var: { parents: ['simpleInline'], xhtml: true },\r\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\r\n            address: { parents: ['atomicBlock'], xhtml: true },\r\n            h1: { parents: ['atomicBlock'], xhtml: true },\r\n            h2: { parents: ['atomicBlock'], xhtml: true },\r\n            h3: { parents: ['atomicBlock'], xhtml: true },\r\n            h4: { parents: ['atomicBlock'], xhtml: true },\r\n            h5: { parents: ['atomicBlock'], xhtml: true },\r\n            h6: { parents: ['atomicBlock'], xhtml: true },\r\n            p: { parents: ['atomicBlock'], xhtml: true },\r\n            pre: { parents: ['atomicBlock'], xhtml: true },\r\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\r\n            br: { parents: ['atomicInline'], xhtml: true },\r\n            //qti elements:\r\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\r\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\r\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\r\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\r\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\r\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\r\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\r\n            gap: { parents: ['inlineStatic'], qti: true },\r\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\r\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\r\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\r\n            templateElement: { parents: ['bodyElement'], qti: true },\r\n            templateBlock: {\r\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\r\n                contains: ['blockStatic'],\r\n                qti: true\r\n            },\r\n            templateInline: {\r\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\r\n                contains: ['inlineStatic'],\r\n                qti: true\r\n            },\r\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\r\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\r\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\r\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\r\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\r\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\r\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\r\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\r\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\r\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\r\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\r\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\r\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\r\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\r\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\r\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\r\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\r\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\r\n        },\r\n\r\n        cache: { containable: {}, children: {}, parents: {} },\r\n\r\n        getAllowedContainersElements(qtiClass, $container) {\r\n            const classes = QtiElements.getAllowedContainers(qtiClass);\r\n            let jqSelector = '';\r\n            for (let i in classes) {\r\n                if (!classes[i].qti) {\r\n                    //html element:\r\n                    jqSelector += `${classes[i]}, `;\r\n                }\r\n            }\r\n\r\n            if (jqSelector) {\r\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\r\n            }\r\n\r\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\r\n        },\r\n\r\n        getAllowedContainers(qtiClass) {\r\n            let ret;\r\n            if (QtiElements.cache.containable[qtiClass]) {\r\n                ret = QtiElements.cache.containable[qtiClass];\r\n            } else {\r\n                ret = [];\r\n                const parents = QtiElements.getParentClasses(qtiClass, true);\r\n                for (let aClass in QtiElements.classes) {\r\n                    const model = QtiElements.classes[aClass];\r\n                    if (model.contains) {\r\n                        const intersect = _.intersection(model.contains, parents);\r\n                        if (intersect.length) {\r\n                            if (!model.abstract) {\r\n                                ret.push(aClass);\r\n                            }\r\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\r\n                        }\r\n                    }\r\n                }\r\n                QtiElements.cache.containable[qtiClass] = ret;\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        getAllowedContents(qtiClass, recursive, checked) {\r\n            let ret = [];\r\n            checked = checked || {};\r\n\r\n            const model = QtiElements.classes[qtiClass];\r\n            if (model && model.contains) {\r\n                for (let i in model.contains) {\r\n                    const contain = model.contains[i];\r\n                    if (!checked[contain]) {\r\n                        checked[contain] = true;\r\n\r\n                        //qtiClass can contain everything defined as its contents\r\n                        ret.push(contain);\r\n\r\n                        //qtiClass can also contain subclass of its contents\r\n                        const children = QtiElements.getChildClasses(contain, true);\r\n                        for (let j in children) {\r\n                            const child = children[j];\r\n                            if (!checked[child]) {\r\n                                checked[child] = true;\r\n\r\n                                ret.push(child);\r\n\r\n                                //adding children allowed contents depends on the option \"recursive\"\r\n                                if (recursive) {\r\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\r\n                        if (recursive) {\r\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //qtiClass can contain all allowed contents of its parents:\r\n            const parents = QtiElements.getParentClasses(qtiClass, true);\r\n            for (let i in parents) {\r\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\r\n            }\r\n\r\n            return _.uniq(ret, false);\r\n        },\r\n\r\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\r\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\r\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\r\n        },\r\n\r\n        getParentClasses(qtiClass, recursive) {\r\n            let ret;\r\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\r\n                ret = QtiElements.cache.parents[qtiClass];\r\n            } else {\r\n                ret = [];\r\n                if (QtiElements.classes[qtiClass]) {\r\n                    ret = QtiElements.classes[qtiClass].parents;\r\n                    if (recursive) {\r\n                        for (let i in ret) {\r\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\r\n                        }\r\n                        ret = _.uniq(ret, false);\r\n                    }\r\n                }\r\n                QtiElements.cache.parents[qtiClass] = ret;\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        getChildClasses(qtiClass, recursive, type) {\r\n            let ret;\r\n            const cacheType = type ? type : 'all';\r\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\r\n                ret = QtiElements.cache.children[qtiClass][cacheType];\r\n            } else {\r\n                ret = [];\r\n                for (let aClass in QtiElements.classes) {\r\n                    const model = QtiElements.classes[aClass];\r\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\r\n                        if (type) {\r\n                            if (model[type]) {\r\n                                ret.push(aClass);\r\n                            }\r\n                        } else {\r\n                            ret.push(aClass);\r\n                        }\r\n                        if (recursive) {\r\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\r\n                        }\r\n                    }\r\n                }\r\n                if (!QtiElements.cache.children[qtiClass]) {\r\n                    QtiElements.cache.children[qtiClass] = {};\r\n                }\r\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\r\n            }\r\n\r\n            return ret;\r\n        },\r\n\r\n        isBlock(qtiClass) {\r\n            return QtiElements.is(qtiClass, 'block');\r\n        },\r\n\r\n        isInline(qtiClass) {\r\n            return QtiElements.is(qtiClass, 'inline');\r\n        },\r\n\r\n        is(qtiClass, topClass) {\r\n            if (qtiClass === topClass) {\r\n                return true;\r\n            } else {\r\n                const parents = QtiElements.getParentClasses(qtiClass, true);\r\n                return _.indexOf(parents, topClass) >= 0;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check wether an element is visible, using the feature viibility service\r\n         * @param {string} qtiClass - see the list of available classes\r\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\r\n         */\r\n        isVisible(qtiClass) {\r\n            if (this.is(qtiClass, 'customInteraction')) {\r\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\r\n            }\r\n            if (this.is(qtiClass, 'interaction')) {\r\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Get the list of available elements for the authoring side\r\n         * The list of those element is statically defined, but we filter out elements that should be visible\r\n         * @returns {Object} the available elements\r\n         */\r\n        getAvailableAuthoringElements() {\r\n            const tagTitles = {\r\n                commonInteractions: __('Common Interactions'),\r\n                inlineInteractions: __('Inline Interactions'),\r\n                graphicInteractions: __('Graphic Interactions')\r\n            };\r\n\r\n            const authoringElements = {\r\n                choiceInteraction: {\r\n                    label: __('Choice Interaction'),\r\n                    description: __(\r\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\r\n                    ),\r\n                    icon: 'icon-choice',\r\n                    short: __('Choice'),\r\n                    qtiClass: 'choiceInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'mcq'],\r\n                    group: 'common-interactions'\r\n                },\r\n                orderInteraction: {\r\n                    label: __('Order Interaction'),\r\n                    icon: 'icon-order',\r\n                    description: __('Arrange a list of choices in the correct order.'),\r\n                    short: __('Order'),\r\n                    qtiClass: 'orderInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'ordering'],\r\n                    group: 'common-interactions'\r\n                },\r\n                associateInteraction: {\r\n                    label: __('Associate Interaction'),\r\n                    icon: 'icon-associate',\r\n                    description: __('Create pair(s) from a series of choices.'),\r\n                    short: __('Associate'),\r\n                    qtiClass: 'associateInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'association'],\r\n                    group: 'common-interactions'\r\n                },\r\n                matchInteraction: {\r\n                    label: __('Match Interaction'),\r\n                    icon: 'icon-match',\r\n                    description: __(\r\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\r\n                    ),\r\n                    short: __('Match'),\r\n                    qtiClass: 'matchInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'association'],\r\n                    group: 'common-interactions'\r\n                },\r\n                hottextInteraction: {\r\n                    label: __('Hottext Interaction'),\r\n                    icon: 'icon-hottext',\r\n                    description: __('Select one or more text parts (hottext) within a text.'),\r\n                    short: __('Hottext'),\r\n                    qtiClass: 'hottextInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'text'],\r\n                    group: 'common-interactions'\r\n                },\r\n                gapMatchInteraction: {\r\n                    label: __('Gap Match Interaction'),\r\n                    icon: 'icon-gap-match',\r\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\r\n                    short: __('Gap Match'),\r\n                    qtiClass: 'gapMatchInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\r\n                    group: 'common-interactions'\r\n                },\r\n                sliderInteraction: {\r\n                    label: __('Slider Interaction'),\r\n                    icon: 'icon-slider',\r\n                    description: __('Select a value within a numerical range.'),\r\n                    short: __('Slider'),\r\n                    qtiClass: 'sliderInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'special'],\r\n                    group: 'common-interactions'\r\n                },\r\n                extendedTextInteraction: {\r\n                    label: __('Extended Text Interaction'),\r\n                    icon: 'icon-extended-text',\r\n                    description: __(\r\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\r\n                    ),\r\n                    short: __('Extended Text'),\r\n                    qtiClass: 'extendedTextInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'text'],\r\n                    group: 'common-interactions'\r\n                },\r\n                uploadInteraction: {\r\n                    label: __('File Upload Interaction'),\r\n                    icon: 'icon-upload',\r\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\r\n                    short: __('File Upload'),\r\n                    qtiClass: 'uploadInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'special'],\r\n                    group: 'common-interactions'\r\n                },\r\n                mediaInteraction: {\r\n                    label: __('Media Interaction'),\r\n                    icon: 'icon-media',\r\n                    description: __(\r\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\r\n                    ),\r\n                    short: __('Media'),\r\n                    qtiClass: 'mediaInteraction',\r\n                    tags: [tagTitles.commonInteractions, 'media'],\r\n                    group: 'common-interactions'\r\n                },\r\n                _container: {\r\n                    label: __('Text Block'),\r\n                    icon: 'icon-font',\r\n                    description: __(\r\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\r\n                    ),\r\n                    short: __('Block'),\r\n                    qtiClass: '_container',\r\n                    tags: [tagTitles.inlineInteractions, 'text'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                inlineChoiceInteraction: {\r\n                    label: __('Inline Choice Interaction'),\r\n                    icon: 'icon-inline-choice',\r\n                    description: __('Select a choice from a drop-down list.'),\r\n                    short: __('Inline Choice'),\r\n                    qtiClass: 'inlineChoiceInteraction',\r\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                textEntryInteraction: {\r\n                    label: __('Text Entry Interaction'),\r\n                    icon: 'icon-text-entry',\r\n                    description: __(\r\n                        'Collect open-ended information in a short text input (strings or numeric values).'\r\n                    ),\r\n                    short: __('Text Entry'),\r\n                    qtiClass: 'textEntryInteraction',\r\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                endAttemptInteraction: {\r\n                    label: __('End Attempt Interaction'),\r\n                    icon: 'icon-end-attempt',\r\n                    description: __('Trigger the end of the item attempt.'),\r\n                    short: __('End Attempt'),\r\n                    qtiClass: 'endAttemptInteraction',\r\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\r\n                    group: 'inline-interactions'\r\n                },\r\n                hotspotInteraction: {\r\n                    label: __('Hotspot Interaction'),\r\n                    icon: 'icon-hotspot',\r\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\r\n                    short: __('Hotspot'),\r\n                    qtiClass: 'hotspotInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                graphicOrderInteraction: {\r\n                    label: __('Graphic Order Interaction'),\r\n                    icon: 'icon-graphic-order',\r\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\r\n                    short: __('Order'),\r\n                    qtiClass: 'graphicOrderInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                graphicAssociateInteraction: {\r\n                    label: __('Graphic Associate Interaction'),\r\n                    icon: 'icon-graphic-associate',\r\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\r\n                    short: __('Associate'),\r\n                    qtiClass: 'graphicAssociateInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'association'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                graphicGapMatchInteraction: {\r\n                    label: __('Graphic Gap Match Interaction'),\r\n                    icon: 'icon-graphic-gap',\r\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\r\n                    short: __('Gap Match'),\r\n                    qtiClass: 'graphicGapMatchInteraction',\r\n                    tags: [tagTitles.graphicInteractions, 'association'],\r\n                    group: 'graphic-interactions'\r\n                },\r\n                selectPointInteraction: {\r\n                    label: __('Select Point Interaction'),\r\n                    icon: 'icon-select-point',\r\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\r\n                    short: __('Select Point'),\r\n                    qtiClass: 'selectPointInteraction',\r\n                    tags: [tagTitles.graphicInteractions],\r\n                    group: 'graphic-interactions'\r\n                }\r\n            };\r\n\r\n            //filter out hidden elements\r\n            const availableElements = {};\r\n            for (const [elementId, element] of Object.entries(authoringElements)) {\r\n                if (this.isVisible(elementId)) {\r\n                    availableElements[elementId] = element;\r\n                }\r\n            }\r\n            return availableElements;\r\n        }\r\n    };\r\n\r\n    return QtiElements;\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\r\n    'lodash',\r\n    'i18n',\r\n    'taoQtiItem/portableElementRegistry/factory/factory',\r\n    'taoQtiItem/qtiCreator/helper/qtiElements'\r\n], function (_, __, portableElementRegistry, qtiElements) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Create a ney interaction registry instance\r\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function customInteractionRegistry() {\r\n        return portableElementRegistry({\r\n            /**\r\n             * Get the authoring information for a given custom interaction\r\n             * @param {string} typeIdentifier - the interaction type identifier\r\n             * @param {Object} [options]\r\n             * @param {string|number} [options.version] - the interaction version\r\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\r\n             * @returns {Object} the authoring info\r\n             */\r\n            getAuthoringData(typeIdentifier, options = {}) {\r\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\r\n                const pciModel = this.get(typeIdentifier, options.version);\r\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\r\n                if (\r\n                    pciModel &&\r\n                    pciModel.creator &&\r\n                    pciModel.creator.hook &&\r\n                    pciModel.creator.icon &&\r\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\r\n                ) {\r\n                    return {\r\n                        label: pciModel.label, //currently no translation available\r\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\r\n                        short: pciModel.short,\r\n                        description: pciModel.description,\r\n                        qtiClass, //custom interaction is block type\r\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\r\n                        group: 'custom-interactions'\r\n                    };\r\n                }\r\n            }\r\n        }).on('creatorsloaded', function () {\r\n            const creators = this.getLatestCreators();\r\n            _.forEach(creators, function (creator, typeIdentifier) {\r\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\r\n                    parents: ['customInteraction'],\r\n                    qti: true\r\n                };\r\n            });\r\n        });\r\n    };\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of ciRegistry\r\n    var registry = ciRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\r\n    'lodash',\r\n    'taoQtiItem/portableElementRegistry/factory/factory'\r\n], function (_, portableElementRegistry){\r\n    'use strict';\r\n\r\n    /**\r\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\r\n     *\r\n     * @returns {Object} registry instance\r\n     */\r\n    return function infoControlRegistry(){\r\n        return portableElementRegistry();\r\n    }\r\n\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\r\n    'use strict';\r\n\r\n    //create a preregistered singleton of icRegistry\r\n    var registry = icRegistry();\r\n    var providers = [];\r\n    var config = module.config();\r\n\r\n    if(config && config.providers){\r\n        providers = config.providers;\r\n    }\r\n\r\n    _.each(providers, function(provider){\r\n        if(provider.name && provider.module){\r\n            registry.registerProvider(provider.module);\r\n        }\r\n    });\r\n\r\n    return registry;\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\r\n    'taoQtiItem/portableElementRegistry/ciRegistry',\r\n    'taoQtiItem/portableElementRegistry/icRegistry'\r\n], function (ciRegistry, icRegistry) {\r\n    'use strict';\r\n\r\n    function getBaseUrlByIdentifier(typeIdentifier) {\r\n        if (ciRegistry.get(typeIdentifier)) {\r\n            return ciRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        if (icRegistry.get(typeIdentifier)) {\r\n            return icRegistry.getBaseUrl(typeIdentifier);\r\n        }\r\n        return typeIdentifier;\r\n    }\r\n\r\n    //strategy to resolve portable info control and portable interactions paths.\r\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\r\n    return {\r\n        name: 'portableElementLocation',\r\n        handle: function handlePortableElementLocation(url) {\r\n\r\n            if (url.file === url.path) {\r\n                return getBaseUrlByIdentifier(url.file);\r\n            } else if (url.source === url.relative) {\r\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\r\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\r\n                    if (runtimeLocation) {\r\n                        return runtimeLocation + '/' + relPath;\r\n                    }\r\n                    return fullmatch;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: function handleTheme(url) {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        associableHotspot: false,\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'commonRenderer',\n        locations: locations,\n        options: {\n            assetManager: assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var userModules = {\n        /**\n         * Load user modules defined in the module config\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\n         * @returns {Promise}\n         */\n        load: function load(userModules) {\n            var config = module.config();\n\n            if (!userModules || !_.isArray(userModules)) {\n                if (config && config.userModules && _.isArray(config.userModules)) {\n                    userModules = config.userModules;\n                } else {\n                    userModules = [];\n                }\n            }\n            if(!userModules.length){\n                return Promise.resolve();\n            }\n            return new Promise(function(resolve, reject) {\n                window.require(userModules, function() {\n                    _.forEach(arguments, function(dependency) {\n                        if (dependency && _.isFunction(dependency.exec)) {\n                            dependency.exec();\n                        }\n                    });\n                    resolve();\n                }, function(err) {\n                    reject(err.message);\n                });\n            });\n        }\n    };\n\n    return userModules;\n\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\ndefine('taoQtiItem/runtime/qtiBootstrap',[\r\n    'jquery',\r\n    'lodash',\r\n    'module',\r\n    'taoQtiItem/qtiRunner/core/QtiRunner',\r\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\r\n    'iframeNotifier',\r\n    'core/history',\r\n    'taoQtiItem/runner/provider/manager/userModules'\r\n], function($, _, module, QtiRunner, Renderer, iframeNotifier, history, userModules){\r\n    'use strict';\r\n\r\n    //fix backspace going back into the history\r\n    history.fixBrokenBrowsers();\r\n\r\n    /**\r\n     * The bootstrap is used to set up a QTI item at runtime. It connects to the itemApi.\r\n     *\r\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n     * @exports taoQtiItem/runtime/qtiBootstrap\r\n     *\r\n     * @param {Object} runnerContext - the item context\r\n     */\r\n    return function bootstrap (runnerContext){\r\n\r\n        //reconnect to global itemApi function\r\n        window.onItemApiReady = function onItemApiReady(itemApi) {\r\n            var qtiRunner = new QtiRunner();\r\n            var coreItemData = runnerContext.itemData;\r\n            var variableElementsData = _.merge(runnerContext.variableElements, itemApi.params.contentVariables || {});\r\n\r\n            var renderer = new Renderer();\r\n\r\n            // Makes the runner interface available from outside the frame\r\n            // for preview.\r\n            window.qtiRunner = qtiRunner;\r\n\r\n            qtiRunner.setItemApi(itemApi);\r\n            qtiRunner.setRenderer(renderer);\r\n\r\n            qtiRunner.loadItemData(coreItemData, function() {\r\n\r\n                qtiRunner.loadElements(variableElementsData, function() {\r\n\r\n                    qtiRunner.renderItem(undefined, function() {\r\n\r\n                        //userModules loading\r\n                        //we use any user modules bound to this module configuration instead of the ones bound to the new test runner\r\n                        var userModulesOverride;\r\n                        var config = module.config();\r\n                        if (config && config.userModules && _.isArray(config.userModules) && config.userModules.length > 0) {\r\n                            userModulesOverride = config.userModules;\r\n                        }\r\n                        userModules.load(userModulesOverride)\r\n                            .then(function() {\r\n\r\n                                //exec user scripts\r\n                                if (_.isArray(runnerContext.userScripts)) {\r\n                                    require(runnerContext.userScripts, function() {\r\n                                        _.forEach(arguments, function(dependency) {\r\n                                            if (_.isFunction(dependency.exec)) {\r\n                                                dependency.exec.call(null, runnerContext.userVars);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n\r\n                                iframeNotifier.parent('itemloaded');\r\n\r\n                                //IE9/10 loose the iframe focus, so we force getting it back.\r\n                                _.defer(function(){\r\n                                    window.focus();\r\n                                });\r\n                            })\r\n                            .catch(function(err) {\r\n                                throw new Error('Error in user modules : ' + err.message);\r\n                            });\r\n\r\n                    });\r\n                });\r\n            });\r\n        };\r\n\r\n        //if the item is longer to load,\r\n        _.defer(function(){\r\n           //tell the parent to connect the item api\r\n           iframeNotifier.parent('itemready');\r\n       });\r\n\r\n    };\r\n});\r\n\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\ndefine('taoQtiItem/runtime/qtiLoader',[\r\n    'taoQtiItem/runtime/qtiBootstrap',\r\n    'css!taoCss/tao-main-style'\r\n], function(qtiBootstrap){\r\n    'use strict';\r\n\r\n    return {\r\n        start : function start(){\r\n            //the context is set into the template and bound to the tao namespace in global scope\r\n            var runnerContext = window.tao.qtiRunnerContext;\r\n            qtiBootstrap(runnerContext);\r\n        }\r\n    };\r\n});\r\n\n","\ndefine(\"taoQtiItem\\loader\\qtiLoader.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\"]);\n"]}