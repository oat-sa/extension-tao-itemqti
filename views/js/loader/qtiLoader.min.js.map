{"version":3,"names":["loaderScript","document","getElementById","configUrl","getAttribute","bundle","loadController","controllerOptions","controllerPath","params","JSON","parse","err","window","require","controller","startController","started","start","addEventListener","readyState","loadBundles","loaded","bundles","concat","filter","item","index","indexOf","forEach","length","define","qtiClasses","_container","assessmentItem","responseProcessing","_simpleFeedbackRule","stylesheet","math","figure","img","figcaption","object","outcomeDeclaration","responseDeclaration","rubricBlock","associableHotspot","gap","gapImg","gapText","hotspotChoice","hottext","inlineChoice","simpleAssociableChoice","simpleChoice","associateInteraction","choiceInteraction","endAttemptInteraction","extendedTextInteraction","gapMatchInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","matchInteraction","mediaInteraction","orderInteraction","prompt","selectPointInteraction","sliderInteraction","textEntryInteraction","uploadInteraction","feedbackBlock","feedbackInline","modalFeedback","customInteraction","infoControl","include","table","printedVariable","_tooltip","_","Object","prototype","hasOwnProperty","call","util","buildSerial","prefix","id","chars","i","charAt","Math","floor","random","buildId","usedIds","suffix","exists","TypeError","getUsedIds","contains","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","each","collectionName","collection","split","nameToken","elt","parent","isFunction","find","Error","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","removeMarkupNamespaces","removeMarkupNamespace","getMarkupUsedNamespaces","namespaces","original","slash","node","push","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","options","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","_class","loggerFactory","rendererConfig","_instances","logger","Element","Class","extend","qtiClass","serial","rootElement","init","attributes","metaData","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","name","value","prop","trigger","key","removeData","removeAttr","removeAttributes","warn","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","body","location","getRootElement","setRelatedItem","setRootElement","getRelatedItem","setRenderer","getRenderer","render","rendering","_renderer","tplData","defaultData","tag","resolveUrl","merge","getData","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","getPrefix","html5Ns","prefixed","xmlNsHandler","stripNs","pattern","openRegEx","closeRegEx","restoreNs","xml","ignoreMarkup","xmlCopy","xmlRe","tagRe","xmlMatch","imsXsd","prefixAtt","tagMatch","responseRules","MATCH_CORRECT","responseIdentifier","outcomeIdentifier","responseIf","expression","expressions","identifier","baseType","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","response","isUsingTemplate","tpl","template","isValidTemplateName","tplName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","forIn","uri","getTemplateNameFromResponseRules","outcomeRules","keys","isEqual","itemScore","responseIdentifiers","outcomeExpressions","map","moduleLoader","responseHelper","itemScoreHelper","loadPortableCustomElementProperties","portableElement","rawProperties","properties","forOwn","e","loadPortableCustomElementData","typeIdentifier","entryPoint","libraries","setNamespace","xmlns","Loader","classesLocation","qti","setClassesLocation","qtiClassesList","getRequiredClasses","union","loadRequiredClasses","callback","reload","requiredClass","requiredClasses","required","module","category","addList","load","then","loadeded","QtiClass","getLoadedClasses","loadItemData","Qti","loadContainer","outcomes","outcome","buildOutcome","addOutcomeDeclaration","feedbacks","feedback","buildElement","addModalFeedback","stylesheets","addStylesheet","responses","responseRuleItemIndex","findIndex","_ref","responseRule","splice","buildResponse","addResponseDeclaration","feedbackRules","fbData","feedbackOutcomeIdentifier","feedbackOutcome","buildSimpleFeedbackRule","feedbackResponseRuleIndex","_ref2","setOutcomeResponseRule","responseKey","customResponseProcessing","some","setResponseProcessing","buildResponseProcessing","setNamespaces","setSchemaLocations","schemaLocations","setApipAccessibility","apipAccessibility","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","howMatch","defaultValue","correctResponse","correctResponses","mapEntries","size","mapping","areaMapping","mappingAttributes","feedbackRule","setCondition","condition","comparedValue","feedbackThen","modalFeedbacks","feedbackElse","comparedOutcome","rp","processingType","bodyObject","bodyData","elements","defaults","eltData","setElement","text","bdy","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","loadTooltipData","interaction","buildInteractionChoices","loadPciData","choices","set","matchSet","choice","addChoice","gapImgs","addGapImg","val","_alt","setMathML","mathML","annotations","encoding","setAnnotation","tooltip","content","pci","pic","getRawValues","pciVar","base","values","list","_checkContainerType","_getBodyDom","html","_setBodyDomClass","newClass","oldClass","$wrapper","_setDomClass","$bodyDom","wrapInner","setEncodedDataToDom","dataName","newValue","oldValue","_getEncodedDataString","setEncodedData","getEncodedData","removeEncodedData","hasEncodedData","$body","matches","_prefix","container","$$1","context","containerHelper","Handlebars","Helpers0","iframeNotifier","previewOkBtn","asString","Template","deliveryOkBtn","Template$1","showFeedbacks","loader","itemSession","onCloseCallback","onShowCallback","firstFeedback","interactionsDisplayInfo","getInteractionsDisplayInfo","messages","renderedFeebacks","renderingQueue","$itemContainer","$itemBody","children","feedbackIds","message","$container","_currentMessageGroupId","interactionInfo","order","getFeedbackMessageSignature","displayContainer","messageGroupId","sortBy","clearModalFeedbacks","renderingToken","renderModalFeedback","renderingData","dom","on","autoscroll","replaceControl","getQtiContainer","me","max","__knownParent__","currentScrollTop","minScrollTop","maxScrollTop","scrollTop","$element","offset","top","height","outerHeight","min","animate","extractDisplayInfo","$displayContainer","$interactionContainer","closest","uniqueId","interactionContainer","interactionOrder","_interactionInfo","remove","renderedCallback","$modalFeedback","inline","done","Promise","race","all","pop","resolve","reject","delay","timeout","catch","$controls","$toggleContainer","parents","initControlToggle","toggleButtonTemplate","$ok","click","fb","hide","uncover","show","cover","interactionContainers","$cover","$interaction","toLowerCase","__initialized","depth0","helpers","partials","compilerInfo","helper","buffer","helperMissing","escapeExpression","__","hash","inlineRenderer","async","count","feedbacksToBeDisplayed","callstack","eachRight","endCallback","cb","series","closeCallback","$feedback","$feedbackBox","modal","modalRenderer","ItemLoader","modalFeedbackInline","modalFeedbackModal","QtiRunner","rpEngine","itemApi","updateItemApi","getResponses","states","getStates","variables","property","file","mime","setVariables","saveResponses","resultApi","setQtiRunner","setItemApi","that","oldStateVariables","stringify","stateVariables","onKill","killCallback","newStateVariables","serviceApi","getHasBeenPaused","submit","setHasBeenPaused","getLoader","self","renderItem","noop","initInteractionsResponse","listenForThemeChange","interactions","getInteractions","responseId","getVariable","setState","setVariable","off","themeName","themeLoader","getThemeLoader","originalEvent","detail","change","validate","finish","getResponse","error","getState","inlineDisplay","config","inlineModalFeedback","_Mathfloor","interactionHelper","convertChoices","outputType","_this","c","findChoices","inputType","getChoice","getChoiceByIdentifier","shuffleChoices","r","f","j","n","k","tmp","serialToIdentifier","choiceSerial","themesHelper","getDocumentBaseUrl","protocol","host","pathname","hb","compile","_renderableClasses","_dependencies","_renderableSubclasses","_defaults","_isValidRenderer","valid","classCorrect","pos","slice","subClass","Renderer","registerRendererClass","success","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","opts","getOption","getCustomMessage","elementName","messageKey","getAssetManager","assetManager","qtiSubclass","res","decorators","isObject","before","after","renderDirect","setResponse","qtiInteraction","resetResponse","destroy","getLoadedRenderers","register","renderersLocations","themeData","getCurrentThemeData","themes","available","theme","path","preload","intersection","reqClass","deps","requiredSubClasses","unload","setShuffledChoices","identificationType","pluck","getShuffledChoices","reshuffle","returnedType","getChoices","getRenderers","getLocations","url","getAbsoluteUrl","relUrl","absUrl","runtimeLocations","runtimeLocation","baseUrl","setAreaBroker","areaBroker","_areaBroker","getAreaBroker","getItemCreator","Renderer$1","build","defaultOptions","NewRenderer","apply","eventifier","_requirejs","_defaultLoadingOptions","loadModuleConfig","manifest","requireConfigAliases","reqConfigs","modules","runtime","pciConfig","paths","runtimeModules","model","reduce","acc","conf","isPortableElementProvider","provider","portableElementRegistry","methods","_loaded","__providers","_registry","get","version","last","registerProvider","moduleName","resetProviders","loadProviders","loadPromise","providerLoadingStack","shift","getAllVersions","versions","getRuntime","assign","label","getCreator","creator","getLatestCreators","lastVersion","hook","enabled","getBaseUrl","loadRuntimes","providers","loadStack","results","configLoadingStack","_pcis","moduleConfigs","loadCreators","requiredCreatorHooks","portableElementModel","creators","creatorHook","getTypeIdentifier","enable","disable","isEnabled","featuresService","QtiElements","classes","itemBody","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","div","dl","dt","dd","hr","li","ol","ul","param","tbody","tfoot","thead","td","th","tr","a","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","p","pre","br","textRun","blockInteraction","inlineInteraction","templateElement","templateBlock","templateInline","drawingInteraction","graphicInteraction","cache","containable","getAllowedContainersElements","getAllowedContainers","jqSelector","substring","getParentClasses","aClass","intersect","getChildClasses","getAllowedContents","recursive","checked","contain","child","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","isVisible","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","elementId","entries","qtiElements","customInteractionRegistry","getAuthoringData","enabledOnly","pciModel","ciRegistry","registry","infoControlRegistry","icRegistry","getBaseUrlByIdentifier","handle","handlePortableElementLocation","source","relative","fullmatch","relPath","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","handleTheme","root_url","toString","taomedia","external","base64","itemCssNoCache","locations","\"simpleChoice.choiceInteraction\"","\"simpleChoice.orderInteraction\"","\"simpleAssociableChoice.matchInteraction\"","\"simpleAssociableChoice.associateInteraction\"","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","orderDragAndDrop","userModules","dependency","exec","history","fixBrokenBrowsers","bootstrap","runnerContext","onItemApiReady","qtiRunner","coreItemData","itemData","variableElementsData","variableElements","contentVariables","userModulesOverride","userScripts","userVars","defer","focus","qtiBootstrap","tao","qtiRunnerContext"],"sources":["/Users/oat/Projects/terre/tao-community/tao/views/build/config-wrap-start-default.js","../../loader/bootstrap.js","../qtiItem/core/qtiClasses.js","../qtiItem/helper/util.js","../qtiItem/helper/rendererConfig.js","../qtiItem/core/Element.js","../qtiItem/helper/xmlNsHandler.js","../qtiItem/helper/responseRules.js","../qtiItem/helper/response.js","../qtiItem/helper/itemScore.js","../qtiItem/core/Loader.js","../qtiItem/helper/pci.js","../qtiItem/helper/container.js","../qtiRunner/modalFeedback/inlineRenderer.js","../qtiRunner/modalFeedback/modalRenderer.js","../qtiRunner/core/QtiRunner.js","../qtiItem/helper/interactionHelper.js","../qtiRunner/core/Renderer.js","../portableElementRegistry/factory/factory.js","../qtiCreator/helper/qtiElements.js","../portableElementRegistry/factory/ciRegistry.js","../portableElementRegistry/ciRegistry.js","../portableElementRegistry/factory/icRegistry.js","../portableElementRegistry/icRegistry.js","../portableElementRegistry/assetManager/portableAssetStrategy.js","../qtiCommonRenderer/renderers/config.js","../qtiCommonRenderer/renderers/Renderer.js","../runner/provider/manager/userModules.js","../runtime/qtiBootstrap.js","../runtime/qtiLoader.js","module-create.js","/Users/oat/Projects/terre/tao-community/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\n        _container: 'taoQtiItem/qtiItem/core/Container',\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\n        math: 'taoQtiItem/qtiItem/core/Math',\n        figure: 'taoQtiItem/qtiItem/core/Figure',\n        img: 'taoQtiItem/qtiItem/core/Img',\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\n        object: 'taoQtiItem/qtiItem/core/Object',\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        include: 'taoQtiItem/qtiItem/core/Include',\n        table: 'taoQtiItem/qtiItem/core/Table',\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var util = {\n        buildSerial: function buildSerial(prefix) {\n            var id = prefix || '';\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < 22; i++) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId: function buildId(item, prefix) {\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds = item.getUsedIds();\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (_.contains(usedIds, id)) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if (!prefix) {\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if (prefix) {\n                prefix = prefix\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\n                    .replace(/(_)+/gi, '_');\n                if (useSuffix) {\n                    suffix = '_' + i;\n                }\n            }\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds[id]) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\n            var found = null;\n\n            if (_.isString(collectionNames)) {\n                collectionNames = [collectionNames];\n            }\n\n            if (_.isArray(collectionNames)) {\n                _.each(collectionNames, function(collectionName) {\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken) {\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if (elt) {\n                        found = { parent: element, element: elt };\n                        return false; //break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt) {\n                        if (_.isFunction(elt.find)) {\n                            found = elt.find(searchedSerial);\n                            if (found) {\n                                return false; //break the each loop\n                            }\n                        }\n                    });\n\n                    if (found) {\n                        return false; //break the each loop\n                    }\n                });\n            } else {\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\n            if (ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4) {\n                    if ($2.indexOf(':') > 0) {\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\n                });\n                return markup;\n            }\n            return markup;\n        },\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node) {\n                namespaces.push(ns);\n                return '<' + slash + node + '>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args) {\n        var options = {\n            data: {},\n            placeholder: null,\n            subclass: '',\n            renderer: null\n        };\n\n        _.each(args, function(arg) {\n            if (arg) {\n                if (arg.isRenderer) {\n                    options.renderer = arg;\n                } else if (arg instanceof $ && arg.length) {\n                    options.placeholder = arg;\n                } else if (_.isString(arg)) {\n                    options.subclass = arg;\n                } else if (_.isPlainObject(arg)) {\n                    options.data = arg;\n                } else {\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n\n        return options;\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass: '',\n        serial: '',\n        rootElement: null,\n        init: function(serial, attributes) {\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if (typeof serial === 'object') {\n                attributes = serial;\n                serial = '';\n            }\n\n            if (!serial) {\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\n            }\n\n            if (!_instances[serial]) {\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            } else {\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if (typeof this.initContainer === 'function') {\n                this.initContainer(arguments[2] || '');\n            }\n            if (typeof this.initObject === 'function') {\n                this.initObject();\n            }\n        },\n        is: function(qtiClass) {\n            return qtiClass === this.qtiClass;\n        },\n        placeholder: function() {\n            return '{{' + this.serial + '}}';\n        },\n        getSerial: function() {\n            return this.serial;\n        },\n        getUsedIdentifiers: function() {\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for (var i in elts) {\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if (id) {\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds: function getUsedIds() {\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt) {\n                var id = elt.attr('id');\n                if (id && !_.contains(usedIds, id)) {\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.attributes[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.attr(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.attributes[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.data(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.metaData[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData: function(name) {\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr: function(name) {\n            return this.removeAttributes(name);\n        },\n        setAttributes: function(attributes) {\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes: function() {\n            return _.clone(this.attributes);\n        },\n        removeAttributes: function(attrNames) {\n            if (typeof attrNames === 'string') {\n                attrNames = [attrNames];\n            }\n            for (var i in attrNames) {\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements: function() {\n            var elts = {};\n            function append(element) {\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if (typeof this.initContainer === 'function') {\n                append(this.getBody());\n            }\n            if (typeof this.initObject === 'function') {\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v) {\n                if (Element.isA(v, '_container')) {\n                    append(v);\n                } else if (_.isArray(v)) {\n                    _.each(v, function(v) {\n                        if (Element.isA(v, '_container')) {\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses: function() {\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt) {\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find: function(serial) {\n            var found = null;\n            var object, body;\n\n            if (typeof this.initObject === 'function') {\n                object = this.getObject();\n                if (object.serial === serial) {\n                    found = { parent: this, element: object, location: 'object' };\n                }\n            }\n\n            if (!found && typeof this.initContainer === 'function') {\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = { parent: this, element: body, location: 'body' };\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent: function() {\n            var item = this.getRootElement();\n            if (item) {\n                var found = item.find(this.getSerial());\n                if (found) {\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem: function(item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement: function(item) {\n            var composingElts, i;\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for (i in composingElts) {\n                    composingElts[i].setRootElement(item);\n                }\n            }\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem: function() {\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement: function() {\n            var ret = null;\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer: function(renderer) {\n            if (renderer && renderer.isRenderer) {\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for (var serial in elts) {\n                    elts[serial].setRenderer(renderer);\n                }\n            } else {\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer: function() {\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    tag: this.qtiClass,\n                    serial: this.serial,\n                    attributes: this.getAttributes()\n                };\n\n            if (!_renderer) {\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if (typeof this.initObject === 'function') {\n                defaultData.object = {\n                    attributes: this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if (args.placeholder) {\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender: function(data, altClassName, renderer) {\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if (_renderer) {\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            } else {\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer: function($scope, subclass) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                return renderer.getContainer(this, $scope, subclass);\n            } else {\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray: function() {\n            var arr = {\n                serial: this.serial,\n                type: this.qtiClass,\n                attributes: this.getAttributes()\n            };\n\n            if (typeof this.initContainer === 'function') {\n                arr.body = this.getBody().toArray();\n            }\n            if (typeof this.initObject === 'function') {\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty: function() {\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (!_containClass(clazz, className)) {\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass: function(className) {\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (clazz) {\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if (clazz) {\n                    this.attr('class', clazz);\n                } else {\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass: function(className, state) {\n            if (typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if (this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset: function() {\n            return Element.issetElement(this.serial);\n        },\n        unset: function() {\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass) {\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\n    };\n\n    Element.getElementBySerial = function(serial) {\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial) {\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial) {\n        var element = Element.getElementBySerial(serial);\n\n        if (element) {\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt) {\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA\n     */\n\n    /**\n     * XML namespace handling\n     */\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    const prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        let key;\n        for (key in namespaces) {\n            if (namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    var xmlNsHandler = {\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs: function stripNs(body) {\n            const pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            const openRegEx = new RegExp('(<' + pattern + ')', 'gi');\n            const closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs: function restoreNs(xml, namespaces, ignoreMarkup = false) {\n            let xmlCopy = xml;\n            if (ignoreMarkup) {\n                // cut from xmlCopy <markup...>...</markup>\n                // because markup should be html without namespace qh5\n                xmlCopy = xml.replace(/((?=<markup)(.|\\n)*?(?:<\\/markup>)+)/gim, '');\n            }\n            const xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            const tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            const xmlMatch = xmlCopy.match(xmlRe);\n            const imsXsd = 'http://www.imsglobal.org/xsd';\n            const html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            const prefix = getPrefix(namespaces, html5Ns);\n            const prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            let i = xmlMatch ? xmlMatch.length : 0;\n\n            if (!xmlMatch) {\n                return xml;\n            }\n\n            while (i--) {\n                const tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(\n                    xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    var responseRules = {\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'match',\n                    expressions: [\n                        {\n                            qtiClass: 'variable',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                        {\n                            qtiClass: 'correct',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    },\n                                },\n                                {\n                                    qtiClass: 'baseValue',\n                                    attributes: {\n                                        baseType: 'integer'\n                                    },\n                                    value: '1',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponse',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponsePoint',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const _templateNames = {\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        NONE: 'no_response_processing'\n    };\n\n\n    var response = {\n        isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName(tplName) {\n            return _templateNames[tplName] || '';\n        },\n        getTemplateNameFromUri(tplUri) {\n            let tplName = '';\n\n            _.forIn(_templateNames, (uri, name) => {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n\n            return tplName;\n        },\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\n            if (!responseRules) {\n                return 'NONE';\n            }\n\n            const {\n                responseIf: {\n                    responseRules: [outcomeRules = {}] = [],\n                } = {}\n            } = responseRules;\n            const {\n                attributes: {\n                    identifier: outcomeIdentifier,\n                } = {},\n            } = outcomeRules;\n\n            if (!outcomeIdentifier) {\n                return '';\n            }\n\n            return Object.keys(responseRulesHelper).find(\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\n            );\n        }\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Returns iteraction score response rule object\n     *\n     * @param {String} responseIdentifiers interactions reponse indentifiers\n     * @returns {Obeject}\n     */\n    var itemScore = (responseIdentifiers) => {\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\n            qtiClass: 'variable',\n            attributes: {\n                identifier: `SCORE_${outcomeIdentifier}`,\n            },\n        }));\n\n        return {\n            qtiClass: 'setOutcomeValue',\n            attributes: {\n                identifier: 'SCORE',\n            },\n            expression: {\n                qtiClass: 'sum',\n                expressions: outcomeExpressions,\n            },\n        };\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\n        var properties = {};\n\n        _.forOwn(rawProperties, (value, key) => {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    };\n\n    const loadPortableCustomElementData = (portableElement, data) => {\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    };\n\n    var Loader = Class.extend({\n        init(item, classesLocation) {\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n            this.item = item || null; //starts either from scratch or with an existing item object\n\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\n        },\n        setClassesLocation(qtiClassesList) {\n            _.extend(this.classesLocation, qtiClassesList);\n\n            return this;\n        },\n        getRequiredClasses(data) {\n            let ret = [];\n\n            for (let i in data) {\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\n                    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n\n            return ret;\n        },\n        loadRequiredClasses(data, callback, reload) {\n            let requiredClass;\n            const requiredClasses = this.getRequiredClasses(data, reload);\n            const required = [];\n\n            for (let i in requiredClasses) {\n                requiredClass = requiredClasses[i];\n                if (this.classesLocation[requiredClass]) {\n                    required.push({\n                        module: this.classesLocation[requiredClass],\n                        category: 'qti'\n                    });\n                } else {\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\n                }\n            }\n\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\n                loadeded.forEach(QtiClass => {\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(this, this.qti);\n            });\n        },\n        getLoadedClasses() {\n            return _.keys(this.qti);\n        },\n        loadItemData(data, callback) {\n            this.loadRequiredClasses(data, Qti => {\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\n                    //unload an item from it's serial (in case of a reload)\n                    if (data.serial) {\n                        Element.unsetElement(data.serial);\n                    }\n\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    this.loadContainer(this.item.getBody(), data.body);\n\n                    for (let i in data.outcomes) {\n                        const outcome = this.buildOutcome(data.outcomes[i]);\n\n                        if (outcome) {\n                            this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n\n                    for (let i in data.feedbacks) {\n                        const feedback = this.buildElement(data.feedbacks[i]);\n\n                        if (feedback) {\n                            this.item.addModalFeedback(feedback);\n                        }\n                    }\n\n                    for (let i in data.stylesheets) {\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\n\n                        if (stylesheet) {\n                            this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\n                        ? [...data.responseProcessing.responseRules]\n                        : [];\n                    for (let i in data.responses) {\n                        const responseIdentifier = data.responses[i].identifier;\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\n                            expression: {\n                                expressions: [expression = {}] = [],\n                            } = {}\n                        } = {} }) => expression.attributes\n                        && expression.attributes.identifier === responseIdentifier\n                            || (\n                                expression.expressions\n                                && expression.expressions[0]\n                                && expression.expressions[0].attributes\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\n                            )\n                        );\n                        const [responseRule] = responseRuleItemIndex !== -1\n                            ? responseRules.splice(responseRuleItemIndex, 1)\n                            : [];\n\n                        const response = this.buildResponse(\n                            data.responses[i],\n                            responseRule\n                        );\n\n                        if (response) {\n                            this.item.addResponseDeclaration(response);\n\n                            const feedbackRules = data.responses[i].feedbackRules;\n\n                            if (feedbackRules) {\n                                _.forIn(feedbackRules, (fbData, serial) => {\n                                    const {\n                                        attributes: {\n                                            identifier: feedbackOutcomeIdentifier,\n                                        } = {}\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\n\n                                    // remove feedback response rule from response rules array\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\n                                        responseIf: {\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\n                                        } = {}\n                                    }) => {\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\n                                        const outcomeIdentifier = attributes.identifier;\n\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\n                                            && qtiClass === 'setOutcomeValue';\n                                    });\n\n                                    if (feedbackResponseRuleIndex !== -1) {\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\n                                    }\n                                });\n                            }\n                        }\n                    }\n\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\n\n                    if (data.responseProcessing) {\n                        const customResponseProcessing =\n                            (\n                                responseRules.length > 0\n                                && !(\n                                    responseRules.length === 1\n                                    && _.isEqual(\n                                        responseRules[0],\n                                        itemScoreHelper(\n                                            responseIdentifiers\n                                        )\n                                    )\n                                )\n                            )\n                            || (\n                                this.item.responses\n                                && Object.keys(this.item.responses)\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\n                            );\n\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\n                    }\n                    this.item.setNamespaces(data.namespaces);\n                    this.item.setSchemaLocations(data.schemaLocations);\n                    this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        loadAndBuildElement(data, callback) {\n            this.loadRequiredClasses(data, () => {\n                const element = this.buildElement(data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        loadElement(element, data, callback) {\n            this.loadRequiredClasses(data, () => {\n                this.loadElementData(element, data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements(data, callback) {\n            if (!this.item) {\n                throw new Error('QtiLoader : cannot load elements in empty item');\n            }\n\n            this.loadRequiredClasses(data, () => {\n                const allElements = this.item.getComposingElements();\n\n                for (let i in data) {\n                    const elementData = data[i];\n\n                    if (elementData && elementData.qtiClass && elementData.serial) {\n                        //find and update element\n                        if (allElements[elementData.serial]) {\n                            this.loadElementData(allElements[elementData.serial], elementData);\n                        }\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        buildResponse(data, responseRule) {\n            const response = this.buildElement(data);\n\n            response.template = responseHelper.getTemplateUriFromName(\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\n            )\n                || data.howMatch\n                || null;\n\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if (_.size(data.mapping)) {\n                response.mapEntries = data.mapping;\n            } else if (_.size(data.areaMapping)) {\n                response.mapEntries = data.areaMapping;\n            } else {\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule(data, response) {\n            const feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            const comparedOutcome = feedbackRule.comparedOutcome;\n\n            if (feedbackRule.feedbackThen) {\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\n            }\n\n            if (feedbackRule.feedbackElse) {\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome(data) {\n            const outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n\n            return outcome;\n        },\n        buildResponseProcessing(data, customResponseProcessing) {\n            const rp = this.buildElement(data);\n\n            if (customResponseProcessing) {\n                rp.xml = data.data;\n                rp.processingType = 'custom';\n            } else {\n                rp.processingType = 'templateDriven';\n            }\n\n            return rp;\n        },\n        loadContainer(bodyObject, bodyData) {\n            if (!Element.isA(bodyObject, '_container')) {\n                throw new Error('bodyObject must be a QTI Container');\n            }\n\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\n                throw new Error('wrong bodydata format');\n            }\n            //merge attributes when loading element data\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\n            bodyObject.setAttributes(attributes);\n\n            for (let serial in bodyData.elements) {\n                const eltData = bodyData.elements[serial];\n                const element = this.buildElement(eltData);\n\n                //check if class is loaded:\n                if (element) {\n                    bodyObject.setElement(element, bodyData.body);\n                }\n            }\n\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n        },\n        buildElement(elementData) {\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\n                throw new Error('wrong elementData format');\n            }\n\n            const className = elementData.qtiClass;\n\n            if (!this.qti[className]) {\n                throw new Error(`the qti element class does not exist: ${className}`);\n            }\n\n            const elt = new this.qti[className](elementData.serial);\n            this.loadElementData(elt, elementData);\n\n            return elt;\n        },\n        loadElementData(element, data) {\n            //merge attributes when loading element data\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            let body = data.body;\n            if (!body && data.text && data.qtiClass === 'inlineChoice') {\n                body = { body: data.text, elements: {} };\n            }\n            if (element.body && body) {\n                if (element.bdy) {\n                    this.loadContainer(element.getBody(), body);\n                }\n            }\n\n            if (element.object && data.object) {\n                if (element.object) {\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if (Element.isA(element, 'interaction')) {\n                this.loadInteractionData(element, data);\n            } else if (Element.isA(element, 'choice')) {\n                this.loadChoiceData(element, data);\n            } else if (Element.isA(element, 'math')) {\n                this.loadMathData(element, data);\n            } else if (Element.isA(element, 'infoControl')) {\n                this.loadPicData(element, data);\n            } else if (Element.isA(element, '_tooltip')) {\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData(interaction, data) {\n            if (Element.isA(interaction, 'blockInteraction')) {\n                if (data.prompt) {\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if (Element.isA(interaction, 'customInteraction')) {\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices(interaction, data) {\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if (data.choices) {\n                if (Element.isA(interaction, 'matchInteraction')) {\n                    for (let set = 0; set < 2; set++) {\n                        if (!data.choices[set]) {\n                            throw new Error(`missing match set #${set}`);\n                        }\n\n                        const matchSet = data.choices[set];\n\n                        for (let serial in matchSet) {\n                            const choice = this.buildElement(matchSet[serial]);\n\n                            if (choice) {\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                } else {\n                    for (let serial in data.choices) {\n                        const choice = this.buildElement(data.choices[serial]);\n\n                        if (choice) {\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\n                    if (data.gapImgs) {\n                        for (let serial in data.gapImgs) {\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\n\n                            if (gapImg) {\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loadChoiceData(choice, data) {\n            if (Element.isA(choice, 'textVariableChoice')) {\n                choice.val(data.text);\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\n                // this ensure compatibility of Qti 2.1 items\n                if (!choice.body()) {\n                    choice.body(data.text);\n                }\n            } else if (Element.isA(choice, 'containerChoice')) ;\n        },\n        loadObjectData(object, data) {\n            object.setAttributes(data.attributes);\n\n            //@todo: manage object like a container\n            if (data._alt) {\n                if (data._alt.qtiClass === 'object') {\n                    object._alt = Loader.buildElement(data._alt);\n                } else {\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData(math, data) {\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, (value, encoding) => {\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData(tooltip, data) {\n            tooltip.content(data.content);\n        },\n        loadPciData(pci, data) {\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData(pic, data) {\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\n        getRawValues: function(pciVar) {\n            if (_.isPlainObject(pciVar)) {\n                if (pciVar.base !== undefined) {\n                    return _.values(pciVar.base);\n                } else if (pciVar.list) {\n                    return _.values(pciVar.list);\n                }\n            }\n            throw 'unsupported type ';\n        }\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n     **/\n\n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n\n    /**\n     * Check if the element is of a qti container type\n     *\n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element) {\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\n            return true;\n        } else {\n            throw 'the element is not of a container type';\n        }\n    }\n\n    /**\n     * Get the body element of the container\n     *\n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element) {\n        if (_checkContainerType(element)) {\n            return $('<div>')\n                .html(element.body())\n                .find('.x-tao-wrapper');\n        }\n    }\n\n    /**\n     * Add a class to the body element of the qti container\n     *\n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass) {\n        if (_checkContainerType(element) && (oldClass || newClass)) {\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n\n    /**\n     * Switch class to the wrapped DOM\n     *\n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass) {\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if (!$bodyDom.length) {\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if (oldClass) {\n            $bodyDom.removeClass(oldClass);\n        }\n        if (newClass) {\n            $bodyDom.addClass(newClass);\n        }\n    }\n\n    /**\n     * Add manually the encoded information to a dom element\n     *\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n\n    /**\n     * Get the full variable name for the data store\n     *\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value) {\n        if (dataName && value) {\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n\n    /**\n     * Set a data string to the element identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue) {\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(\n            element,\n            _getEncodedDataString(dataName, newValue),\n            _getEncodedDataString(dataName, oldValue)\n        );\n    }\n\n    /**\n     * Remove the stored data from the element by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName) {\n        var oldValue = getEncodedData(element, dataName);\n        if (dataName && oldValue) {\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value) {\n        var $body = _getBodyDom(element);\n        if ($body && $body.length && dataName && value) {\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n\n    /**\n     * Get the encoded data identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName) {\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if (dataName && $body && $body.length && $body.attr('class')) {\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\n            matches = $body.attr('class').match(regex);\n            if (matches) {\n                return matches[1];\n            }\n        }\n    }\n\n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    var container = {\n        setEncodedData: setEncodedData,\n        hasEncodedData: hasEncodedData,\n        getEncodedData: getEncodedData,\n        removeEncodedData: removeEncodedData,\n        setEncodedDataToDom: setEncodedDataToDom\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/inlineRenderer',['lodash', 'jquery', 'context', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container', 'handlebars', 'lib/handlebars/helpers', 'iframeNotifier'], function (_, $$1, context, pci, containerHelper, Handlebars, Helpers0, iframeNotifier) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<li class=\\\"small btn-info action action-button rgt\\\" id=\\\"preview-feedback-ok-button\\\">\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\n        <span class=\\\"label\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"OK\", options) : helperMissing.call(depth0, \"__\", \"OK\", options)))\n        + \"</span>\\n    </a>\\n</li>\";\n      return buffer;\n      });\n    function previewOkBtn(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers);  \n\n\n      return \"<li data-control=\\\"feedback-ok\\\" class=\\\"small btn-info action forward\\\" title=\\\"Feedback ok and ready to proceed.\\\">\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\n        <span class=\\\"icon-result-ok\\\"></span>\\n        <span class=\\\"text\\\">OK</span>\\n    </a>\\n</li>\";\n      });\n    function deliveryOkBtn(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    /**\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} loader - the item loader instance\n     * @param {Object} renderer - the item render instance\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\n     * @returns {Number} Number of feedbacks to be displayed\n     */\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\n        var messages = {};\n        var renderedFeebacks = [];\n        var renderingQueue = [];\n        var $itemContainer = item.getContainer();\n        var $itemBody = $itemContainer.children('.qti-itemBody');\n        var firstFeedback;\n\n        _.each(item.modalFeedbacks, function(feedback) {\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n            var order = -1;\n\n            //verify if the feedback should be displayed\n            if (itemSession[outcomeIdentifier]) {\n                //is the feedback in the list of feedbacks to be displayed ?\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                if (_.indexOf(feedbackIds, feedback.id()) === -1) {\n                    return true; //continue with next feedback\n                }\n\n                //which group of feedbacks (interaction related) the feedback belongs to ?\n                message = getFeedbackMessageSignature(feedback);\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\n                if (comparedOutcome && interactionInfo) {\n                    $container = interactionInfo.displayContainer;\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\n                    order = interactionInfo.order;\n                } else {\n                    $container = $itemBody;\n                    _currentMessageGroupId = '__item__';\n                }\n                //is this message already displayed ?\n                if (!messages[_currentMessageGroupId]) {\n                    messages[_currentMessageGroupId] = [];\n                }\n                if (_.indexOf(messages[_currentMessageGroupId], message) >= 0) {\n                    return true; //continue\n                } else {\n                    messages[_currentMessageGroupId].push(message);\n                }\n\n                //ok, display feedback\n                renderingQueue.push({\n                    feedback: feedback,\n                    $container: $container,\n                    order: order\n                });\n            }\n        });\n\n        if (renderingQueue.length) {\n            renderingQueue = _.sortBy(renderingQueue, 'order');\n\n            //clear previously displayed feedbacks\n            clearModalFeedbacks($itemContainer);\n\n            //process rendering queue\n            _.each(renderingQueue, function(renderingToken) {\n                renderModalFeedback(\n                    renderingToken.feedback,\n                    loader,\n                    renderer,\n                    renderingToken.$container,\n                    $itemContainer,\n                    function(renderingData) {\n                        // keep the first feedback to force focus on it if needed\n                        if (!firstFeedback) {\n                            firstFeedback = $$1(renderingData.dom);\n                        }\n\n                        $$1('img', renderingData.dom).on('load', function() {\n                            iframeNotifier.parent('itemcontentchange');\n                        });\n\n                        //record rendered feedback for later reference\n                        renderedFeebacks.push(renderingData);\n                        if (renderedFeebacks.length === renderingQueue.length) {\n                            //rendering processing queue completed\n                            iframeNotifier.parent('itemcontentchange');\n\n                            // set the focus on the first feedback if needed\n                            // TODO: this is heavily related to the old TestRunner, with the ugly iframes.\n                            // To make this working, a search is made accross parent frames.\n                            // When the InlineFeedbacks will be ported to the new TestRunner, a strong improvement will be needed!\n                            if (firstFeedback) {\n                                autoscroll(firstFeedback);\n                            }\n\n                            //if an optional \"on show modal\" callback has been provided, execute it\n                            if (_.isFunction(onShowCallback)) {\n                                onShowCallback();\n                            }\n                        }\n                    }\n                );\n            });\n\n            //if any feedback is displayed, replace the controls by a \"ok\" button\n            replaceControl(renderedFeebacks, $itemContainer, onCloseCallback);\n        }\n\n        return renderingQueue.length;\n    }\n\n    /**\n     * Gets the QTI Container element\n     * @returns {jQuery|null}\n     */\n    function getQtiContainer() {\n        var me = window;\n        var $container = null;\n        var max = 10;\n\n        while (me && me.__knownParent__ && max--) {\n            me = me.parent;\n            if (me && me.$) {\n                $container = me.$('#qti-content');\n                if ($container.length) {\n                    return $container;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Keeps an element visible inside the QTI container.\n     * If the element is outside the container viewport, scroll to display it.\n     * @param {String|jQuery|HTMLElement} element\n     */\n    function autoscroll(element) {\n        var $element = $$1(element);\n        var $container = getQtiContainer();\n        var currentScrollTop, minScrollTop, maxScrollTop, scrollTop;\n\n        if ($element.length && $container) {\n            currentScrollTop = $container.scrollTop();\n            maxScrollTop = $element.offset().top;\n            minScrollTop = maxScrollTop - $container.height() + $element.outerHeight();\n            scrollTop = Math.max(Math.min(maxScrollTop, currentScrollTop), minScrollTop);\n            if (scrollTop !== currentScrollTop) {\n                $container.animate({ scrollTop: scrollTop });\n            }\n        }\n    }\n\n    /**\n     * Extract the display information for an interaction-related feedback\n     *\n     * @private\n     * @param {Object} interaction - a qti interaction object\n     * @returns {Object} Object containing useful display information\n     */\n    function extractDisplayInfo(interaction) {\n        var $interactionContainer = interaction.getContainer();\n        var responseIdentifier = interaction.attr('responseIdentifier');\n        var messageGroupId, $displayContainer;\n\n        if (interaction.is('inlineInteraction')) {\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\n            if (!messageGroupId) {\n                //generate a messageFroupId\n                messageGroupId = _.uniqueId('inline_message_group_');\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\n            }\n        } else {\n            messageGroupId = responseIdentifier;\n            $displayContainer = $interactionContainer;\n        }\n\n        return {\n            responseIdentifier: responseIdentifier,\n            interactionContainer: $interactionContainer,\n            displayContainer: $displayContainer,\n            messageGroupId: messageGroupId,\n            order: -1\n        };\n    }\n\n    /**\n     * Get interaction display information sorted in the order of appearance within the item\n     *\n     * @param {Object} item\n     * @returns {Array}\n     */\n    function getInteractionsDisplayInfo(item) {\n        var interactionsDisplayInfo = [];\n        var $itemContainer = item.getContainer();\n        var interactionOrder = 0;\n\n        //extract all interction related information needed to display their\n        _.each(item.getComposingElements(), function(element) {\n            var responseIdentifier;\n            if (element.is('interaction')) {\n                responseIdentifier = element.attr('responseIdentifier');\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\n            }\n        });\n\n        //sort interactionsDisplayInfo on the item level\n        $itemContainer.find('.qti-interaction').each(function() {\n            var interactionContainer = this;\n            _.each(interactionsDisplayInfo, function(_interactionInfo) {\n                if (_interactionInfo.interactionContainer[0] === interactionContainer) {\n                    _interactionInfo.order = interactionOrder;\n                    return false;\n                }\n            });\n            interactionOrder++;\n        });\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\n\n        return interactionsDisplayInfo;\n    }\n\n    /**\n     * Remove previously displayed feedbacks contained in the given container element\n     *\n     * @param {JQuery} $itemContainer\n     */\n    function clearModalFeedbacks($itemContainer) {\n        $itemContainer.find('.qti-modalFeedback').remove();\n    }\n\n    /**\n     * Render a modal feedback into a given container, scoped within an item container\n     *\n     * @private\n     * @param {type} feedback - feedback object\n     * @param {type} loader - loader instance\n     * @param {type} renderer - renderer instance\n     * @param {JQuery} $container - the targeted feedback container\n     * @param {JQuery} $itemContainer - the item container\n     * @param {type} renderedCallback - callback when the feedback has been rendered\n     * @returns {undefined}\n     */\n    function renderModalFeedback(feedback, loader, renderer, $container, $itemContainer, renderedCallback) {\n        //load (potential) new qti classes used in the modal feedback (e.g. math, img)\n        renderer.load(function() {\n            //render the modal feedback\n            var $modalFeedback = $$1(\n                feedback.render({\n                    inline: true\n                })\n            );\n            var done = function done() {\n                renderedCallback({\n                    identifier: feedback.id(),\n                    serial: feedback.getSerial(),\n                    dom: $modalFeedback\n                });\n            };\n            $container.append($modalFeedback);\n\n            // Race between postRendering and timeout\n            // postRendering waits for everything to be resolved or one reject\n            Promise.race([\n                Promise.all(\n                    _.map(feedback.getComposingElements(), function(elt) {\n                        //render also internal elements, such as math or img\n                        return elt.postRender({}, '', renderer).pop();\n                    })\n                ),\n                new Promise(function(resolve, reject) {\n                    _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\n                })\n            ])\n                .then(done)\n                .catch(function(err) {\n                    //in case of postRendering issue, we are also done\n                    done();\n                    throw new Error('Error in post rendering : ' + err);\n                });\n        }, loader.getLoadedClasses());\n    }\n\n    /**\n     * Replace the controls in the running environment  with an \"OK\" button to trigger the end of the feedback state\n     *\n     * @private\n     * @todo FIX ME ! replace the hack to preview and delivery toolbar with a proper plugin in the new test runner is ready\n     * @param {Array} renderedFeebacks\n     * @param {JQuery} $itemContainer\n     * @param {Function} callback\n     */\n    function replaceControl(renderedFeebacks, $itemContainer, callback) {\n        var $scope, $controls, $toggleContainer;\n        if (window.parent && window.parent.parent && window.parent.parent.$) {\n            if ($itemContainer.parents('.tao-preview-scope').length) {\n                //preview mode\n                $scope = window.parent.parent.$('#preview-console');\n                $controls = $scope.find('.preview-console-header .action-bar li:visible');\n                $toggleContainer = $scope.find('.console-button-action-bar');\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, previewOkBtn, callback);\n            } else {\n                //delivery delivery\n                $scope = window.parent.parent.$('body.qti-test-scope .bottom-action-bar');\n                $controls = $scope.find('li:visible');\n                $toggleContainer = $scope.find('.navi-box-list');\n                initControlToggle(renderedFeebacks, $itemContainer, $controls, $toggleContainer, deliveryOkBtn, callback);\n            }\n        } else {\n            //not in an iframe, add to item body for now\n            $scope = $itemContainer.find('#modalFeedbacks');\n            initControlToggle(renderedFeebacks, $itemContainer, $$1(), $scope, previewOkBtn, callback);\n        }\n    }\n\n    /**\n     * Initialize the \"OK\" button to trigger the end of the feedback mode\n     *\n     * @private\n     * @param {Array} renderedFeebacks\n     * @param {JQuery} $itemContainer\n     * @param {JQuery} $controls\n     * @param {JQuery} $toggleContainer\n     * @param {Function} toggleButtonTemplate\n     * @param {Function} callback\n     */\n    function initControlToggle(\n        renderedFeebacks,\n        $itemContainer,\n        $controls,\n        $toggleContainer,\n        toggleButtonTemplate,\n        callback\n    ) {\n        var $ok = $$1(toggleButtonTemplate()).click(function() {\n            //end feedback mode, hide feedbacks\n            _.each(renderedFeebacks, function(fb) {\n                fb.dom.hide();\n            });\n\n            //restore controls\n            uncover([$itemContainer]);\n            $ok.remove();\n            $controls.show();\n\n            //exec callback\n            callback();\n        });\n\n        $controls.hide();\n        $toggleContainer.append($ok);\n        cover([$itemContainer]);\n    }\n\n    /**\n     * Cover the given interaction containers with a transparent layer to prevent user interacting with the item\n     * @private\n     * @param {Array} interactionContainers\n     */\n    function cover(interactionContainers) {\n        var $cover = $$1('<div class=\"interaction-cover modal-bg\">');\n        _.each(interactionContainers, function($interaction) {\n            $interaction.append($cover);\n        });\n    }\n\n    /**\n     * Remove the layer set by the function cover()\n     * @private\n     * @param {Array} interactionContainers\n     */\n    function uncover(interactionContainers) {\n        _.each(interactionContainers, function($interaction) {\n            $interaction.find('.interaction-cover').remove();\n        });\n    }\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    }\n\n    var inlineRenderer = {\n        showFeedbacks: showFeedbacks\n    };\n\n    return inlineRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/modalFeedback/modalRenderer',['lodash', 'jquery', 'async', 'taoQtiItem/qtiItem/helper/pci'], function (_, $, async, pci) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    async = async && Object.prototype.hasOwnProperty.call(async, 'default') ? async['default'] : async;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Techonologies SA;\n     *\n     */\n\n    /**\n     * Main function for the module. It loads and render the feedbacks accodring to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} loader - the item loader instance\n     * @param {Object} renderer - the item render instance\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @param {Function} onCloseCallback - the callback to be executed when the feedbacks are closed\n     * @param {Function} [onShowCallback] - the callback to be executed when the feedbacks are shown\n     * @returns {Number} Number of feedbacks to be displayed\n     */\n    function showFeedbacks(item, loader, renderer, itemSession, onCloseCallback, onShowCallback) {\n        var count,\n            messages = [],\n            feedbacksToBeDisplayed = [];\n\n        //find which modal feedbacks should be displayed according to the current item session:\n        _.each(item.modalFeedbacks, function(feedback) {\n            var feedbackIds, message;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n\n            if (itemSession[outcomeIdentifier]) {\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                message = getFeedbackMessageSignature(feedback);\n                if (_.indexOf(feedbackIds, feedback.id()) >= 0 && _.indexOf(messages, message) === -1) {\n                    //check content if is already in the display queue\n                    feedbacksToBeDisplayed.push(feedback);\n                    messages.push(message);\n                }\n            }\n        });\n\n        //record the number of feedbacks to be displayed:\n        count = feedbacksToBeDisplayed.length;\n        if (count) {\n            //show in reverse order\n            var callstack = [];\n\n            //iterate from the right because the modal popup will pile up.\n            _.eachRight(feedbacksToBeDisplayed, function(feedback) {\n                //the end callback should be executed to the last displayed modal, which is the last displayed one\n                var endCallback;\n                if (callstack.length === 0) {\n                    endCallback = function() {\n                        onCloseCallback();\n                    };\n                }\n\n                callstack.push(function(cb) {\n                    renderModalFeedback(\n                        feedback,\n                        loader,\n                        renderer,\n                        function() {\n                            cb(null);\n                        },\n                        endCallback\n                    );\n                });\n            });\n\n            async.series(callstack, function() {\n                //all modal are ready and displayed\n                if (_.isFunction(onShowCallback)) {\n                    onShowCallback();\n                }\n            });\n        }\n\n        return count;\n    }\n\n    /**\n     * Render modal feedback as a modal popup\n     *\n     * @param {Object} feedback - object\n     * @param {Object} loader - loader instance\n     * @param {Object} renderer - renderer instance\n     * @param {Function} [closeCallback] - feedback to be executed when the popop closes\n     * @returns {undefined}\n     */\n    function renderModalFeedback(feedback, loader, renderer, renderedCallback, closeCallback) {\n        var $feedback,\n            $feedbackBox = $('#modalFeedbacks'); //feedback.getItem().getContainer().find('#')\n\n        if (feedback.is('modalFeedback')) {\n            //load (potential) new qti classes used in the modal feedback (e.g. math, img)\n            renderer.load(function() {\n                $feedback = $feedbackBox.find('#' + feedback.getSerial());\n                if (!$feedback.length) {\n                    //render the modal feedback\n                    $feedback = feedback.render();\n                    $feedbackBox.append($feedback);\n                } else {\n                    $feedback.modal();\n                }\n\n                renderedCallback();\n\n                feedback.postRender({\n                    callback: closeCallback\n                });\n            }, loader.getLoadedClasses());\n        }\n    }\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    }\n\n    var modalRenderer = {\n        showFeedbacks: showFeedbacks\n    };\n\n    return modalRenderer;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/QtiRunner',['jquery', 'lodash', 'context', 'module', 'iframeNotifier', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiRunner/modalFeedback/inlineRenderer', 'taoQtiItem/qtiRunner/modalFeedback/modalRenderer'], function ($, _, context, module, iframeNotifier, ItemLoader, modalFeedbackInline, modalFeedbackModal) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    iframeNotifier = iframeNotifier && Object.prototype.hasOwnProperty.call(iframeNotifier, 'default') ? iframeNotifier['default'] : iframeNotifier;\n    ItemLoader = ItemLoader && Object.prototype.hasOwnProperty.call(ItemLoader, 'default') ? ItemLoader['default'] : ItemLoader;\n    modalFeedbackInline = modalFeedbackInline && Object.prototype.hasOwnProperty.call(modalFeedbackInline, 'default') ? modalFeedbackInline['default'] : modalFeedbackInline;\n    modalFeedbackModal = modalFeedbackModal && Object.prototype.hasOwnProperty.call(modalFeedbackModal, 'default') ? modalFeedbackModal['default'] : modalFeedbackModal;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013 (original work) Open Assessment Techonologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    var QtiRunner = function() {\n        this.item = null;\n        this.rpEngine = null;\n        this.renderer = null;\n        this.loader = null;\n        this.itemApi = undefined;\n    };\n\n    QtiRunner.prototype.updateItemApi = function() {\n        var responses = this.getResponses();\n        var states = this.getStates();\n        var variables = [];\n        // Transform responses into state variables.\n        for (var key in states) {\n            var value = states[key];\n            // This is where we set variables that will be collected and stored\n            // as the Item State. We do not want to store large files into\n            // the state, and force the client to download these files\n            // all over again. We then transform them as a place holder, that will\n            // simply indicate that a file composes the state.\n\n            if (value.response && typeof value.response.base !== 'undefined') {\n                for (var property in value.response.base) {\n                    if (property === 'file') {\n                        var file = value.response.base.file;\n                        // QTI File found! Replace it with an appropriate placeholder.\n                        // The data is base64('qti_file_datatype_placeholder_data')\n                        value.response = {\n                            base: {\n                                file: {\n                                    name: file.name,\n                                    mime: 'qti+application/octet-stream',\n                                    data: 'cXRpX2ZpbGVfZGF0YXR5cGVfcGxhY2Vob2xkZXJfZGF0YQ=='\n                                }\n                            }\n                        };\n                    }\n                }\n            }\n\n            variables[key] = value;\n        }\n\n        //set all variables at once\n        this.itemApi.setVariables(variables);\n\n        // Save the responses that will be used for response processing.\n        this.itemApi.saveResponses(responses);\n        this.itemApi.resultApi.setQtiRunner(this);\n    };\n\n    QtiRunner.prototype.setItemApi = function(itemApi) {\n        this.itemApi = itemApi;\n        var that = this;\n        var oldStateVariables = JSON.stringify(itemApi.stateVariables);\n\n        itemApi.onKill(function(killCallback) {\n            // If the responses did not change,\n            // just close gracefully.\n\n            // Collect new responses and update item API.\n            that.updateItemApi();\n            var newStateVariables = JSON.stringify(itemApi.stateVariables);\n\n            // Store the results.\n            if (oldStateVariables !== newStateVariables || itemApi.serviceApi.getHasBeenPaused()) {\n                itemApi.submit(function() {\n                    // Send successful signal.\n                    itemApi.serviceApi.setHasBeenPaused(false);\n                    killCallback(0);\n                });\n            } else {\n                killCallback(0);\n            }\n        });\n    };\n\n    QtiRunner.prototype.setRenderer = function(renderer) {\n        if (renderer.isRenderer) {\n            this.renderer = renderer;\n        } else {\n            throw 'invalid renderer';\n        }\n    };\n\n    QtiRunner.prototype.getLoader = function() {\n        if (!this.loader) {\n            this.loader = new ItemLoader();\n        }\n        return this.loader;\n    };\n\n    QtiRunner.prototype.loadItemData = function(data, callback) {\n        var self = this;\n        this.getLoader().loadItemData(data, function(item) {\n            self.item = item;\n            callback(self.item);\n        });\n    };\n\n    QtiRunner.prototype.loadElements = function(elements, callback) {\n        if (this.getLoader().item) {\n            this.getLoader().loadElements(elements, callback);\n        } else {\n            throw 'QtiRunner : cannot load elements in empty item';\n        }\n    };\n\n    QtiRunner.prototype.renderItem = function(data, done) {\n        var self = this;\n\n        done = _.isFunction(done) ? done : _.noop;\n\n        var render = function() {\n            if (!self.item) {\n                throw 'cannot render item: empty item';\n            }\n            if (self.renderer) {\n                self.renderer.load(function() {\n                    self.item.setRenderer(self.renderer);\n                    self.item.render({}, $('#qti_item'));\n\n                    // Race between postRendering and timeout\n                    // postRendering waits for everything to be resolved or one reject\n                    Promise.race([\n                        Promise.all(self.item.postRender()),\n                        new Promise(function(resolve, reject) {\n                            _.delay(reject, timeout, new Error('Post rendering ran out of time.'));\n                        })\n                    ])\n                        .then(function() {\n                            self.item.getContainer().on('responseChange', function(e, data) {\n                                if (data.interaction && data.interaction.attr('responseIdentifier') && data.response) {\n                                    iframeNotifier.parent('responsechange', [\n                                        data.interaction.attr('responseIdentifier'),\n                                        data.response\n                                    ]);\n                                }\n                            });\n\n                            self.initInteractionsResponse();\n                            self.listenForThemeChange();\n                            done();\n                        })\n                        .catch(function(err) {\n                            //in case of postRendering issue, we are also done\n                            done();\n\n                            throw new Error('Error in post rendering : ' + err);\n                        });\n                }, self.getLoader().getLoadedClasses());\n            } else {\n                throw 'cannot render item: no rendered set';\n            }\n        };\n\n        if (typeof data === 'object') {\n            this.loadItemData(data, render);\n        } else {\n            render();\n        }\n    };\n\n    QtiRunner.prototype.initInteractionsResponse = function() {\n        var self = this;\n        if (self.item) {\n            var interactions = self.item.getInteractions();\n            for (var i in interactions) {\n                var interaction = interactions[i];\n                var responseId = interaction.attr('responseIdentifier');\n                self.itemApi.getVariable(responseId, function(values) {\n                    if (values) {\n                        interaction.setState(values);\n                        iframeNotifier.parent('stateready', [responseId, values]);\n                    } else {\n                        var states = self.getStates();\n                        if (_.indexOf(states, responseId)) {\n                            self.itemApi.setVariable(responseId, states[responseId]);\n                            interaction.setState(states[responseId]);\n                            iframeNotifier.parent('stateready', [responseId, states[responseId]]);\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * If an event 'themechange' bubbles to \"#qti_item\" node\n     * then we tell the renderer to switch the theme.\n     */\n    QtiRunner.prototype.listenForThemeChange = function listenForThemeChange() {\n        var self = this;\n        var $container = this.renderer.getContainer(this.item);\n        if (!$container.length) {\n            $container = $('.qti-item');\n        }\n        $container.off('themechange').on('themechange', function(e, themeName) {\n            var themeLoader = self.renderer.getThemeLoader();\n            themeName = themeName || e.originalEvent.detail;\n            if (themeLoader) {\n                themeLoader.change(themeName);\n            }\n        });\n    };\n\n    QtiRunner.prototype.validate = function() {\n        this.updateItemApi();\n        this.itemApi.finish();\n    };\n\n    QtiRunner.prototype.getResponses = function() {\n        var responses = {};\n        var interactions = this.item.getInteractions();\n\n        _.forEach(interactions, function(interaction) {\n            var response = {};\n            try {\n                response = interaction.getResponse();\n            } catch (e) {\n                console.error(e);\n            }\n            responses[interaction.attr('responseIdentifier')] = response;\n        });\n\n        return responses;\n    };\n\n    QtiRunner.prototype.getStates = function() {\n        var states = {};\n        var interactions = this.item.getInteractions();\n\n        _.forEach(interactions, function(interaction) {\n            var state = {};\n            try {\n                state = interaction.getState();\n            } catch (e) {\n                console.error(e);\n            }\n            states[interaction.attr('responseIdentifier')] = state;\n        });\n\n        return states;\n    };\n\n    QtiRunner.prototype.setResponseProcessing = function(callback) {\n        this.rpEngine = callback;\n    };\n\n    QtiRunner.prototype.showFeedbacks = function(itemSession, callback, onShowCallback) {\n        var inlineDisplay = !!module.config().inlineModalFeedback;\n\n        //currently only modal feedbacks are available\n        if (inlineDisplay) {\n            return modalFeedbackInline.showFeedbacks(\n                this.item,\n                this.getLoader(),\n                this.renderer,\n                itemSession,\n                callback,\n                onShowCallback\n            );\n        } else {\n            return modalFeedbackModal.showFeedbacks(\n                this.item,\n                this.getLoader(),\n                this.renderer,\n                itemSession,\n                callback,\n                onShowCallback\n            );\n        }\n    };\n\n    return QtiRunner;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * Common helper functions\n     */\n    var interactionHelper = {\n        convertChoices: function(choices, outputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                if (Element.isA(c, 'choice')) {\n                    switch (outputType) {\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices: function(interaction, choices, inputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                var choice;\n                if (_.isString(c)) {\n                    if (inputType === 'serial') {\n                        choice = interaction.getChoice(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else if (inputType === 'identifier') {\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else {\n                        ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                } else {\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices: function(choices) {\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for (var i in choices) {\n                if (Element.isA(choices[i], 'choice')) {\n                    var choice = choices[i];\n                    if (choice.attr('fixed')) {\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                } else {\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for (var n = 0; n < r.length - 1; n++) {\n                if (f[n]) {\n                    continue;\n                }\n                var k = -1;\n                do {\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                } while (f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier: function(interaction, choiceSerial) {\n            var choice = interaction.getChoice(choiceSerial);\n            if (choice) {\n                return choice.id();\n            } else {\n                return '';\n            }\n        }\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //webpack trick : handlebar is usale only from cjs.\n    //but anyway we should deprecate the practice to invoke\n    //directly Handlebars at runtimej\n    let hb = Handlebars;\n    if(typeof hb.compile !== 'function'){\n        hb = require('handlebars');\n    }\n\n    const _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'figure',\n        'img',\n        'figcaption',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    const _dependencies = {\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock: ['_container'],\n        associateInteraction: ['simpleAssociableChoice'],\n        choiceInteraction: ['simpleChoice'],\n        gapMatchInteraction: ['gap', 'gapText'],\n        graphicAssociateInteraction: ['associableHotspot'],\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction: ['hotspotChoice'],\n        hotspotInteraction: ['hotspotChoice'],\n        hottextInteraction: ['hottext'],\n        inlineChoiceInteraction: ['inlineChoice'],\n        matchInteraction: ['simpleAssociableChoice'],\n        orderInteraction: ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    const _renderableSubclasses = {\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    const _defaults = {\n        shuffleChoices: true\n    };\n\n    const _isValidRenderer = function(renderer) {\n        let valid = true;\n\n        if (typeof renderer !== 'object') {\n            return false;\n        }\n\n        let classCorrect = false;\n        if (renderer.qtiClass) {\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\n                classCorrect = true;\n            } else {\n                const pos = renderer.qtiClass.indexOf('.');\n                if (pos > 0) {\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\n                    const subClass = renderer.qtiClass.slice(pos + 1);\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if (!classCorrect) {\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if (!renderer.template) {\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl() {\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    const Renderer = function(options) {\n        /**\n         * Store the registered renderer location\n         */\n        const _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        const _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        const _getClassRenderer = function(qtiClass) {\n            let ret = null;\n            if (_renderers[qtiClass]) {\n                ret = _renderers[qtiClass];\n            } else {\n                const pos = qtiClass.indexOf('.');\n                if (pos > 0) {\n                    qtiClass = qtiClass.slice(0, pos);\n                    if (_renderers[qtiClass]) {\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            let success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value) {\n            if (typeof key === 'string') {\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts) {\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key) {\n            if (typeof key === 'string' && options[key]) {\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\n            const messages = this.getOption('messages');\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\n                //currently not translatable but potentially could be if the need raises\n                return hb.compile(messages[elementName][messageKey]);\n            } else {\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager() {\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader() {\n            return this.themeLoader;\n        };\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass) {\n            let res;\n            let ret = '';\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n            const decorators = this.getOption('decorators');\n\n            if (!renderer || !_.isFunction(renderer.template)) {\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n            //post rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass) {\n            let ret = data;\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getData === 'function') {\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data) {\n            return hb.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass) {\n            let ret = null;\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                ret = renderer.getContainer(qtiElement, $scope);\n            } else {\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer && typeof renderer.render === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.setResponse === 'function') {\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\n                    if ($container instanceof $ && $container.length) {\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getResponse === 'function') {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.resetResponse === 'function') {\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState = function(qtiInteraction, state, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function() {\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations) {\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses) {\n            const self = this;\n            let required = [];\n\n            const themeData = themesHelper.getCurrentThemeData();\n            if (themeData) {\n                options.themes = themeData;\n            }\n            if (options.themes) {\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index) {\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\n            }\n\n            if (requiredClasses) {\n                if (_.isArray(requiredClasses)) {\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass) {\n                        const deps = _dependencies[reqClass];\n                        if (deps) {\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass) {\n                        let requiredSubClasses;\n                        if (_renderableSubclasses[qtiClass]) {\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass) {\n                                if (\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\n                                    !registerRendererClass(qtiClass, required)\n                                ) {\n                                    throw new Error(\n                                        self.name +\n                                            ' : missing qti class location declaration: ' +\n                                            qtiClass +\n                                            ', subclass: ' +\n                                            subclass\n                                    );\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            } else {\n                required = _.values(_locations);\n            }\n\n            moduleLoader([], ()=> true)\n                .addList( required.map( module => ({ module, category: 'qti'}) ) )\n                .load()\n                .then( loaded => {\n                    loaded.forEach( clazz => {\n                        if (_isValidRenderer(clazz)) {\n                            _renderers[clazz.qtiClass] = clazz;\n                        }\n\n                    });\n                    if (typeof callback === 'function') {\n                        callback.call(self, _renderers);\n                    }\n                });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload() {\n            if (this.themeLoader) {\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType) {\n            if (Element.isA(interaction, 'interaction')) {\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(\n                    interactionHelper.findChoices(interaction, choices, identificationType),\n                    'serial'\n                );\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType) {\n            let choices = [];\n            let serial, i;\n\n            if (Element.isA(interaction, 'interaction')) {\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if (!this.shuffledChoices[serial] || reshuffle) {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        this.shuffledChoices[serial] = [];\n                        for (i = 0; i < 2; i++) {\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                    //otherwise get the choices from the serials\n                } else {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        _.forEach(choices, function(choice, index) {\n                            if (index < 2) {\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial) {\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial) {\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if (returnedType === 'serial' || returnedType === 'identifier') {\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function() {\n            return _renderers;\n        };\n\n        this.getLocations = function() {\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url) {\n            if (!options.assetManager) {\n                return url;\n            }\n            if (typeof url === 'string' && url.length > 0) {\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl) {\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if (this.getOption('userRelativeUrl')) {\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\n                //already absolute or base64 encoded\n                return relUrl;\n            } else {\n                let absUrl = '';\n                const runtimeLocations = this.getOption('runtimeLocations');\n\n                if (runtimeLocations && _.size(runtimeLocations)) {\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier) {\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false; //break\n                        }\n                    });\n                }\n\n                if (absUrl) {\n                    return absUrl;\n                } else {\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    var Renderer$1 = {\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build: function(renderersLocations, name, defaultOptions) {\n            const NewRenderer = function() {\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n\n    return Renderer$1;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    /**\n     * Evaluate if the given object is a proper portable element provider\n     * @param {Object} provider\n     * @returns {Boolean}\n     */\n    var isPortableElementProvider = function isPortableElementProvider(provider){\n        return (provider && _.isFunction(provider.load));\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        /**\n         * The portable element registry instance\n         * @typedef {portableElementRegistry}\n         */\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n\n            /**\n             * Get a register portable element\n             * @param {String} typeIdentifier\n             * @param {String} version\n             * @returns {Object}\n             */\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], {version : version});\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n\n            /**\n             * Register a portable element provider\n             * @param moduleName\n             * @param {String|Object }provider - the portable provider object or module name\n             * @returns {portableElementRegistry}\n             */\n            registerProvider : function registerProvider(moduleName, provider){\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Clear all previously registered providers\n             * @returns {portableElementRegistry}\n             */\n            resetProviders : function resetProviders(){\n                __providers = {};\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Load the providers\n             * @param {Object} [options]\n             * @param {Boolean} [options.reload] - force to reload the registered providers\n             * @returns {Promise}\n             */\n            loadProviders : function loadProviders(options){\n                var self = this;\n                var loadPromise;\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve([]);\n                } else {\n                    loadPromise = new Promise(function(resolve, reject) {\n                        var providerLoadingStack = [];\n                        _.forIn(__providers, function(provider, id){\n                            if(provider === null){\n                                providerLoadingStack.push(id);\n                            }\n                        });\n                        _requirejs(providerLoadingStack, function(){\n                            _.each([].slice.call(arguments), function(provider){\n                                if(isPortableElementProvider(provider)){\n                                    __providers[providerLoadingStack.shift()] = provider;\n                                }\n                            });\n                            resolve(__providers);\n                            _loaded = true;\n                            self.trigger('providersloaded', __providers);\n                        }, reject);\n                    });\n                }\n\n                return loadPromise;\n            },\n\n            /**\n             * Get all versions of all portable elements registered\n             * @returns {Object} - all portable elements and their versions\n             */\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n\n            /**\n             * Get the runtime for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the runtime model\n             */\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    return _.assign(portableElement.runtime, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        model : portableElement.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Get the creator model for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the creator model\n             */\n            getCreator : function getCreator(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement && portableElement.creator){\n                    return _.assign(portableElement.creator, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        response : portableElement.response,\n                        model : portableElement.model,\n                        xmlns : portableElement.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Returned all enabled created from the registry\n             * @returns {Object} the collection of creators\n             */\n            getLatestCreators : function getLatestCreators(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    var lastVersion = _.last(versions);\n\n                    //check if the portable element is creatable:\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\n                        all[id] = lastVersion;\n                    }\n                });\n                return all;\n            },\n\n            /**\n             * Get the baseUrl for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {String} the base url\n             */\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n\n            /**\n             * Load the runtimes from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                    loadPromise = self.loadProviders(options).then(function(providers){\n\n                        var loadStack = [];\n\n                        _.forEach(providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, self._registry || {});//incremental loading\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                        return true;\n                                    }\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n                                });\n                            });\n\n                    });\n\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * Load the creators from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\n                            if(portableElementModel.enabled){\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }else{\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.each(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var portableElementModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * enable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            enable: function enable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = true;\n                }\n                return this;\n            },\n\n            /**\n             * disable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            disable: function disable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = false;\n                }\n                return this;\n            },\n\n            /**\n             * check is a portable element is enabled\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                return (portableElement && portableElement.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Utility to retrieve and manipualte QTI Elements\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\n    'use strict';\n\n    const QtiElements = {\n        classes: {\n            //abstract classes:\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\n            atomicBlock: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            atomicInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\n            simpleInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            flowStatic: { parents: ['flow'], abstract: true },\n            blockStatic: { parents: ['block'], abstract: true },\n            inlineStatic: { parents: ['inline'], abstract: true },\n            flow: { parents: ['objectFlow'], abstract: true },\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\n            //html-derived qti elements:\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\n            col: { parents: ['bodyElement'], xhtml: true },\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\n            param: { parents: ['objectFlow'], xhtml: true },\n            table: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\n                xhtml: true\n            },\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            td: { parents: ['tableCell'], xhtml: true },\n            th: { parents: ['tableCell'], xhtml: true },\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\n            a: { parents: ['simpleInline'], xhtml: true },\n            abbr: { parents: ['simpleInline'], xhtml: true },\n            acronym: { parents: ['simpleInline'], xhtml: true },\n            b: { parents: ['simpleInline'], xhtml: true },\n            big: { parents: ['simpleInline'], xhtml: true },\n            cite: { parents: ['simpleInline'], xhtml: true },\n            code: { parents: ['simpleInline'], xhtml: true },\n            dfn: { parents: ['simpleInline'], xhtml: true },\n            em: { parents: ['simpleInline'], xhtml: true },\n            i: { parents: ['simpleInline'], xhtml: true },\n            kbd: { parents: ['simpleInline'], xhtml: true },\n            q: { parents: ['simpleInline'], xhtml: true },\n            samp: { parents: ['simpleInline'], xhtml: true },\n            small: { parents: ['simpleInline'], xhtml: true },\n            span: { parents: ['simpleInline'], xhtml: true },\n            strong: { parents: ['simpleInline'], xhtml: true },\n            sub: { parents: ['simpleInline'], xhtml: true },\n            sup: { parents: ['simpleInline'], xhtml: true },\n            tt: { parents: ['simpleInline'], xhtml: true },\n            var: { parents: ['simpleInline'], xhtml: true },\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\n            address: { parents: ['atomicBlock'], xhtml: true },\n            h1: { parents: ['atomicBlock'], xhtml: true },\n            h2: { parents: ['atomicBlock'], xhtml: true },\n            h3: { parents: ['atomicBlock'], xhtml: true },\n            h4: { parents: ['atomicBlock'], xhtml: true },\n            h5: { parents: ['atomicBlock'], xhtml: true },\n            h6: { parents: ['atomicBlock'], xhtml: true },\n            p: { parents: ['atomicBlock'], xhtml: true },\n            pre: { parents: ['atomicBlock'], xhtml: true },\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\n            br: { parents: ['atomicInline'], xhtml: true },\n            //qti elements:\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\n            gap: { parents: ['inlineStatic'], qti: true },\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\n            templateElement: { parents: ['bodyElement'], qti: true },\n            templateBlock: {\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\n                contains: ['blockStatic'],\n                qti: true\n            },\n            templateInline: {\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\n                contains: ['inlineStatic'],\n                qti: true\n            },\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\n        },\n\n        cache: { containable: {}, children: {}, parents: {} },\n\n        getAllowedContainersElements(qtiClass, $container) {\n            const classes = QtiElements.getAllowedContainers(qtiClass);\n            let jqSelector = '';\n            for (let i in classes) {\n                if (!classes[i].qti) {\n                    //html element:\n                    jqSelector += `${classes[i]}, `;\n                }\n            }\n\n            if (jqSelector) {\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n            }\n\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n        },\n\n        getAllowedContainers(qtiClass) {\n            let ret;\n            if (QtiElements.cache.containable[qtiClass]) {\n                ret = QtiElements.cache.containable[qtiClass];\n            } else {\n                ret = [];\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (model.contains) {\n                        const intersect = _.intersection(model.contains, parents);\n                        if (intersect.length) {\n                            if (!model.abstract) {\n                                ret.push(aClass);\n                            }\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                        }\n                    }\n                }\n                QtiElements.cache.containable[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getAllowedContents(qtiClass, recursive, checked) {\n            let ret = [];\n            checked = checked || {};\n\n            const model = QtiElements.classes[qtiClass];\n            if (model && model.contains) {\n                for (let i in model.contains) {\n                    const contain = model.contains[i];\n                    if (!checked[contain]) {\n                        checked[contain] = true;\n\n                        //qtiClass can contain everything defined as its contents\n                        ret.push(contain);\n\n                        //qtiClass can also contain subclass of its contents\n                        const children = QtiElements.getChildClasses(contain, true);\n                        for (let j in children) {\n                            const child = children[j];\n                            if (!checked[child]) {\n                                checked[child] = true;\n\n                                ret.push(child);\n\n                                //adding children allowed contents depends on the option \"recursive\"\n                                if (recursive) {\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                                }\n                            }\n                        }\n\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                        }\n                    }\n                }\n            }\n\n            //qtiClass can contain all allowed contents of its parents:\n            const parents = QtiElements.getParentClasses(qtiClass, true);\n            for (let i in parents) {\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n            }\n\n            return _.uniq(ret, false);\n        },\n\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\n        },\n\n        getParentClasses(qtiClass, recursive) {\n            let ret;\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\n                ret = QtiElements.cache.parents[qtiClass];\n            } else {\n                ret = [];\n                if (QtiElements.classes[qtiClass]) {\n                    ret = QtiElements.classes[qtiClass].parents;\n                    if (recursive) {\n                        for (let i in ret) {\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                        }\n                        ret = _.uniq(ret, false);\n                    }\n                }\n                QtiElements.cache.parents[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getChildClasses(qtiClass, recursive, type) {\n            let ret;\n            const cacheType = type ? type : 'all';\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\n                ret = QtiElements.cache.children[qtiClass][cacheType];\n            } else {\n                ret = [];\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\n                        if (type) {\n                            if (model[type]) {\n                                ret.push(aClass);\n                            }\n                        } else {\n                            ret.push(aClass);\n                        }\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                        }\n                    }\n                }\n                if (!QtiElements.cache.children[qtiClass]) {\n                    QtiElements.cache.children[qtiClass] = {};\n                }\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\n            }\n\n            return ret;\n        },\n\n        isBlock(qtiClass) {\n            return QtiElements.is(qtiClass, 'block');\n        },\n\n        isInline(qtiClass) {\n            return QtiElements.is(qtiClass, 'inline');\n        },\n\n        is(qtiClass, topClass) {\n            if (qtiClass === topClass) {\n                return true;\n            } else {\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                return _.indexOf(parents, topClass) >= 0;\n            }\n        },\n\n        /**\n         * Check wether an element is visible, using the feature viibility service\n         * @param {string} qtiClass - see the list of available classes\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\n         */\n        isVisible(qtiClass) {\n            if (this.is(qtiClass, 'customInteraction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\n            }\n            if (this.is(qtiClass, 'interaction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\n            }\n            return true;\n        },\n\n        /**\n         * Get the list of available elements for the authoring side\n         * The list of those element is statically defined, but we filter out elements that should be visible\n         * @returns {Object} the available elements\n         */\n        getAvailableAuthoringElements() {\n            const tagTitles = {\n                commonInteractions: __('Common Interactions'),\n                inlineInteractions: __('Inline Interactions'),\n                graphicInteractions: __('Graphic Interactions')\n            };\n\n            const authoringElements = {\n                choiceInteraction: {\n                    label: __('Choice Interaction'),\n                    description: __(\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\n                    ),\n                    icon: 'icon-choice',\n                    short: __('Choice'),\n                    qtiClass: 'choiceInteraction',\n                    tags: [tagTitles.commonInteractions, 'mcq'],\n                    group: 'common-interactions'\n                },\n                orderInteraction: {\n                    label: __('Order Interaction'),\n                    icon: 'icon-order',\n                    description: __('Arrange a list of choices in the correct order.'),\n                    short: __('Order'),\n                    qtiClass: 'orderInteraction',\n                    tags: [tagTitles.commonInteractions, 'ordering'],\n                    group: 'common-interactions'\n                },\n                associateInteraction: {\n                    label: __('Associate Interaction'),\n                    icon: 'icon-associate',\n                    description: __('Create pair(s) from a series of choices.'),\n                    short: __('Associate'),\n                    qtiClass: 'associateInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                matchInteraction: {\n                    label: __('Match Interaction'),\n                    icon: 'icon-match',\n                    description: __(\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\n                    ),\n                    short: __('Match'),\n                    qtiClass: 'matchInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                hottextInteraction: {\n                    label: __('Hottext Interaction'),\n                    icon: 'icon-hottext',\n                    description: __('Select one or more text parts (hottext) within a text.'),\n                    short: __('Hottext'),\n                    qtiClass: 'hottextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                gapMatchInteraction: {\n                    label: __('Gap Match Interaction'),\n                    icon: 'icon-gap-match',\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'gapMatchInteraction',\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\n                    group: 'common-interactions'\n                },\n                sliderInteraction: {\n                    label: __('Slider Interaction'),\n                    icon: 'icon-slider',\n                    description: __('Select a value within a numerical range.'),\n                    short: __('Slider'),\n                    qtiClass: 'sliderInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                extendedTextInteraction: {\n                    label: __('Extended Text Interaction'),\n                    icon: 'icon-extended-text',\n                    description: __(\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\n                    ),\n                    short: __('Extended Text'),\n                    qtiClass: 'extendedTextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                uploadInteraction: {\n                    label: __('File Upload Interaction'),\n                    icon: 'icon-upload',\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\n                    short: __('File Upload'),\n                    qtiClass: 'uploadInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                mediaInteraction: {\n                    label: __('Media Interaction'),\n                    icon: 'icon-media',\n                    description: __(\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\n                    ),\n                    short: __('Media'),\n                    qtiClass: 'mediaInteraction',\n                    tags: [tagTitles.commonInteractions, 'media'],\n                    group: 'common-interactions'\n                },\n                _container: {\n                    label: __('Text Block'),\n                    icon: 'icon-font',\n                    description: __(\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\n                    ),\n                    short: __('Block'),\n                    qtiClass: '_container',\n                    tags: [tagTitles.inlineInteractions, 'text'],\n                    group: 'inline-interactions'\n                },\n                inlineChoiceInteraction: {\n                    label: __('Inline Choice Interaction'),\n                    icon: 'icon-inline-choice',\n                    description: __('Select a choice from a drop-down list.'),\n                    short: __('Inline Choice'),\n                    qtiClass: 'inlineChoiceInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\n                    group: 'inline-interactions'\n                },\n                textEntryInteraction: {\n                    label: __('Text Entry Interaction'),\n                    icon: 'icon-text-entry',\n                    description: __(\n                        'Collect open-ended information in a short text input (strings or numeric values).'\n                    ),\n                    short: __('Text Entry'),\n                    qtiClass: 'textEntryInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\n                    group: 'inline-interactions'\n                },\n                endAttemptInteraction: {\n                    label: __('End Attempt Interaction'),\n                    icon: 'icon-end-attempt',\n                    description: __('Trigger the end of the item attempt.'),\n                    short: __('End Attempt'),\n                    qtiClass: 'endAttemptInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\n                    group: 'inline-interactions'\n                },\n                hotspotInteraction: {\n                    label: __('Hotspot Interaction'),\n                    icon: 'icon-hotspot',\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\n                    short: __('Hotspot'),\n                    qtiClass: 'hotspotInteraction',\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\n                    group: 'graphic-interactions'\n                },\n                graphicOrderInteraction: {\n                    label: __('Graphic Order Interaction'),\n                    icon: 'icon-graphic-order',\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\n                    short: __('Order'),\n                    qtiClass: 'graphicOrderInteraction',\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\n                    group: 'graphic-interactions'\n                },\n                graphicAssociateInteraction: {\n                    label: __('Graphic Associate Interaction'),\n                    icon: 'icon-graphic-associate',\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                    short: __('Associate'),\n                    qtiClass: 'graphicAssociateInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                graphicGapMatchInteraction: {\n                    label: __('Graphic Gap Match Interaction'),\n                    icon: 'icon-graphic-gap',\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'graphicGapMatchInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                selectPointInteraction: {\n                    label: __('Select Point Interaction'),\n                    icon: 'icon-select-point',\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\n                    short: __('Select Point'),\n                    qtiClass: 'selectPointInteraction',\n                    tags: [tagTitles.graphicInteractions],\n                    group: 'graphic-interactions'\n                }\n            };\n\n            //filter out hidden elements\n            const availableElements = {};\n            for (const [elementId, element] of Object.entries(authoringElements)) {\n                if (this.isVisible(elementId)) {\n                    availableElements[elementId] = element;\n                }\n            }\n            return availableElements;\n        }\n    };\n\n    return QtiElements;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'i18n',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, __, portableElementRegistry, qtiElements) {\n    'use strict';\n\n    /**\n     * Create a ney interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry() {\n        return portableElementRegistry({\n            /**\n             * Get the authoring information for a given custom interaction\n             * @param {string} typeIdentifier - the interaction type identifier\n             * @param {Object} [options]\n             * @param {string|number} [options.version] - the interaction version\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\n             * @returns {Object} the authoring info\n             */\n            getAuthoringData(typeIdentifier, options = {}) {\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\n                const pciModel = this.get(typeIdentifier, options.version);\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\n                if (\n                    pciModel &&\n                    pciModel.creator &&\n                    pciModel.creator.hook &&\n                    pciModel.creator.icon &&\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\n                ) {\n                    return {\n                        label: pciModel.label, //currently no translation available\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\n                        short: pciModel.short,\n                        description: pciModel.description,\n                        qtiClass, //custom interaction is block type\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\n                        group: 'custom-interactions'\n                    };\n                }\n            }\n        }).on('creatorsloaded', function () {\n            const creators = this.getLatestCreators();\n            _.forEach(creators, function (creator, typeIdentifier) {\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\n                    parents: ['customInteraction'],\n                    qti: true\n                };\n            });\n        });\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: function handleTheme(url) {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        associableHotspot: false,\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'commonRenderer',\n        locations: locations,\n        options: {\n            assetManager: assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var userModules = {\n        /**\n         * Load user modules defined in the module config\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\n         * @returns {Promise}\n         */\n        load: function load(userModules) {\n            var config = module.config();\n\n            if (!userModules || !_.isArray(userModules)) {\n                if (config && config.userModules && _.isArray(config.userModules)) {\n                    userModules = config.userModules;\n                } else {\n                    userModules = [];\n                }\n            }\n            if(!userModules.length){\n                return Promise.resolve();\n            }\n            return new Promise(function(resolve, reject) {\n                window.require(userModules, function() {\n                    _.forEach(arguments, function(dependency) {\n                        if (dependency && _.isFunction(dependency.exec)) {\n                            dependency.exec();\n                        }\n                    });\n                    resolve();\n                }, function(err) {\n                    reject(err.message);\n                });\n            });\n        }\n    };\n\n    return userModules;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/runtime/qtiBootstrap',[\n    'jquery',\n    'lodash',\n    'module',\n    'taoQtiItem/qtiRunner/core/QtiRunner',\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\n    'iframeNotifier',\n    'core/history',\n    'taoQtiItem/runner/provider/manager/userModules'\n], function($, _, module, QtiRunner, Renderer, iframeNotifier, history, userModules){\n    'use strict';\n\n    //fix backspace going back into the history\n    history.fixBrokenBrowsers();\n\n    /**\n     * The bootstrap is used to set up a QTI item at runtime. It connects to the itemApi.\n     *\n     * @author Bertrand Chevrier <bertrand@taotesting.com>\n     * @exports taoQtiItem/runtime/qtiBootstrap\n     *\n     * @param {Object} runnerContext - the item context\n     */\n    return function bootstrap (runnerContext){\n\n        //reconnect to global itemApi function\n        window.onItemApiReady = function onItemApiReady(itemApi) {\n            var qtiRunner = new QtiRunner();\n            var coreItemData = runnerContext.itemData;\n            var variableElementsData = _.merge(runnerContext.variableElements, itemApi.params.contentVariables || {});\n\n            var renderer = new Renderer();\n\n            // Makes the runner interface available from outside the frame\n            // for preview.\n            window.qtiRunner = qtiRunner;\n\n            qtiRunner.setItemApi(itemApi);\n            qtiRunner.setRenderer(renderer);\n\n            qtiRunner.loadItemData(coreItemData, function() {\n\n                qtiRunner.loadElements(variableElementsData, function() {\n\n                    qtiRunner.renderItem(undefined, function() {\n\n                        //userModules loading\n                        //we use any user modules bound to this module configuration instead of the ones bound to the new test runner\n                        var userModulesOverride;\n                        var config = module.config();\n                        if (config && config.userModules && _.isArray(config.userModules) && config.userModules.length > 0) {\n                            userModulesOverride = config.userModules;\n                        }\n                        userModules.load(userModulesOverride)\n                            .then(function() {\n\n                                //exec user scripts\n                                if (_.isArray(runnerContext.userScripts)) {\n                                    require(runnerContext.userScripts, function() {\n                                        _.forEach(arguments, function(dependency) {\n                                            if (_.isFunction(dependency.exec)) {\n                                                dependency.exec.call(null, runnerContext.userVars);\n                                            }\n                                        });\n                                    });\n                                }\n\n                                iframeNotifier.parent('itemloaded');\n\n                                //IE9/10 loose the iframe focus, so we force getting it back.\n                                _.defer(function(){\n                                    window.focus();\n                                });\n                            })\n                            .catch(function(err) {\n                                throw new Error('Error in user modules : ' + err.message);\n                            });\n\n                    });\n                });\n            });\n        };\n\n        //if the item is longer to load,\n        _.defer(function(){\n           //tell the parent to connect the item api\n           iframeNotifier.parent('itemready');\n       });\n\n    };\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\ndefine('taoQtiItem/runtime/qtiLoader',[\n    'taoQtiItem/runtime/qtiBootstrap',\n    'css!taoCss/tao-main-style'\n], function(qtiBootstrap){\n    'use strict';\n\n    return {\n        start : function start(){\n            //the context is set into the template and bound to the tao namespace in global scope\n            var runnerContext = window.tao.qtiRunnerContext;\n            qtiBootstrap(runnerContext);\n        }\n    };\n});\n\n","\ndefine(\"taoQtiItem/loader/qtiLoader.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\"]);\n"],"mappings":"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"}