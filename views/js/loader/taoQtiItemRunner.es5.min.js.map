{"version":3,"names":["define","ckConfigurator$1","Object","prototype","hasOwnProperty","call","getConfig","editor","toolbarType","options","underline","ckConfigurator","_","util","buildSerial","prefix","id","chars","i","charAt","Math","floor","random","length","buildId","item","suffix","exists","usedIds","TypeError","getUsedIds","includes","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","forEach","collectionName","collection","split","nameToken","elt","parent","isFunction","find","Error","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","indexOf","removeMarkupNamespaces","removeMarkupNamespace","getMarkupUsedNamespaces","namespaces","original","slash","node","push","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","_class","loggerFactory","rendererConfig","_instances","logger","Element","Class","extend","qtiClass","serial","rootElement","init","attributes","metaData","_typeof","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","name","value","prop","document","trigger","key","removeData","removeAttr","removeAttributes","warn","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","object","body","location","getRootElement","setRelatedItem","setRootElement","getRelatedItem","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","rendering","resolveUrl","merge","getData","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","_containers","_$containerContext","_getSelector","selector","concat","containerHelper","setContext","getContext","get","reset","omit","clear","eventType","triggerResponseChangeEvent","interaction","extraData","response","getResponse","targetBlank","$container","on","e","preventDefault","href","window","open","raphael","scaleRaphael","_Mathround","round","_Mathfloor","basic","stroke","\"stroke-width\"","\"stroke-dasharray\"","\"stroke-linejoin\"","fill","\"fill-opacity\"","cursor","hover","selectable","active","error","success","layer","opacity","creator","target","path","width","assoc","\"stroke-linecap\"","close","gstyle","\"imageset-rect-stroke\"","\"imageset-rect-no-stroke\"","\"imageset-img\"","\"order-text\"","\"font-family\"","\"font-weight\"","\"font-size\"","\"score-text-default\"","\"score-text\"","\"small-text\"","\"layer-pos-text\"","\"target-hover\"","\"target-success\"","\"assoc-layer\"","\"stroke-opacity\"","\"assoc-bullet\"","\"close-bg\"","\"touch-circle\"","shapeMap","default","poly","coordsValidator","rect","ellipse","circle","qti2raphCoordsMapper","coords","_default","paper","height","size","a","join","raph2qtiCoordsMapper","x","y","cx","cy","r","rx","ry","GraphicHelper","_style","setStyle","responsivePaper","resizePaper","givenWidth","containerWidth","stopPropagation","diff","$editor","outerWidth","maxWidth","$body","responsive","innerWidth","factor","imgWidth","containerHeight","imgHeight","changeSize","resize","container","closest","resizer","throttle","innerHeight","image","img","imgId","setViewBox","createElement","self","shaper","shapeCoords","qtiCoords","raphaelCoords","apply","title","style","toFront","flashing","updateElementState","touchEffect","touchstart","createTouchCircle","getBBox","createTarget","_this2","point","w","baseSize","half","targetSize","transform","count","tBBox","click","p","select","remove","create","map","coord","parseInt","JSON","stringify","mapper","result","bbox","radius","tCircle","defer","animate","createText","top","left","content","disableEvents","text","hide","setAttribute","fontSize","scaledFontSize","updateTitle","createShapeText","shape","_this3","shapeClick","createBorderedImage","padding","halfPad","rw","rh","ix","iy","iw","ih","set","border","url","shadow","glow","offsetx","offsety","move","duration","animation","animateWith","children","child","nodeName","toLowerCase","removeChild","highlightError","restoredState","_this4","delay","event","evt","events","filter","el","f","Array","slice","getPoint","clickPoint","getBoundingClientRect","position","pw","cw","ph","ch","offset","pageX","pageY","clientX","clientY","scrollLeft","documentElement","scrollTop","Handlebars","Helpers0","instructionTpl","asString","html","Template","__initialized","template","depth0","helpers","partials","program1","buffer","stack1","escapeExpression","compilerInfo","functionType","helper","hash","inverse","noop","fn","program","message","_notificationLevels","Instruction","callback","defaultMessage","currentMessage","level","$dom","isValidLevel","setState","checkState","getId","update","timeout","start","stop","_this","timer","setTimeout","setLevel","getLevel","setMessage","validate","$$1","__","notifTpl","helperMissing","_instructions","instructionManager","validateInstructions","instruction","appendInstruction","validateCallback","removeInstructions","empty","resetInstructions","minMaxChoiceInstructions","min","max","onError","choiceCount","getChoices","minInstructionSet","msg","appendNotification","prepend","$notif","_remove","fadeOut","removeNotifications","informLoaded","leading","attach","stylesheets","$head","stylesheet","$link","onload","onerror","one","appendTo","detach","itemStylesheetHandler","regexChar","regexWords","patternMaskHelper","parsePattern","pattern","createMaxWordPattern","toString","createMaxCharPattern","printBase","withType","print","base","forIn","_formatters","formatter","baseType","printList","list","substring","printRecord","record","boolean","integer","float","string","pair","directedPair","file","uri","intOrIdentifier","identifier","PciPrettyPrint","pciPrettyPrint","_qtiModelPciResponseCardinalities","single","multiple","ordered","PciResponse","unserialize","responseDeclaration","getResponseDeclaration","cardinality","mappedCardinality","responseValues","isObject","serialize","prettyPrint","fixMarkupMediaSources","imgSrcPattern","substr","resolved","PortableElement","adaptSize","waitForMedia","itemSelector","sizeAdapter","$elements","first","addEventListener","rel","resetSize","resetHeight","mimeTypes","delimetr","uploadMime","getMimeTypes","getList","setExpectedTypes","types","classes","reduce","acc","selectedType","getExpectedTypes","includeEquivalents","equivalents","mimes","mime","mimeData","equivalent","union","exports","isSafari","ua","navigator","userAgent","defineProperty","supportsVerticalFormElement","isVerticalFormElementSupported","div","innerHTML","querySelector","getIsItemWritingModeVerticalRl","itemBody","wrapDigitsInCombineUpright","isWritingModeVerticalRl","withDigitsWrapped","replaceAll","digits","tpl","Gap","program3","objetLabel","objectLabel","GapImg","GapText","Hottext","InlineChoice","SimpleAssociableChoice_AssociateInteraction","SimpleAssociableChoice_MatchInteraction","features","program5","program7","unique","allowElimination","SimpleChoice_ChoiceInteraction","choice","maxChoices","isVisible","SimpleChoice_OrderInteraction","Promise","eventifier","_requirejs","require","_defaultLoadingOptions","reload","loadModuleConfig","manifest","resolve","reject","requireConfigAliases","reqConfigs","modules","baseUrl","runtime","config","pciConfig","defaults","paths","runtimeModules","typeIdentifier","model","conf","isPortableElementProvider","provider","load","portableElementRegistry","methods","_loaded","__providers","_registry","version","last","registerProvider","moduleName","resetProviders","loadProviders","loadPromise","providerLoadingStack","shift","getAllVersions","all","versions","getRuntime","portableElement","assign","label","getCreator","xmlns","getLatestCreators","lastVersion","hook","enabled","getBaseUrl","loadRuntimes","then","providers","loadStack","results","configLoadingStack","_pcis","include","moduleConfigs","catch","err","loadCreators","requiredCreatorHooks","portableElementModel","creators","creatorHook","getTypeIdentifier","findIndex","module","enable","disable","isEnabled","featuresService","QtiElements","parents","contains","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","dl","dt","dd","hr","math","li","ol","ul","param","table","tbody","tfoot","thead","td","th","tr","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","pre","br","infoControl","qti","textRun","feedbackInline","feedbackBlock","rubricBlock","blockInteraction","inlineInteraction","gap","hottext","printedVariable","prompt","templateElement","templateBlock","templateInline","choiceInteraction","associateInteraction","orderInteraction","matchInteraction","hottextInteraction","gapMatchInteraction","mediaInteraction","sliderInteraction","uploadInteraction","drawingInteraction","graphicInteraction","hotspotInteraction","graphicAssociateInteraction","graphicOrderInteraction","graphicGapMatchInteraction","selectPointInteraction","textEntryInteraction","extendedTextInteraction","inlineChoiceInteraction","endAttemptInteraction","customInteraction","_container","cache","containable","getAllowedContainersElements","getAllowedContainers","jqSelector","getParentClasses","aClass","intersect","intersection","getChildClasses","getAllowedContents","recursive","checked","contain","j","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","_i2","_Object$entries","entries","_Object$entries$_i","_slicedToArray","elementId","qtiElements","customInteractionRegistry","getAuthoringData","enabledOnly","pciModel","ciRegistry","registry","infoControlRegistry","icRegistry","getBaseUrlByIdentifier","handle","handlePortableElementLocation","source","relative","fullmatch","relPath","runtimeLocation","context","themes","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","assetManager","handleTheme","available","val","root_url","taomedia","external","base64","itemCssNoCache","locations","assessmentItem","_simpleFeedbackRule","_tooltip","outcomeDeclaration","responseProcessing","figure","figcaption","modalFeedback","\"simpleChoice.choiceInteraction\"","\"simpleChoice.orderInteraction\"","gapText","\"simpleAssociableChoice.matchInteraction\"","\"simpleAssociableChoice.associateInteraction\"","inlineChoice","hotspotChoice","gapImg","associableHotspot","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","order","orderDragAndDrop","messages","program2","program4","equal","contentModel","Container","Figcaption","verticalWriting","imageTpl","widgetTpl","Template$1","program6","showFigure","DISABLE_FIGURE_WIDGET","featureFlags","FEATURE_FLAG_DISABLE_FIGURE_WIDGET","Figure","elem","class","FLOAT_LEFT_CLASS","FLOAT_RIGHT_CLASS","CENTER_CLASS","some","bdy","elements","childElement","$figure","$img","endsWith","css","program9","program11","program13","program15","program17","program19","program21","role","src","alt","Img","Include","hider","instructionMgr","pciResponse","interact","interactUtils","pairTpl","blockHelperMissing","choices","setChoice","$choice","$target","choiceSerial","getChoice","usage","_setChoice","responseMappingMode","siblings","$resultArea","$pair","thisPairSerial","$otherRepeatedPair","not","each","$otherPair","otherPairSerial","fadeIn","show","color","unsetChoice","$filledChoice","triggerChange","$parent","$sibling","isNumberOfMaxAssociationsZero","swapping","getChoiceByIdentifier","renderEmptyPairs","scrollObserverFactory","$scrollContainer","resetScrollObserver","currentDraggable","beforeY","beforeX","afterY","afterX","onScrollCb","getAttribute","webkitTransform","findScrollContainer","$el","ovf","dynamicDrop","getScrollContainer","draggedElement","off","_getRawResponse","_setInstructions","_iFrameDragFix","draggableSelector","iFrameDragFixOn","$activeDrop","resultSelector","fire","eq","relatedTarget","choiceSelector","$choiceArea","$activeChoice","scrollObserver","$bin","binSelector","_getChoice","_resetSelection","_unsetChoice","_isInsertionMode","_isModeEditing","_activateChoice","_handleChoiceActivate","_activateResult","targetSerial","_handleResultActivate","isDragAndDropEnabled","dragOptions","dropOptions","scaleX","scaleY","currentTarget","getOption","inertia","autoScroll","restrict","restriction","endOnly","elementRect","bottom","right","draggable","onstart","scale","calculateScale","onmove","moveElement","dx","dy","onend","restoreOriginalPosition","iFrameDragFixOff","styleCursor","overlap","ondragenter","ondragleave","dropzone","ondrop","resetResponse","tapOn","_setPairs","pairs","addedPairs","$emptyPair","$divs","next","setResponse","destroy","sort","aIndex","bIndex","getState","AssociateInteraction","listStyle","allowEliminationVisible","horizontal","promptId","KEY_CODE_SPACE","KEY_CODE_ENTER","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","_triggerInput","$choiceBox","$input","$choiceBoxes","add","isBoolean","_pseudoLabel","inputSelector","$qtiChoice","keyCode","charCode","prev","focus","eliminator","dataset","eliminable","input","originalEvent","classList","toggle","removeAttribute","values","isVertical","highlightInvalidInput","$icon","prevTimeoutData","clearTimeout","unhighlight","choiceStyle","iconStyle","setProperty","isEliminable","getCustomData","listStyleVisible","listStyles","pop","eliminated","ChoiceInteraction","_setVal","change","EndAttemptInteraction","strLimiter","ckEditor","tooltip","converter","_Mathround2","countTpl","_isMultiple","limiter","inputLimiter","placeholderText","getItemLanguage","itemLang","itemLocale","ckOptions","resize_enabled","secure","protocol","forceCustomDomain","language","expectedLength","minStrings","patternMask","placeholderType","_styleUpdater","themeLoaded","_getNumStrings","$element","num","_setPattern","_getFormat","hideXhtmlConstraints","hideXhtmlRecommendations","qtiItemStyle","$editorBody","qtiItem","currentStyle","getComputedStyle","\"background-color\"","_setUpCKEditor","status","listenTextInput","textareaSupportsVertical","safariVerticalRlPatch","_patchSafariVerticalRl","_getCKEditor","setData","syncValue","_setMultipleVal","keys","setText","numericBase","maxStrings","editorValue","convertedValue","convert","isNaN","parseFloat","_getTextareaValue","expectedLines","isCke","patternRegEx","$textarea","$charsCounter","$wordsCounter","maxWords","maxLength","$maxLengthCounter","$maxWordsCounter","$expectedLengthCounter","_this5","ignoreKeyCodes","spaceKeyCodes","isComposing","hasCompositionJustEnded","acceptKeyCode","emptyOrSpace","txt","hasSpace","getCharBefore","str","pos","getCharAfter","noSpaceNode","NODE_TEXT","isBlockBoundary","getName","getPreviousNotEmptyNode","range","getPreviousNode","getText","previousSourceNode","getPreviousSourceNode","nodeElement","parentNode","ownerDocument","getNextNotEmptyNode","getNextNode","nextSourceNode","getNextSourceNode","cancelEvent","cancel","stopImmediatePropagation","invalidToolip","patternHandler","newValue","debounce","dispose","keyLimitHandler","which","wordsCount","getWordsCount","charsCount","getCharsCount","middle","sel","getSelection","getRanges","startContainer","startOffset","endContainer","endOffset","getSelectedText","_$textarea$","selectionStart","selectionEnd","textarea","updateCounter","nonKeyLimitHandler","dataValue","clipboardData","dataTransfer","limitByWordCount","limitByCharCount","insertHtml","end","handleCompositionStart","handleCompositionEnd","currentValue","currentLength","handleBeforeInput","previousSnapshot","getSnapshot","CKEditorKeyLimit","createRange","editable","moveToElementEditablePosition","selectRanges","editableElement","setShadowString","shadowString","_toConsumableArray","$shadow","forceTextareaRepaint","repaintIdx","showHideCursor","$cursor","display","positionCursor","activeElement","shadowLetterEl","shadowLetterRect","shadowRect","textareaRect","cursorRect","bodyRect","cursorTop","cursorLeft","cursorTopStyle","cursorLeftStyle","syncShadowStyles","textareaStyles","shadowStyles","_i3","_arr","propName","textareaPropVal","getPropertyValue","shadowPropVal","after","debouncedPositionCursor","requestAnimationFrame","api","raw","_ckEditorData","patt","_destroyCkEditor","instances","_stripTags","tempNode","textContent","format","setReadOnly","readOnly","clearText","countChars","countWords","countExpectedLength","countMaxLength","countMaxWords","constraintHints","program14","program10","maxStringLoop","program12","program16","program18","program23","dompurify","program25","unless","program26","ExtendedTextInteraction","_choiceUsages","getGap","gapSelector","_handleChoiceSelect","_handleFilledGapSelect","_handleGapSelect","$flowContainer","filledGapSelector","$dragged","GapMatchInteraction","graphic","_getActiveElement","getById","_createPath","srcElement","destElement","onRemove","showCloser","closerBg","removeSet","closer","hideCloser","toBack","unclick","vset","_vsets","without","sx","sy","dest","srcBullet","destBullet","midPath","getPointAtLength","getTotalLength","selectLigne","attrs","_isMatchable","matchable","matchMax","matching","_shapesSelectable","assocs","activeChoice","assocsElement","_shapesUnSelectable","responses","_paperUnSelect","_renderChoice","maxAssociations","_this6","pull","background","partial","res","responseValue","el1","el2","toRemove","GraphicAssociateInteraction","mouseEvent","gapImgs","activeDrop","isDirectedPairFlipped","flipDirectedPair","gapFillers","gapFiller","$gapImages","bgImage","getGapImg","usages","_selectShape","trackResponse","$gapList","$active","$imageBox","boxOffset","$clone","shapeOffset","activeOffset","currentCount","\"z-index\"","animationEnd","gapFillerImage","rElement","raphaelid","handleShapeSelect","onClickShape","_renderGapList","toggleActiveGapState","_setInactiveGapState","_setActiveGapState","gapFillersSelector","onClickGapImg","index","newSize","sortBy","responseChoice","responseGap","items","GraphicGapMatchInteraction","_createTexts","texts","times","number","_renderOrderList","$orderList","$orderer","$orderers","_showText","transf","_hideText","_unselectShape","unsetNumbers","activeNumber","_this7","GraphicOrderInteraction","_this8","HotspotInteraction","pseudoLabel","$inupt","currentChoices","HottextInteraction","select2","_emptyValue","_defaultOptions","allowEmpty","optionSelector","opts","required","choiceTooltip","getItemDir","itemDir","dirClass","writingMode","opt","outerHTML","formatResult","formatSelection","minimumResultsForSearch","containerCssClass","dropdownCssClass","warning","placement","$selectedIndex","selectedIndex","ev","choiceIdentifier","InlineChoiceInteraction","depth1","matchSet1","programWithDepth","matchSet2","inWarning","_onCheckboxSelected","_filterResponse","_inferValue","firstId","secondId","currentResponse","minAssociations","_countChoices","_maxMatchReached","association","overflow","_getChoiceDefinitionByIdentifier","matchMin","_countAssociations","rawResponse","rawChoices","_getRawChoices","matchset","superClosure","onMaxChoicesReached","report","onMatchMaxReached","originalBackgroundColor","originalColor","backgroundColor","responseCount","prependTo","MatchInteraction","inferValue","mediaplayer","canPreviewMedia","firefox","reFirefoxVersion","exec","webm","reWebM","_this9","media","$item","maxPlays","canBePlayed","currentWidth","mediaElement","initMediaPlayer","mediaUrl","preview","canPause","canSeek","volume","autoStart","loop","renderTo","transcriptionUrl","timesPlayed","restorePlayerState","playerState","isNumber","setVolume","muted","mute","startMuted","seek","pause","player","getPosition","getVolume","MediaInteraction","program27","orientationSelectionEnabled","_freezeSize","$orderArea","instructionMax","orderState","isSingleOrder","initialOrder","$resultItems","deactivateChoice","item1","item2","$choices","choice1","choice2","_isDropzoneVisible","$dropzoneElement","_insertDropzone","draggedMiddle","_getMiddleOf","previousMiddle","insertPosition","currentMiddle","orientation","before","_adjustDropzonePosition","draggedBox","$prevResult","$nextResult","prevMiddle","nextMiddle","elementBox","$iconAdd","$iconRemove","$iconBefore","$iconAfter","$dragContainer","_activeControls","_resetControls","_setSelection","_addChoiceToSelection","$results","_toggleResultSelection","_removeChoice","_moveResultBefore","$prev","_moveResultAfter","$next","hasBeenDroppedInResultArea","dropzoneIndex","selectors","unbindInteractEvents","OrderInteraction","_pciHooks","register","pciHook","notifyReady","pciInstance","notifyDone","onready","ondone","createPciInstance","pciTypeIdentifier","registeredPCI","cloneDeep","qtiCustomInteractionContext","instanciator","getPci","pci","_taoCustomInteraction","setPci","instance","commonPciRenderer","getRequiredModules","requireEntries","libraries","lib","createInstance","properties","pciAssetManager","pciAssetResolve","resolveBy","initialize","setSerializedState","getSerializedState","sharedContext","defaultPciRenderer","setPCIConstructor","pciConstructor","getPCIConstructor","contentLanguage","itemLanguage","userLanguage","locale","forOwn","propVal","propKey","readyPromise","pciReadyCallback","templateVariables","boundTo","pciDoneCallback","getInstance","oncompleted","setReviewState","RESPONSE","info","pciConstructorDataKey","imsPciRenderer","_setPciModel","pciRenderer","_getPciRenderer","getAssetManager","onPci","serializedState","PortableCustomInteraction","Prompt","getRawResponse","points","addPoint","pointChange","isTouch","enableSelection","isResponsive","untouchstart","imageClicked","SelectPointInteraction","nouislider","_slideTo","sliderCurrentValue","sliderValue","direction","responseIdentifier","$sliderLabels","$sliderCurrentValue","$sliderValue","reverse","lowerBound","upperBound","step","steps","inArray","reversedLabels","sliderSize","maxHeight","stepLabel","middleStep","leftOffset","middleValue","noUiSlider","attributesNew","startValue","SliderInteraction","hideTooltip","showTooltip","theme","updateTitleContent","tooltipOptions","textEntryTooltip","refreshTooltip","validateDecimalInput","_ref","_ref$allowMinusOnly","allowMinusOnly","_ref$withTooltip","withTooltip","separatorName","\".\"","\",\"","\" \"","thousandsSeparator","getThousandsSeparator","decimalSeparator","getDecimalSeparator","thousandsSeparatorName","decimalSeparatorName","escapedThousandsSeparator","escapedDecimalSeparator","regexPattern","decimalError","validateIntegerInput","_ref2","_ref2$allowMinusOnly","_ref2$withTooltip","maxChars","updateMaxCharsTooltip","messageType","updatePatternMaskTooltip","inputValue","$interaction","validity","isValid","TextEntryInteraction","mimetype","uploadHelper","progressbar","previewer","modal","_Mathmin","_Mathround3","resetGui","callResetGui","changeListener","_initialInstructions","files","_handleSelectedFiles","getCustomMessage","FileReader","bind","blur","accept","_readyInstructions","validateFileType","expectedTypes","filetype","getMimeType","getMessageWrongType","userSelectedType","messageWrongType","expectedTypeLabels","filename","reader","base64Data","commaPosition","base64Raw","$previewArea","$originalImg","$largeDisplay","itemWidth","winWidth","fullHeight","imgNaturalWidth","isOversized","modalWidth","naturalWidth","$modalBody","modalOverlayClass","onloadstart","onprogress","_Mathceil","ceil","percentProgress","loaded","total","readAsDataURL","UploadInteraction","Item","MathJax","block","Hub","processSectionDelay","_Math","reference","$self","Queue","_checkContainerType","_getBodyDom","_setBodyDomClass","newClass","oldClass","$wrapper","_setDomClass","$bodyDom","wrapInner","setEncodedDataToDom","dataName","oldValue","_getEncodedDataString","setEncodedData","getEncodedData","removeEncodedData","hasEncodedData","matches","_prefix","coreContainerHelper","inline","feedbackStyle","modalFeedbackRenderer","fb","$modal","$itemBody","requiredHeight","outerHeight","startClosed","minHeight","_Object","obj","previewOptions","metadataUri","resourceMetadataUrl","encodeURIComponent","resourceUri","_picHooks","taoQtiInfoControlContext","picHook","picInstance","proto","constructor","qtiInfoControlContext","_getPic","pic","_taoInfoControl","picAssetManager","PortableInfoControl","PrintedVariable","_Mathfloor2","interactionHelper","convertChoices","outputType","c","findChoices","inputType","shuffleChoices","n","k","tmp","serialToIdentifier","themeLoader","themesHelper","moduleLoader","getDocumentBaseUrl","host","pathname","hb","compile","_renderableClasses","_dependencies","_renderableSubclasses","simpleAssociableChoice","simpleChoice","_defaults","_isValidRenderer","valid","classCorrect","subClass","Renderer","registerRendererClass","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","elementName","messageKey","getThemeLoader","qtiSubclass","decorators","renderDirect","qtiInteraction","getLoadedRenderers","renderersLocations","requiredClasses","themeData","getCurrentThemeData","preload","reqClass","deps","requiredSubClasses","addList","category","unload","setShuffledChoices","identificationType","getShuffledChoices","reshuffle","returnedType","getRenderers","getLocations","getAbsoluteUrl","relUrl","absUrl","runtimeLocations","setAreaBroker","areaBroker","_areaBroker","getAreaBroker","getItemCreator","Renderer$1","build","defaultOptions","NewRenderer","QtiRenderer","rendererProvider","use","RubricBlock","rubric","Stylesheet","summary","Table","Tooltip","tooltipDOM","renderedTooltip","IdentifiedElement","Choice","_super","getInteraction","QtiChoice","QtiHotspot","QtiAssociableHotspot","Mixin","augment","targetClass","methodName","_parent","setElements","returnValue","setElement","removeElement","getElements","getElement","elementsData","flatten","Container$1","ContainerChoice","ContainerInline","QtiGap","QtiObject","getMediaType","video","audio","_alt","QtiGapImg","QtiContainerChoice","QtiGapText","QtiHotspotChoice","QtiInlineChoice","QtiSimpleAssociableChoice","QtiSimpleChoice","QtiTextVariableChoice","QtiTextEntry","Feedback","FeedbackBlock","FeedbackInline","ModalFeedback","ContainerFigcaption","getNamespace","relatedItem","getNamespaces","nsUriFragment","defaultNsName","defaultNsUri","setNamespace","NamespacedElement","ContainerFigure","imgElements","QtiInteraction","addChoice","responseId","_type","choiceShuffle","interactionData","renderedChoice","tplName","getNormalMaximum","Interaction","BlockInteraction","responseRules","MATCH_CORRECT","outcomeIdentifier","responseIf","expression","expressions","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","isUsingTemplate","isValidTemplateName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","getTemplateNameFromResponseRules","_responseRules$respon","_responseRules$respon2","_responseRules$respon3","_responseRules$respon4","_responseRules$respon5","_responseRules$respon6","outcomeRules","_outcomeRules$attribu","_outcomeRules$attribu2","isEqual","VariableDeclaration","defaultValue","setDefaultValue","getDefaultValue","OutcomeDeclaration","gamp","responseHelper","pairExists","externalScoredValues","maxScore","setNormalMaximum","scoreOutcome","getOutcomeDeclaration","normalMaximum","processingType","interactions","getInteractions","interactionMaxScore","setMaxScore","hasInvalidInteraction","maxScoreOutcome","normalMinimum","addOutcomeDeclaration","customOutcomes","getOutcomes","outcome","externalScored","removeOutcome","isAllResponseProcessingRulesNone","outcomesWithExternalScored","isResponsesEmpty","getMatchMaxOrderedChoices","choiceCollection","valueOf","choiceInteractionBased","mapDefault","mappingAttributes","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","minChoices","correctResponse","mapEntries","score","getMaxCutByUpperBound","orderInteractionBased","associateInteractionBased","maxAssoc","minAssoc","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","possiblePairs","checkInfinitePair","countBy","forEachRight","mapEntry","choiceId","_usedChoices","used","gapMatchInteractionBased","calculatePossiblePairs","getGaps","skippableWrongResponse","usedGaps","group1","group2","gapId","selectPointInteractionBased","mappedValue","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","customInteractionBased","has","ContainerInteraction","removeProp","propNames","getProperties","getMarkupNamespace","markupNs","defaultMarkupNsName","defaultMarkupNsUri","setMarkupNamespace","CustomElement","CustomInteraction","entryPoint","pciReadyCallbacks","onPciReady","triggerPciReady","offPci","triggerPci","InlineInteraction","QtiBlockInteraction","QtiObjectInteraction","QtiGraphicInteraction","backgroundImage","GraphicInteraction","addGapImg","removeGapImg","getGapImgs","graphicGapInteraction","SimpleAssociableChoice","matchSet","ObjectInteraction","ContainerItemBody","outcomes","modalFeedbacks","schemaLocations","apipAccessibility","addResponseDeclaration","addModalFeedback","feedback","elementCollection","getResponses","addNamespace","setNamespaces","setSchemaLocations","getSchemaLocations","setApipAccessibility","apip","getApipAccessibility","addStylesheet","removeStyleSheet","stylesheetExists","setResponseProcessing","rp","$dummy","$children","qtiClasses","getPrefix","html5Ns","prefixed","xmlNsHandler","stripNs","openRegEx","closeRegEx","restoreNs","xml","ignoreMarkup","xmlCopy","xmlRe","tagRe","xmlMatch","imsXsd","prefixAtt","tagMatch","itemScore","responseIdentifiers","outcomeExpressions","itemScoreHelper","loadPortableCustomElementProperties","rawProperties","parse","loadPortableCustomElementData","Loader","classesLocation","setClassesLocation","qtiClassesList","getRequiredClasses","loadRequiredClasses","_this10","requiredClass","loadeded","QtiClass","getLoadedClasses","loadItemData","_this11","Qti","loadContainer","buildOutcome","feedbacks","buildElement","_loop","responseRuleItemIndex","_ref3","_ref3$responseIf","_ref3$responseIf2","_ref3$responseIf2$exp","_ref3$responseIf2$exp2","_ref3$responseIf2$exp3","_ref3$responseIf2$exp4","_ref3$responseIf2$exp5","_ref3$responseIf2$exp6","_ref4","splice","_ref5","responseRule","buildResponse","feedbackRules","fbData","_ref6","feedbackOutcome","_ref6$attributes","_ref6$attributes2","feedbackOutcomeIdentifier","buildSimpleFeedbackRule","feedbackResponseRuleIndex","_ref7","_ref7$responseIf","_ref7$responseIf2","_ref7$responseIf2$res","_ref7$responseIf2$res2","_ref7$responseIf2$res3","_ref7$responseIf2$res4","setOutcomeResponseRule","_setOutcomeResponseRu","responseKey","customResponseProcessing","buildResponseProcessing","loadAndBuildElement","_this12","loadElement","_this13","loadElementData","loadElements","_this14","allElements","elementData","howMatch","correctResponses","mapping","areaMapping","feedbackRule","setCondition","condition","comparedValue","feedbackThen","feedbackElse","comparedOutcome","bodyObject","bodyData","eltData","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","loadTooltipData","buildInteractionChoices","loadPciData","setMathML","mathML","annotations","encoding","setAnnotation","_stripMathTags","nsName","_stripNamespace","_isEmptyMathML","mathStr","hasContent","$math","mathText","parseHTML","unescape","getAnnotation","removeAnnotation","getMathML","escape","latex","Math$1","readyStack","onReady","cb","triggerReady","SimpleFeedbackRule","_comparedValues","setFeedbackElse","_toString","ResponseProcessing","ContainerTable","newBody","Table$1","newContent","tooltipContent","ResponseDeclaration","getFeedbackRules","rule","isCardinality","cardinalities","comparison","EventMgr","tokens","getRawValues","pciVar","getFeedbackMessageSignature","extractDisplayInfo","$interactionContainer","messageGroupId","$displayContainer","uniqueId","interactionContainer","displayContainer","getInteractionsDisplayInfo","interactionsDisplayInfo","$itemContainer","interactionOrder","_interactionInfo","getFeedbacks","itemSession","renderingQueue","feedbackIds","_currentMessageGroupId","interactionInfo","Parser","_$xml","loadXML","parseXML","getDOM","_getElementSelector","getQtiClassFromXmlDom","$node","_qtiClassNames","$elt","attrName","specified","_qtiAttributesNames","buildMath","$annotation","buildTooltip","targetHtml","contentId","contentHtml","\"aria-describedby\"","parseTable","$parsedTable","parseContainer","parseFigure","$parsedFigure","$figcaption","_placeholder","$qtiElement","$content","_parsableElements","rubricblock","printedvariable","powerform","mappingindicator","parser","xmlStr","loader","parser$1","simpleParser","xinclude","fileUrl","undef","stimulusXml","$sampleXMLrootNode","$stimulus","mathNs","loadedClasses","xincludeLoader","picManager","_pic","_item","getPic","getItem","getDom","_dom","tool","button","broken","dom","disabled","eventName","rest","unshift","picManagerCollection","force","_list","_map","manager","managerFactory","picId","execute","action","executeAll","enablePic","disablePic","showPic","hidePic","enableAll","disableAll","showAll","hideAll","collectionFactory","picManager$1","userModules","dependency","sideLoadingProviderFactory","portableElements","lodash","ReviewRenderer","providerRegistry","qtiRenderer","reviewRenderer","getProviderName","rendererStrategies","getAvailableProviders","alias","defaultRenderer","rendererName","providerName","getProvider","author","candidate","proctor","scorer","testConstructor","tutor","QtiLoader","modalFeedbackHelper","qtiItemRuntimeProvider","itemData","done","rendererOptions","pick","view","_loader","bdyRTL","getLanguageDirection","race","detail","themeName","renderingError","errorMsg","unrecoverable","renderFeedbacks","itemRunner","qtiRuntimeProvider"],"sources":["/github/workspace/tao/views/build/config-wrap-start-default.js","../qtiCommonRenderer/helpers/ckConfigurator.js","../qtiItem/helper/util.js","../qtiItem/helper/rendererConfig.js","../qtiItem/core/Element.js","../qtiCommonRenderer/helpers/container.js","../qtiCommonRenderer/helpers/Graphic.js","../qtiCommonRenderer/helpers/instructions/Instruction.js","../qtiCommonRenderer/helpers/instructions/instructionManager.js","../qtiCommonRenderer/helpers/itemStylesheetHandler.js","../qtiCommonRenderer/helpers/patternMask.js","../qtiCommonRenderer/helpers/PciPrettyPrint.js","../qtiCommonRenderer/helpers/PciResponse.js","../qtiCommonRenderer/helpers/PortableElement.js","../qtiCommonRenderer/helpers/sizeAdapter.js","../qtiCommonRenderer/helpers/uploadMime.js","../qtiCommonRenderer/helpers/userAgent.js","../qtiCommonRenderer/helpers/verticalWriting.js","../qtiCommonRenderer/renderers/choices/Gap.js","../qtiCommonRenderer/renderers/choices/GapImg.js","../qtiCommonRenderer/renderers/choices/GapText.js","../qtiCommonRenderer/renderers/choices/Hottext.js","../qtiCommonRenderer/renderers/choices/InlineChoice.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction.js","../portableElementRegistry/factory/factory.js","../qtiCreator/helper/qtiElements.js","../portableElementRegistry/factory/ciRegistry.js","../portableElementRegistry/ciRegistry.js","../portableElementRegistry/factory/icRegistry.js","../portableElementRegistry/icRegistry.js","../portableElementRegistry/assetManager/portableAssetStrategy.js","../qtiCommonRenderer/renderers/config.js","../qtiCommonRenderer/renderers/Container.js","../qtiCommonRenderer/renderers/Figcaption.js","../qtiCommonRenderer/renderers/Figure.js","../qtiCommonRenderer/renderers/Img.js","../qtiCommonRenderer/renderers/Include.js","../qtiCommonRenderer/renderers/interactions/AssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/ChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/EndAttemptInteraction.js","../qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js","../qtiCommonRenderer/renderers/interactions/GapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction.js","../qtiCommonRenderer/renderers/interactions/HotspotInteraction.js","../qtiCommonRenderer/renderers/interactions/HottextInteraction.js","../qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/MatchInteraction.js","../qtiCommonRenderer/renderers/interactions/MediaInteraction.js","../qtiCommonRenderer/renderers/interactions/OrderInteraction.js","../../qtiCustomInteractionContext.js","../qtiCommonRenderer/renderers/interactions/pci/instanciator.js","../qtiCommonRenderer/renderers/interactions/pci/common.js","../qtiCommonRenderer/renderers/interactions/pci/ims.js","../qtiCommonRenderer/renderers/interactions/PortableCustomInteraction.js","../qtiCommonRenderer/renderers/interactions/Prompt.js","../qtiCommonRenderer/renderers/interactions/SelectPointInteraction.js","../qtiCommonRenderer/renderers/interactions/SliderInteraction.js","../qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js","../qtiCommonRenderer/renderers/interactions/UploadInteraction.js","../qtiCommonRenderer/renderers/Item.js","../qtiCommonRenderer/renderers/Math.js","../qtiItem/helper/container.js","../qtiCommonRenderer/renderers/ModalFeedback.js","../qtiCommonRenderer/renderers/Object.js","../../qtiInfoControlContext.js","../qtiCommonRenderer/renderers/PortableInfoControl.js","../qtiCommonRenderer/renderers/PrintedVariable.js","../qtiItem/helper/interactionHelper.js","../qtiRunner/core/Renderer.js","../qtiCommonRenderer/renderers/Renderer.js","../qtiCommonRenderer/renderers/rendererProvider.js","../qtiCommonRenderer/renderers/RubricBlock.js","../qtiCommonRenderer/renderers/Stylesheet.js","../qtiCommonRenderer/renderers/Table.js","../qtiCommonRenderer/renderers/Tooltip.js","../qtiItem/core/IdentifiedElement.js","../qtiItem/core/choices/Choice.js","../qtiItem/core/choices/Hotspot.js","../qtiItem/core/choices/AssociableHotspot.js","../qtiItem/mixin/Mixin.js","../qtiItem/core/Container.js","../qtiItem/mixin/Container.js","../qtiItem/core/choices/ContainerChoice.js","../qtiItem/mixin/ContainerInline.js","../qtiItem/core/choices/ContainerInlineChoice.js","../qtiItem/core/choices/Gap.js","../qtiItem/core/Object.js","../qtiItem/core/choices/GapImg.js","../qtiItem/core/choices/GapText.js","../qtiItem/core/choices/HotspotChoice.js","../qtiItem/core/choices/Hottext.js","../qtiItem/core/choices/InlineChoice.js","../qtiItem/core/choices/SimpleAssociableChoice.js","../qtiItem/core/choices/SimpleChoice.js","../qtiItem/core/choices/TextVariableChoice.js","../qtiItem/core/choices/TextEntry.js","../qtiItem/core/feedbacks/Feedback.js","../qtiItem/core/feedbacks/FeedbackBlock.js","../qtiItem/core/feedbacks/FeedbackInline.js","../qtiItem/core/feedbacks/ModalFeedback.js","../qtiItem/mixin/ContainerFigcaption.js","../qtiItem/mixin/NamespacedElement.js","../qtiItem/core/Figcaption.js","../qtiItem/mixin/ContainerFigure.js","../qtiItem/core/Figure.js","../qtiItem/core/Img.js","../qtiItem/core/Include.js","../qtiItem/core/interactions/Interaction.js","../qtiItem/core/interactions/Prompt.js","../qtiItem/core/interactions/BlockInteraction.js","../qtiItem/helper/responseRules.js","../qtiItem/helper/response.js","../qtiItem/core/variables/VariableDeclaration.js","../qtiItem/core/variables/OutcomeDeclaration.js","../qtiItem/helper/maxScore.js","../qtiItem/core/interactions/AssociateInteraction.js","../qtiItem/core/interactions/ChoiceInteraction.js","../qtiItem/core/interactions/ContainerInteraction.js","../qtiItem/mixin/CustomElement.js","../qtiItem/core/interactions/CustomInteraction.js","../qtiItem/core/interactions/InlineInteraction.js","../qtiItem/core/interactions/EndAttemptInteraction.js","../qtiItem/core/interactions/ExtendedTextInteraction.js","../qtiItem/core/interactions/GapMatchInteraction.js","../qtiItem/core/interactions/ObjectInteraction.js","../qtiItem/core/interactions/GraphicInteraction.js","../qtiItem/core/interactions/GraphicAssociateInteraction.js","../qtiItem/core/interactions/GraphicGapMatchInteraction.js","../qtiItem/core/interactions/GraphicOrderInteraction.js","../qtiItem/core/interactions/HotspotInteraction.js","../qtiItem/core/interactions/HottextInteraction.js","../qtiItem/core/interactions/InlineChoiceInteraction.js","../qtiItem/core/interactions/MatchInteraction.js","../qtiItem/core/interactions/MediaInteraction.js","../qtiItem/core/interactions/OrderInteraction.js","../qtiItem/core/interactions/SelectPointInteraction.js","../qtiItem/core/interactions/SliderInteraction.js","../qtiItem/core/interactions/TextEntryInteraction.js","../qtiItem/core/interactions/UploadInteraction.js","../qtiItem/mixin/ContainerItemBody.js","../qtiItem/core/Item.js","../qtiItem/core/qtiClasses.js","../qtiItem/helper/xmlNsHandler.js","../qtiItem/helper/itemScore.js","../qtiItem/core/Loader.js","../qtiItem/core/Math.js","../qtiItem/core/PortableInfoControl.js","../qtiItem/core/PrintedVariable.js","../qtiItem/core/response/SimpleFeedbackRule.js","../qtiItem/core/ResponseProcessing.js","../qtiItem/core/RubricBlock.js","../qtiItem/core/Stylesheet.js","../qtiItem/mixin/ContainerTable.js","../qtiItem/core/Table.js","../qtiItem/core/Tooltip.js","../qtiItem/core/variables/ResponseDeclaration.js","../qtiItem/helper/EventMgr.js","../qtiItem/helper/pci.js","../qtiItem/helper/modalFeedback.js","../qtiItem/helper/Parser.js","../qtiItem/helper/simpleParser.js","../qtiItem/helper/xincludeLoader.js","../runner/provider/manager/picManager.js","../runner/provider/manager/userModules.js","../portableElementRegistry/provider/sideLoadingProviderFactory.js","../reviewRenderer/renderers/config.js","../reviewRenderer/renderers/Renderer.js","../reviewRenderer/renderers/rendererProvider.js","../runner/rendererStrategies.js","../runner/provider/qti.js","../runner/qtiItemRunner.js","module-create.js","/github/workspace/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","define('taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator'], function (ckConfigurator$1) { 'use strict';\n\n    ckConfigurator$1 = ckConfigurator$1 && Object.prototype.hasOwnProperty.call(ckConfigurator$1, 'default') ? ckConfigurator$1['default'] : ckConfigurator$1;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options) {\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator$1.getConfig(editor, toolbarType, options);\n    };\n\n    var ckConfigurator = {\n        getConfig: getConfig\n    };\n\n    return ckConfigurator;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var util = {\n        buildSerial: function buildSerial(prefix) {\n            var id = prefix || '';\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < 22; i++) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId: function buildId(item, prefix) {\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds = item.getUsedIds();\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds && usedIds.includes(id)) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if (!prefix) {\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if (prefix) {\n                prefix = prefix\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\n                    .replace(/(_)+/gi, '_');\n                if (useSuffix) {\n                    suffix = '_' + i;\n                }\n            }\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds[id]) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\n            var found = null;\n\n            if (_.isString(collectionNames)) {\n                collectionNames = [collectionNames];\n            }\n\n            if (_.isArray(collectionNames)) {\n                _.forEach(collectionNames, function (collectionName) {\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.forEach(collectionName.split('.'), function (nameToken) {\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if (elt) {\n                        found = { parent: element, element: elt };\n                        return false; //break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.forEach(collection, function (elt) {\n                        if (_.isFunction(elt.find)) {\n                            found = elt.find(searchedSerial);\n                            if (found) {\n                                return false; //break the each loop\n                            }\n                        }\n                    });\n\n                    if (found) {\n                        return false; //break the each loop\n                    }\n                });\n            } else {\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\n            if (ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function ($0, $1, $2, $3, $4) {\n                    if ($2.indexOf(':') > 0) {\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\n                });\n                return markup;\n            }\n            return markup;\n        },\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function (original, slash, ns, node) {\n                namespaces.push(ns);\n                return '<' + slash + node + '>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function (args) {\n        var options = {\n            data: {},\n            placeholder: null,\n            subclass: '',\n            renderer: null\n        };\n\n        _.forEach(args, function (arg) {\n            if (arg) {\n                if (arg.isRenderer) {\n                    options.renderer = arg;\n                } else if (arg instanceof $ && arg.length) {\n                    options.placeholder = arg;\n                } else if (_.isString(arg)) {\n                    options.subclass = arg;\n                } else if (_.isPlainObject(arg)) {\n                    options.data = arg;\n                } else {\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n\n        return options;\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass: '',\n        serial: '',\n        rootElement: null,\n        init: function (serial, attributes) {\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if (typeof serial === 'object') {\n                attributes = serial;\n                serial = '';\n            }\n\n            if (!serial) {\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\n            }\n\n            if (!_instances[serial]) {\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            } else {\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if (typeof this.initContainer === 'function') {\n                this.initContainer(arguments[2] || '');\n            }\n            if (typeof this.initObject === 'function') {\n                this.initObject();\n            }\n        },\n        is: function (qtiClass) {\n            return qtiClass === this.qtiClass;\n        },\n        placeholder: function () {\n            return '{{' + this.serial + '}}';\n        },\n        getSerial: function () {\n            return this.serial;\n        },\n        getUsedIdentifiers: function () {\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for (var i in elts) {\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if (id) {\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds: function getUsedIds() {\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function (elt) {\n                var id = elt.attr('id');\n                if (id && !usedIds.includes(id)) {\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.attributes[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.attr(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.attributes[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.data(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.metaData[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData: function (name) {\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr: function (name) {\n            return this.removeAttributes(name);\n        },\n        setAttributes: function (attributes) {\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes: function () {\n            return _.clone(this.attributes);\n        },\n        removeAttributes: function (attrNames) {\n            if (typeof attrNames === 'string') {\n                attrNames = [attrNames];\n            }\n            for (var i in attrNames) {\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements: function () {\n            var elts = {};\n            function append(element) {\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if (typeof this.initContainer === 'function') {\n                append(this.getBody());\n            }\n            if (typeof this.initObject === 'function') {\n                append(this.getObject());\n            }\n            _.forEach(this.metaData, function (v) {\n                if (Element.isA(v, '_container')) {\n                    append(v);\n                } else if (_.isArray(v)) {\n                    _.forEach(v, function (v) {\n                        if (Element.isA(v, '_container')) {\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses: function () {\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.forEach(composingElts, function (elt) {\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find: function (serial) {\n            var found = null;\n            var object, body;\n\n            if (typeof this.initObject === 'function') {\n                object = this.getObject();\n                if (object.serial === serial) {\n                    found = { parent: this, element: object, location: 'object' };\n                }\n            }\n\n            if (!found && typeof this.initContainer === 'function') {\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = { parent: this, element: body, location: 'body' };\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent: function () {\n            var item = this.getRootElement();\n            if (item) {\n                var found = item.find(this.getSerial());\n                if (found) {\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem: function (item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement: function (item) {\n            var composingElts, i;\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for (i in composingElts) {\n                    composingElts[i].setRootElement(item);\n                }\n            }\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem: function () {\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement: function () {\n            var ret = null;\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer: function (renderer) {\n            if (renderer && renderer.isRenderer) {\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for (var serial in elts) {\n                    elts[serial].setRenderer(renderer);\n                }\n            } else {\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer: function () {\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    tag: this.qtiClass,\n                    serial: this.serial,\n                    attributes: this.getAttributes()\n                };\n\n            if (!_renderer) {\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if (typeof this.initObject === 'function') {\n                defaultData.object = {\n                    attributes: this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if (args.placeholder) {\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender: function (data, altClassName, renderer) {\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if (_renderer) {\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            } else {\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer: function ($scope, subclass) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                return renderer.getContainer(this, $scope, subclass);\n            } else {\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray: function () {\n            var arr = {\n                serial: this.serial,\n                type: this.qtiClass,\n                attributes: this.getAttributes()\n            };\n\n            if (typeof this.initContainer === 'function') {\n                arr.body = this.getBody().toArray();\n            }\n            if (typeof this.initObject === 'function') {\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty: function () {\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass: function (className) {\n            var clazz = this.attr('class') || '';\n            if (!_containClass(clazz, className)) {\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass: function (className) {\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass: function (className) {\n            var clazz = this.attr('class') || '';\n            if (clazz) {\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if (clazz) {\n                    this.attr('class', clazz);\n                } else {\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass: function (className, state) {\n            if (typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if (this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset: function () {\n            return Element.issetElement(this.serial);\n        },\n        unset: function () {\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function (allClassStr, className) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function (qtiElement, qtiClass) {\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\n    };\n\n    Element.getElementBySerial = function (serial) {\n        return _instances[serial];\n    };\n\n    Element.issetElement = function (serial) {\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function (serial) {\n        var element = Element.getElementBySerial(serial);\n\n        if (element) {\n            var composingElements = element.getComposingElements();\n            _.forEach(composingElements, function (elt) {\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/container',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element'], function (_, $, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    //containers are cached, so do not forget to remove them.\n    let _containers = {};\n    let _$containerContext = $();\n\n    /**\n     * Build the selector for your element (from the element serial)\n     * @private\n     * @param {QtiElement} element\n     * @returns {String} the selector\n     */\n    const _getSelector = function (element) {\n        const serial = element.getSerial();\n        let selector = `[data-serial=${serial}]`;\n\n        if (Element.isA(element, 'choice')) {\n            selector = `.qti-choice${selector}`;\n        } else if (Element.isA(element, 'interaction')) {\n            selector = `.qti-interaction${selector}`;\n        }\n\n        return selector;\n    };\n\n    /**\n     * Helps you to retrieve the DOM element (as a jquery element)\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\n     */\n    const containerHelper = {\n        /**\n         * Set a global scope to look for element container\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         */\n        setContext($scope) {\n            _$containerContext = $scope;\n        },\n\n        /**\n         * Returns current scope\n         * @returns {jQueryElement}\n         */\n        getContext() {\n            return _$containerContext;\n        },\n\n        /**\n         * Get the container of the given element\n         * @param {QtiElement} element - the QTI Element to find the container for\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         * @returns {jQueryElement} the container\n         */\n        get(element, $scope) {\n            const serial = element.getSerial();\n\n            if ($scope instanceof $ && $scope.length) {\n                //find in the given context\n                return $scope.find(_getSelector(element));\n            } else if (_$containerContext instanceof $ && _$containerContext.length) {\n                //find in the globally set context\n                return _$containerContext.find(_getSelector(element));\n            } else if (!_containers[serial] || !_containers[serial].length) {\n                //find in the global context\n                _containers[serial] = $(_getSelector(element));\n            }\n\n            return _containers[serial];\n        },\n\n        /**\n         * getContainer use a cache to store elements. This methods helps you to purge it.\n         * @param {Element} element - find the container of this element\n         */\n        reset(element) {\n            if (element instanceof Element && _containers[element.getSerial()]) {\n                _containers = _.omit(_containers, element.getSerial());\n            }\n        },\n\n        /**\n         * Clear the containers cache\n         */\n        clear() {\n            _containers = {};\n            _$containerContext = $();\n        },\n\n        /**\n         * Trigger an event on the element's container\n         * @param {String} eventType - the name of the event\n         * @param {QtiElement} element - find the container of this element\n         * @param {Array} [data] - data to give to the event\n         */\n        trigger(eventType, element, data) {\n            if (eventType) {\n                if (data && !_.isArray(data)) {\n                    data = [data];\n                }\n                this.get(element).trigger(eventType, data);\n            }\n        },\n\n        /**\n         * Alias to trigger a responseChange Event from an interaction\n         * @param {QtiElement} interaction - the interaction that had a response changed\n         * @param {Object} [extraData] - additionnal data to give to the event\n         */\n        triggerResponseChangeEvent(interaction, extraData) {\n            this.trigger('responseChange', interaction, [\n                {\n                    interaction: interaction,\n                    response: interaction.getResponse()\n                },\n                extraData\n            ]);\n        },\n\n        /**\n         * Make all links to opens in another tab/window\n         * @param {jQueryElement} $container\n         */\n        targetBlank($container) {\n            $container.on('click', 'a', function (e) {\n                e.preventDefault();\n                const href = $(this).attr('href');\n                if (href && href.match(/^http/i)) {\n                    window.open(href, '_blank');\n                }\n            });\n        }\n    };\n\n    return containerHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/Graphic',['jquery', 'lodash', 'raphael', 'scale.raphael'], function ($, _, raphael, scaleRaphael) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    raphael = raphael && Object.prototype.hasOwnProperty.call(raphael, 'default') ? raphael['default'] : raphael;\n    scaleRaphael = scaleRaphael && Object.prototype.hasOwnProperty.call(scaleRaphael, 'default') ? scaleRaphael['default'] : scaleRaphael;\n\n    var basic = {\n    \tstroke: \"#8D949E\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-dasharray\": \"\",\n    \t\"stroke-linejoin\": \"round\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5,\n    \tcursor: \"pointer\"\n    };\n    var hover = {\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.3\n    };\n    var selectable = {\n    \t\"stroke-dasharray\": \"-\",\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5\n    };\n    var active = {\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.5\n    };\n    var error = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \t\"fill-opacity\": 0.5,\n    \tfill: \"#661728\"\n    };\n    var success = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 0.5\n    };\n    var layer = {\n    \tfill: \"#ffffff\",\n    \topacity: 0,\n    \tcursor: \"pointer\"\n    };\n    var creator = {\n    \t\"fill-opacity\": 0.5,\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \tcursor: \"pointer\"\n    };\n    var target = {\n    \tpath: \"m 18,8.4143672 -1.882582,0 C 15.801891,4.9747852 13.071059,2.2344961 9.63508,1.9026738 L 9.63508,0 8.2305176,0 l 0,1.9026387 C 4.7947148,2.2343027 2.0637246,4.9746621 1.7481973,8.4143672 l -1.7481973,0 0,1.4045625 1.754877,0 c 0.3460429,3.4066753 3.0632871,6.1119843 6.4756406,6.4413813 l 0,1.739689 1.4045624,0 0,-1.739725 c 3.412547,-0.329537 6.129633,-3.034793 6.475641,-6.4413453 l 1.889279,0 z m -8.36492,6.5188648 0,-4.064673 -1.4045624,0 0,4.063882 C 5.5511016,14.612555 3.4232695,12.494619 3.0864551,9.8189297 l 4.0449512,0 0,-1.4045625 -4.0546368,0 C 3.3788672,5.6984941 5.5228887,3.5393379 8.2305176,3.2161113 l 0,3.9153125 1.4045624,0 0,-3.9160859 c 2.711162,0.3203965 4.858576,2.4808887 5.160955,5.1990293 l -3.927441,0 0,1.4045625 3.917773,0 C 14.449289,12.496957 12.318363,14.616158 9.63508,14.933232 z\",\n    \tfill: \"#0E914B\",\n    \twidth: 1,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var assoc = {\n    \t\"stroke-width\": 2,\n    \t\"stroke-linecap\": \"round\",\n    \tcursor: \"pointer\"\n    };\n    var close = {\n    \tpath: \"m 8.9997236,18.000001 c -4.9703918,0 -8.99972284217367,-4.02901 -8.99972284217367,-9 C 7.5782633e-7,4.029011 4.0293108,9.8531742e-7 8.9997236,9.8531742e-7 13.970691,9.8531742e-7 18.000001,4.029011 18.000001,9.000001 c 0,4.97099 -4.02931,9 -9.0002774,9 z m 0.0045,-16.37151 c -4.06191,0 -7.35492,3.29635 -7.35492,7.36251 0,4.06562 3.292989,7.36255 7.35492,7.36255 4.0630384,0 7.3554334,-3.29693 7.3554334,-7.36255 0,-4.06614 -3.292969,-7.36251 -7.3554334,-7.36251 v 0 z m 3.1314894,9.31167 -1.953823,-1.94014 1.953843,-1.94018 c 0.08964,-0.089 0.134622,-0.19099 0.135073,-0.30584 4.31e-4,-0.11488 -0.04383,-0.21712 -0.132838,-0.30681 l -0.54267,-0.54685 c -0.08898,-0.0897 -0.190903,-0.13473 -0.305719,-0.13514 -0.114837,-4.4e-4 -0.217064,0.0439 -0.306703,0.1329 l -1.9623724,1.94865 -1.962395,-1.94865 c -0.08964,-0.089 -0.191845,-0.13336 -0.306702,-0.1329 -0.114837,4.3e-4 -0.216736,0.0455 -0.305719,0.13514 l -0.54265,0.54685 c -0.08902,0.0897 -0.133269,0.19193 -0.132838,0.30681 4.3e-4,0.11485 0.04543,0.21681 0.135073,0.30584 l 1.953823,1.94018 -1.953782,1.94014 c -0.0896,0.089 -0.134684,0.19094 -0.135114,0.3058 -4.31e-4,0.11486 0.04386,0.21716 0.132838,0.30681 l 0.542671,0.54687 c 0.08896,0.0897 0.190923,0.13467 0.305718,0.13516 0.114857,3.9e-4 0.217105,-0.0439 0.306724,-0.13288 l 1.962332,-1.94863 1.9623324,1.94863 c 0.08962,0.089 0.191886,0.13323 0.306744,0.13288 0.114836,-4.5e-4 0.216736,-0.0455 0.305698,-0.13516 l 0.542691,-0.54687 c 0.089,-0.0897 0.133227,-0.19193 0.132838,-0.30681 -3.9e-4,-0.1149 -0.0455,-0.21683 -0.135073,-0.3058 z\",\n    \tfill: \"#0E5D91\",\n    \twidth: 1,\n    \topacity: 0,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var gstyle = {\n    \tbasic: basic,\n    \thover: hover,\n    \tselectable: selectable,\n    \tactive: active,\n    \terror: error,\n    \tsuccess: success,\n    \tlayer: layer,\n    \tcreator: creator,\n    \t\"imageset-rect-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#666666\",\n    \t\"stroke-width\": 1,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-rect-no-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#ffffff\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-img\": {\n    \tcursor: \"pointer\"\n    },\n    \t\"order-text\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.7,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"bold\",\n    \t\"font-size\": 22,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text-default\": {\n    \tstroke: \"#444444\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"small-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 16,\n    \tcursor: \"pointer\"\n    },\n    \t\"layer-pos-text\": {\n    \tstroke: \"#333\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 14\n    },\n    \ttarget: target,\n    \t\"target-hover\": {\n    \tfill: \"#3E7DA7\",\n    \t\"fill-opacity\": 1\n    },\n    \t\"target-success\": {\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 1\n    },\n    \tassoc: assoc,\n    \t\"assoc-layer\": {\n    \t\"stroke-width\": 12,\n    \tcursor: \"pointer\",\n    \t\"stroke-opacity\": 0\n    },\n    \t\"assoc-bullet\": {\n    \tfill: \"#000000\"\n    },\n    \tclose: close,\n    \t\"close-bg\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"none\",\n    \tcursor: \"pointer\",\n    \topacity: 0\n    },\n    \t\"touch-circle\": {\n    \tfill: \"none\",\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-width\": 2\n    }\n    };\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2023 (original work) Open Assessment Technologies SA ;\n     */\n\n    //maps the QTI shapes to Raphael shapes\n    const shapeMap = {\n        default: 'rect',\n        poly: 'path'\n    };\n\n    //length constraints to validate coords\n    const coordsValidator = {\n        rect: 4,\n        ellipse: 4,\n        circle: 3,\n        poly: 6,\n        default: 0\n    };\n\n    //transform the coords from the QTI system to Raphael system\n    const qti2raphCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper:  from left-x,top-y,right-x-bottom-y to x,y,w,h\n         * @param {Array} coords - QTI coords\n         * @returns {Array} raphael coords\n         */\n        rect: function (coords) {\n            return [coords[0], coords[1], coords[2] - coords[0], coords[3] - coords[1]];\n        },\n\n        /**\n         * Creates the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        default: function (paper) {\n            return [0, 0, paper.width, paper.height];\n        },\n\n        /**\n         * polygone coordinate mapper:  from x1,y1,...,xn,yn to SVG path format\n         * @param {Array} coords - QTI coords\n         * @returns {Array} path desc\n         */\n        poly: function (coords) {\n            let a;\n            const size = coords.length;\n\n            // autoClose if needed\n            if (coords[0] !== coords[size - 2] && coords[1] !== coords[size - 1]) {\n                coords.push(coords[0]);\n                coords.push(coords[1]);\n            }\n\n            // move to first point\n            coords[0] = 'M' + coords[0];\n\n            for (a = 1; a < size; a++) {\n                if (a % 2 === 0) {\n                    coords[a] = 'L' + coords[a];\n                }\n            }\n\n            return [coords.join(' ')];\n        }\n    };\n\n    //transform the coords from a raphael shape to the QTI system\n    const raph2qtiCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper: from x,y,w,h to left-x,top-y,right-x-bottom-y\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        rect: function (attr) {\n            return [attr.x, attr.y, attr.x + attr.width, attr.y + attr.height];\n        },\n\n        /**\n         * Circle coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        circle: function (attr) {\n            return [attr.cx, attr.cy, attr.r];\n        },\n\n        /**\n         * Ellispe coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        ellipse: function (attr) {\n            return [attr.cx, attr.cy, attr.rx, attr.ry];\n        },\n\n        /**\n         * Get the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        default: function (attr) {\n            return this.rect(attr);\n        },\n\n        /**\n         * polygone coordinate mapper:  from SVG path (available as segments) to x1,y1,...,xn,yn format\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        path: function (attr) {\n            const poly = [];\n            let i;\n\n            if (_.isArray(attr.path)) {\n                for (i = 1; i < attr.path.length; i++) {\n                    if (attr.path[i].length === 3) {\n                        poly.push(attr.path[i][1]);\n                        poly.push(attr.path[i][2]);\n                    }\n                }\n            }\n\n            return poly;\n        }\n    };\n\n    /**\n     * Graphic interaction helper\n     * @exports qtiCommonRenderer/helpers/Graphic\n     */\n    const GraphicHelper = {\n        /**\n         * Raw access to the styles\n         * @type {Object}\n         */\n        _style: gstyle,\n\n        /**\n         * Apply the style defined by name to the element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         */\n        setStyle: function (element, name) {\n            if (element && gstyle[name]) {\n                element.attr(gstyle[name]);\n            }\n        },\n\n        /**\n         * Create a Raphael paper with a bg image, that is width responsive\n         * @param {String} id - the id of the DOM element that will contain the paper\n         * @param {String} serial - the interaction unique indentifier\n         * @param {Object} options - the paper parameters\n         * @param {String} options.img - the url of the background image\n         * @param {jQueryElement} [options.container] - the parent of the paper element (got the closest parent by default)\n         * @param {Boolean} [options.responsive] - scale to container\n         * @param {Number} [options.width] - the paper width\n         * @param {Number} [options.height] - the paper height\n         * @param {String} [options.imgId] - an identifier for the image element\n         * @param {Function} [options.done] - executed once the image is loaded\n         * @returns {Raphael.Paper} the paper\n         */\n        responsivePaper: function (id, serial, options) {\n            const $container = options.container || $('#' + id).parent();\n            const $editor = $('.image-editor', $container);\n            const $body = $container.closest('.qti-itemBody');\n            const resizer = _.throttle(resizePaper, 10);\n\n            const imgWidth = options.width || $container.innerWidth();\n            const imgHeight = options.height || $container.innerHeight();\n\n            const paper = scaleRaphael(id, imgWidth, imgHeight);\n            const image = paper.image(options.img, 0, 0, imgWidth, imgHeight);\n            image.id = options.imgId || image.id;\n            paper.setViewBox(0, 0, imgWidth, imgHeight);\n\n            resizer();\n\n            //retry to resize once the SVG is loaded\n            $(image.node).attr('externalResourcesRequired', 'true').on('load', resizer);\n\n            if (raphael.type === 'SVG') {\n                // TODO: move listeners somewhere they can be easily turned off\n                $(window).on('resize.qti-widget.' + serial, resizer);\n                // TODO: favor window resize event and deprecate $container resive event (or don't allow $container to be destroyed and rebuilt\n                $container.on('resize.qti-widget.' + serial, resizer);\n                $(document).on('customcssloaded.styleeditor', resizer);\n            } else {\n                $container.find('.main-image-box').width(imgWidth);\n                if (typeof options.resize === 'function') {\n                    options.resize(imgWidth, 1);\n                }\n            }\n\n            /**\n             * scale the raphael paper\n             * @private\n             */\n            function resizePaper(e, givenWidth) {\n                let containerWidth;\n\n                if (e) {\n                    e.stopPropagation();\n                }\n\n                const diff = $editor.outerWidth() - $editor.width() + ($container.outerWidth() - $container.width()) + 1;\n                const maxWidth = $body.width();\n                if (options.responsive) {\n                    containerWidth = $container.innerWidth();\n                } else {\n                    containerWidth = $editor.innerWidth();\n                }\n\n                if ((options.responsive && containerWidth > 0) || givenWidth > 0 || containerWidth > maxWidth) {\n                    if (options.responsive) {\n                        if (givenWidth < containerWidth && givenWidth < maxWidth) {\n                            containerWidth = givenWidth - diff;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth - diff;\n                        } else {\n                            containerWidth -= diff;\n                        }\n                    } else {\n                        if (givenWidth > 0 && givenWidth < maxWidth) {\n                            containerWidth = givenWidth;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth;\n                        }\n                    }\n\n                    const factor = containerWidth / imgWidth;\n                    const containerHeight = imgHeight * factor;\n\n                    if (containerWidth > 0) {\n                        paper.changeSize(containerWidth, containerHeight, false, false);\n                    }\n\n                    if (typeof options.resize === 'function') {\n                        options.resize(containerWidth, factor);\n                    }\n                }\n                $container.trigger('resized.qti-widget');\n            }\n\n            return paper;\n        },\n\n        /**\n         * Create a new Element into a raphael paper\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @param {Object} [options] - additional creation options\n         * @param {String} [options.id] - to set the new element id\n         * @param {String} [options.title] - to set the new element title\n         * @param {String} [options.style = basic] - to default style\n         * @param {Boolean} [options.hover = true] - to disable the default hover state\n         * @param {Boolean} [options.touchEffect = true] - a circle appears on touch\n         * @param {Boolean} [options.qtiCoords = true] - if the coords are in QTI format\n         * @returns {Raphael.Element} the created element\n         */\n        createElement: function (paper, type, coords, options) {\n            const self = this;\n            let element;\n            const shaper = shapeMap[type] ? paper[shapeMap[type]] : paper[type];\n            const shapeCoords = options.qtiCoords !== false ? self.raphaelCoords(paper, type, coords) : coords;\n\n            if (typeof shaper === 'function') {\n                element = shaper.apply(paper, shapeCoords);\n                if (element) {\n                    if (options.id) {\n                        element.id = options.id;\n                    }\n\n                    if (options.title) {\n                        element.attr('title', options.title);\n                    }\n\n                    element.attr(gstyle[options.style || 'basic']).toFront();\n\n                    //prevent issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n\n                    if (options.hover !== false) {\n                        element.hover(\n                            function () {\n                                if (!element.flashing) {\n                                    self.updateElementState(this, 'hover');\n                                }\n                            },\n                            function () {\n                                if (!element.flashing) {\n                                    self.updateElementState(\n                                        this,\n                                        this.active ? 'active' : this.selectable ? 'selectable' : 'basic'\n                                    );\n                                }\n                            }\n                        );\n                    }\n\n                    if (options.touchEffect !== false) {\n                        element.touchstart(function () {\n                            self.createTouchCircle(paper, element.getBBox());\n                        });\n                    }\n                }\n            } else {\n                throw new Error('Unable to find method ' + type + ' on paper');\n            }\n\n            return element;\n        },\n\n        /**\n         * Create target point\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} [options]\n         * @param {Object} [options.id] - and id to identify the target\n         * @param {Object} [options.point] - the point to add to the paper\n         * @param {Number} [options.point.x = 0] - point's x coord\n         * @param {Number} [options.point.y = 0] - point's y coord\n         * @param {Boolean} [options.hover] = true - the target has an hover effect\n         * @param {Function} [options.create] - call once created\n         * @param {Function} [options.remove] - call once removed\n         */\n        createTarget: function createTarget(paper, options) {\n            options = options || {};\n\n            const point = options.point || { x: 0, y: 0 };\n            const factor = paper.w !== 0 ? paper.width / paper.w : 1;\n            const hover = typeof options.hover === 'undefined' ? true : !!options.hover;\n\n            const baseSize = 18; // this is the base size of the path element to be placed on svg (i.e. the path element crosshair is created to have a size of 18)\n            const half = baseSize / 2;\n            const x = point.x - half;\n            const y = point.y - half;\n            const targetSize = factor !== 0 ? 2 / factor : 2;\n\n            //create the target from a path\n            const target = paper\n                .path(gstyle.target.path)\n                .transform('t' + x + ',' + y + 's' + targetSize)\n                .attr(gstyle.target)\n                .attr('title', _('Click again to remove'));\n\n            //generate an id if not set in options\n            if (options.id) {\n                target.id = options.id;\n            } else {\n                let count = 0;\n                paper.forEach(function (element) {\n                    if (element.data('target')) {\n                        count++;\n                    }\n                });\n                target.id = 'target-' + count;\n            }\n\n            const tBBox = target.getBBox();\n\n            //create an invisible rect over the target to ensure path selection\n            const layer = paper\n                .rect(tBBox.x, tBBox.y, tBBox.width, tBBox.height)\n                .attr(gstyle.layer)\n                .click(function () {\n                    const id = target.id;\n                    const p = this.data('point');\n\n                    if (_.isFunction(options.select)) {\n                        options.select(target, p, this);\n                    }\n\n                    if (_.isFunction(options.remove)) {\n                        this.remove();\n                        target.remove();\n                        options.remove(id, p);\n                    }\n                });\n\n            if (hover) {\n                layer.hover(\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-hover');\n                        }\n                    },\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-success');\n                        }\n                    }\n                );\n            }\n\n            layer.id = 'layer-' + target.id;\n            layer.data('point', point);\n            target.data('target', point);\n\n            if (_.isFunction(options.create)) {\n                options.create(target);\n            }\n\n            return target;\n        },\n\n        /**\n         * Get the Raphael coordinate from QTI coordinate\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @returns {Array} the arguments array of coordinate to give to the approriate raphael shapre creator\n         */\n        raphaelCoords: function raphaelCoords(paper, type, coords) {\n            let shapeCoords;\n\n            if (_.isString(coords)) {\n                coords = _.map(coords.split(','), function (coord) {\n                    return parseInt(coord, 10);\n                });\n            }\n\n            if (!_.isArray(coords) || coords.length < coordsValidator[type]) {\n                throw new Error('Invalid coords ' + JSON.stringify(coords) + '  for type ' + type);\n            }\n\n            switch (type) {\n                case 'rect':\n                    shapeCoords = qti2raphCoordsMapper.rect(coords);\n                    break;\n                case 'default':\n                    shapeCoords = qti2raphCoordsMapper['default'].call(null, paper);\n                    break;\n                case 'poly':\n                    shapeCoords = qti2raphCoordsMapper.poly(coords);\n                    break;\n                default:\n                    shapeCoords = coords;\n                    break;\n            }\n\n            return shapeCoords;\n        },\n\n        /**\n         * Get the QTI coordinates from a Raphael Element\n         * @param {Raphael.Element} element - the shape to get the coords from\n         * @param {Raphael.Element} paper - the interaction paper\n         * @param {number} width - width of background image\n         * @returns {String} the QTI coords\n         */\n        qtiCoords: function qtiCoords(element, paper, width) {\n            const mapper = raph2qtiCoordsMapper[element.type];\n            let result = '';\n            const factor = paper && width ? width / paper.w : 1;\n\n            if (_.isFunction(mapper)) {\n                result = _.map(mapper.call(raph2qtiCoordsMapper, element.attr()), function (coord) {\n                    return Math.round(coord * factor);\n                }).join(',');\n            }\n\n            return result;\n        },\n\n        /**\n         * Create a circle that animate and disapear from a shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} element - used to get the bbox from\n         */\n        createTouchCircle: function (paper, bbox) {\n            const radius = bbox.width > bbox.height ? bbox.width : bbox.height;\n            const tCircle = paper.circle(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2, radius);\n\n            tCircle.attr(gstyle['touch-circle']);\n\n            _.defer(function () {\n                tCircle.animate({ r: radius + 5, opacity: 0.7 }, 300, function () {\n                    tCircle.remove();\n                });\n            });\n        },\n\n        /**\n         * Create a text, that scales.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - the text options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {String} [options.disableEvents] - ignore events for the node\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @returns {Raphael.Element} the created text\n         */\n        createText: function (paper, options) {\n            const top = options.top || 0;\n            const left = options.left || 0;\n            const content = options.content || '';\n            const style = options.style || 'small-text';\n            const title = options.title || '';\n            const disableEvents = options.disableEvents || false;\n            let factor = 1;\n\n            if (paper.width && paper.w) {\n                factor = paper.width / paper.w;\n            }\n\n            const text = paper.text(left, top, content).toFront();\n            if (options.id) {\n                text.id = options.id;\n            }\n\n            if (options.hide) {\n                text.hide();\n            }\n\n            text.attr(gstyle[style]);\n\n            if (disableEvents) {\n                text.node.setAttribute('pointer-events', 'none');\n            }\n\n            if (typeof factor !== 'undefined' && factor !== 1) {\n                const fontSize = parseInt(text.attr('font-size'), 10);\n                const scaledFontSize = Math.floor(fontSize / factor) + 1;\n\n                text.attr('font-size', scaledFontSize);\n            }\n\n            if (title) {\n                this.updateTitle(text, title);\n            }\n\n            return text;\n        },\n\n        /**\n         * Create a text in the middle of the related shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} shape - the shape to add the text to\n         * @param {Object} options - the text options\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @param {Boolean} [options.shapeClick = false] - clicking the text delegates to the shape\n         * @returns {Raphael.Element} the created text\n         */\n        createShapeText: function (paper, shape, options) {\n            const bbox = shape.getBBox();\n\n            const text = this.createText(\n                paper,\n                _.merge(\n                    {\n                        left: bbox.x + bbox.width / 2,\n                        top: bbox.y + bbox.height / 2\n                    },\n                    options\n                )\n            );\n\n            if (options.shapeClick) {\n                text.click(() => {\n                    this.trigger(shape, 'click');\n                });\n            }\n\n            return text;\n        },\n\n        /**\n         * Create an image with a padding and a border, using a set.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - image options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {Number} options.width - image width\n         * @param {Number} options.height - image height\n         * @param {Number} options.url - image ulr\n         * @param {Number} [options.padding = 6] - a multiple of 2 is welcomed\n         * @param {Boolean} [options.border = false] - add a border around the image\n         * @param {Boolean} [options.shadow = false] - add a shadow back the image\n         * @returns {Raphael.Element} the created set, augmented of a move(x,y) method\n         */\n        createBorderedImage: function (paper, options) {\n            const padding = options.padding >= 0 ? options.padding : 6;\n            const halfPad = padding / 2;\n\n            const rx = options.left,\n                ry = options.top,\n                rw = options.width + padding,\n                rh = options.height + padding;\n\n            const ix = options.left + halfPad,\n                iy = options.top + halfPad,\n                iw = options.width,\n                ih = options.height;\n\n            const set = paper.set();\n\n            //create a rectangle with a padding and a border.\n            const rect = paper\n                .rect(rx, ry, rw, rh)\n                .attr(options.border ? gstyle['imageset-rect-stroke'] : gstyle['imageset-rect-no-stroke']);\n\n            //and an image centered into the rectangle.\n            const image = paper.image(options.url, ix, iy, iw, ih).attr(gstyle['imageset-img']);\n\n            if (options.shadow) {\n                set.push(\n                    rect.glow({\n                        width: 2,\n                        offsetx: 1,\n                        offsety: 1\n                    })\n                );\n            }\n\n            set.push(rect, image);\n\n            /**\n             * Add a move method to set that keep the given coords during an animation\n             * @private\n             * @param {Number} x - destination\n             * @param {Number} y - destination\n             * @param {Number} [duration = 400] - the animation duration\n             * @returns {Raphael.Element} the set for chaining\n             */\n            set.move = function move(x, y, duration) {\n                const animation = raphael.animation({ x: x, y: y }, duration || 400);\n                const elt = rect.animate(animation);\n                image.animateWith(elt, animation, { x: x + halfPad, y: y + halfPad }, duration || 400);\n                return set;\n            };\n\n            return set;\n        },\n\n        /**\n         * Update the visual state of an Element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         * @param {String} [title] - a title linked to this step\n         */\n        updateElementState: function (element, state, title) {\n            if (element && element.animate) {\n                element.animate(gstyle[state], 200, 'linear', function () {\n                    element.attr(gstyle[state]); //for attr that don't animate\n\n                    //preven issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n                });\n\n                if (title) {\n                    this.updateTitle(element, title);\n                }\n            }\n        },\n\n        /**\n         * Update the title of an element (the attr method of Raphael adds only new node instead of updating exisitings).\n         * @param {Raphael.Element} element - the element to update the title\n         * @param {String} [title] - the new title\n         */\n        updateTitle: function (element, title) {\n            if (element && element.node) {\n                //removes all remaining titles nodes\n                _.forEach(element.node.children, function (child) {\n                    if (child.nodeName.toLowerCase() === 'title') {\n                        element.node.removeChild(child);\n                    }\n                });\n\n                //then set the new title\n                element.attr('title', title);\n            }\n        },\n\n        /**\n         * Highlight an element with the error style\n         * @param {Raphael.Element} element - the element to hightlight\n         * @param {String} [restorState = 'basic'] - the state to restore the elt into after flash\n         */\n        highlightError: function (element, restoredState) {\n            if (element) {\n                element.flashing = true;\n                this.updateElementState(element, 'error');\n                _.delay(() => {\n                    this.updateElementState(element, restoredState || 'basic');\n                    element.flashing = false;\n                }, 800);\n            }\n        },\n\n        /**\n         * Trigger an event already bound to a raphael element\n         * @param {Raphael.Element} element\n         * @param {String} event - the event name\n         *\n         */\n        trigger: function (element, event) {\n            const evt = element.events.filter(el => el.name === event);\n            if (evt.length && evt[0] && typeof evt[0].f === 'function') {\n                evt[0].f.apply(element, Array.prototype.slice.call(arguments, 2));\n            }\n        },\n\n        /**\n         * Get an x/y point from a MouseEvent\n         * @param {MouseEvent} event - the source event\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {jQueryElement} $container - the paper container\n         * @param {Boolean} isResponsive - if the paper is scaling\n         * @returns {Object} x,y point\n         */\n        getPoint: function getPoint(event, paper, $container) {\n            const point = this.clickPoint($container, event);\n            const rect = $container.get(0).getBoundingClientRect();\n            const factor = paper.w / rect.width;\n\n            point.x = Math.round(point.x * factor);\n            point.y = Math.round(point.y * factor);\n\n            return point;\n        },\n\n        /**\n         * Get paper position relative to the container\n         * @param {jQueryElement} $container - the paper container\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @returns {Object} position with top and left\n         */\n        position: function ($container, paper) {\n            const pw = parseInt(paper.w || paper.width, 10);\n            const cw = parseInt($container.width(), 10);\n            const ph = parseInt(paper.w || paper.width, 10);\n            const ch = parseInt($container.height(), 10);\n\n            return {\n                left: (cw - pw) / 2,\n                top: (ch - ph) / 2\n            };\n        },\n\n        /**\n         * Get a point from a click event\n         * @param {jQueryElement} $container - the element that contains the paper\n         * @param {MouseEvent} event - the event triggered by the click\n         * @returns {Object} the x,y point\n         */\n        clickPoint: function ($container, event) {\n            let x, y;\n            const offset = $container.offset();\n\n            if (event.pageX || event.pageY) {\n                x = event.pageX - offset.left;\n                y = event.pageY - offset.top;\n            } else if (event.clientX || event.clientY) {\n                x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - offset.left;\n                y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop - offset.top;\n            }\n\n            return { x, y };\n        }\n    };\n\n    return GraphicHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',['lodash', 'taoQtiItem/qtiItem/helper/util', 'handlebars', 'lib/handlebars/helpers'], function (_, util, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"small feedback-info item-instruction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-info icon\\\"></span><span class=\\\"instruction-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n</div>\\n\";\n      return buffer;\n      });\n    function instructionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var _notificationLevels = ['info', 'warning', 'error', 'success'];\n\n    var Instruction = function(interaction, message, callback) {\n        this.interaction = interaction;\n        this.defaultMessage = message || '';\n        this.currentMessage = '';\n        this.level = 'info';\n        this.serial = util.buildSerial('instruction_');\n        this.callback = callback;\n        this.$dom = null;\n        this.state = false;\n    };\n\n    Instruction.isValidLevel = function(level) {\n        return _.indexOf(_notificationLevels, level) >= 0;\n    };\n\n    Instruction.prototype.setState = function(state) {\n        this.state = state;\n    };\n\n    Instruction.prototype.checkState = function(state) {\n        return this.state === state;\n    };\n\n    Instruction.prototype.getId = function() {\n        return this.serial;\n    };\n\n    Instruction.prototype.create = function($container) {\n        $container.append(\n            instructionTpl({\n                message: this.defaultMessage,\n                serial: this.serial\n            })\n        );\n\n        this.$dom = $container.find('#' + this.serial);\n    };\n\n    Instruction.prototype.update = function(options) {\n        var level = options && options.level ? options.level : '',\n            message = options && options.message ? options.message : '',\n            timeout = options && options.timeout ? options.timeout : 0,\n            start = options && typeof options.start === 'function' ? options.start : null,\n            stop = options && typeof options.stop === 'function' ? options.stop : null;\n\n        if (level && Instruction.isValidLevel(level)) {\n            this.$dom.removeClass('feedback-' + this.level).addClass('feedback-' + level);\n            this.$dom\n                .find('.icon')\n                .removeClass('icon-' + this.level)\n                .addClass('icon-' + level);\n            this.level = level;\n        }\n\n        if (message) {\n            this.$dom.find('.instruction-message').html(message);\n            this.currentMessage = message;\n        }\n\n        if (timeout) {\n            var _this = this;\n            if (start) {\n                start.call(_this);\n            }\n            _this.timer = setTimeout(function() {\n                if (stop) {\n                    stop.call(_this);\n                }\n                _this.timer = null;\n            }, timeout);\n        }\n    };\n\n    Instruction.prototype.setLevel = function(level, timeout) {\n        var options = {\n            level: level\n        };\n\n        if (timeout) {\n            options.timeout = parseInt(timeout);\n            options.stop = function() {\n                this.setLevel('info');\n            };\n        }\n\n        this.update(options);\n    };\n\n    Instruction.prototype.getLevel = function() {\n        return this.level;\n    };\n\n    Instruction.prototype.setMessage = function(message, timeout) {\n        this.update({ message: message, timeout: timeout });\n    };\n\n    Instruction.prototype.reset = function() {\n        this.update({ level: 'info', message: this.defaultMessage });\n        this.state = false;\n    };\n\n    Instruction.prototype.validate = function(data) {\n        if (typeof this.callback === 'function') {\n            this.callback.call(this, data);\n        }\n    };\n\n    return Instruction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',['lodash', 'jquery', 'i18n', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction', 'handlebars', 'lib/handlebars/helpers'], function (_, $$1, __, containerHelper, Instruction, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Instruction = Instruction && Object.prototype.hasOwnProperty.call(Instruction, 'default') ? Instruction['default'] : Instruction;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"small feedback-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" item-notification\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span><span class=\\\"feedback-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n    <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n        + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\n</div>\\n\";\n      return buffer;\n      });\n    function notifTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //stores the instructions\n    var _instructions = {};\n\n    /**\n     * The instruction manager helps you in managing instructions and\n     * constraints on a QTI Element, usually an interaction or a choice.\n     *\n     * @exports qtiCommonRenderer/helpers/Instructions/instructionManager\n     */\n    var instructionManager = {\n        /**\n         * Validate the instructions of an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {Object} [data] - any data to give to the instructions\n         */\n        validateInstructions: function (element, data) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.forEach(_instructions[serial], function (instruction) {\n                    instruction.validate(data || {});\n                });\n            }\n        },\n\n        /**\n         * Add a new instructions to an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display to the user when the instruction is validated\n         * @param {Function} validateCallback - how to validate the instruction\n         * @returns {Instruction} the created instruction\n         */\n        appendInstruction: function (element, message, validateCallback) {\n            var serial = element.getSerial(),\n                instruction = new Instruction(element, message, validateCallback);\n\n            if (!_instructions[serial]) {\n                _instructions[serial] = {};\n            }\n            _instructions[serial][instruction.getId()] = instruction;\n\n            instruction.create($$1('.instruction-container', containerHelper.get(element)));\n\n            return instruction;\n        },\n\n        /**\n         * Remove instructions from an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         */\n        removeInstructions: function (element) {\n            _instructions[element.getSerial()] = {};\n            containerHelper.get(element).find('.instruction-container').empty();\n        },\n\n        /**\n         * Reset the instructions states for an element (but keeps configuration)\n         * @param {Object} element - the qti object, ie. interaction, choice, etc.\n         */\n        resetInstructions: function (element) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.forEach(_instructions[serial], function (instruction) {\n                    instruction.reset();\n                });\n            }\n        },\n\n        /**\n         * Default instuction set with a min/max constraints.\n         * @param {Object} interaction\n         * @param {jQueryElement} $container\n         * @param {Object} options\n         * @param {Number} [options.min = 0] -\n         * @param {Number} [options.max = 0] -\n         * @param {Function} options.getResponse - a ref to a function that get the raw response (array) from the interaction in parameter\n         * @param {Function} [options.onError] - called by once an error occurs with validateInstruction data in parameters\n         */\n        minMaxChoiceInstructions: function (interaction, options) {\n            var self = this,\n                min = options.min || 0,\n                max = options.max || 0,\n                getResponse = options.getResponse,\n                onError = options.onError || _.noop(),\n                choiceCount = options.choiceCount === false ? false : _.size(interaction.getChoices()),\n                minInstructionSet = false,\n                msg;\n\n            if (!_.isFunction(getResponse)) {\n                throw 'invalid parameter getResponse';\n            }\n\n            //if maxChoice = 0, inifinite choice possible\n            if (max > 0 && (choiceCount === false || max < choiceCount)) {\n                if (max === min) {\n                    minInstructionSet = true;\n                    msg =\n                        max <= 1\n                            ? __('You must select exactly %d choice', max)\n                            : __('You must select exactly %d choices', max);\n\n                    self.appendInstruction(interaction, msg, function (data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    message: __('Maximum choices reached'),\n                                    timeout: 2000,\n                                    start: function () {\n                                        onError(data);\n                                    },\n                                    stop: function () {\n                                        this.update({ level: 'success', message: msg });\n                                    }\n                                });\n                            }\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                } else if (max > min) {\n                    msg =\n                        max <= 1\n                            ? __('You can select maximum %d choice', max)\n                            : __('You can select maximum %d choices', max);\n                    self.appendInstruction(interaction, msg, function (data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            this.setMessage(__('Maximum choices reached'));\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    timeout: 2000,\n                                    start: function () {\n                                        onError(data);\n                                    },\n                                    stop: function () {\n                                        this.setLevel('info');\n                                    }\n                                });\n                            }\n\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                }\n            }\n\n            if (!minInstructionSet && min > 0 && (choiceCount === false || min < choiceCount)) {\n                msg =\n                    min <= 1\n                        ? __('You must select at least %d choice', min)\n                        : __('You must select at least %d choices', min);\n                self.appendInstruction(interaction, msg, function () {\n                    if (getResponse(interaction).length >= min) {\n                        this.setLevel('success');\n                    } else {\n                        this.reset();\n                    }\n                });\n            }\n        },\n\n        /**\n         * Appends a instruction  notification message\n         * @deprecated in favor of instructions\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display\n         * @param {String} [level = 'info'] - the notification level in info, success, error or warning\n         */\n        appendNotification: function (element, message, level) {\n            level = level || 'info';\n\n            if (Instruction.isValidLevel(level)) {\n                var $container = containerHelper.get(element);\n\n                $container.find('.notification-container').prepend(\n                    notifTpl({\n                        level: level,\n                        message: message\n                    })\n                );\n\n                var $notif = $container.find('.item-notification:first');\n                var _remove = function () {\n                    $notif.fadeOut();\n                };\n\n                $notif.find('.close-trigger').on('click', _remove);\n                setTimeout(_remove, 2000);\n\n                return $notif;\n            }\n        },\n\n        /**\n         * Removes all the displayed notifications\n         * @deprecated in favor of instructions\n         */\n        removeNotifications: function (element) {\n            containerHelper.get(element).find('.item-notification').remove();\n        }\n    };\n\n    return instructionManager;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    //throttle events because of the loop\n    var informLoaded = _.throttle(\n        function() {\n            $(document).trigger('customcssloaded.styleeditor',[{}]);\n        },\n        10,\n        { leading: false }\n    );\n\n    /**\n     * Attach QTI Stylesheets to the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     * @fires customcssloaded.styleeditor on document 10ms after stylesheets are loaded\n     */\n    var attach = function attach(stylesheets) {\n        var $head = $('head');\n\n        //fallback\n        if (!$head.length) {\n            $head = $('body');\n        }\n\n        // relative links with cache buster\n        _(stylesheets).forEach(function(stylesheet) {\n            var $link, href;\n\n            //if the href is something\n            if (stylesheet.attr('href')) {\n                $link = $(stylesheet.render());\n\n                //get the resolved href once rendererd\n                href = $link.attr('href');\n\n                //we need to set the href after the link is appended to the head (for our dear IE)\n                $link.removeAttr('href').attr('href', href);\n\n                if (stylesheet.attr('onload')) {\n                    $link[0].onload = stylesheet.attr('onload');\n                }\n\n                if (stylesheet.attr('onerror')) {\n                    $link[0].onerror = stylesheet.attr('onerror');\n                }\n\n                $link.one('load', informLoaded).appendTo($head);\n            }\n        });\n    };\n\n    /**\n     * Remove QTI Stylesheets from the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     */\n    var detach = function detach(stylesheets) {\n        _(stylesheets).forEach(function(stylesheet) {\n            if (stylesheet.serial) {\n                $('link[data-serial=\"' + stylesheet.serial + '\"]').remove();\n            }\n        });\n    };\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler\n     */\n    var itemStylesheetHandler = {\n        attach: attach,\n        detach: detach\n    };\n\n    return itemStylesheetHandler;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/patternMask',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var regexChar = /\\^\\[\\\\s\\\\S\\]\\{\\d+\\,(\\d+)\\}\\$/,\n        regexWords = /\\^\\(\\?\\:\\(\\?\\:\\[\\^\\\\s\\\\:\\\\!\\\\\\?\\\\\\;\\\\\\…\\\\\\€\\]\\+\\)\\[\\\\s\\\\:\\\\!\\\\\\?\\\\;\\\\\\…\\\\\\€\\]\\*\\)\\{\\d+\\,(\\d+)\\}\\$/;\n\n    var patternMaskHelper = {\n        /**\n         * Parse the pattern string and according to the given type, try to extract the associate number\n         *\n         * @param {String} pattern - the pattern string to be parsed\n         * @param {String} type - words or chars\n         * @returns {*}\n         */\n        parsePattern: function parsePattern(pattern, type) {\n            if (pattern === undefined || pattern === null) {\n                return null;\n            }\n            if (type === 'words') {\n                //expre = /^(?:(?:[^\\s\\:\\!\\?\\;\\…\\€]+)[\\s\\:\\!\\?\\;\\…\\€]*){0,3}$/;\n                var result = pattern.match(regexWords);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else if (type === 'chars') {\n                // This is the original regExp generated by our code\n                // expre = /^[\\s\\S]{0,10}$/;\n                // and we will try to extract the top limit from it with this regexp\n                // which is mostly just escaped version of the first one.\n                var result = pattern.match(regexChar);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        },\n        /**\n         * Reverse function of parsePattern for word type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxWordPattern: function createMaxWordPattern(max) {\n            return '^(?:(?:[^\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]+)[\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]*){0,' + max.toString() + '}$';\n        },\n        /**\n         * Reverse function of parsePattern for char type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxCharPattern: function createMaxCharPattern(max) {\n            return '^[\\\\s\\\\S]{0,' + max.toString() + '}$';\n        }\n    };\n\n    return patternMaskHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _formatters = {\n        boolean: function (value) {\n            return value ? 'true' : 'false';\n        },\n        integer: function (value) {\n            return value;\n        },\n        float: function (value) {\n            return value;\n        },\n        string: function (value) {\n            return value === '' ? 'NULL' : '\"' + value + '\"';\n        },\n        point: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        pair: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        directedPair: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        duration: function (value) {\n            return value;\n        },\n        file: function (value) {\n            return 'binary data';\n        },\n        uri: function (value) {\n            return value;\n        },\n        intOrIdentifier: function (value) {\n            return value;\n        },\n        identifier: function (value) {\n            return value;\n        }\n    };\n\n    /**\n     * Return the pretty print string for a qti base variable\n     *\n     * @param {type} value\n     * @param {type} withType - the qti baseType\n     * @returns {String}\n     */\n    function printBase(value, withType) {\n        var print = '',\n            base = value.base;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (base) {\n            _.forIn(_formatters, function (formatter, baseType) {\n                if (base[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n                    print += formatter(base[baseType]);\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti list variable\n     *\n     * @param {object} value\n     * @param {string} withType - the qti basetype of the list\n     * @returns {string}\n     */\n    function printList(value, withType) {\n        var print = '',\n            list = value.list;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (list) {\n            _.forIn(_formatters, function (formatter, baseType) {\n                if (list[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n\n                    print += '[';\n\n                    _.forEach(list[baseType], function (value) {\n                        print += formatter(value) + ', ';\n                    });\n\n                    if (_.size(list[baseType])) {\n                        print = print.substring(0, print.length - 2);\n                    }\n\n                    print += ']';\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti record variable\n     *\n     * @param {object} value\n     * @returns {String}\n     */\n    function printRecord(value) {\n        if (value && value.record) {\n            return '(record) ' + JSON.stringify(value.record);\n        }\n        return '';\n    }\n\n    var PciPrettyPrint = {\n        printBase: printBase,\n        printList: printList,\n        printRecord: printRecord\n    };\n\n    return PciPrettyPrint;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciResponse',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint'], function (_, pciPrettyPrint) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pciPrettyPrint = pciPrettyPrint && Object.prototype.hasOwnProperty.call(pciPrettyPrint, 'default') ? pciPrettyPrint['default'] : pciPrettyPrint;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _qtiModelPciResponseCardinalities = {\n        single: 'base',\n        multiple: 'list',\n        ordered: 'list',\n        record: 'record'\n    };\n\n    var PciResponse = {\n        /**\n         * Parse a response variable formatted according to IMS PCI: http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * @see serialize\n         * @param {Object} response\n         * @param {Object} interaction\n         * @returns {Array}\n         */\n        unserialize: function(response, interaction) {\n            var ret = [],\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                var responseValues = response[mappedCardinality];\n\n                if (responseValues === null) {\n                    ret = [];\n                } else if (_.isObject(responseValues)) {\n                    if (responseValues[baseType] !== undefined) {\n                        ret = responseValues[baseType];\n                        ret = _.isArray(ret) ? ret : [ret];\n                    } else {\n                        throw 'invalid response baseType';\n                    }\n                } else {\n                    throw 'invalid response cardinality, expected ' + cardinality + ' (' + mappedCardinality + ')';\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return ret;\n        },\n        /**\n         * Serialize the input response array into the format to be send to result server according to IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * With the only exception for empty response, which is represented by a javascript \"null\" value\n         *\n         * @see http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * @param {Array} responseValues\n         * @param {Object} interaction\n         * @returns {Object|null}\n         */\n        serialize: function(responseValues, interaction) {\n            if (!_.isArray(responseValues)) {\n                throw 'invalid argument : responseValues must be an Array';\n            }\n\n            var response = {},\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            responseValues = _.map(responseValues || [], function(v) {\n                return baseType === 'boolean' ? v === true || v === 'true' : v;\n            });\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                if (mappedCardinality === 'base') {\n                    if (responseValues.length === 0) {\n                        //return empty response:\n                        response.base = null;\n                    } else {\n                        response.base = {};\n                        response.base[baseType] = responseValues[0];\n                    }\n                } else {\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = responseValues;\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return response;\n        },\n        isEmpty: function(response) {\n            return (\n                response === null ||\n                _.isEmpty(response) ||\n                response.base === null ||\n                (_.isArray(response.list) && _.isEmpty(response.list)) ||\n                (_.isArray(response.record) && _.isEmpty(response.record))\n            );\n        },\n\n        /**\n         * Print a PCI JSON response into a human-readable string.\n         *\n         * @param {Object} response A response in PCI JSON representation.\n         * @returns {String} A human-readable version of the PCI JSON representation.\n         */\n        prettyPrint: function(response) {\n            var print = '';\n\n            if (typeof response.base !== 'undefined') {\n                // -- BaseType.\n                print += pciPrettyPrint.printBase(response, true);\n            } else if (typeof response.list !== 'undefined') {\n                // -- ListType\n                print += pciPrettyPrint.printList(response, true);\n            } else if (typeof response.record !== 'undefined') {\n                // -- RecordType\n                print += pciPrettyPrint.printRecord(response, true);\n            } else {\n                throw 'Not a valid PCI JSON Response';\n            }\n\n            return print;\n        }\n    };\n\n    return PciResponse;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PortableElement',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Portable element helper\n     */\n\n    var imgSrcPattern = /(<img[^>]*\\ssrc=[\"'])([^\"']+)([\"'])/gi;\n\n    /**\n     * Replace all identified relative media urls by the absolute one.\n     * For now only images are supported.\n     *\n     * @param {String} html - the html to parse\n     * @param {Object} the renderer\n     * @returns {String} the html without updated URLs\n     */\n    function fixMarkupMediaSources(html, renderer) {\n        html = html || '';\n\n        return html.replace(imgSrcPattern, function(substr, $1, $2, $3) {\n            var resolved = renderer.resolveUrl($2) || $2;\n            return $1 + resolved + $3;\n        });\n    }\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/PortableElement\n     */\n    var PortableElement = {\n        fixMarkupMediaSources: fixMarkupMediaSources\n    };\n\n    return PortableElement;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',['jquery', 'util/adaptSize', 'ui/waitForMedia'], function ($, adaptSize, waitForMedia) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    const itemSelector = '.add-option, .result-area .target, .choice-area .qti-choice';\n\n    var sizeAdapter = {\n        /**\n         * Resize jQueryElement that have changed their dimensions due to a change of the content\n         *\n         * @param {jQueryElement|widget} target\n         */\n        adaptSize(target) {\n            let $elements;\n            let $container;\n\n            switch (true) {\n                // widget\n                case typeof target.$container !== 'undefined':\n                    $elements = target.$container.find(itemSelector);\n                    $container = target.$container;\n                    break;\n\n                // jquery elements\n                default:\n                    $elements = target;\n                    $container = $($elements).first().parent();\n            }\n\n            $container.waitForMedia(function () {\n                // Occasionally in caching scenarios, after waitForMedia(), image.height is reporting its naturalHeight instead of its CSS height\n                // The timeout allows adaptSize.height() to work with the true rendered heights of elements, instead of naturalHeights\n                setTimeout(() => {\n                    adaptSize.height($elements);\n\n                    // detect any CSS load, and adapt heights again after\n                    document.addEventListener(\n                        'load',\n                        e => {\n                            if (e.target && e.target.rel === 'stylesheet') {\n                                adaptSize.height($elements);\n                            }\n                        },\n                        true\n                    );\n                }, 1);\n            });\n        },\n\n        /**\n         * Reset height to jQueryElement(s) to auto\n         *\n         * @param {jQueryElement|widget} target\n         */\n        resetSize(target) {\n            adaptSize.resetHeight(target.$container.find(itemSelector));\n        }\n    };\n\n    return sizeAdapter;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/uploadMime',['lodash', 'i18n', 'core/mimetype/definitions'], function (_, __, mimeTypes) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimeTypes = mimeTypes && Object.prototype.hasOwnProperty.call(mimeTypes, 'default') ? mimeTypes['default'] : mimeTypes;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-21 (original work) Open Assessment Technologies SA ;\n     */\n\n    const delimetr = ' ';\n\n    const uploadMime = {\n        /**\n         * Fetch mime type definitions\n         * (translation function for labels must be injected from here)\n         * @returns {Array}\n         */\n        getMimeTypes: function getMimeTypes() {\n            return mimeTypes.getList(__);\n        },\n\n        /**\n         * Set the expected types in the format according to the number of types\n         *\n         * @param {Object} interaction\n         * @param {Array} types\n         */\n        setExpectedTypes: function setExpectedTypes(interaction, types) {\n            let classes = interaction.attr('class') || '';\n            classes = classes.replace(/x-tao-upload-type-[-_a-zA-Z+.0-9]*/g, '').trim();\n            interaction.attr('class', classes);\n            interaction.removeAttr('type');\n\n            if (!types) {\n                return;\n            }\n\n            if (types.length === 1) {\n                //if there is only one value set into the qti standard type attribute\n                if (types[0] !== 'any/kind') {\n                    interaction.attr('type', types[0]);\n                }\n            } else {\n                //For backward compatibility:\n                //if there is more than one value, set into into TAO specific css classes\n                interaction.attr(\n                    'class',\n                    _.reduce(\n                        types,\n                        function (acc, selectedType) {\n                            return acc + ' x-tao-upload-type-' + selectedType.replace('/', '_');\n                        },\n                        classes\n                    ).trim()\n                );\n\n                interaction.attr('type', types.join(delimetr));\n            }\n        },\n\n        /**\n         * Return the array of authorized mime types\n         * Get the standard \"type\" attribute value with mime types separated by space.\n         * @param {Object} interaction - standard QTI interaction model object\n         * @param {Boolean} [includeEquivalents] - enable including all recognized as equivalent types\n         * @returns {Array}\n         */\n        getExpectedTypes: function getExpectedTypes(interaction, includeEquivalents) {\n            let equivalents = [];\n            let types = [];\n            let mimes;\n\n            if (interaction.attr('type')) {\n                types = interaction.attr('type').split(delimetr);\n            }\n\n            // add in equivalent mimetypes to the list of expected types\n            if (includeEquivalents === true) {\n                mimes = uploadMime.getMimeTypes();\n                _.forEach(types, function (mime) {\n                    const mimeData = _.find(mimes, { mime: mime });\n                    if (mimeData && _.isArray(mimeData.equivalent)) {\n                        equivalents = _.union(equivalents, mimeData.equivalent);\n                    }\n                });\n            }\n\n            return _.union(types, equivalents);\n        }\n    };\n\n    return uploadMime;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/userAgent',['exports'], function (exports) { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2025 (original work) Open Assessment Technologies SA ;\n     */\n\n    const isSafari = () => {\n        const ua = navigator.userAgent.toLowerCase();\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0;\n    };\n\n    exports.isSafari = isSafari;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/verticalWriting',['exports', 'jquery'], function (exports, $) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2025 (original work) Open Assessment Technologies SA ;\n     */\n\n    let isVerticalFormElementSupported = null;\n\n    /**\n     * If item has 'vertical-rl' writing mode\n     * @returns {Boolean}\n     */\n    const getIsItemWritingModeVerticalRl = () => {\n        const itemBody = $('.qti-itemBody');\n        return itemBody.hasClass('writing-mode-vertical-rl');\n    };\n\n    /**\n     * In vertical-writing, it's preferred to show numbers with `text-combine-upright: all` style.\n     * So find numbers in a string, and wrap them in a span with a special class.\n     * For single digits, they can be replaced with \"fullwidth digit\" unicode symbol.\n     * @param {String|Number} message\n     * @param {Boolean} isWritingModeVerticalRl - if `false`, won't transform `message`\n     * @returns {String} html\n     */\n    const wrapDigitsInCombineUpright = (message, isWritingModeVerticalRl) => {\n        if (!isWritingModeVerticalRl) {\n            return message;\n        }\n        if (typeof message === 'number') {\n            message = message.toString();\n        } else if (typeof message !== 'string') {\n            return message;\n        }\n        const withDigitsWrapped = message.replaceAll(\n            /[0-9]+/g,\n            digits => `<span class=\"txt-combine-upright-all\">${digits}</span>`\n        );\n        return withDigitsWrapped;\n    };\n\n    /**\n     * Does browser support vertical orientation for form elements:\n     * input, textarea\n     *\n     * NB! Supported everywhere except Safari < 17.4.\n     * Remove this once no longer need old Safari.\n     * @returns {Boolean}\n     */\n    function supportsVerticalFormElement() {\n        if (isVerticalFormElementSupported === null) {\n            const div = document.createElement('div');\n            div.innerHTML =\n                '<div style=\"writing-mode:vertical-rl;position:absolute;top:0;left:0;opacity:0\"><input type=\"text\"></div>';\n            document.body.append(div);\n            const rect = div.querySelector('input').getBoundingClientRect();\n            isVerticalFormElementSupported = rect.width < rect.height;\n            div.remove();\n        }\n        return isVerticalFormElementSupported;\n    }\n\n    exports.getIsItemWritingModeVerticalRl = getIsItemWritingModeVerticalRl;\n    exports.supportsVerticalFormElement = supportsVerticalFormElement;\n    exports.wrapDigitsInCombineUpright = wrapDigitsInCombineUpright;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-gap\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"gapmatch-content\\\">&nbsp;</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Gap = {\n        qtiClass: 'gap',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Gap;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objetLabel)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-gapImg selectable\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <img src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.data)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n         width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objectLabel), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapImg = {\n        qtiClass: 'gapImg',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapImg;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapText = {\n        qtiClass: 'gapText',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapText;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-hottext hottext\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <label class=\\\"hottext-checkmark\\\">\\r\\n        <input type=\\\"checkbox\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n        <span class=\\\"icon-checkbox small\\\"></span>\\r\\n    </label>\\r\\n    <span class=\\\"hottext-content\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Hottext = {\n        qtiClass: 'hottext',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span role=\\\"option\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoice = {\n        qtiClass: 'inlineChoice',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return InlineChoice;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_AssociateInteraction = {\n        qtiClass: 'simpleAssociableChoice.associateInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<th class=\\\"qti-choice qti-associableChoice qti-simpleAssociableChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</th>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_MatchInteraction = {\n        qtiClass: 'simpleAssociableChoice.matchInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'services/features'], function (Handlebars, Helpers0, containerHelper, features) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"radio\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-radio\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-checkbox\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <label data-eliminable=\\\"container\\\" data-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Eliminate\", options) : helperMissing.call(depth0, \"__\", \"Eliminate\", options)))\n        + \"\\\">\\n        <span data-eliminable=\\\"trigger\\\" class=\\\"icon-checkbox\\\"></span>\\n    </label>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-simpleChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"pseudo-label-box\\\">\\n        <label class=\\\"real-label\\\">\\n            \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.unique), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </label>\\n        <div class=\\\"label-box\\\">\\n            <div class=\\\"label-content clear\\\" contenteditable=\\\"false\\\" id=\\\"choice-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n                \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                <svg class=\\\"overlay-answer-eliminator\\\">\\n                    <line x1=\\\"0\\\" y1=\\\"100%\\\" x2=\\\"100%\\\" y2=\\\"0\\\"/>\\n                    <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"/>\\n                </svg>\\n            </div>\\n        </div>\\n    </div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowElimination), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_ChoiceInteraction = {\n        qtiClass: 'simpleChoice.choiceInteraction',\n        getContainer: containerHelper.get,\n        getData: function(choice, data) {\n            data.unique = parseInt(data.interaction.attributes.maxChoices) === 1;\n            data.allowElimination = features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination');\n            return data;\n        },\n        template: tpl\n    };\n\n    return SimpleChoice_ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_OrderInteraction = {\n        qtiClass: 'simpleChoice.orderInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleChoice_OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    /**\n     * Evaluate if the given object is a proper portable element provider\n     * @param {Object} provider\n     * @returns {Boolean}\n     */\n    var isPortableElementProvider = function isPortableElementProvider(provider){\n        return (provider && _.isFunction(provider.load));\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        /**\n         * The portable element registry instance\n         * @typedef {portableElementRegistry}\n         */\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n\n            /**\n             * Get a register portable element\n             * @param {String} typeIdentifier\n             * @param {String} version\n             * @returns {Object}\n             */\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], {version : version});\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n\n            /**\n             * Register a portable element provider\n             * @param moduleName\n             * @param {String|Object }provider - the portable provider object or module name\n             * @returns {portableElementRegistry}\n             */\n            registerProvider : function registerProvider(moduleName, provider){\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Clear all previously registered providers\n             * @returns {portableElementRegistry}\n             */\n            resetProviders : function resetProviders(){\n                __providers = {};\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Load the providers\n             * @param {Object} [options]\n             * @param {Boolean} [options.reload] - force to reload the registered providers\n             * @returns {Promise}\n             */\n            loadProviders : function loadProviders(options){\n                var self = this;\n                var loadPromise;\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve([]);\n                } else {\n                    loadPromise = new Promise(function(resolve, reject) {\n                        var providerLoadingStack = [];\n                        _.forIn(__providers, function(provider, id){\n                            if(provider === null){\n                                providerLoadingStack.push(id);\n                            }\n                        });\n                        _requirejs(providerLoadingStack, function(){\n                            _.forEach([].slice.call(arguments), function(provider){\n                                if(isPortableElementProvider(provider)){\n                                    __providers[providerLoadingStack.shift()] = provider;\n                                }\n                            });\n                            resolve(__providers);\n                            _loaded = true;\n                            self.trigger('providersloaded', __providers);\n                        }, reject);\n                    });\n                }\n\n                return loadPromise;\n            },\n\n            /**\n             * Get all versions of all portable elements registered\n             * @returns {Object} - all portable elements and their versions\n             */\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n\n            /**\n             * Get the runtime for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the runtime model\n             */\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    return _.assign(portableElement.runtime, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        model : portableElement.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Get the creator model for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the creator model\n             */\n            getCreator : function getCreator(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement && portableElement.creator){\n                    return _.assign(portableElement.creator, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        response : portableElement.response,\n                        model : portableElement.model,\n                        xmlns : portableElement.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Returned all enabled created from the registry\n             * @returns {Object} the collection of creators\n             */\n            getLatestCreators : function getLatestCreators(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    var lastVersion = _.last(versions);\n\n                    //check if the portable element is creatable:\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\n                        all[id] = lastVersion;\n                    }\n                });\n                return all;\n            },\n\n            /**\n             * Get the baseUrl for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {String} the base url\n             */\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n\n            /**\n             * Load the runtimes from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                    loadPromise = self.loadProviders(options).then(function(providers){\n\n                        var loadStack = [];\n\n                        _.forEach(providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, self._registry || {});//incremental loading\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                        return true;\n                                    }\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n                                });\n                            });\n\n                    });\n\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * Load the creators from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\n                            if(portableElementModel.enabled){\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }else{\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.forEach(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var portableElementModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * enable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            enable: function enable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = true;\n                }\n                return this;\n            },\n\n            /**\n             * disable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            disable: function disable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = false;\n                }\n                return this;\n            },\n\n            /**\n             * check is a portable element is enabled\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                return (portableElement && portableElement.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Utility to retrieve and manipualte QTI Elements\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\n    'use strict';\n\n    const QtiElements = {\n        classes: {\n            //abstract classes:\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\n            atomicBlock: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            atomicInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\n            simpleInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            flowStatic: { parents: ['flow'], abstract: true },\n            blockStatic: { parents: ['block'], abstract: true },\n            inlineStatic: { parents: ['inline'], abstract: true },\n            flow: { parents: ['objectFlow'], abstract: true },\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\n            //html-derived qti elements:\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\n            col: { parents: ['bodyElement'], xhtml: true },\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\n            param: { parents: ['objectFlow'], xhtml: true },\n            table: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\n                xhtml: true\n            },\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            td: { parents: ['tableCell'], xhtml: true },\n            th: { parents: ['tableCell'], xhtml: true },\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\n            a: { parents: ['simpleInline'], xhtml: true },\n            abbr: { parents: ['simpleInline'], xhtml: true },\n            acronym: { parents: ['simpleInline'], xhtml: true },\n            b: { parents: ['simpleInline'], xhtml: true },\n            big: { parents: ['simpleInline'], xhtml: true },\n            cite: { parents: ['simpleInline'], xhtml: true },\n            code: { parents: ['simpleInline'], xhtml: true },\n            dfn: { parents: ['simpleInline'], xhtml: true },\n            em: { parents: ['simpleInline'], xhtml: true },\n            i: { parents: ['simpleInline'], xhtml: true },\n            kbd: { parents: ['simpleInline'], xhtml: true },\n            q: { parents: ['simpleInline'], xhtml: true },\n            samp: { parents: ['simpleInline'], xhtml: true },\n            small: { parents: ['simpleInline'], xhtml: true },\n            span: { parents: ['simpleInline'], xhtml: true },\n            strong: { parents: ['simpleInline'], xhtml: true },\n            sub: { parents: ['simpleInline'], xhtml: true },\n            sup: { parents: ['simpleInline'], xhtml: true },\n            tt: { parents: ['simpleInline'], xhtml: true },\n            var: { parents: ['simpleInline'], xhtml: true },\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\n            address: { parents: ['atomicBlock'], xhtml: true },\n            h1: { parents: ['atomicBlock'], xhtml: true },\n            h2: { parents: ['atomicBlock'], xhtml: true },\n            h3: { parents: ['atomicBlock'], xhtml: true },\n            h4: { parents: ['atomicBlock'], xhtml: true },\n            h5: { parents: ['atomicBlock'], xhtml: true },\n            h6: { parents: ['atomicBlock'], xhtml: true },\n            p: { parents: ['atomicBlock'], xhtml: true },\n            pre: { parents: ['atomicBlock'], xhtml: true },\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\n            br: { parents: ['atomicInline'], xhtml: true },\n            //qti elements:\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\n            gap: { parents: ['inlineStatic'], qti: true },\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\n            templateElement: { parents: ['bodyElement'], qti: true },\n            templateBlock: {\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\n                contains: ['blockStatic'],\n                qti: true\n            },\n            templateInline: {\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\n                contains: ['inlineStatic'],\n                qti: true\n            },\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\n        },\n\n        cache: { containable: {}, children: {}, parents: {} },\n\n        getAllowedContainersElements(qtiClass, $container) {\n            const classes = QtiElements.getAllowedContainers(qtiClass);\n            let jqSelector = '';\n            for (let i in classes) {\n                if (!classes[i].qti) {\n                    //html element:\n                    jqSelector += `${classes[i]}, `;\n                }\n            }\n\n            if (jqSelector) {\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n            }\n\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n        },\n\n        getAllowedContainers(qtiClass) {\n            let ret;\n            if (QtiElements.cache.containable[qtiClass]) {\n                ret = QtiElements.cache.containable[qtiClass];\n            } else {\n                ret = [];\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (model.contains) {\n                        const intersect = _.intersection(model.contains, parents);\n                        if (intersect.length) {\n                            if (!model.abstract) {\n                                ret.push(aClass);\n                            }\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                        }\n                    }\n                }\n                QtiElements.cache.containable[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getAllowedContents(qtiClass, recursive, checked) {\n            let ret = [];\n            checked = checked || {};\n\n            const model = QtiElements.classes[qtiClass];\n            if (model && model.contains) {\n                for (let i in model.contains) {\n                    const contain = model.contains[i];\n                    if (!checked[contain]) {\n                        checked[contain] = true;\n\n                        //qtiClass can contain everything defined as its contents\n                        ret.push(contain);\n\n                        //qtiClass can also contain subclass of its contents\n                        const children = QtiElements.getChildClasses(contain, true);\n                        for (let j in children) {\n                            const child = children[j];\n                            if (!checked[child]) {\n                                checked[child] = true;\n\n                                ret.push(child);\n\n                                //adding children allowed contents depends on the option \"recursive\"\n                                if (recursive) {\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                                }\n                            }\n                        }\n\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                        }\n                    }\n                }\n            }\n\n            //qtiClass can contain all allowed contents of its parents:\n            const parents = QtiElements.getParentClasses(qtiClass, true);\n            for (let i in parents) {\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n            }\n\n            return _.uniq(ret);\n        },\n\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\n        },\n\n        getParentClasses(qtiClass, recursive) {\n            let ret;\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\n                ret = QtiElements.cache.parents[qtiClass];\n            } else {\n                ret = [];\n                if (QtiElements.classes[qtiClass]) {\n                    ret = QtiElements.classes[qtiClass].parents;\n                    if (recursive) {\n                        for (let i in ret) {\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                        }\n                        ret = _.uniq(ret);\n                    }\n                }\n                QtiElements.cache.parents[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getChildClasses(qtiClass, recursive, type) {\n            let ret;\n            const cacheType = type ? type : 'all';\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\n                ret = QtiElements.cache.children[qtiClass][cacheType];\n            } else {\n                ret = [];\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\n                        if (type) {\n                            if (model[type]) {\n                                ret.push(aClass);\n                            }\n                        } else {\n                            ret.push(aClass);\n                        }\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                        }\n                    }\n                }\n                if (!QtiElements.cache.children[qtiClass]) {\n                    QtiElements.cache.children[qtiClass] = {};\n                }\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\n            }\n\n            return ret;\n        },\n\n        isBlock(qtiClass) {\n            return QtiElements.is(qtiClass, 'block');\n        },\n\n        isInline(qtiClass) {\n            return QtiElements.is(qtiClass, 'inline');\n        },\n\n        is(qtiClass, topClass) {\n            if (qtiClass === topClass) {\n                return true;\n            } else {\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                return _.indexOf(parents, topClass) >= 0;\n            }\n        },\n\n        /**\n         * Check wether an element is visible, using the feature viibility service\n         * @param {string} qtiClass - see the list of available classes\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\n         */\n        isVisible(qtiClass) {\n            if (this.is(qtiClass, 'customInteraction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\n            }\n            if (this.is(qtiClass, 'interaction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\n            }\n            return true;\n        },\n\n        /**\n         * Get the list of available elements for the authoring side\n         * The list of those element is statically defined, but we filter out elements that should be visible\n         * @returns {Object} the available elements\n         */\n        getAvailableAuthoringElements() {\n            const tagTitles = {\n                commonInteractions: __('Common Interactions'),\n                inlineInteractions: __('Inline Interactions'),\n                graphicInteractions: __('Graphic Interactions')\n            };\n\n            const authoringElements = {\n                choiceInteraction: {\n                    label: __('Choice Interaction'),\n                    description: __(\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\n                    ),\n                    icon: 'icon-choice',\n                    short: __('Choice'),\n                    qtiClass: 'choiceInteraction',\n                    tags: [tagTitles.commonInteractions, 'mcq'],\n                    group: 'common-interactions'\n                },\n                orderInteraction: {\n                    label: __('Order Interaction'),\n                    icon: 'icon-order',\n                    description: __('Arrange a list of choices in the correct order.'),\n                    short: __('Order'),\n                    qtiClass: 'orderInteraction',\n                    tags: [tagTitles.commonInteractions, 'ordering'],\n                    group: 'common-interactions'\n                },\n                associateInteraction: {\n                    label: __('Associate Interaction'),\n                    icon: 'icon-associate',\n                    description: __('Create pair(s) from a series of choices.'),\n                    short: __('Associate'),\n                    qtiClass: 'associateInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                matchInteraction: {\n                    label: __('Match Interaction'),\n                    icon: 'icon-match',\n                    description: __(\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\n                    ),\n                    short: __('Match'),\n                    qtiClass: 'matchInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                hottextInteraction: {\n                    label: __('Hottext Interaction'),\n                    icon: 'icon-hottext',\n                    description: __('Select one or more text parts (hottext) within a text.'),\n                    short: __('Hottext'),\n                    qtiClass: 'hottextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                gapMatchInteraction: {\n                    label: __('Gap Match Interaction'),\n                    icon: 'icon-gap-match',\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'gapMatchInteraction',\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\n                    group: 'common-interactions'\n                },\n                sliderInteraction: {\n                    label: __('Slider Interaction'),\n                    icon: 'icon-slider',\n                    description: __('Select a value within a numerical range.'),\n                    short: __('Slider'),\n                    qtiClass: 'sliderInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                extendedTextInteraction: {\n                    label: __('Extended Text Interaction'),\n                    icon: 'icon-extended-text',\n                    description: __(\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\n                    ),\n                    short: __('Extended Text'),\n                    qtiClass: 'extendedTextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                uploadInteraction: {\n                    label: __('File Upload Interaction'),\n                    icon: 'icon-upload',\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\n                    short: __('File Upload'),\n                    qtiClass: 'uploadInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                mediaInteraction: {\n                    label: __('Media Interaction'),\n                    icon: 'icon-media',\n                    description: __(\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\n                    ),\n                    short: __('Media'),\n                    qtiClass: 'mediaInteraction',\n                    tags: [tagTitles.commonInteractions, 'media'],\n                    group: 'common-interactions'\n                },\n                _container: {\n                    label: __('Text Block'),\n                    icon: 'icon-font',\n                    description: __(\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\n                    ),\n                    short: __('Block'),\n                    qtiClass: '_container',\n                    tags: [tagTitles.inlineInteractions, 'text'],\n                    group: 'inline-interactions'\n                },\n                inlineChoiceInteraction: {\n                    label: __('Inline Choice Interaction'),\n                    icon: 'icon-inline-choice',\n                    description: __('Select a choice from a drop-down list.'),\n                    short: __('Inline Choice'),\n                    qtiClass: 'inlineChoiceInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\n                    group: 'inline-interactions'\n                },\n                textEntryInteraction: {\n                    label: __('Text Entry Interaction'),\n                    icon: 'icon-text-entry',\n                    description: __(\n                        'Collect open-ended information in a short text input (strings or numeric values).'\n                    ),\n                    short: __('Text Entry'),\n                    qtiClass: 'textEntryInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\n                    group: 'inline-interactions'\n                },\n                endAttemptInteraction: {\n                    label: __('End Attempt Interaction'),\n                    icon: 'icon-end-attempt',\n                    description: __('Trigger the end of the item attempt.'),\n                    short: __('End Attempt'),\n                    qtiClass: 'endAttemptInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\n                    group: 'inline-interactions'\n                },\n                hotspotInteraction: {\n                    label: __('Hotspot Interaction'),\n                    icon: 'icon-hotspot',\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\n                    short: __('Hotspot'),\n                    qtiClass: 'hotspotInteraction',\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\n                    group: 'graphic-interactions'\n                },\n                graphicOrderInteraction: {\n                    label: __('Graphic Order Interaction'),\n                    icon: 'icon-graphic-order',\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\n                    short: __('Order'),\n                    qtiClass: 'graphicOrderInteraction',\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\n                    group: 'graphic-interactions'\n                },\n                graphicAssociateInteraction: {\n                    label: __('Graphic Associate Interaction'),\n                    icon: 'icon-graphic-associate',\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                    short: __('Associate'),\n                    qtiClass: 'graphicAssociateInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                graphicGapMatchInteraction: {\n                    label: __('Graphic Gap Match Interaction'),\n                    icon: 'icon-graphic-gap',\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'graphicGapMatchInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                selectPointInteraction: {\n                    label: __('Select Point Interaction'),\n                    icon: 'icon-select-point',\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\n                    short: __('Select Point'),\n                    qtiClass: 'selectPointInteraction',\n                    tags: [tagTitles.graphicInteractions],\n                    group: 'graphic-interactions'\n                }\n            };\n\n            //filter out hidden elements\n            const availableElements = {};\n            for (const [elementId, element] of Object.entries(authoringElements)) {\n                if (this.isVisible(elementId)) {\n                    availableElements[elementId] = element;\n                }\n            }\n            return availableElements;\n        }\n    };\n\n    return QtiElements;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'i18n',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, __, portableElementRegistry, qtiElements) {\n    'use strict';\n\n    /**\n     * Create a new interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry() {\n        return portableElementRegistry({\n            /**\n             * Get the authoring information for a given custom interaction\n             * @param {string} typeIdentifier - the interaction type identifier\n             * @param {Object} [options]\n             * @param {string|number} [options.version] - the interaction version\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\n             * @returns {Object} the authoring info\n             */\n            getAuthoringData(typeIdentifier, options = {}) {\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\n                const pciModel = this.get(typeIdentifier, options.version);\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\n                if (\n                    pciModel &&\n                    pciModel.creator &&\n                    pciModel.creator.hook &&\n                    pciModel.creator.icon &&\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\n                ) {\n                    return {\n                        label: pciModel.label, //currently no translation available\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\n                        short: pciModel.short,\n                        description: pciModel.description,\n                        qtiClass, //custom interaction is block type\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\n                        group: 'custom-interactions'\n                    };\n                }\n            }\n        }).on('creatorsloaded', function () {\n            const creators = this.getLatestCreators();\n            _.forEach(creators, function (creator, typeIdentifier) {\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\n                    parents: ['customInteraction'],\n                    qti: true\n                };\n            });\n        });\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.forEach(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.forEach(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: function handleTheme(url) {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base ||\n                            (itemThemes.available && itemThemes.available.map(val => val.path).includes(url.path)))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        associableHotspot: false,\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'commonRenderer',\n        locations: locations,\n        options: {\n            assetManager: assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Container',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<div class=\\\"qti-block\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      return buffer;\n      }\n\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.contentModel), \"blockStatic\", options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.contentModel), \"blockStatic\", options));\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = {\n        qtiClass: '_container',\n        template: tpl\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figcaption',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figcaption\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figcaption>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Figcaption = {\n        qtiClass: 'figcaption',\n        template: tpl\n    };\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figure',['context', 'lodash', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'handlebars', 'lib/handlebars/helpers', 'ui/mediaEditor/plugins/mediaAlignment/helper'], function (context, _, verticalWriting, containerHelper, Handlebars, Helpers0, helper) { 'use strict';\n\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figure data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\\n\";\n      return buffer;\n      });\n    function imageTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<figure \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-figure=\\\"true\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.showFigure), {hash:{},inverse:self.program(6, program6, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\";\n      return buffer;\n      });\n    function widgetTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022-2023 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    const DISABLE_FIGURE_WIDGET = context.featureFlags['FEATURE_FLAG_DISABLE_FIGURE_WIDGET'];\n\n    var Figure = {\n        qtiClass: 'figure',\n        getContainer: containerHelper.get,\n        template: DISABLE_FIGURE_WIDGET ? imageTpl : widgetTpl,\n        getData(elem, data) {\n            if (DISABLE_FIGURE_WIDGET) {\n                return data;\n            }\n\n            let showFigure = false;\n            if (\n                data.attributes.class &&\n                [helper.FLOAT_LEFT_CLASS, helper.FLOAT_RIGHT_CLASS, helper.CENTER_CLASS].includes(data.attributes.class)\n            ) {\n                showFigure = true;\n            } else {\n                _.some(elem.bdy['elements'], childElement => {\n                    if (childElement.serial.includes('figcaption')) {\n                        showFigure = true;\n                        data.attributes.class = 'wrap-left';\n                        elem.attributes.class = 'wrap-left';\n                    }\n                });\n            }\n            data.attributes.showFigure = showFigure;\n            elem.attributes.showFigure = showFigure;\n            return data;\n        },\n        render(figure) {\n            const $figure = containerHelper.get(figure);\n            const $img = $figure.find('img');\n            if ($img.length && (DISABLE_FIGURE_WIDGET || $figure.prop('tagName') === 'FIGURE')) {\n                // move width from image to figure\n                if (\n                    verticalWriting.getIsItemWritingModeVerticalRl() &&\n                    $img.attr('height') &&\n                    $img.attr('height').endsWith('%') &&\n                    !$img.attr('width')\n                ) {\n                    $figure.css({ height: $img.attr('height') });\n                    $img.attr('height', '100%');\n                } else {\n                    $figure.css({ width: $img.attr('width') });\n                    $img.attr('width', '100%');\n                }\n            }\n        }\n    };\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Img',['ui/waitForMedia', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting'], function (waitForMedia, Handlebars, Helpers0, containerHelper, verticalWriting) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-describedby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-hidden=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-label=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-labelledby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-live=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" role=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<img\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"img\\\"\\n    src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.alt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby']), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby']), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live']), {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role), {hash:{},inverse:self.noop,fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Img = {\n        qtiClass: 'img',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(img, data) {\n            if (verticalWriting.getIsItemWritingModeVerticalRl()) {\n                const $img = containerHelper.get(img);\n                if ($img.attr('width') && $img.attr('width').endsWith('%') && !$img.attr('height')) {\n                    $img.attr('height', img.attr('width'));\n                    $img.removeAttr('width');\n                }\n            }\n            return new Promise(function (resolve, reject) {\n                containerHelper.get(img).waitForMedia(resolve);\n            });\n        }\n    };\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Include',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-include\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Include = {\n        qtiClass: 'include',\n        template: tpl\n    };\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',['jquery', 'lodash', 'i18n', 'ui/hider', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'interact', 'ui/interactUtils'], function ($$1, _, __, hider, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    class=\\\"qti-interaction qti-blockInteraction qti-associateInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"associateInteraction\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <ul class=\\\"choice-area clearfix  none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <ul class=\\\"result-area none target clearfix\\\">\\n    </ul>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden incomplete-pair\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"target lft\\\"></div>\\n    <div class=\\\"target rgt\\\"></div>\\n</li>\\n\";\n      return buffer;\n      });\n    function pairTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const setChoice = function (interaction, $choice, $target) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getChoice(choiceSerial);\n        let usage = $choice.data('usage') || 0;\n\n        if (!choiceSerial) {\n            throw new Error('empty choice serial');\n        }\n\n        //to track number of times a choice is used in a pair\n        usage++;\n        $choice.data('usage', usage);\n\n        const _setChoice = function () {\n            $target.data('serial', choiceSerial).html($choice.html()).addClass('filled');\n\n            if (!interaction.responseMappingMode && choice.attr('matchMax') && usage >= choice.attr('matchMax')) {\n                $choice.addClass('deactivated');\n            }\n        };\n\n        if ($target.siblings('div').hasClass('filled')) {\n            const $resultArea = $$1('.result-area', $container);\n            const $pair = $target.parent();\n            const thisPairSerial = [$target.siblings('div').data('serial'), choiceSerial];\n            let $otherRepeatedPair = $$1();\n\n            //check if it is not a repeating association!\n            $resultArea\n                .children()\n                .not($pair)\n                .each(function () {\n                    let $otherPair = $$1(this).children('.filled');\n                    if ($otherPair.length === 2) {\n                        let otherPairSerial = [$$1($otherPair[0]).data('serial'), $$1($otherPair[1]).data('serial')];\n                        if (_.intersection(thisPairSerial, otherPairSerial).length === 2) {\n                            $otherRepeatedPair = $otherPair;\n                            return false;\n                        }\n                    }\n                });\n\n            if ($otherRepeatedPair.length === 0) {\n                //no repeated pair, so allow the choice to be set:\n                _setChoice();\n\n                //trigger pair made event\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'added',\n                    $pair: $pair,\n                    choices: thisPairSerial\n                });\n\n                instructionMgr.validateInstructions(interaction, { choice: $choice, target: $target });\n\n                if (interaction.responseMappingMode || parseInt(interaction.attr('maxAssociations')) === 0) {\n                    $pair.removeClass('incomplete-pair');\n\n                    //append new pair option?\n                    if (!$resultArea.children('.incomplete-pair').length) {\n                        $resultArea.append(pairTpl({ empty: true }));\n                        $resultArea.children('.incomplete-pair').fadeIn(600, function () {\n                            hider.show(this);\n                        });\n                    }\n                }\n            } else {\n                //repeating pair: show it:\n\n                //@todo add a notification message here in warning\n                $otherRepeatedPair.css('border', '1px solid orange');\n                $target.html(__('identical pair already exists')).css({\n                    color: 'orange',\n                    border: '1px solid orange'\n                });\n                setTimeout(function () {\n                    $otherRepeatedPair.removeAttr('style');\n                    $target.empty().css({ color: '', border: '' });\n                }, 2000);\n            }\n        } else {\n            _setChoice();\n        }\n    };\n\n    const unsetChoice = function (interaction, $filledChoice, animate, triggerChange) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $filledChoice.data('serial');\n        const $choice = $container.find('.choice-area [data-serial=' + choiceSerial + ']');\n        const $parent = $filledChoice.parent();\n        const $sibling = $container.find(\n            '.choice-area [data-serial=' + $filledChoice.siblings('.target').data('serial') + ']'\n        );\n        const isNumberOfMaxAssociationsZero = parseInt(interaction.attr('maxAssociations')) === 0;\n        let usage = $choice.data('usage') || 0;\n\n        //decrease the  use for this choice\n        usage--;\n\n        $choice.data('usage', usage).removeClass('deactivated');\n\n        $filledChoice.removeClass('filled').removeData('serial').empty();\n\n        if (!interaction.swapping) {\n            if (triggerChange !== false) {\n                //a pair with one single element is not valid, so consider the response to be modified:\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'removed',\n                    $pair: $filledChoice.parent()\n                });\n                instructionMgr.validateInstructions(interaction, { choice: $choice });\n            }\n\n            // if we are removing the sibling too, update its usage\n            // but only if number of maximum assotiations is zero\n            if (isNumberOfMaxAssociationsZero) {\n                $sibling.data('usage', $sibling.data('usage') - 1).removeClass('deactivated');\n            }\n\n            //completely empty pair:\n            if (\n                !$choice.siblings('div').hasClass('filled') &&\n                (isNumberOfMaxAssociationsZero || interaction.responseMappingMode)\n            ) {\n                //shall we remove it?\n                if (!$parent.hasClass('incomplete-pair')) {\n                    if (animate) {\n                        $parent.addClass('removing').fadeOut(500, function () {\n                            $$1(this).remove();\n                        });\n                    } else {\n                        $parent.remove();\n                    }\n                }\n            }\n        }\n    };\n\n    const getChoice = function (interaction, identifier) {\n        const $container = containerHelper.get(interaction);\n\n        //warning: do not use selector data-identifier=identifier because data-identifier may change dynamically\n        const choice = interaction.getChoiceByIdentifier(identifier);\n        if (!choice) {\n            throw new Error('cannot find a choice with the identifier : ' + identifier);\n        }\n        return $$1('.choice-area [data-serial=' + choice.getSerial() + ']', $container);\n    };\n\n    const renderEmptyPairs = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const max = parseInt(interaction.attr('maxAssociations'));\n        const $resultArea = $$1('.result-area', $container);\n\n        if (interaction.responseMappingMode || max === 0) {\n            $resultArea.append(pairTpl({ empty: true }));\n            hider.show($resultArea.children('.incomplete-pair'));\n        } else {\n            for (let i = 0; i < max; i++) {\n                $resultArea.append(pairTpl());\n            }\n        }\n    };\n\n    /**\n     * Builds a scroll observer that will make sure the dragged element keeps an accurate positioning\n     * @param {jQuery} $scrollContainer\n     * @returns {scrollObserver}\n     */\n    const scrollObserverFactory = function scrollObserverFactory($scrollContainer) {\n        let currentDraggable = null;\n        let beforeY = 0;\n        let beforeX = 0;\n        let afterY = 0;\n        let afterX = 0;\n\n        // reset the scroll observer context\n        function resetScrollObserver() {\n            currentDraggable = null;\n            beforeY = 0;\n            beforeX = 0;\n            afterY = 0;\n            afterX = 0;\n        }\n\n        // keep the position of the dragged element accurate with the scroll position\n        function onScrollCb() {\n            let x;\n            let y;\n            if (currentDraggable) {\n                beforeY = afterY;\n                beforeX = afterX;\n\n                if (afterY === 0 && beforeY === 0) beforeY = this.scrollTop;\n                if (afterX === 0 && beforeX === 0) beforeX = this.scrollLeft;\n\n                afterY = this.scrollTop;\n                afterX = this.scrollLeft;\n\n                y = (parseInt(currentDraggable.getAttribute('data-y'), 10) || 0) + (afterY - beforeY);\n                x = (parseInt(currentDraggable.getAttribute('data-x'), 10) || 0) + (afterX - beforeX);\n\n                // translate the element\n                currentDraggable.style.webkitTransform = currentDraggable.style.transform = `translate(${x}px, ${y}px)`;\n\n                // update the position attributes\n                currentDraggable.setAttribute('data-x', x);\n                currentDraggable.setAttribute('data-y', y);\n            }\n        }\n\n        // find the scroll container within the parents if any\n        $scrollContainer.parents().each(function findScrollContainer() {\n            const $el = $$1(this);\n            const ovf = $el.css('overflow');\n            if (ovf !== 'hidden' && ovf !== 'visible') {\n                $scrollContainer = $el;\n                return false;\n            }\n        });\n\n        // make sure the drop zones will follow the scroll\n        interact.dynamicDrop(true);\n\n        /**\n         * @typedef {Object} scrollObserver\n         */\n        return {\n            /**\n             * Gets the scroll container\n             * @returns {jQuery}\n             */\n            getScrollContainer: function getScrollContainer() {\n                return $scrollContainer;\n            },\n\n            /**\n             * Initializes the scroll observer while dragging a choice\n             * @param {HTMLElement|jQuery} draggedElement\n             */\n            start: function start(draggedElement) {\n                resetScrollObserver();\n                currentDraggable = draggedElement instanceof $$1 ? draggedElement.get(0) : draggedElement;\n                $scrollContainer.on('scroll.scrollObserver', _.throttle(onScrollCb, 50));\n            },\n\n            /**\n             * Tears down the the scroll observer once the dragging is done\n             */\n            stop: function stop() {\n                $scrollContainer.off('.scrollObserver');\n                resetScrollObserver();\n            }\n        };\n    };\n    const _getRawResponse = function (interaction) {\n        const response = [];\n        const $container = containerHelper.get(interaction);\n        $$1('.result-area>li', $container).each(function () {\n            const pair = [];\n            $$1(this)\n                .find('div')\n                .each(function () {\n                    const serial = $$1(this).data('serial');\n                    if (serial) {\n                        const choice = interaction.getChoice(serial);\n                        if (choice) {\n                            pair.push(choice.id());\n                        }\n                    }\n                });\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n    const _setInstructions = function (interaction) {\n        const min = parseInt(interaction.attr('minAssociations'), 10);\n        const max = parseInt(interaction.attr('maxAssociations'), 10);\n\n        //infinite association:\n        if (min === 0) {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('You may make as many association pairs as you want.'));\n            }\n        } else {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('The maximum number of association is unlimited.'));\n            }\n            //the max value is implicit since the appropriate number of empty pairs have already been created\n            let msg = __('You need to make') + ' ';\n            msg += min > 1 ? __('at least') + ' ' + min + ' ' + __('association pairs') : __('one association pair');\n            instructionMgr.appendInstruction(interaction, msg, function () {\n                if (_getRawResponse(interaction).length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    const render = function (interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const $choiceArea = $container.find('.choice-area');\n            const $resultArea = $container.find('.result-area');\n\n            let $activeChoice = null;\n            let scrollObserver = null;\n\n            let isDragAndDropEnabled;\n            let dragOptions;\n            let dropOptions;\n            let scaleX, scaleY;\n\n            let $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n            let choiceSelector = $choiceArea.selector + ' >li';\n            let resultSelector = $resultArea.selector + ' >li>div';\n            let binSelector = $container.selector + ' .remove-choice';\n\n            let _getChoice = function (serial) {\n                return $choiceArea.find('[data-serial=' + serial + ']');\n            };\n\n            /**\n             * @todo Tried to store $resultArea.find[...] in a variable but this fails\n             * @param $choice\n             * @param $target\n             * @private\n             */\n            const _setChoice = function ($choice, $target) {\n                setChoice(interaction, $choice, $target);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _resetSelection = function () {\n                if ($activeChoice) {\n                    $resultArea.find('.remove-choice').remove();\n                    $activeChoice.removeClass('active');\n                    $container.find('.empty').removeClass('empty');\n                    $activeChoice = null;\n                }\n            };\n\n            const _unsetChoice = function ($choice) {\n                unsetChoice(interaction, $choice, true);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _isInsertionMode = function () {\n                return $activeChoice && $activeChoice.data('identifier');\n            };\n\n            const _isModeEditing = function () {\n                return $activeChoice && !$activeChoice.data('identifier');\n            };\n            const _activateChoice = function ($choice) {\n                _resetSelection();\n                $activeChoice = $choice;\n                $choice.addClass('active');\n                $resultArea.find('>li>.target').addClass('empty');\n            };\n\n            const _handleChoiceActivate = function ($target) {\n                if ($target.hasClass('deactivated')) {\n                    return;\n                }\n\n                if (_isModeEditing()) {\n                    //swapping:\n                    interaction.swapping = true;\n                    _unsetChoice($activeChoice);\n                    _setChoice($target, $activeChoice);\n                    _resetSelection();\n                    interaction.swapping = false;\n                } else {\n                    if ($target.hasClass('active')) {\n                        _resetSelection();\n                    } else {\n                        _activateChoice($target);\n                    }\n                }\n            };\n            const _activateResult = function ($target) {\n                const targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $resultArea\n                    .find('>li>.target')\n                    .filter(function () {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function () {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n            };\n\n            const _handleResultActivate = function ($target) {\n                let choiceSerial,\n                    targetSerial = $target.data('serial');\n\n                if (_isInsertionMode()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled')) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n                        //set choices:\n                        if (targetSerial) {\n                            _unsetChoice($target);\n                        }\n                        _setChoice($activeChoice, $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (_isModeEditing()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled') || $activeChoice.siblings('div')[0] === $target[0]) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n\n                        _unsetChoice($activeChoice);\n                        if (targetSerial) {\n                            //swapping:\n                            _unsetChoice($target);\n                            _setChoice(_getChoice(targetSerial), $activeChoice);\n                        }\n                        _setChoice(_getChoice(choiceSerial), $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (targetSerial) {\n                    _activateResult($target);\n                    $target.append($bin);\n                }\n            };\n\n            // Point & click handlers\n\n            interact($container.selector).on('tap', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                _resetSelection();\n            });\n\n            interact($choiceArea.selector + ' >li').on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleChoiceActivate($target);\n                e.preventDefault();\n            });\n\n            interact($resultArea.selector + ' >li>div').on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleResultActivate($target);\n                e.preventDefault();\n            });\n\n            interact(binSelector).on('tap', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _unsetChoice($activeChoice);\n                _resetSelection();\n                e.preventDefault();\n            });\n\n            if (!interaction.responseMappingMode) {\n                _setInstructions(interaction);\n            }\n\n            // Drag & drop handlers\n\n            if (self.getOption && self.getOption('enableDragAndDrop') && self.getOption('enableDragAndDrop').associate) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').associate;\n            }\n\n            function _iFrameDragFix(draggableSelector, target) {\n                interactUtils.iFrameDragFixOn(function () {\n                    let $activeDrop = $$1(resultSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(resultSelector).fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    $activeDrop = $$1(choiceSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(choiceSelector + '.empty').fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    interact(draggableSelector).fire({\n                        type: 'dragend',\n                        target: target\n                    });\n                });\n            }\n\n            if (isDragAndDropEnabled) {\n                scrollObserver = scrollObserverFactory($container);\n                dragOptions = {\n                    inertia: false,\n                    autoScroll: {\n                        container: scrollObserver.getScrollContainer().get(0)\n                    },\n                    restrict: {\n                        restriction: '.qti-interaction',\n                        endOnly: false,\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                    }\n                };\n\n                // makes choices draggables\n                interact(choiceSelector + ':not(.deactivated)')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function (e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _activateChoice($target);\n                                    _iFrameDragFix(choiceSelector + ':not(.deactivated)', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function (e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function (e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n                                    // The reason of placing delay here is that there was timing conflict between \"draggable\" and \"drag-zone\" elements.\n                                    _.delay(function () {\n                                        _resetSelection();\n                                    });\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                // makes results draggables\n                interact(resultSelector + '.filled')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function (e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _resetSelection();\n                                    _activateResult($target);\n                                    _iFrameDragFix(resultSelector + '.filled', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function (e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function (e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n\n                                    interactUtils.restoreOriginalPosition($target);\n\n                                    if ($activeChoice) {\n                                        _unsetChoice($activeChoice);\n                                    }\n                                    _resetSelection();\n\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                dropOptions = {\n                    overlap: 'pointer',\n                    ondragenter: function (e) {\n                        $$1(e.target).addClass('dropzone');\n                        $$1(e.relatedTarget).addClass('droppable');\n                    },\n                    ondragleave: function (e) {\n                        $$1(e.target).removeClass('dropzone');\n                        $$1(e.relatedTarget).removeClass('droppable');\n                    }\n                };\n\n                // makes hotspots droppables\n                interact(resultSelector).dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function (e) {\n                                this.ondragleave(e);\n                                _handleResultActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n\n                // makes available choices droppables\n                interact(choiceSelector + '.empty').dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function (e) {\n                                this.ondragleave(e);\n                                _handleChoiceActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n            }\n\n            // interaction init\n\n            renderEmptyPairs(interaction);\n\n            sizeAdapter.adaptSize($$1('.result-area .target, .choice-area .qti-choice', $container));\n            resolve();\n        });\n    };\n\n    const resetResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //destroy selected choice:\n        $container.find('.result-area .active').each(function () {\n            interactUtils.tapOn(this);\n        });\n\n        $$1('.result-area>li>div', $container).each(function () {\n            unsetChoice(interaction, $$1(this), false, false);\n        });\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _setPairs = function (interaction, pairs) {\n        const $container = containerHelper.get(interaction);\n        let addedPairs = 0;\n        let $emptyPair = $$1('.result-area>li:first', $container);\n        if (pairs && interaction.getResponseDeclaration().attr('cardinality') === 'single' && pairs.length) {\n            pairs = [pairs];\n        }\n        _.forEach(pairs, function (pair) {\n            if ($emptyPair.length) {\n                let $divs = $emptyPair.children('div');\n                setChoice(interaction, getChoice(interaction, pair[0]), $$1($divs[0]));\n                setChoice(interaction, getChoice(interaction, pair[1]), $$1($divs[1]));\n                addedPairs++;\n                $emptyPair = $emptyPair.next('li');\n            } else {\n                //the number of pairs exceeds the maximum allowed pairs: break;\n                return false;\n            }\n        });\n\n        return addedPairs;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' >li').unset();\n        interact($container.find('.result-area').selector + ' >li>div').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        $$1('.result-area', $container).empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        let aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        let bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        let state = {};\n        let response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the associate interaction\n     * @exports qtiCommonRenderer/renderers/interactions/AssociateInteraction\n     */\n    var AssociateInteraction = {\n        qtiClass: 'associateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n\n        renderEmptyPairs: renderEmptyPairs\n    };\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',['lodash', 'jquery', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'util/adaptSize', 'services/features', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting'], function (_, $$1, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, adaptSize, features, verticalWriting) { 'use strict';\n\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n  sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n  adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n  features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    \n    return \" allow-elimination-visible\";\n    }\n\n  function program7(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data) {\n    \n    \n    return \" horizontal\";\n    }\n\n  function program13(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.listStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.listStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program15(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  class=\\\"qti-interaction qti-blockInteraction qti-choiceInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowEliminationVisible), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n  data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  data-qti-class=\\\"choiceInteraction\\\"\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n>\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <ol\\n    class=\\\"plain block-listing solid choice-area\";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.listStyle), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n    aria-labelledby=\\\"\";\n    if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  >\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data};\n    if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  </ol>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  const KEY_CODE_SPACE = 32;\n  const KEY_CODE_ENTER = 13;\n  const KEY_CODE_LEFT = 37;\n  const KEY_CODE_UP = 38;\n  const KEY_CODE_RIGHT = 39;\n  const KEY_CODE_DOWN = 40;\n\n  /**\n   * Propagate the checked state to the actual input.\n   * @type {Function}\n   * @param {jQuery} $choiceBox - list element with the class `.qti-choice`\n   * @param {Boolean} state\n   * @private\n   */\n  const _triggerInput = function _triggerInput($choiceBox, state) {\n      const $input = $choiceBox.find('input:radio,input:checkbox').not('[disabled]').not('.disabled');\n      const $choiceBoxes = $choiceBox.add($choiceBox.siblings());\n\n      if (!$input.length) {\n          return;\n      }\n\n      if (!_.isBoolean(state)) {\n          state = !$input.prop('checked');\n      }\n\n      $input.prop('checked', state);\n      $input.trigger('change');\n\n      $choiceBoxes.removeClass('user-selected');\n      $choiceBoxes\n          .find('input:checked')\n          .not('[disabled]')\n          .not('.disabled')\n          .parents('.qti-choice')\n          .addClass('user-selected');\n  };\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   *\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @param {jQueryElement} $container\n   */\n  const _pseudoLabel = function _pseudoLabel(interaction, $container) {\n      const inputSelector =\n          '.qti-choice input:radio:not([disabled]):not(.disabled), .qti-choice input:checkbox:not([disabled]):not(.disabled)';\n      $container.off('.commonRenderer');\n\n      $container\n          .on('keydown.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const $qtiChoice = $$1(this).closest('.qti-choice');\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_UP || keyCode === KEY_CODE_LEFT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .prev('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              } else if (keyCode === KEY_CODE_DOWN || keyCode === KEY_CODE_RIGHT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .next('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              }\n          })\n          .on('keyup.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_SPACE || keyCode === KEY_CODE_ENTER) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  _triggerInput($$1(this).closest('.qti-choice'));\n              }\n          });\n\n      $container.on('click.commonRenderer', '.qti-choice', function (e) {\n          const $choiceBox = $$1(this);\n          let state;\n          const eliminator = e.target.dataset && e.target.dataset.eliminable;\n          const input = this.querySelector('.real-label > input');\n\n          // if the click has been triggered by a keyboard check, prevent this listener to cancel this check\n          if (e.originalEvent && $$1(e.originalEvent.target).is('input')) {\n              instructionMgr.validateInstructions(interaction, { choice: $choiceBox });\n              containerHelper.triggerResponseChangeEvent(interaction);\n              $$1(input).focus();\n              return;\n          }\n\n          //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n          if ($choiceBox.closest('.qti-item').hasClass('prevent-click-handler')) {\n              return;\n          }\n\n          e.preventDefault();\n          e.stopPropagation(); //required otherwise any tao scoped, form initialization might prevent it from working\n\n          if (!_.isUndefined(eliminator)) {\n              state = false;\n              if (eliminator === 'trigger') {\n                  this.classList.toggle('eliminated');\n              }\n          }\n\n          _triggerInput($choiceBox, state);\n\n          if (this.classList.contains('eliminated')) {\n              input.setAttribute('disabled', 'disabled');\n          } else {\n              input.removeAttribute('disabled');\n          }\n\n          instructionMgr.validateInstructions(interaction, { choice: $choiceBox });\n          containerHelper.triggerResponseChangeEvent(interaction);\n          $$1(input).focus();\n      });\n  };\n\n  /**\n   * Get the responses from the DOM.\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @returns {Array} the list of choices identifiers\n   */\n  const _getRawResponse = function _getRawResponse(interaction) {\n      const values = [];\n      const $container = containerHelper.get(interaction);\n      $$1('.real-label > input[name=response-' + interaction.getSerial() + ']:checked', $container).each(function () {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Define the instructions for the interaction\n   * @private\n   * @param {Object} interaction - the interaction instance\n   */\n  const _setInstructions = function _setInstructions(interaction) {\n      const min = interaction.attr('minChoices');\n      const max = interaction.attr('maxChoices');\n      let msg;\n      const choiceCount = _.size(interaction.getChoices());\n      const isVertical = verticalWriting.getIsItemWritingModeVerticalRl();\n\n      const highlightInvalidInput = function highlightInvalidInput($choice) {\n          const $input = $choice.find('.real-label > input');\n          const $icon = $choice.find('.real-label > span');\n\n          const prevTimeoutData = $choice.data('__instructionTimeout');\n          if (prevTimeoutData) {\n              clearTimeout(prevTimeoutData.timeout);\n              prevTimeoutData.unhighlight();\n          }\n\n          const choiceStyle = $choice.attr('style');\n          const iconStyle = $icon.attr('style');\n          $choice.get(0).style.setProperty('color', '#BA122B', 'important');\n          $icon.css('color', '#BA122B').addClass('cross error');\n\n          const unhighlight = () => {\n              $choice.attr('style', choiceStyle || '');\n              $icon.attr('style', iconStyle || '').removeClass('cross error');\n          };\n          const timeout = setTimeout(() => {\n              unhighlight();\n              $input.prop('checked', false);\n              $choice.toggleClass('user-selected', false);\n              containerHelper.triggerResponseChangeEvent(interaction);\n          }, 250);\n          $choice.data('__instructionTimeout', { timeout, unhighlight });\n      };\n\n      // if maxChoice = 1, use the radio group behaviour\n      // if maxChoice = 0, infinite choice possible\n      // there are 5 cases according AUT-345 Choice interaction: reduce edge cases constraints\n      if (min === 1 && (max === 0 || max === choiceCount || typeof max === 'undefined')) {\n          // Multiple Choice: 4.Constraint: Answer required -> minChoices = 1 / maxChoices = 0 -> “You need to select at least 1 choice”\n          // Multiple Choice: 5.Constraint: Other constraints -> minChoices = 1 / maxChoices = (N or Disabled)\n          msg = verticalWriting.wrapDigitsInCombineUpright(__('You need to select at least 1 choice.'), isVertical);\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= 1) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min >= 1 && max >= 2 && min !== max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> “You must select from minChoices to maxChoices choices. for the correct answer“\n          msg = verticalWriting.wrapDigitsInCombineUpright(__('You need to select from %s to %s choices.', min, max), isVertical);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= min && _getRawResponse(interaction).length < max) {\n                  this.reset();\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && min === max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices ≠ Disabled -> “You need to select {minChoices = maxChoices value} choices.“\n          msg = verticalWriting.wrapDigitsInCombineUpright(__('You need to select %s choices', min), isVertical);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length === min) {\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  this.update({\n                      level: 'warning',\n                      timeout: 2000,\n                      start: function () {\n                          if (data && data.choice) {\n                              highlightInvalidInput(data.choice);\n                          }\n                      },\n                      stop: function () {\n                          this.setLevel('info');\n                      }\n                  });\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (max > 1 && max < choiceCount && (typeof min === 'undefined' || min === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices = Disabled / maxChoices ≠ Disabled  -> \"You can select up to {maxChoices value} choices.\"\n          msg = verticalWriting.wrapDigitsInCombineUpright(__('You can select up to %s choices.', max), isVertical);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && (typeof max === 'undefined' || max === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices = Disabled or 0   -> \"You need to select at least {minChoices value} choices.\"\"\n          msg = verticalWriting.wrapDigitsInCombineUpright(__('You need to select at least %s choices.', min), isVertical);\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= min) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      }\n      // Single choice: 1.Constraint: None -> minChoices = 0 / maxChoices = 1 -> No messages\n      // Single choice: 2.Constraint: Answer required  -> minChoices = 1, maxChoices = 1 -> No messages\n      // Multiple Choice: 3.Constraint: None  -> minChoices = 0, maxChoices = 0 -> No messages\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const render = function render(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      _pseudoLabel(interaction, $container);\n\n      _setInstructions(interaction);\n\n      if (interaction.attr('orientation') === 'horizontal') {\n          const $elements = $$1('.add-option, .result-area .target, .choice-area .qti-choice', $container);\n          sizeAdapter.adaptSize($elements);\n\n          $$1(document).on('themeapplied.choiceInteraction', () => adaptSize.height($elements));\n      }\n  };\n\n  /**\n   * Reset the responses previously set\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const resetResponse = function resetResponse(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      $$1('.real-label > input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set a new response to the rendered interaction.\n   * Please note that it does not reset previous responses.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} response - the PCI formatted response\n   */\n  const setResponse = function setResponse(interaction, response) {\n      const $container = containerHelper.get(interaction);\n\n      try {\n          _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n              const $input = $container.find('.real-label > input[value=\"' + identifier + '\"]').prop('checked', true);\n              $input.closest('.qti-choice').toggleClass('user-selected', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the response formatted in PCI\n   */\n  const getResponse = function getResponse(interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Check if a choice interaction is choice-eliminable\n   *\n   * @param {Object} interaction\n   * @returns {boolean}\n   */\n  const isEliminable = function isEliminable(interaction) {\n      return /\\beliminable\\b/.test(interaction.attr('class'));\n  };\n\n  /**\n   * Set additional data to the template (data that are not really part of the model).\n   * @param {Object} interaction - the interaction\n   * @param {Object} [data] - interaction custom data\n   * @returns {Object} custom data\n   */\n  const getCustomData = function getCustomData(interaction, data) {\n      const listStyleVisible = features.isVisible('taoQtiItem/creator/interaction/choice/property/listStyle');\n      const listStyles = (interaction.attr('class') || '').match(/\\blist-style-[\\w-]+/) || [];\n      return _.merge(data || {}, {\n          horizontal: interaction.attr('orientation') === 'horizontal',\n          listStyle: listStyleVisible ? listStyles.pop() : void 0,\n          eliminable: isEliminable(interaction),\n          allowEliminationVisible: features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination')\n      });\n  };\n\n  /**\n   * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n   * @param {Object} interaction - the interaction\n   */\n  const destroy = function destroy(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      const timeout = interaction.data('__instructionTimeout');\n\n      if (timeout) {\n          clearTimeout(timeout);\n      }\n\n      //remove event\n      $container.off('.commonRenderer');\n      $$1(document).off('.commonRenderer').off('.choiceInteraction');\n\n      //remove instructions\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  const setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n\n          const $container = containerHelper.get(interaction);\n\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n              $$1('.qti-simpleChoice', $container)\n                  .sort(function (a, b) {\n                      const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                      const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('.choice-area', $container));\n          }\n\n          //restore eliminated choices\n          if (isEliminable(interaction) && _.isArray(state.eliminated) && state.eliminated.length) {\n              _.forEach(state.eliminated, function (identifier) {\n                  $container.find('.qti-simpleChoice[data-identifier=\"' + identifier + '\"]').addClass('eliminated');\n              });\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  const getState = function getState(interaction) {\n      const $container = containerHelper.get(interaction);\n      const state = {};\n      const response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          state.order = [];\n          $$1('.qti-simpleChoice', $container).each(function () {\n              state.order.push($$1(this).data('identifier'));\n          });\n      }\n\n      //store the eliminated choices\n      if (isEliminable(interaction)) {\n          state.eliminated = [];\n          $container.find('.qti-simpleChoice.eliminated').each(function () {\n              state.eliminated.push($$1(this).data('identifier'));\n          });\n      }\n\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the choice interaction\n   * @exports qtiCommonRenderer/renderers/interactions/ChoiceInteraction\n   */\n  var ChoiceInteraction = {\n      qtiClass: 'choiceInteraction',\n      template: tpl,\n      getData: getCustomData,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'i18n'], function (_, Handlebars, Helpers0, containerHelper, pciResponse, __) { 'use strict';\n\n        _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n        Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n        Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n        containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n        pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n        __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n        if (!Helpers0.__initialized) {\n          Helpers0(Handlebars);\n          Helpers0.__initialized = true;\n        }\n        var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n          this.compilerInfo = [4,'>= 1.0.0'];\n        helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n          var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n        function program1(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \" lang=\\\"\"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\\"\";\n          return buffer;\n          }\n\n          buffer += \"<a class=\\\"qti-interaction qti-inlineInteraction qti-endAttemptInteraction btn small btn-info\\\"\\n        data-serial=\\\"\";\n          if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n          else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n          buffer += escapeExpression(stack1)\n            + \"\\\" \\n        data-qti-class=\\\"endAttemptInteraction\\\"\\n        value=\\\"false\\\"\\n        tabindex=\\\"0\\\"\\n        \";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \">\\n        \"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\n</a>\\n\";\n          return buffer;\n          });\n        function tpl(data, options, asString) {\n          var html = Template(data, options);\n          return (asString || true) ? html : $(html);\n        }\n\n        /**\n         * This program is free software; you can redistribute it and/or\n         * modify it under the terms of the GNU General Public License\n         * as published by the Free Software Foundation; under version 2\n         * of the License (non-upgradable).\n         *\n         * This program is distributed in the hope that it will be useful,\n         * but WITHOUT ANY WARRANTY; without even the implied warranty of\n         * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n         * GNU General Public License for more details.\n         *\n         * You should have received a copy of the GNU General Public License\n         * along with this program; if not, write to the Free Software\n         * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n         *\n         * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n         */\n\n        /**\n         * Init rendering, called after template injected into the DOM\n         * All options are listed in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @fires endattempt with the response identifier\n         */\n        function render(interaction, options) {\n            var $container = containerHelper.get(interaction);\n\n            //on click,\n            $container.on('click.commonRenderer', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n                $container.val(true);\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                $container.trigger('endattempt', [interaction.attr('responseIdentifier')]);\n            });\n        }\n\n        /**\n         * Set the response to the rendered interaction.\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @param {object} response\n         */\n        function setResponse(interaction, response) {\n            _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n        }\n\n        /**\n         * Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n        function getResponse(interaction) {\n            var val = containerHelper.get(interaction).val();\n            val = val && val !== 'false' && val !== '0';\n            return pciResponse.serialize([val], interaction);\n        }\n\n        /**\n             * Reset the response ... wondering if it is useful ...\n\n             * @param {type} interaction\n             */\n        function resetResponse(interaction) {\n            _setVal(interaction, false);\n        }\n\n        /**\n         * Set the interaction state. It could be done anytime with any state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @param {Object} state - the interaction state\n         */\n        function setState(interaction, state) {\n            if (_.isObject(state)) {\n                if (state.response) {\n                    interaction.resetResponse();\n                    interaction.setResponse(state.response);\n                }\n            }\n        }\n\n        /**\n         * Get the interaction state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @returns {Object} the interaction current state\n         */\n        function getState(interaction) {\n            var state = {};\n            var response = interaction.getResponse();\n\n            if (response) {\n                state.response = response;\n            }\n            return state;\n        }\n\n        /**\n         *\n         * @param {Object} interaction\n         * @param {Boolean} val\n         */\n        function _setVal(interaction, val) {\n            containerHelper\n                .get(interaction)\n                .val(val)\n                .change();\n        }\n\n        /**\n         * Destroy the interaction to restore the dom as it is before render() is called\n         *\n         * @param {Object} interaction\n         */\n        function destroy(interaction) {\n            //remove event\n            containerHelper.get(interaction).off('.commonRenderer');\n        }\n\n        /**\n         * Define default template data\n         *\n         * @param {Object} interaction\n         * @param {Object} data\n         * @returns {Object}\n         */\n        function getCustomData(interaction, data) {\n            if (!data.attributes.title) {\n                data.attributes.title = __('End Attempt');\n            }\n            return data;\n        }\n\n        var EndAttemptInteraction = {\n            qtiClass: 'endAttemptInteraction',\n            template: tpl,\n            getData: getCustomData,\n            render: render,\n            getContainer: containerHelper.get,\n            setResponse: setResponse,\n            getResponse: getResponse,\n            resetResponse: resetResponse,\n            destroy: destroy,\n            setState: setState,\n            getState: getState\n        };\n\n        return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',['jquery', 'lodash', 'i18n', 'services/features', 'util/strLimiter', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'ckeditor', 'taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'taoQtiItem/qtiCommonRenderer/helpers/userAgent', 'ui/tooltip', 'util/converter', 'core/logger', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting'], function ($$1, _, __, features, strLimiter, Handlebars, Helpers0, containerHelper, instructionMgr, ckEditor, ckConfigurator, patternMaskHelper, userAgent, tooltip, converter, loggerFactory, verticalWriting) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    strLimiter = strLimiter && Object.prototype.hasOwnProperty.call(strLimiter, 'default') ? strLimiter['default'] : strLimiter;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n    ckConfigurator = ckConfigurator && Object.prototype.hasOwnProperty.call(ckConfigurator, 'default') ? ckConfigurator['default'] : ckConfigurator;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(14, program14, data),fn:self.program(10, program10, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n                <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\" contenteditable></div>\\n            \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \" attributes.class\";\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                <textarea\\n                    class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                    name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n                    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n                ></textarea>\\n            \";\n      return buffer;\n      }\n    function program16(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"pattern=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" contenteditable></div>\\n        \";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <textarea\\n                class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n            ></textarea>\\n        \";\n      return buffer;\n      }\n\n    function program23(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            \";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n\n    function program25(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            <span class=\\\"text-counter-chars\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n            <span class=\\\"text-counter-words\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n        \";\n      return buffer;\n      }\n    function program26(depth0,data) {\n      \n      \n      return \" style=\\\"display: none\\\"\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-extendedTextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"extendedTextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.multiple), {hash:{},inverse:self.program(18, program18, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"text-counter\\\">\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<span class=\\\"\";\n      if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n\";\n      return buffer;\n      });\n    function countTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Create a logger\n     */\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js');\n\n    const hideXhtmlConstraints = !features.isVisible(\n        'taoQtiItem/creator/interaction/extendedText/property/xhtmlConstraints'\n    );\n    const hideXhtmlRecommendations = !features.isVisible(\n        'taoQtiItem/creator/interaction/extendedText/property/xhtmlRecommendations'\n    );\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Promise} rendering is async\n     */\n    function render(interaction) {\n        return new Promise(function (resolve, reject) {\n            let $el, expectedLength, minStrings, patternMask, placeholderType, editor;\n            let _styleUpdater, themeLoaded, _getNumStrings;\n            let $container = containerHelper.get(interaction);\n\n            const multiple = _isMultiple(interaction);\n            const limiter = inputLimiter(interaction);\n\n            const placeholderText = interaction.attr('placeholderText');\n            const serial = $container.data('serial');\n\n            const getItemLanguage = () => {\n                let itemLang = $container.closest('.qti-item').attr('lang');\n                let itemLocale = itemLang && itemLang.split('-')[0];\n                if (!itemLocale) {\n                    itemLang = window.document.documentElement.getAttribute('lang');\n                    itemLocale = itemLang && itemLang.split('-')[0];\n                }\n                return itemLocale;\n            };\n\n            const toolbarType = 'extendedText';\n            const ckOptions = {\n                resize_enabled: true,\n                secure: location.protocol === 'https:',\n                forceCustomDomain: true,\n                language: getItemLanguage()\n            };\n\n            if (!multiple) {\n                $el = $container.find('textarea');\n                if (placeholderText) {\n                    $el.attr('placeholder', placeholderText);\n                }\n                if (_getFormat(interaction) === 'xhtml') {\n                    if (hideXhtmlConstraints && hideXhtmlRecommendations) {\n                        $container.find('.text-counter').hide();\n                    }\n\n                    if (hideXhtmlConstraints) {\n                        limiter.enabled = false;\n                    }\n\n                    _styleUpdater = function () {\n                        let qtiItemStyle, $editorBody, qtiItem;\n\n                        if (editor.document) {\n                            qtiItem = $$1('.qti-item').get(0);\n                            qtiItemStyle = qtiItem.currentStyle || window.getComputedStyle(qtiItem);\n\n                            if (editor.document.$ && editor.document.$.body) {\n                                $editorBody = $$1(editor.document.$.body);\n                            } else {\n                                $editorBody = $$1(editor.document.getBody().$);\n                            }\n\n                            $editorBody.css({\n                                'background-color': 'transparent',\n                                color: qtiItemStyle.color\n                            });\n                        }\n                    };\n                    themeLoaded = function () {\n                        _styleUpdater();\n                    };\n\n                    editor = _setUpCKEditor(interaction, ckOptions);\n                    if (!editor) {\n                        reject('Unable to instantiate ckEditor');\n                    }\n\n                    editor.on('instanceReady', function () {\n                        _styleUpdater();\n\n                        //TAO-6409, disable navigation from cke toolbar\n                        if (editor.container && editor.container.$) {\n                            $$1(editor.container.$).addClass('no-key-navigation');\n                        }\n\n                        //it seems there's still something done after loaded, so resolved must be defered\n                        _.delay(resolve, 300);\n                    });\n                    if (editor.status === 'ready' || editor.status === 'loaded') {\n                        _.defer(resolve);\n                    }\n                    editor.on('configLoaded', function () {\n                        editor.config = ckConfigurator.getConfig(editor, toolbarType, ckOptions);\n\n                        if (limiter.enabled) {\n                            limiter.listenTextInput();\n                        }\n                    });\n                    editor.on('change', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    $$1(document).on('themechange.themeloader', themeLoaded);\n                } else {\n                    const isVertical = verticalWriting.getIsItemWritingModeVerticalRl();\n                    if (isVertical) {\n                        const textareaSupportsVertical = verticalWriting.supportsVerticalFormElement();\n                        if (!textareaSupportsVertical) {\n                            $el.addClass('vertical-unsupported');\n                        }\n                    }\n\n                    $el.on('keyup.commonRenderer change.commonRenderer', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    if (limiter.enabled) {\n                        limiter.listenTextInput();\n                    }\n\n                    interaction.safariVerticalRlPatch = _patchSafariVerticalRl($el, serial);\n\n                    resolve();\n                }\n\n                //multiple inputs\n            } else {\n                $el = $container.find('input');\n                minStrings = interaction.attr('minStrings');\n                expectedLength = interaction.attr('expectedLength');\n                patternMask = interaction.attr('patternMask');\n\n                //setting the checking for minimum number of answers\n                if (minStrings) {\n                    //get the number of filled inputs\n                    _getNumStrings = function ($element) {\n                        let num = 0;\n                        $element.each(function () {\n                            if ($$1(this).val() !== '') {\n                                num++;\n                            }\n                        });\n\n                        return num;\n                    };\n\n                    minStrings = parseInt(minStrings, 10);\n                    if (minStrings > 0) {\n                        $el.on('blur.commonRenderer', function () {\n                            setTimeout(function () {\n                                //checking if the user was clicked outside of the input fields\n\n                                //TODO remove notifications in favor of instructions\n\n                                if (!$el.is(':focus') && _getNumStrings($el) < minStrings) {\n                                    instructionMgr.appendNotification(\n                                        interaction,\n                                        `${__('The minimum number of answers is ')} : ${minStrings}`,\n                                        'warning'\n                                    );\n                                }\n                            }, 100);\n                        });\n                    }\n                }\n\n                //set the fields width\n                if (expectedLength) {\n                    expectedLength = parseInt(expectedLength, 10);\n\n                    if (expectedLength > 0) {\n                        $el.each(function () {\n                            $$1(this).css('width', `${expectedLength}em`);\n                        });\n                    }\n                }\n\n                //set the fields pattern mask\n                if (patternMask) {\n                    $el.each(function () {\n                        _setPattern($$1(this), patternMask);\n                    });\n                }\n\n                //set the fields placeholder\n                if (placeholderText) {\n                    /**\n                     * The type of the fileds placeholder:\n                     * multiple - set placeholder for each field\n                     * first - set placeholder only for first field\n                     * none - dont set placeholder\n                     */\n                    placeholderType = 'first';\n\n                    if (placeholderType === 'multiple') {\n                        $el.each(function () {\n                            $$1(this).attr('placeholder', placeholderText);\n                        });\n                    } else if (placeholderType === 'first') {\n                        $el.first().attr('placeholder', placeholderText);\n                    }\n                }\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Reset the textarea / ckEditor\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function resetResponse(interaction) {\n        if (_getFormat(interaction) === 'xhtml') {\n            _getCKEditor(interaction).setData('');\n        } else {\n            containerHelper.get(interaction).find('input, textarea').val('');\n            if (interaction.safariVerticalRlPatch) {\n                interaction.safariVerticalRlPatch.syncValue();\n            }\n        }\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {object} response\n     */\n    function setResponse(interaction, response) {\n        const _setMultipleVal = (identifier, value) => {\n            interaction.getContainer().find(`#${identifier}`).val(value);\n        };\n\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\n\n        if (response.base === null && Object.keys(response).length === 1) {\n            response = { base: { string: '' } };\n        }\n\n        if (response.base && typeof response.base[baseType] !== 'undefined') {\n            setText(interaction, response.base[baseType]);\n        } else if (response.list && response.list[baseType]) {\n            for (let i in response.list[baseType]) {\n                const serial = typeof response.list.serial === 'undefined' ? '' : response.list.serial[i];\n                _setMultipleVal(`${serial}_${i}`, response.list[baseType][i]);\n            }\n        } else {\n            throw new Error('wrong response format in argument.');\n        }\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {object}\n     */\n    function getResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const attributes = interaction.getAttributes();\n        const responseDeclaration = interaction.getResponseDeclaration();\n        const baseType = responseDeclaration.attr('baseType');\n        const numericBase = attributes.base || 10;\n        const multiple = !!(\n            attributes.maxStrings &&\n            (responseDeclaration.attr('cardinality') === 'multiple' ||\n                responseDeclaration.attr('cardinality') === 'ordered')\n        );\n        const ret = multiple ? { list: {} } : { base: {} };\n        let values;\n        let value = '';\n\n        if (multiple) {\n            values = [];\n\n            $container.find('input').each(function (i) {\n                const editorValue = $$1(this).val();\n\n                if (attributes.placeholderText && value === attributes.placeholderText) {\n                    values[i] = '';\n                } else {\n                    const convertedValue = converter.convert(editorValue);\n                    if (baseType === 'integer') {\n                        values[i] = parseInt(convertedValue, numericBase);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'float') {\n                        values[i] = parseFloat(convertedValue);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'string') {\n                        values[i] = convertedValue;\n                    }\n                }\n            });\n\n            ret.list[baseType] = values;\n        } else {\n            if (attributes.placeholderText && _getTextareaValue(interaction) === attributes.placeholderText) {\n                value = '';\n            } else {\n                if (baseType === 'integer') {\n                    value = parseInt(converter.convert(_getTextareaValue(interaction)), numericBase);\n                } else if (baseType === 'float') {\n                    value = converter.convert(_getTextareaValue(interaction));\n                } else if (baseType === 'string') {\n                    value = converter.convert(_getTextareaValue(interaction, true));\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n        }\n\n        return ret;\n    }\n\n    /**\n     * Creates an input limiter object\n     * @param {Object} interaction - the extended text interaction\n     * @returns {Object} the limiter\n     */\n    function inputLimiter(interaction) {\n        const $container = containerHelper.get(interaction);\n        const expectedLength = interaction.attr('expectedLength');\n        const expectedLines = interaction.attr('expectedLines');\n        const patternMask = interaction.attr('patternMask');\n        const isCke = _getFormat(interaction) === 'xhtml';\n        const isVertical = verticalWriting.getIsItemWritingModeVerticalRl();\n        let patternRegEx;\n        let $textarea,\n            $charsCounter,\n            $wordsCounter,\n            maxWords,\n            maxLength,\n            $maxLengthCounter,\n            $maxWordsCounter,\n            $expectedLengthCounter;\n        let enabled = false;\n\n        if (expectedLength || expectedLines || patternMask) {\n            enabled = true;\n            $textarea = $$1('.text-container', $container);\n            $charsCounter = $$1('.count-chars', $container);\n            $wordsCounter = $$1('.count-words', $container);\n            $maxLengthCounter = $$1('.count-max-length', $container);\n            $maxWordsCounter = $$1('.count-max-words', $container);\n            $expectedLengthCounter = $$1('.count-expected-length', $container);\n\n            if (patternMask !== '') {\n                maxWords = parseInt(patternMaskHelper.parsePattern(patternMask, 'words'), 10);\n                maxLength = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n                maxWords = _.isNaN(maxWords) ? 0 : maxWords;\n                maxLength = _.isNaN(maxLength) ? 0 : maxLength;\n                if (!maxLength && !maxWords) {\n                    patternRegEx = new RegExp(patternMask);\n                }\n                $maxLengthCounter.html(maxLength);\n                $maxWordsCounter.text(maxWords);\n            }\n            if (expectedLength || expectedLines) {\n                $expectedLengthCounter.html($expectedLengthCounter.text());\n            }\n        }\n\n        /**\n         * The limiter instance\n         */\n        const limiter = {\n            /**\n             * Is the limiter enabled regarding the interaction configuration\n             */\n            enabled,\n\n            /**\n             * Listen for text input into the interaction and limit it if necessary\n             */\n            listenTextInput() {\n                const ignoreKeyCodes = [\n                    8, // backspace\n                    13, // enter\n                    16, // shift\n                    17, // control\n                    46, // delete\n                    37, // arrow left\n                    38, // arrow up\n                    39, // arrow right\n                    40, // arrow down\n                    35, // home\n                    36, // end\n\n                    // ckeditor specific:\n                    1114177, // home\n                    3342401, // Shift + home\n                    1114181, // end\n                    3342405, // Shift + end\n\n                    2228232, // Shift + backspace\n                    2228261, // Shift + arrow left\n                    4456485, // Alt   + arrow left\n                    2228262, // Shift + arrow up\n                    2228263, // Shift + arrow right\n                    4456487, // Alt   + arrow right\n                    2228264, // Shift + arrow down\n                    2228237, // Shift + enter\n\n                    1114120, // Ctrl + backspace\n                    1114177, // Ctrl + a\n                    1114202, // Ctrl + z\n                    1114200 // Ctrl + x\n                ];\n                const spaceKeyCodes = [\n                    32, // space\n                    13, // enter\n                    2228237 // shift + enter in ckEditor\n                ];\n                let isComposing = false;\n                let hasCompositionJustEnded = false;\n\n                const acceptKeyCode = keyCode => ignoreKeyCodes.includes(keyCode);\n                const emptyOrSpace = txt => (txt && txt.trim() === '') || /\\^s*$/.test(txt);\n                const hasSpace = txt => /\\s+/.test(txt);\n                const getCharBefore = (str, pos) => str && str.substring(Math.max(0, pos - 1), pos);\n                const getCharAfter = (str, pos) => str && str.substring(pos, pos + 1);\n                const noSpaceNode = node =>\n                    node.type === ckEditor.NODE_TEXT || (!node.isBlockBoundary() && node.getName() !== 'br');\n                const getPreviousNotEmptyNode = range => {\n                    let node = range.getPreviousNode();\n                    /**\n                     * The previous node isn't always the right one, because it can be an empty <b> tag for example.\n                     * So we need to get the previous node until we find a non empty one, but we should not go above body.\n                     */\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let previousSourceNode = node.getPreviousSourceNode();\n                        let nodeElement = previousSourceNode;\n                        if (previousSourceNode && previousSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = previousSourceNode.parentNode || previousSourceNode.$.parentNode;\n                        }\n                        if (\n                            !nodeElement ||\n                            !nodeElement.ownerDocument ||\n                            !nodeElement.ownerDocument.body.contains(nodeElement)\n                        ) {\n                            return null;\n                        }\n                        node = previousSourceNode;\n                    }\n                    return node;\n                };\n                const getNextNotEmptyNode = range => {\n                    let node = range.getNextNode();\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let nextSourceNode = node.getNextSourceNode();\n                        let nodeElement = nextSourceNode;\n                        if (nextSourceNode && nextSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = nextSourceNode.parentNode || nextSourceNode.$.parentNode;\n                        }\n                        if (\n                            !nodeElement ||\n                            !nodeElement.ownerDocument ||\n                            !nodeElement.ownerDocument.body.contains(nodeElement)\n                        ) {\n                            return null;\n                        }\n                        node = nextSourceNode;\n                    }\n                    return node;\n                };\n                const cancelEvent = e => {\n                    if (e.cancel) {\n                        e.cancel();\n                    } else {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                    return false;\n                };\n                const invalidToolip = tooltip.error($container, __('This is not a valid answer'), {\n                    position: 'bottom',\n                    trigger: 'manual'\n                });\n                const patternHandler = function patternHandler(e) {\n                    if (isComposing || hasCompositionJustEnded) {\n                        // IME composing fires keydown/keyup events\n                        hasCompositionJustEnded = false;\n                        return;\n                    }\n\n                    if (patternRegEx) {\n                        let newValue;\n                        if (isCke) {\n                            // cke has its own object structure\n                            newValue = this.getData();\n                        } else {\n                            // covers input\n                            newValue = e.currentTarget.value;\n                        }\n\n                        if (!newValue) {\n                            return false;\n                        }\n                        _.debounce(function () {\n                            if (!patternRegEx.test(newValue)) {\n                                $container.addClass('invalid');\n                                $container.show();\n                                invalidToolip.show();\n                                containerHelper.triggerResponseChangeEvent(interaction);\n                            } else {\n                                $container.removeClass('invalid');\n                                invalidToolip.dispose();\n                            }\n                        }, 400)();\n                    }\n                };\n\n                /**\n                 * This part works on keyboard input\n                 *\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const keyLimitHandler = e => {\n                    if (isComposing) {\n                        return;\n                    }\n                    // Safari on OS X may send a keydown of 229 after compositionend\n                    if (e.which !== 229) {\n                        hasCompositionJustEnded = false;\n                    }\n\n                    const keyCode = e.data ? e.data.keyCode : e.which;\n                    const wordsCount = maxWords && this.getWordsCount();\n                    const charsCount = maxLength && this.getCharsCount();\n\n                    if (maxWords && wordsCount >= maxWords) {\n                        let left, right, middle;\n\n                        if (isCke) {\n                            const editor = _getCKEditor(interaction);\n                            const sel = editor.getSelection();\n                            const range = sel.getRanges()[0];\n\n                            if (range.startContainer && range.startContainer.type === ckEditor.NODE_TEXT) {\n                                left = getCharBefore(range.startContainer.getText(), range.startOffset);\n                            }\n                            if (!left) {\n                                const node = getPreviousNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    const text = node.getText();\n                                    left = getCharBefore(text, text && text.length);\n                                } else {\n                                    left = ' ';\n                                }\n                            }\n\n                            if (range.endContainer && range.endContainer.type === ckEditor.NODE_TEXT) {\n                                right = getCharAfter(range.endContainer.getText(), range.endOffset);\n                            }\n                            if (!right) {\n                                const node = getNextNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    right = getCharAfter(node.getText(), 0);\n                                } else {\n                                    right = ' ';\n                                }\n                            }\n\n                            middle = sel.getSelectedText();\n                        } else {\n                            const { selectionStart, selectionEnd, value } = $textarea[0];\n                            left = getCharBefore(value, selectionStart);\n                            right = getCharAfter(value, selectionEnd);\n                            middle = value.substring(selectionStart, selectionEnd);\n                        }\n\n                        // Will prevent the keystroke:\n                        // - IF there is a word part before and after the selection,\n                        //   AND the selection does not contain spaces,\n                        //   AND the keystroke is either a space or enter\n                        // - IF there is no word part before and after the selection,\n                        //   AND the selection is empty,\n                        //   AND the keystroke is not from the list of accepted codes,\n                        //   AND the keystroke is not a space\n                        if (\n                            (!emptyOrSpace(left) &&\n                                !emptyOrSpace(right) &&\n                                !hasSpace(middle) &&\n                                spaceKeyCodes.includes(keyCode)) ||\n                            (emptyOrSpace(left) &&\n                                emptyOrSpace(right) &&\n                                !middle &&\n                                !acceptKeyCode(keyCode) &&\n                                keyCode !== 32)\n                        ) {\n                            return cancelEvent(e);\n                        }\n                    }\n\n                    if (maxLength && charsCount >= maxLength && !acceptKeyCode(keyCode)) {\n                        if (!isCke && charsCount > maxLength) {\n                            const textarea = $textarea[0];\n                            textarea.value = textarea.value.substring(0, maxLength);\n                            $textarea.trigger('inputlimiter-limited');\n                            textarea.focus();\n                        }\n                        return cancelEvent(e);\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                /**\n                 * This part works on drop or paste\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const nonKeyLimitHandler = e => {\n                    let newValue;\n\n                    if (typeof $$1(e.target).attr('data-clipboard') === 'string') {\n                        newValue = $$1(e.target).attr('data-clipboard');\n                    } else if (isCke) {\n                        // cke has its own object structure\n                        newValue = e.data.dataValue;\n                    } else {\n                        // covers input via paste or drop\n                        newValue = e.originalEvent.clipboardData\n                            ? e.originalEvent.clipboardData.getData('text')\n                            : e.originalEvent.dataTransfer.getData('text') ||\n                              e.originalEvent.dataTransfer.getData('text/plain') ||\n                              '';\n                    }\n\n                    // prevent insertion of non-limited data\n                    cancelEvent(e);\n\n                    if (!newValue) {\n                        return false;\n                    }\n\n                    // limit by word or character count if required\n                    if (maxWords) {\n                        newValue = strLimiter.limitByWordCount(newValue, maxWords - this.getWordsCount());\n                    } else if (maxLength) {\n                        newValue = strLimiter.limitByCharCount(newValue, maxLength - this.getCharsCount());\n                    }\n\n                    // insert the cut-off text\n                    if (isCke) {\n                        _getCKEditor(interaction).insertHtml(newValue);\n                    } else {\n                        let elements = containerHelper.get(interaction).find('textarea');\n                        let el = elements[0];\n                        let { selectionStart: start, selectionEnd: end, value: text } = el;\n                        elements.val(text.substring(0, start) + newValue + text.substring(end, text.length));\n                        el.focus();\n                        el.selectionStart = start + newValue.length;\n                        el.selectionEnd = el.selectionStart;\n                        elements.trigger('inputlimiter-limited');\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                const handleCompositionStart = e => {\n                    isComposing = true;\n                    return e;\n                };\n\n                const handleCompositionEnd = e => {\n                    isComposing = false;\n                    hasCompositionJustEnded = true;\n                    // if plain text - then limit input right after composition end event\n                    if (_getFormat(interaction) !== 'xhtml' && maxLength) {\n                        const currentValue = $textarea[0].value;\n                        const currentLength = this.getCharsCount();\n                        if (currentLength > maxLength) {\n                            $textarea[0].value = currentValue.slice(0, maxLength - currentLength);\n                        }\n                    }\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                const handleBeforeInput = e => {\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                if (isCke) {\n                    const editor = _getCKEditor(interaction);\n\n                    if (maxLength) {\n                        let previousSnapshot = editor.getSnapshot();\n                        const CKEditorKeyLimit = function () {\n                            const range = this.createRange();\n                            if (limiter.getCharsCount() > limiter.maxLength) {\n                                const editable = this.editable();\n                                editable.setData('', true);\n                                editable.setData(previousSnapshot, true);\n                                range.moveToElementEditablePosition(editable, true);\n                                editor.getSelection().selectRanges([range]);\n                            } else {\n                                previousSnapshot = editor.getSnapshot();\n                            }\n                            _.defer(() => limiter.updateCounter());\n                        };\n                        editor.on('instanceReady', function () {\n                            const self = this;\n                            const editableElement = editor.editable().$;\n                            editableElement.addEventListener('compositionend', function () {\n                                CKEditorKeyLimit.call(self);\n                                _.defer(() => limiter.updateCounter());\n                            });\n                        });\n                        editor.on('key', CKEditorKeyLimit);\n                        editor.on('blur', CKEditorKeyLimit);\n                    }\n                    editor.on('key', keyLimitHandler);\n                    editor.on('change', evt => {\n                        patternHandler(evt);\n                        _.defer(() => this.updateCounter());\n                    });\n                    editor.on('paste', nonKeyLimitHandler);\n                    // @todo: drop requires cke 4.5\n                    // cke.on('drop', nonKeyLimitHandler);\n                } else {\n                    $textarea\n                        .on('beforeinput.commonRenderer', handleBeforeInput)\n                        .on('input.commonRenderer', () => {\n                            _.defer(() => this.updateCounter());\n                        })\n                        .on('compositionstart.commonRenderer', handleCompositionStart)\n                        .on('compositionend.commonRenderer', handleCompositionEnd)\n                        .on('keyup.commonRenderer', patternHandler)\n                        .on('keydown.commonRenderer', keyLimitHandler)\n                        .on('paste.commonRenderer drop.commonRenderer', nonKeyLimitHandler);\n                }\n            },\n\n            /**\n             * Get the number of words that are actually written in the response field\n             * @returns {Number} number of words\n             */\n            getWordsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                if (_.isEmpty(value)) {\n                    return 0;\n                }\n                // leading and trailing white space don't qualify as words\n                return value.trim().replace(/\\s+/gi, ' ').split(' ').length;\n            },\n\n            /**\n             * Get the number of characters that are actually written in the response field\n             * @returns {Number} number of characters\n             */\n            getCharsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                // remove NO-BREAK SPACE in empty lines added and all new line symbols\n                return value.replace(/[\\r\\n]{1}\\xA0[\\r\\n]{1}/gm, '\\r').replace(/[\\r\\n]+/gm, '').length;\n            },\n\n            /**\n             * Update the counter element\n             */\n            updateCounter() {\n                $charsCounter.html(this.getCharsCount());\n                $wordsCounter.text(this.getWordsCount());\n            },\n\n            maxLength\n        };\n\n        return limiter;\n    }\n\n    /**\n     * In Safari & `writing-mode: vertical-rl`, for *multiline* text:\n     *   - when user is typing, browser doesn't always repaint, so user doesn't see what he's typing.\n     *   - when user clicks (or key-navigates) inside text, cursor is shown in wrong position.\n     *     `textarea.selectionStart/textarea.selectionEnd` are set correctly, just visually cursor is painted in a wrong place.\n     * Create a workaround:\n     *   - force browser to repaint on every typed letter, using a trick\n     *   - hide native cursor, show custom div as a cursor instead\n     *   - position this custom cursor:\n     *     - create a shadow div contianing same text as textarea (<textarea>ab</textarea> -> <shadow><span>a</span><span>b</span></shadow>)\n     *     - shadow div should also have same size, font, and text-wrapping rules.\n     *     - when after click/key-nav browser changes `textarea.selectionStart` to N, use shadow to understand what are the coordinates of the Nth letter of text\n     *     - then draw custom cursor at those coordinates.\n     * Unsolved issues:\n     *   - when user clicks between lines (in a space left by the difference of line-height & font-size), `textarea.selectionStart` is wrong, cursor jumps randomly\n     *   - when user clicks on empty space left in the line, or at empty lines, `textarea.selectionStart` is wrong, cursor jumps randomly\n     *   - key-navigation is not intuitive (left/right still jump letters, and up/down - lines, as in horizontal-tb)\n     * @param {JQuery} $textarea\n     * @param {string} serial\n     * @returns {Object|null} if safari & vertical-rl,`{ syncValue: () => void, destroy: () => void }` . Otherwise `null`.\n     */\n    function _patchSafariVerticalRl($textarea, serial) {\n        if (!verticalWriting.getIsItemWritingModeVerticalRl() || !userAgent.isSafari() || !verticalWriting.supportsVerticalFormElement()) {\n            return null;\n        }\n\n        $textarea.addClass('hide-caret');\n\n        const $shadow = $$1('<div>', { class: 'shadow-textarea' });\n        const $cursor = $$1('<div>', { class: 'extendedText-shadow-caret' });\n        $$1(document.body).append($cursor);\n        $textarea.after($$1('<div>', { class: 'shadow-container' }).append($shadow));\n\n        let repaintIdx = 0;\n\n        function setShadowString(str) {\n            const shadowString = [...str, ' ']\n                .map(i => {\n                    if (i === '\\n') {\n                        return '<br/>';\n                    } else if (i === ' ') {\n                        return `<span>&#x20;</span>`;\n                    } else {\n                        return `<span>${i}</span>`;\n                    }\n                })\n                .join('');\n\n            $shadow.get(0).innerHTML = shadowString;\n        }\n\n        function forceTextareaRepaint() {\n            if (repaintIdx % 2 === 0) {\n                $textarea.get(0).style.opacity = '99%';\n            } else {\n                $textarea.get(0).style.opacity = '97%';\n            }\n            repaintIdx++;\n        }\n\n        function showHideCursor(show) {\n            if (show && ($cursor.get(0).style.display === 'none' || !$cursor.get(0).style.display)) {\n                $cursor.get(0).style.display = 'block';\n            }\n            if (!show && ($cursor.get(0).style.display !== 'none' || !$cursor.get(0).style.display)) {\n                $cursor.get(0).style.display = 'none';\n            }\n        }\n\n        function positionCursor() {\n            const selectionStart = $textarea.get(0).selectionStart;\n            const selectionEnd = $textarea.get(0).selectionEnd;\n            //range selection seems to be painted fine\n            if (selectionStart === selectionEnd && document.activeElement === $textarea.get(0)) {\n                const shadowLetterEl = $shadow.get(0).children[selectionStart];\n\n                const shadowLetterRect = shadowLetterEl.getBoundingClientRect();\n                const shadowRect = $shadow.get(0).getBoundingClientRect();\n                const textareaRect = $textarea.get(0).getBoundingClientRect();\n                const cursorRect = $cursor.get(0).getBoundingClientRect();\n                const bodyRect = document.body.getBoundingClientRect();\n\n                //iPad, when keyboard opened: 'position:fixed' is off because of addressbar height,\n                //  so for cursor use 'position:absolute' from 'body', and 'bodyRect.top' (='-window.scrollY')\n                const cursorTop = textareaRect.top + (shadowLetterRect.top - shadowRect.top) - bodyRect.top;\n                const cursorLeft =\n                    textareaRect.left -\n                    $textarea.get(0).scrollLeft +\n                    (shadowLetterRect.left - shadowRect.left + $shadow.get(0).scrollLeft);\n\n                const cursorTopStyle = `${Math.round(cursorTop)}px`;\n                const cursorLeftStyle = `${Math.round(cursorLeft)}px`;\n                if ($cursor.get(0).style.top !== cursorTopStyle) {\n                    $cursor.get(0).style.top = cursorTopStyle;\n                }\n                if ($cursor.get(0).style.left !== cursorLeftStyle) {\n                    $cursor.get(0).style.left = cursorLeftStyle;\n                }\n\n                //hide if out of bounds (after scroll for example)\n                if (\n                    cursorLeft > textareaRect.left + textareaRect.width ||\n                    cursorLeft + cursorRect.width < textareaRect.left\n                ) {\n                    showHideCursor(false);\n                } else {\n                    showHideCursor(true);\n                }\n            } else {\n                showHideCursor(false);\n            }\n        }\n\n        function syncShadowStyles() {\n            const textareaStyles = getComputedStyle($textarea.get(0));\n            const shadowStyles = getComputedStyle($shadow.get(0));\n            for (const propName of [\n                'width',\n                'height',\n                'padding',\n                'writing-mode',\n                'dir',\n                'line-height',\n                'font-family',\n                'font-size',\n                'word-break',\n                'white-space',\n                'overflow-wrap',\n                'hyphens',\n                'tab-size'\n            ]) {\n                const textareaPropVal = textareaStyles.getPropertyValue(propName);\n                const shadowPropVal = shadowStyles.getPropertyValue(propName);\n                if (textareaPropVal !== shadowPropVal) {\n                    $shadow.get(0).style[propName] = textareaPropVal;\n                }\n            }\n        }\n\n        const debouncedPositionCursor = _.debounce(() => {\n            if (document.activeElement === $textarea.get(0)) {\n                requestAnimationFrame(() => {\n                    positionCursor();\n                });\n            }\n        }, 100);\n\n        $textarea.on('input', e => {\n            forceTextareaRepaint();\n            setShadowString(e.target.value);\n            positionCursor();\n        });\n        $textarea.on('inputlimiter-limited', () => {\n            forceTextareaRepaint();\n            setShadowString($textarea.get(0).value);\n            positionCursor();\n        });\n        $textarea.on('selectionchange', () => {\n            positionCursor();\n        });\n        $textarea.on('focus', () => {\n            syncShadowStyles();\n            positionCursor();\n        });\n        $textarea.on('blur', () => {\n            showHideCursor(false);\n        });\n        $textarea.on('scroll', () => {\n            requestAnimationFrame(() => {\n                positionCursor();\n            });\n        });\n\n        //scroll containers\n        $$1('.qti-itemBody, .tao-overflow-y').on(`scroll.exttext-verticalsafari-${serial}`, debouncedPositionCursor);\n        //document is scrolled on iPad when keyboard opens\n        $$1(document).on(`scroll.exttext-verticalsafari-${serial}`, debouncedPositionCursor);\n        $$1(window).on(`resize.exttext-verticalsafari-${serial}`, debouncedPositionCursor);\n\n        $$1(document).on(`themeapplied.exttext-verticalsafari-${serial}`, () => {\n            syncShadowStyles();\n            positionCursor();\n        });\n\n        syncShadowStyles();\n        setShadowString($textarea.get(0).value);\n\n        const api = {\n            syncValue: function () {\n                setShadowString($textarea.get(0).value);\n                positionCursor();\n            },\n            destroy: function () {\n                $$1(document).off(`themeapplied.exttext-verticalsafari-${serial}`);\n                $$1(window).off(`resize.exttext-verticalsafari-${serial}`);\n                $$1('.qti-itemBody, .tao-overflow-y').off(`scroll.exttext-verticalsafari-${serial}`);\n                $cursor.remove();\n            }\n        };\n        return api;\n    }\n\n    /**\n     * return the value of the textarea or ckeditor data\n     * @param  {Object} interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {String} the value\n     */\n    function _getTextareaValue(interaction, raw) {\n        if (_getFormat(interaction) === 'xhtml') {\n            return _ckEditorData(interaction, raw);\n        } else {\n            return containerHelper.get(interaction).find('textarea').val();\n        }\n    }\n\n    /**\n     * Setting the pattern mask for the input, for browsers which doesn't support this feature\n     * @param {jQuery} $element\n     * @param {string} pattern\n     */\n    function _setPattern($element, pattern) {\n        const patt = new RegExp(pattern);\n\n        //test when some data is entering in the input field\n        //@todo plug the validator + tooltip\n        $element.on('keyup.commonRenderer', function () {\n            $element.removeClass('field-error');\n            if (!patt.test($element.val())) {\n                $element.addClass('field-error');\n            }\n        });\n    }\n\n    /**\n     * Whether or not multiple strings are expected from the candidate to\n     * compose a valid response.\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Boolean} true if a multiple\n     */\n    function _isMultiple(interaction) {\n        const attributes = interaction.getAttributes();\n        const response = interaction.getResponseDeclaration();\n        return !!(\n            attributes.maxStrings &&\n            (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n        );\n    }\n\n    /**\n     * Instantiate CkEditor for the interaction\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {Object} [options= {}] - the CKEditor configuration options\n     * @returns {Object} the ckEditor instance (or you'll be in trouble\n     */\n    function _setUpCKEditor(interaction, options) {\n        const $container = containerHelper.get(interaction);\n        const editor = ckEditor.replace($container.find('.text-container')[0], options || {});\n        if (editor) {\n            $container.data('editor', editor.name);\n            return editor;\n        }\n    }\n\n    /**\n     * Destroy CKEditor\n     *\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function _destroyCkEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n        let editor;\n        if (name) {\n            editor = ckEditor.instances[name];\n        }\n        if (editor) {\n            editor.destroy();\n            $container.removeData('editor');\n        }\n    }\n\n    /**\n     * Gets the CKEditor instance\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Object}  CKEditor instance\n     */\n    function _getCKEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n\n        return ckEditor.instances[name];\n    }\n\n    /**\n     * get the text content of the ckEditor ( not the entire html )\n     * @param  {object} interaction the interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {string}             text content of the ckEditor\n     */\n    function _ckEditorData(interaction, raw) {\n        const editor = _getCKEditor(interaction);\n        let data = (editor && editor.getData()) || '';\n\n        if (!raw) {\n            data = _stripTags(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Remove HTML tags from a string\n     * @param {String} str\n     * @returns {String}\n     */\n    function _stripTags(str) {\n        const tempNode = document.createElement('div');\n        tempNode.innerHTML = str;\n        return tempNode.textContent;\n    }\n\n    /**\n     * Get the interaction format\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {String} format in 'plain', 'xhtml', 'preformatted'\n     */\n    function _getFormat(interaction) {\n        const format = interaction.attr('format');\n        if (['plain', 'xhtml', 'preformatted'].includes(format)) {\n            return format;\n        }\n        return 'plain';\n    }\n\n    function enable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').removeAttr('disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(false);\n                } else {\n                    editor.readOnly = false;\n                }\n            }\n        }\n    }\n\n    function disable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').attr('disabled', 'disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(true);\n                } else {\n                    editor.readOnly = true;\n                }\n            }\n        }\n    }\n\n    function clearText(interaction) {\n        setText(interaction, '');\n    }\n\n    function setText(interaction, text) {\n        const limiter = inputLimiter(interaction);\n        if (_getFormat(interaction) === 'xhtml') {\n            try {\n                _getCKEditor(interaction).setData(text, function () {\n                    if (limiter.enabled) {\n                        limiter.updateCounter();\n                    }\n                });\n            } catch (e) {\n                logger.warn(`setText error ${e}!`);\n            }\n        } else {\n            containerHelper.get(interaction).find('textarea').val(text);\n            if (limiter.enabled) {\n                limiter.updateCounter();\n            }\n            if (interaction.safariVerticalRlPatch) {\n                interaction.safariVerticalRlPatch.syncValue();\n            }\n        }\n    }\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $el = $container.find('input, textarea');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            _destroyCkEditor(interaction);\n        }\n\n        //remove event\n        $el.off('.commonRenderer');\n        $$1(document).off('.commonRenderer');\n\n        if (interaction.safariVerticalRlPatch) {\n            interaction.safariVerticalRlPatch.destroy();\n        }\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                try {\n                    interaction.setResponse(state.response);\n                } catch (e) {\n                    interaction.resetResponse();\n                    throw e;\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    }\n\n    /**\n     * Hydrates the dataset for the interaction with respect to its attributes.\n     *\n     * @param {object} interaction - the interaction instance\n     * @param {object} data - the default data object\n     * @returns {object} the hydrated data set\n     */\n    function getData(interaction, data) {\n        const pattern = interaction.attr('patternMask');\n        const maxWords = parseInt(patternMaskHelper.parsePattern(pattern, 'words'), 10);\n        const maxLength = parseInt(patternMaskHelper.parsePattern(pattern, 'chars'), 10);\n        const expectedLines = parseInt(interaction.attr('expectedLines'), 10);\n        const expectedLength = !isNaN(expectedLines)\n            ? expectedLines * 72\n            : parseInt(interaction.attr('expectedLength'), 10);\n\n        // Build DOM placeholders, this is needed to properly assemble the constraint hints\n        // The interaction will later rely on this to bind the values\n        const countChars = countTpl({ name: 'count-chars', value: 0 });\n        const countWords = countTpl({ name: 'count-words', value: 0 });\n        const countExpectedLength = countTpl({ name: 'count-expected-length', value: expectedLength });\n        const countMaxLength = countTpl({ name: 'count-max-length', value: maxLength });\n        const countMaxWords = countTpl({ name: 'count-max-words', value: maxWords });\n\n        return _.merge(data || {}, {\n            maxWords: !isNaN(maxWords) ? maxWords : 0,\n            maxLength: !isNaN(maxLength) ? maxLength : 0,\n            attributes: !isNaN(expectedLines) ? { expectedLength } : void 0,\n            // Build the constraint hints from translated text and DOM placeholders\n            // The template will render them as it, then the interaction will update the value from the binding\n            constraintHints: {\n                expectedLength: __('%s of %s characters recommended.', countChars, countExpectedLength),\n                maxLength: __('%s of %s characters maximum.', countChars, countMaxLength),\n                maxWords: __('%s of %s words maximum.', countWords, countMaxWords)\n            }\n        });\n    }\n\n    /**\n     * Expose the common renderer for the extended text interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction\n     */\n    var ExtendedTextInteraction = {\n        qtiClass: 'extendedTextInteraction',\n        getContainer: containerHelper.get,\n        template,\n        render,\n        setResponse,\n        getResponse,\n        getData,\n        resetResponse,\n        destroy,\n        getState,\n        setState,\n        enable,\n        disable,\n        clearText,\n        setText,\n        inputLimiter\n    };\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',['lodash', 'i18n', 'jquery', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, __, $$1, Handlebars, Helpers0, containerHelper, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-gapMatchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"gapMatchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <ul class=\\\"choice-area none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    var setChoice = function(interaction, $choice, $target) {\n        var choiceSerial = $choice.data('serial'),\n            choice = interaction.getChoice(choiceSerial);\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n        _choiceUsages[choiceSerial]++;\n\n        $target\n            .data('serial', choiceSerial)\n            .html($choice.html())\n            .addClass('filled');\n\n        if (\n            !interaction.responseMappingMode &&\n            choice.attr('matchMax') &&\n            _choiceUsages[choiceSerial] >= choice.attr('matchMax')\n        ) {\n            $choice.attr('class', 'deactivated');\n        }\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n    };\n\n    var unsetChoice = function(interaction, $choice) {\n        var serial = $choice.data('serial');\n        var $container = containerHelper.get(interaction);\n\n        $container\n            .find('.choice-area [data-serial=' + serial + ']')\n            .removeClass()\n            .addClass('qti-choice');\n\n        _choiceUsages[serial]--;\n\n        $choice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if (!interaction.swapping) {\n            //set correct response\n            containerHelper.triggerResponseChangeEvent(interaction);\n        }\n    };\n\n    var getChoice = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.choice-area [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    var getGap = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.qti-flow-container [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $container.find('.choice-area');\n        var $flowContainer = $container.find('.qti-flow-container');\n\n        var $activeChoice = null;\n        var $activeDrop = null;\n\n        var isDragAndDropEnabled;\n        var dragOptions;\n        var scaleX, scaleY;\n\n        var $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n        var choiceSelector = $choiceArea.selector + ' .qti-choice';\n        var gapSelector = $flowContainer.selector + ' .gapmatch-content';\n        var filledGapSelector = gapSelector + '.filled';\n        var binSelector = $container.selector + ' .remove-choice';\n\n        var _getChoice = function(serial) {\n            return $choiceArea.find('[data-serial=' + serial + ']');\n        };\n\n        var _setChoice = function($choice, $target) {\n            return setChoice(interaction, $choice, $target);\n        };\n\n        var _resetSelection = function() {\n            if ($activeChoice) {\n                $flowContainer.find('.remove-choice').remove();\n                $activeChoice.removeClass('deactivated active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            }\n        };\n\n        var _unsetChoice = function($choice) {\n            return unsetChoice(interaction, $choice);\n        };\n\n        var _isInsertionMode = function() {\n            return $activeChoice && !$activeChoice.hasClass('filled');\n        };\n\n        var _isModeEditing = function() {\n            return $activeChoice && $activeChoice.hasClass('filled');\n        };\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').gapMatch) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').gapMatch;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function() {\n                if ($activeDrop) {\n                    interact(gapSelector).fire({\n                        type: 'drop',\n                        target: $activeDrop.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 1, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleChoiceSelect($target);\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes filled gaps draggables\n            interact(filledGapSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleFilledGapSelect($target);\n\n                            _iFrameDragFix(filledGapSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n\n                            if ($activeChoice) {\n                                _unsetChoice($activeChoice);\n                                _resetSelection();\n                            }\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes gaps droppables\n            interact(gapSelector).dropzone({\n                overlap: 0.05,\n                ondragenter: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $activeDrop = $target;\n                    $target.addClass('dropzone');\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function(e) {\n                    _handleGapSelect($$1(e.target));\n\n                    this.ondragleave(e);\n                },\n                ondragleave: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $target.removeClass('dropzone');\n                    $dragged.removeClass('droppable');\n\n                    $activeDrop = null;\n                }\n            });\n        }\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function(e) {\n            e.stopPropagation();\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleChoiceSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(gapSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleGapSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(binSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _unsetChoice($activeChoice);\n            _resetSelection();\n            e.preventDefault();\n        });\n\n        // Common handlers\n\n        function _handleChoiceSelect($target) {\n            if (($activeChoice && $target.hasClass('active')) || $target.hasClass('deactivated')) {\n                return;\n            }\n            _resetSelection();\n\n            $activeChoice = $target.addClass('active');\n            $$1(gapSelector).addClass('empty');\n        }\n\n        function _handleFilledGapSelect($target) {\n            $activeChoice = $target;\n            $$1(gapSelector).addClass('active');\n        }\n\n        function _handleGapSelect($target) {\n            var choiceSerial, targetSerial;\n\n            if (_isInsertionMode()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    //set choices:\n                    if (targetSerial) {\n                        _unsetChoice($target);\n                    }\n\n                    _setChoice($activeChoice, $target);\n                }\n\n                $activeChoice.removeClass('active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            } else if (_isModeEditing()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    _unsetChoice($activeChoice);\n                    if (targetSerial) {\n                        //swapping:\n                        _unsetChoice($target);\n                        _setChoice(_getChoice(targetSerial), $activeChoice);\n                    }\n                    _setChoice(_getChoice(choiceSerial), $target);\n                }\n\n                _resetSelection();\n            } else if ($target.data('serial') && $target.hasClass('filled')) {\n                targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $flowContainer\n                    .find('>li>div')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                //append trash bin:\n                $target.append($bin);\n            }\n        }\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        $$1('.gapmatch-content.active', $container).removeClass('active');\n        $$1('.gapmatch-content', $container).each(function() {\n            unsetChoice(interaction, $$1(this));\n        });\n    };\n\n    var _setPairs = function(interaction, pair) {\n        if (pair && pair.length) {\n            setChoice(interaction, getChoice(interaction, pair[0]), getGap(interaction, pair[1]).find('.gapmatch-content'));\n        }\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        resetResponse(interaction);\n        let pairs = pciResponse.unserialize(response, interaction);\n        if ( _.isArray(pairs) && _.isArray(pairs[0])) {\n            _.forEach(pairs, pair => _setPairs(interaction, pair));\n        } else {\n            _setPairs(interaction, pairs);\n        }\n    };\n\n    var _getRawResponse = function(interaction) {\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $$1('.gapmatch-content', $container).each(function() {\n            var choiceSerial = $$1(this).data('serial'),\n                pair = [];\n\n            if (choiceSerial) {\n                pair.push(interaction.getChoice(choiceSerial).attr('identifier'));\n            }\n            pair.push($$1(this).data('identifier'));\n\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10307\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' .qti-choice').unset();\n        interact($container.find('.qti-flow-container').selector + ' .gapmatch-content').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //restore selection\n        $container.find('.gapmatch-content').empty();\n        $container.find('.active').removeClass('active');\n        $container.find('.remove-choice').remove();\n        $container.find('.empty').removeClass('empty');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the gapmatch interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GapMatchInteraction\n     */\n    var GapMatchInteraction = {\n        qtiClass: 'gapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicAssociateInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the element that has the active state\n     * @private\n     * @param {Object} interaction\n     * @returns {Raphael.Element} the active element\n     */\n    const _getActiveElement = function _getActiveElement(interaction) {\n        let active;\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && element.active === true) {\n                active = element;\n                return false;\n            }\n        });\n        return active;\n    };\n\n    /**\n     * Create a path from a src element to a destination.\n     * The path is selectable and can be removed by itself\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} srcElement - the path starts from this shape\n     * @param {Raphael.Element} destElement - the path ends to this shape\n     * @param {Function} onRemove - called back on path remove\n     */\n    const _createPath = function _createPath(interaction, srcElement, destElement, onRemove) {\n        const $container = containerHelper.get(interaction);\n\n        //virtual set, not a raphael one, just to group the elements\n        let vset = [];\n\n        //get the middle point of the source shape\n        const src = srcElement.getBBox();\n        const sx = src.x + src.width / 2;\n        const sy = src.y + src.height / 2;\n\n        //get the middle point of the source shape\n        const dest = destElement.getBBox();\n        const dx = dest.x + dest.width / 2;\n        const dy = dest.y + dest.height / 2;\n\n        //create a path with bullets at the beginning and the end\n        const srcBullet = interaction.paper.circle(sx, sy, 3).attr(graphic._style['assoc-bullet']);\n\n        const destBullet = interaction.paper.circle(dx, dy, 3).attr(graphic._style['assoc-bullet']);\n\n        const path = interaction.paper\n            .path('M' + sx + ',' + sy + 'L' + sx + ',' + sy)\n            .attr(graphic._style.assoc)\n            .animate({ path: 'M' + sx + ',' + sy + 'L' + dx + ',' + dy }, 300);\n\n        //create an overall layer that make easier the path selection\n        const layer = interaction.paper.path('M' + sx + ',' + sy + 'L' + dx + ',' + dy).attr(graphic._style['assoc-layer']);\n\n        //get the middle of the path\n        const midPath = layer.getPointAtLength(layer.getTotalLength() / 2);\n\n        //create an hidden background for the closer\n        const closerBg = interaction.paper.circle(midPath.x, midPath.y, 9).attr(graphic._style['close-bg']).toBack();\n\n        //create an hidden closer\n        const closer = interaction.paper\n            .path(graphic._style.close.path)\n            .attr(graphic._style.close)\n            .transform('T' + (midPath.x - 9) + ',' + (midPath.y - 9))\n            .attr('title', __('Click again to remove'))\n            .toBack();\n\n        //the path is below the shapes\n        srcElement.toFront();\n        destElement.toFront();\n\n        //add the path into a set\n        vset = [srcBullet, path, destBullet, layer, closerBg, closer];\n        interaction._vsets.push(vset);\n\n        //to identify the element of the set outside the context\n        vset.forEach(el => {\n            el.data('assoc-path', true);\n        });\n\n        //enable to select the path by clicking the invisible layer\n        layer.click(function selectLigne() {\n            if (closer.attrs.opacity === 0) {\n                showCloser();\n            } else {\n                hideCloser();\n            }\n        });\n\n        $container.on('unselect.graphicassociate', function () {\n            hideCloser();\n        });\n\n        function showCloser() {\n            closerBg.toFront().animate({ opacity: 0.8 }, 300).click(removeSet);\n            closer.toFront().animate({ opacity: 1 }, 300).click(removeSet);\n        }\n\n        function hideCloser() {\n            if (closerBg && closerBg.type) {\n                closerBg\n                    .animate({ opacity: 0 }, 300, function () {\n                        closerBg.toBack();\n                    })\n                    .unclick();\n                closer\n                    .animate({ opacity: 0 }, 300, function () {\n                        closer.toBack();\n                    })\n                    .unclick();\n            }\n        }\n\n        //remove set handler\n        function removeSet() {\n            vset.forEach(item => item.remove());\n            interaction._vsets = _.without(interaction._vsets, vset);\n            if (typeof onRemove === 'function') {\n                onRemove();\n            }\n        }\n    };\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || 0;\n            matchable = matchMax === 0 || matchMax > matching;\n        }\n        return matchable;\n    };\n    /**\n     * Makes the shapes selectable\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} active - the active shape\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction, active) {\n        const assocs = active.data('assocs') || [];\n        const choices = interaction.getChoices();\n        const activeChoice = choices[active.id];\n\n        //update the shape state\n        _.forEach(choices, function (choice) {\n            if (!assocs.includes(choice.id())) {\n                const element = interaction.paper.getById(choice.serial);\n                const assocsElement = element.data('assocs') || [];\n                if (\n                    !element.active &&\n                    element.id !== active.id &&\n                    _isMatchable(element) &&\n                    !assocsElement.includes(activeChoice.id())\n                ) {\n                    element.selectable = true;\n                    graphic.updateElementState(element, 'selectable');\n                }\n            }\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        let responses = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            const assocs = element.data('assocs');\n            if (element && assocs) {\n                responses = responses.concat(\n                    _.map(assocs, function (id) {\n                        return [choice.id(), id];\n                    })\n                );\n            }\n        });\n        return responses;\n    };\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (image) {\n            image.click(function () {\n                _shapesUnSelectable(interaction);\n                $container.trigger('unselect.graphicassociate');\n            });\n        }\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const shape = choice.attr('shape');\n        const coords = choice.attr('coords');\n        const maxAssociations = interaction.attr('maxAssociations');\n\n        graphic\n            .createElement(interaction.paper, shape, coords, {\n                id: choice.serial,\n                title: __('Select this area to start an association')\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', 0)\n            .removeData('assocs')\n            .click(function () {\n                //can't create more associations than the maxAssociations attr\n                if (maxAssociations > 0 && _getRawResponse(interaction).length >= maxAssociations) {\n                    _shapesUnSelectable(interaction);\n                    instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                    return;\n                }\n                const active = _getActiveElement(interaction);\n                if (this.selectable) {\n                    if (active) {\n                        //increment the matching counter\n                        active.data('matching', active.data('matching') + 1);\n                        this.data('matching', this.data('matching') + 1);\n\n                        //attach the response to the active (not the dest)\n                        const assocs = active.data('assocs') || [];\n                        assocs.push(choice.id());\n                        active.data('assocs', assocs);\n\n                        //and create the path\n                        _createPath(interaction, active, this, () => {\n                            //decrement the matching counter\n                            active.data('matching', active.data('matching') - 1);\n                            this.data('matching', this.data('matching') - 1);\n\n                            //detach the response from the active\n                            active.data('assocs', _.pull(active.data('assocs') || [], choice.id()));\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                        });\n                    }\n                    _shapesUnSelectable(interaction);\n                } else if (this.active) {\n                    _shapesUnSelectable(interaction);\n                } else if (_isMatchable(this)) {\n                    if (active) {\n                        _shapesUnSelectable(interaction);\n                    }\n                    graphic.updateElementState(this, 'active', __('Select this area to start an association'));\n                    this.active = true;\n                    _shapesSelectable(interaction, this);\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n            interaction._vsets = [];\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //make the paper clear the selection by clicking it\n            _paperUnSelect(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minAssociations'),\n                max: interaction.attr('maxAssociations'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data && data.target) {\n                        graphic.highlightError(data.target);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n                if (responseValues.length === 2 && !Array.isArray(responseValues[0]) && !Array.isArray(responseValues[1])) {\n                    responseValues = [responseValues];\n                }\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                //create an object with choiceId => shapeElement\n                const map = _.transform(interaction.getChoices(), function (res, choice) {\n                    res[choice.id()] = interaction.paper.getById(choice.serial);\n                });\n                _.forEach(responseValues, function (responseValue) {\n                    if (_.isArray(responseValue) && responseValue.length === 2) {\n                        const el1 = map[responseValue[0]];\n                        const el2 = map[responseValue[1]];\n                        if (el1 && el2) {\n                            graphic.trigger(el1, 'click');\n                            graphic.trigger(el2, 'click');\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const toRemove = [];\n        //reset response and state bound to shapes\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.data({\n                    max: choice.attr('matchMax'),\n                    matching: 0,\n                    assocs: []\n                });\n            }\n        });\n\n        if (interaction && interaction.paper) {\n            //remove the paths, but outside the forEach as it is implemented as a linked list\n            interaction.paper.forEach(function (elt) {\n                if (elt.data('assoc-path')) {\n                    toRemove.push(elt);\n                }\n            });\n        }\n        toRemove.forEach(el => el.remove());\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $container.off('.graphicassociate');\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction\n     */\n    var GraphicAssociateInteraction = {\n        qtiClass: 'graphicAssociateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',['jquery', 'lodash', 'i18n', 'module', 'core/mouseEvent', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'interact', 'ui/interactUtils'], function ($$1, _, __, module, mouseEvent, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicGapMatchInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal source\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.gapImgs) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.gapImgs); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.gapImgs) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    let isDragAndDropEnabled;\n\n    // this represents the state for the active droppable zone\n    // we need it only to access the active dropzone in the iFrameFix\n    // should be removed when the old test runner is discarded\n    let activeDrop = null;\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    const _choiceUsages = {};\n\n    /**\n     * This options enables to support old items created with the wrong\n     * direction in the directedpairs.\n     *\n     * @deprecated\n     */\n    const isDirectedPairFlipped = module.config().flipDirectedPair;\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || [];\n            matchable = matchMax === 0 || matchMax > matching.length;\n        }\n        return matchable;\n    };\n\n    /**\n     * Makes the shapes selectable (at least those who can still accept matches)\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction) {\n        const tooltip = __('Select the area to add an image');\n\n        //update the shape state\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (_isMatchable(element)) {\n                element.selectable = true;\n                graphic.setStyle(element, 'selectable');\n                graphic.updateTitle(element, tooltip);\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, tooltip);\n            });\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                graphic.setStyle(element, 'basic');\n                graphic.updateTitle(element, __('Select an image first'));\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, __('Remove'));\n            });\n        });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $gapImages = $$1('ul > li', $container);\n        const bgImage = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (bgImage) {\n            interact(bgImage.node).on('tap', function () {\n                _shapesUnSelectable(interaction);\n                $gapImages.removeClass('active');\n            });\n        }\n    };\n\n    /**\n     * Sets a choice and marks as disabled if at max\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _setChoice = function _setChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getGapImg(choiceSerial);\n        let matchMax;\n        let usages;\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n\n        _choiceUsages[choiceSerial]++;\n\n        // disable choice if maxium usage reached\n        if (!interaction.responseMappingMode && choice.attr('matchMax')) {\n            matchMax = +choice.attr('matchMax');\n            usages = +_choiceUsages[choiceSerial];\n\n            // note: if matchMax is 0, then test taker is allowed unlimited usage of that choice\n            if (matchMax !== 0 && matchMax <= usages) {\n                interact($choice.get(0)).draggable(false);\n                $choice.addClass('disabled');\n                $choice.removeClass('selectable');\n            }\n        }\n    };\n\n    /**\n     * Unset a choice and unmark as disabled\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _unsetChoice = function _unsetChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n\n        _choiceUsages[choiceSerial]--;\n\n        $choice.removeClass('disabled');\n        $choice.addClass('selectable');\n        interact($choice.get(0)).draggable(true);\n    };\n\n    /**\n     * Select a shape (= hotspot) (a gap image must be active)\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} element - the selected shape\n     * @param {Boolean} [trackResponse = true] - if the selection trigger a response chane\n     */\n    const _selectShape = function _selectShape(interaction, element, trackResponse) {\n        let $img, $clone, id, bbox, shapeOffset, activeOffset, matching, currentCount;\n\n        //lookup for the active element\n        const $container = containerHelper.get(interaction);\n        const $gapList = $$1('ul', $container);\n        const $active = $gapList.find('.active:first');\n        const $imageBox = $$1('.main-image-box', $container);\n        const boxOffset = $imageBox.offset();\n\n        if ($active.length) {\n            //the macthing elements are linked to the shape\n            id = $active.data('identifier');\n            matching = element.data('matching') || [];\n            matching.push(id);\n            element.data('matching', matching);\n            currentCount = matching.length;\n\n            //the image to clone\n            $img = $active.find('img');\n\n            //then reset the state of the shapes and the gap images\n            _shapesUnSelectable(interaction);\n            $gapList.children().removeClass('active');\n\n            _setChoice(interaction, $active);\n\n            $clone = $img.clone();\n            shapeOffset = $$1(element.node).offset();\n            activeOffset = $active.offset();\n\n            $clone.css({\n                position: 'absolute',\n                display: 'block',\n                'z-index': 10000,\n                opacity: 0.8,\n                top: activeOffset.top - boxOffset.top,\n                left: activeOffset.left - boxOffset.left\n            });\n\n            $clone.appendTo($imageBox);\n            $clone.animate(\n                {\n                    top: shapeOffset.top - boxOffset.top,\n                    left: shapeOffset.left - boxOffset.left\n                },\n                200,\n                function animationEnd() {\n                    $clone.remove();\n\n                    //extract some coords for positioning\n                    bbox = element.getBBox();\n\n                    //create an image into the paper and move it to the selected shape\n                    const gapFiller = graphic\n                        .createBorderedImage(interaction.paper, {\n                            url: $img.attr('src'),\n                            left: bbox.x + 8 * (currentCount - 1),\n                            top: bbox.y + 8 * (currentCount - 1),\n                            width: parseInt($img.attr('width'), 10),\n                            height: parseInt($img.attr('height'), 10),\n                            padding: 0,\n                            border: false,\n                            shadow: true\n                        })\n                        .data('identifier', id)\n                        .toFront();\n\n                    const gapFillerImage = gapFiller[2].node;\n                    interact(gapFillerImage).on('tap', function (e) {\n                        const target = e.currentTarget;\n                        const rElement = interaction.paper.getById(target.raphaelid);\n\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // adding a new gapfiller on the hotspot by simulating a click on the underlying shape...\n                        if ($gapList.find('.active').length > 0) {\n                            interactUtils.tapOn(element.node);\n\n                            // ... or removing the existing gapfiller\n                        } else {\n                            //update the element matching array\n                            element.data(\n                                'matching',\n                                _.without(element.data('matching') || [], rElement.data('identifier'))\n                            );\n\n                            //delete interaction.gapFillers[interaction.gapFillers.indexOf(gapFiller)];\n                            interaction.gapFillers = _.without(interaction.gapFillers, gapFiller);\n\n                            gapFiller.remove();\n\n                            _unsetChoice(interaction, $active);\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                        }\n                    });\n\n                    interaction.gapFillers.push(gapFiller);\n\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                }\n            );\n        }\n    };\n\n    /**\n     * Render a choice (= hotspot) inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     *\n     * @private\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        //create the shape\n        const rElement = graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select an image first'),\n                hover: false\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', []);\n\n        interact(rElement.node).on('tap', function onClickShape() {\n            handleShapeSelect();\n        });\n\n        if (isDragAndDropEnabled) {\n            interact(rElement.node).dropzone({\n                overlap: 0.15,\n                ondragenter: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'hover');\n                        activeDrop = rElement.node;\n                    }\n                },\n                ondrop: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        handleShapeSelect();\n                        activeDrop = null;\n                    }\n                },\n                ondragleave: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        activeDrop = null;\n                    }\n                }\n            });\n        }\n\n        function handleShapeSelect() {\n            // check if can make the shape selectable on click\n            if (_isMatchable(rElement) && rElement.selectable === true) {\n                _selectShape(interaction, rElement);\n            }\n        }\n    };\n\n    const _iFrameDragFix = function _iFrameDragFix(draggableSelector, target) {\n        interactUtils.iFrameDragFixOn(function () {\n            if (activeDrop) {\n                interact(activeDrop).fire({\n                    type: 'drop',\n                    target: activeDrop,\n                    relatedTarget: target\n                });\n            }\n            interact(draggableSelector).fire({\n                type: 'dragend',\n                target: target\n            });\n        });\n    };\n\n    /**\n     * Render the list of gap fillers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $gapList - the list than contains the orderers\n     */\n    const _renderGapList = function _renderGapList(interaction, $gapList) {\n        const gapFillersSelector = $gapList.selector + ' li';\n        let dragOptions;\n        let scaleX, scaleY;\n\n        interact(gapFillersSelector).on('tap', function onClickGapImg(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            toggleActiveGapState($$1(e.currentTarget));\n        });\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            $$1(gapFillersSelector).each(function (index, gap) {\n                interact(gap)\n                    .draggable(\n                        _.assign({}, dragOptions, {\n                            onstart: function (e) {\n                                const $target = $$1(e.target);\n                                _setActiveGapState($target);\n                                $target.addClass('dragged');\n\n                                _iFrameDragFix(gapFillersSelector, e.target);\n                                const scale = interactUtils.calculateScale(e.target);\n                                scaleX = scale[0];\n                                scaleY = scale[1];\n                            },\n                            onmove: function (e) {\n                                interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            },\n                            onend: function (e) {\n                                _.defer(() => {\n                                    const $target = $$1(e.target);\n                                    _setInactiveGapState($target);\n                                    $target.removeClass('dragged');\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n                                });\n                            }\n                        })\n                    )\n                    .styleCursor(false);\n            });\n        }\n\n        function toggleActiveGapState($target) {\n            if (!$target.hasClass('disabled')) {\n                if ($target.hasClass('active')) {\n                    _setInactiveGapState($target);\n                } else {\n                    _setActiveGapState($target);\n                }\n            }\n        }\n\n        function _setActiveGapState($target) {\n            $gapList.children('li').removeClass('active');\n            $target.addClass('active');\n            _shapesSelectable(interaction);\n        }\n\n        function _setInactiveGapState($target) {\n            $target.removeClass('active');\n            _shapesUnSelectable(interaction);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @return {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const $gapList = $$1('ul.source', $container);\n            const background = interaction.object.attributes;\n\n            interaction.gapFillers = [];\n\n            if (\n                self.getOption &&\n                self.getOption('enableDragAndDrop') &&\n                self.getOption('enableDragAndDrop').graphicGapMatch\n            ) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').graphicGapMatch;\n            }\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                resize: function (newSize, factor) {\n                    $gapList.css('max-width', newSize + 'px');\n                    if (factor !== 1) {\n                        $gapList.find('img').each(function () {\n                            const $img = $$1(this);\n                            $img.width($img.attr('width') * factor);\n                            $img.height($img.attr('height') * factor);\n                        });\n                    }\n                },\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //create the list of gap images\n            _renderGapList(interaction, $gapList);\n\n            //clicking the paper to reset selection\n            _paperUnSelect(interaction);\n        });\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of matches\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const pairs = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && _.isArray(element.data('matching'))) {\n                _.forEach(element.data('matching'), function (gapImg) {\n                    //backward support of previous order\n                    if (isDirectedPairFlipped) {\n                        pairs.push([choice.id(), gapImg]);\n                    } else {\n                        pairs.push([gapImg, choice.id()]);\n                    }\n                });\n            }\n        });\n        return _.sortBy(pairs, [0, 1]);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                responseValues = null;\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    const element = interaction.paper.getById(choice.serial);\n                    if (element) {\n                        _.forEach(responseValues, function (pair) {\n                            if (pair.length === 2) {\n                                //backward support of previous order\n                                const responseChoice = isDirectedPairFlipped ? pair[0] : pair[1];\n                                const responseGap = isDirectedPairFlipped ? pair[1] : pair[0];\n                                if (responseChoice === choice.id()) {\n                                    $$1('[data-identifier=\"' + responseGap + '\"]', $container).addClass('active');\n                                    _selectShape(interaction, element);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _shapesUnSelectable(interaction);\n\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            interactUtils.tapOn(gapFiller.items[2][0]); // this refers to the gapFiller image\n        });\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        return pciResponse.serialize(raw, interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n\n            interact($container.find('ul.source li').selector).unset(); // gapfillers\n            interact($container.find('.main-image-box rect').selector).unset(); // choices/hotspot\n        }\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var GraphicGapMatchInteraction = {\n        qtiClass: 'graphicGapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        isDirectedPairFlipped: isDirectedPairFlipped\n    };\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicOrderInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal ordinals\\\"></ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Creates ALL the texts (the numbers to display in the shapes). They are created styled but hidden.\n     *\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Number} size - the number of numbers to create...\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @return {Array} the creates text element\n     */\n    const _createTexts = function _createTexts(paper, size) {\n        const texts = [];\n        _.times(size, function (index) {\n            const number = index + 1;\n            const text = graphic.createText(paper, {\n                id: 'text-' + number,\n                content: number,\n                title: __('Remove'),\n                style: 'order-text',\n                hide: true,\n                disableEvents: true\n            });\n\n            texts.push(text);\n        });\n        return texts;\n    };\n    /**\n     * Render the list of numbers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _renderOrderList = function _renderOrderList(interaction, $orderList) {\n        let size = _.size(interaction.getChoices());\n        const min = interaction.attr('minChoices');\n        const max = interaction.attr('maxChoices');\n\n        //calculate the number of orderer to display\n        if (max > 0 && max <= size) {\n            size = max;\n        } else if (min > 0 && min <= size) {\n            size = min;\n        }\n\n        //add them to the list\n        _.times(size, function (index) {\n            const position = index + 1;\n            const $orderer = $$1('<li class=\"selectable\" data-number=\"' + position + '\">' + position + '</li>');\n            if (index === 0) {\n                $orderer.addClass('active');\n            }\n            $orderList.append($orderer);\n        });\n\n        //create related svg texts\n        _createTexts(interaction.paper, size);\n\n        //bind the activation event\n        const $orderers = $orderList.children('li');\n        $orderers.click(function (e) {\n            e.preventDefault();\n            const $orderer = $$1(this);\n\n            if (!$orderer.hasClass('active') && !$orderer.hasClass('disabled')) {\n                $orderers.removeClass('active');\n                $orderer.addClass('active');\n            }\n        });\n    };\n    /**\n     * Show the text that match the element's number.\n     * We need to display it at the center of the shape.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to show the text for\n     */\n    const _showText = function _showText(paper, element) {\n        const bbox = element.getBBox();\n\n        //we retrieve the good text from it's id\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            //move it to the center of the shape (using absolute transform), and than display it\n            const transf = 'T' + (bbox.x + bbox.width / 2) + ',' + (bbox.y + bbox.height / 2);\n            text.transform(transf).show().toFront();\n        }\n    };\n    /**\n     * Select a shape to position an order\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the selected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _selectShape = function _selectShape(paper, element, $orderList) {\n        //lookup for the active number\n        const $active = $orderList.find('.active:first');\n        if ($active.length && $active.data('number') > 0) {\n            //associate the current number directly to the element\n            element.data('number', $active.data('number'));\n            element.active = true;\n            _showText(paper, element);\n            graphic.updateElementState(element, 'active');\n\n            //update the state of the order list\n            $active.toggleClass('active disabled').siblings(':not(.disabled)').first().toggleClass('active');\n        }\n    };\n    /**\n     * Hide an element text.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to hide the text for\n     */\n    const _hideText = function _hideText(paper, element) {\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            text.hide();\n        }\n    };\n    /**\n     * Unselect a shape to free the position\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the unselected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _unselectShape = function _unselectShape(paper, element, $orderList) {\n        const number = element.data('number');\n        const unsetNumbers = [number];\n\n        $orderList.children(':not(.disabled)').each(function () {\n            unsetNumbers.push($$1(this).data('number'));\n        });\n\n        const activeNumber = Math.min.apply(Math, unsetNumbers) || number;\n\n        //update element state\n        element.active = false;\n        _hideText(paper, element);\n        element.removeData('number');\n        graphic.updateElementState(element, 'basic');\n\n        //reset order list state and activate the removed number\n        $orderList\n            .children()\n            .removeClass('active')\n            .filter('[data-number=' + number + ']')\n            .removeClass('disabled');\n\n        // Set (min) active number\n        $orderList.find('li[data-number=\"' + activeNumber + '\"]').addClass('active');\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, $orderList, choice) {\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n                if (this.active) {\n                    _unselectShape(interaction.paper, this, $orderList);\n                } else {\n                    _selectShape(interaction.paper, this, $orderList);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice });\n            });\n    };\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const response = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const elt = interaction.paper.getById(choice.serial);\n            if (elt && elt.data('number')) {\n                response.push({\n                    index: elt.data('number'),\n                    id: choice.id()\n                });\n            }\n        });\n        return _(response).sortBy('index').map('id').value();\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const $orderList = $$1('ul', $container);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //create the list of number to order\n            _renderOrderList(interaction, $orderList);\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction, $orderList));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    graphic.highlightError(data.target);\n                }\n            });\n        });\n    };\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n        if (response && interaction.paper) {\n            try {\n                //try to unserualize tthe pci response\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(responseValues, function (responseValue, index) {\n                    const number = index + 1;\n\n                    //get the choice that match the response\n                    const choice = _(interaction.getChoices())\n                        .filter({ attributes: { identifier: responseValue } })\n                        .first();\n                    if (choice) {\n                        const element = interaction.paper.getById(choice.serial);\n                        if (element) {\n                            //activate the orderer to be consistant\n                            $orderList.children('[data-number=' + number + ']').addClass('active');\n\n                            //select the related shape\n                            _selectShape(interaction.paper, element, $orderList);\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                _unselectShape(interaction.paper, element, $orderList);\n            }\n        });\n\n        $orderList.children('li').removeClass('active disabled').first().addClass('active');\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var GraphicOrderInteraction = {\n        qtiClass: 'graphicOrderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-hotspotInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const $container = containerHelper.get(interaction);\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function () {\n                if (this.active) {\n                    graphic.updateElementState(this, 'basic', __('Select this area'));\n                    this.active = false;\n                    $container.trigger('inactiveChoice.qti-widget', [choice, this]);\n                } else {\n                    graphic.updateElementState(this, 'active', __('Click again to remove'));\n                    this.active = true;\n                    $container.trigger('activeChoice.qti-widget', [choice, this]);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        return _(interaction.getChoices())\n            .map(function (choice) {\n                const rElement = interaction.paper.getById(choice.serial);\n                return rElement && rElement.active === true ? choice.id() : false;\n            })\n            .filter(_.isString)\n            .value();\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data.target.active) {\n                        data.target.active = false;\n                        graphic.updateElementState(this, 'basic', __('Select this area'));\n                        graphic.highlightError(data.target);\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                        $container.trigger('inactiveChoice.qti-widget', [data.choice, data.target]);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    if (responseValues.includes(choice.attributes.identifier)) {\n                        const rElement = interaction.paper.getById(choice.serial);\n                        if (rElement) {\n                            rElement.active = true;\n                            graphic.updateElementState(rElement, 'active', __('Click again to remove'));\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: rElement });\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n        instructionMgr.resetInstructions(interaction);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var HotspotInteraction = {\n        qtiClass: 'hotspotInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-hottextInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"hottextInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"qti-flow-container\\\">\";\n    if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"</div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   */\n  var pseudoLabel = function (interaction) {\n      var $container = containerHelper.get(interaction);\n\n      var setChoice = function ($choice, interaction) {\n          var $inupt = $choice.find('input');\n\n          if ($inupt.prop('checked') || $inupt.hasClass('disabled')) {\n              $inupt.prop('checked', false);\n          } else {\n              var maxChoices = parseInt(interaction.attr('maxChoices'));\n              var currentChoices = _.values(_getRawResponse(interaction)).length;\n\n              if (currentChoices < maxChoices || maxChoices === 0) {\n                  $inupt.prop('checked', true);\n              }\n          }\n          containerHelper.triggerResponseChangeEvent(interaction);\n          instructionMgr.validateInstructions(interaction, { choice: $choice });\n      };\n\n      $$1('.hottext', $container).on('click', function (e) {\n          e.preventDefault();\n          setChoice($$1(this), interaction);\n      });\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {object} interaction\n   */\n  var render = function (interaction) {\n      pseudoLabel(interaction);\n\n      //set up the constraints instructions\n      instructionMgr.minMaxChoiceInstructions(interaction, {\n          min: interaction.attr('minChoices'),\n          max: interaction.attr('maxChoices'),\n          getResponse: _getRawResponse,\n          onError: function (data) {\n              var $input, $choice, $icon;\n              if (data.choice && data.choice.length) {\n                  $choice = data.choice.addClass('error');\n                  $input = $choice.find('input');\n                  $icon = $choice.find(' > label > span').addClass('error cross');\n\n                  setTimeout(function () {\n                      $input.prop('checked', false);\n                      $choice.removeClass('error');\n                      $icon.removeClass('error cross');\n                  }, 350);\n              }\n          }\n      });\n  };\n\n  var resetResponse = function (interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function (interaction, response) {\n      var $container = containerHelper.get(interaction);\n\n      try {\n          _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n              $container.find('input[value=\"' + identifier + '\"]').prop('checked', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  var _getRawResponse = function (interaction) {\n      var values = [];\n      var $container = containerHelper.get(interaction);\n      $$1('input:checked', $container).each(function () {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function (interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Clean interaction destroy\n   * @param {Object} interaction\n   */\n  var destroy = function destroy(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      //restore selected choices:\n      $container.find('.hottext').off('click');\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n      return state;\n  };\n\n  var HottextInteraction = {\n      qtiClass: 'hottextInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting', 'ui/tooltip', 'select2'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, verticalWriting, tooltip, select2) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<span role=\\\"listbox\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-inlineChoiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n        data-qti-class=\\\"inlineChoiceInteraction\\\"\\n        data-has-search=\\\"false\\\"\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <span role=\\\"option\\\" data-identifier=\\\"empty\\\"></span>\\n    \";\n      options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * The value of the \"empty\" option\n     * @type String\n     */\n    const _emptyValue = 'empty';\n\n    const _defaultOptions = {\n        allowEmpty: true,\n        placeholderText: __('select a choice')\n    };\n\n    const optionSelector = 'span[role=\"option\"]';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} options - object containing available options\n     */\n    const render = function (interaction, options) {\n        const opts = _.clone(_defaultOptions);\n        const required = !!interaction.attr('required');\n        let choiceTooltip;\n        const $container = containerHelper.get(interaction);\n\n        _.extend(opts, options);\n\n        if (opts.allowEmpty && !required) {\n            $container.find(`span[data-identifier=${_emptyValue}]`).text(`--- ${__(`leave empty`)}---`);\n        } else {\n            $container.find(`span[data-identifier=${_emptyValue}]`).remove();\n        }\n\n        const getItemDir = () => {\n            const itemBody = $$1('.qti-itemBody');\n            const itemDir = itemBody.attr('dir') || 'ltr';\n            return itemDir;\n        };\n\n        const dirClass = getItemDir();\n\n        const isVertical = verticalWriting.getIsItemWritingModeVerticalRl();\n        const writingMode = isVertical ? 'vertical-rl' : void 0;\n        const serial = $container.data('serial');\n\n        $container.select2({\n            data: $container\n                .find(optionSelector)\n                .map((i, opt) => ({\n                    id: $$1(opt).data('identifier'),\n                    markup: opt.outerHTML\n                }))\n                .get(),\n            formatResult: function (result) {\n                return result.markup;\n            },\n            formatSelection: function (data) {\n                return data.markup;\n            },\n            width: 'fit-content',\n            placeholder: opts.placeholderText,\n            minimumResultsForSearch: -1,\n            containerCssClass: `${dirClass}`,\n            dropdownCssClass: `qti-inlineChoiceInteraction-dropdown ${dirClass}`,\n            writingMode\n        });\n\n        const $el = $container.select2('container');\n\n        if (required) {\n            //set up the tooltip plugin for the input\n            choiceTooltip = tooltip.warning($el, __('A choice must be selected'), {\n                placement: isVertical ? 'right' : 'top'\n            });\n            if ($container.val() === '') {\n                choiceTooltip.show();\n            }\n            //refresh tooltip position when all styles loaded.\n            $$1(document).on(`themeapplied.inlineChoiceInteraction-${serial}`, () => {\n                choiceTooltip.hide();\n                choiceTooltip.show();\n            });\n        }\n\n        $container\n            .on('change', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we must fix the situation when select2 prevents tts from working\n                //for this a \"one-moment\" handler of option click is added and removed after event fired\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    const $selectedIndex = $$1(e.currentTarget)[0].options.selectedIndex\n                        ? $$1(e.currentTarget)[0].options.selectedIndex\n                        : null;\n                    $container.find(optionSelector).one('click', function (ev) {\n                        ev.stopPropagation();\n                    });\n                    $container.find(optionSelector).eq($selectedIndex).trigger('click');\n                }\n\n                if (required && $container.val() !== '') {\n                    choiceTooltip.hide();\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n            })\n            .on('select2-open', function () {\n                if (required) {\n                    choiceTooltip.hide();\n                }\n            })\n            .on('select2-close', function () {\n                if (required && $container.val() === '') {\n                    choiceTooltip.show();\n                }\n            });\n    };\n\n    const _setVal = function (interaction, choiceIdentifier) {\n        containerHelper.get(interaction).val(choiceIdentifier).select2('val', choiceIdentifier);\n    };\n\n    const resetResponse = function (interaction) {\n        _setVal(interaction, _emptyValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const value = containerHelper.get(interaction).val();\n        return value && value !== _emptyValue ? [value] : [];\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const serial = $container.data('serial');\n\n        //remove event\n        $$1(document).off('.commonRenderer');\n        $$1(document).off(`.inlineChoiceInteraction-${serial}`);\n\n        $container.select2('destroy');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                //just in case the dropdown is opened\n                $container.select2('disable').select2('close');\n\n                $$1(optionSelector, $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($container);\n\n                $container.select2('enable');\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1(optionSelector, $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the inline choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction\n     */\n    var InlineChoiceInteraction = {\n        qtiClass: 'inlineChoiceInteraction',\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data,depth1) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"\\n      <tr>\\n        \";\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n        \";\n    stack1 = helpers.each.call(depth0, (depth1 && depth1.matchSet1), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      \";\n    return buffer;\n    }\n  function program12(depth0,data) {\n    \n    \n    return \"\\n        <td>\\n          <label>\\n            <input type=\\\"checkbox\\\" >\\n            <span class=\\\"icon-checkbox cross\\\"></span>\\n          </label>\\n        </td>\\n        \";\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-matchInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"matchInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"match-interaction-area\\\">\\n    <table class=\\\"matrix\\\">\\n      <thead>\\n      <tr>\\n        <th> </th>\\n        \";\n    options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n    if (helper = helpers.matchSet1) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet1); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet1) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      </thead>\\n      <tbody>\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data};\n    if (helper = helpers.matchSet2) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet2); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet2) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * TODO do not use global context var, it's value is shared between interaction instances\n   *\n   * Flag to not throw warning instruction if already\n   * displaying the warning. If such a flag is not used,\n   * disturbances can be seen by the candidate if he clicks\n   * like hell on choices.\n   */\n  var inWarning = false;\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   */\n  var render = function(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      // Initialize instructions system.\n      _setInstructions(interaction);\n\n      $container.on('click.commonRenderer', 'input[type=checkbox]', function(e) {\n          _onCheckboxSelected(interaction, e);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function(interaction, response) {\n      var $container = containerHelper.get(interaction);\n      response = _filterResponse(response);\n\n      if (typeof response.list !== 'undefined' && typeof response.list.directedPair !== 'undefined') {\n          _(response.list.directedPair).forEach(function(directedPair) {\n              var x = $$1('th[data-identifier=\"' + directedPair[0] + '\"]', $container).index() - 1;\n              var y = $$1('th[data-identifier=\"' + directedPair[1] + '\"]', $container)\n                  .parent()\n                  .index();\n\n              $$1('.matrix > tbody tr', $container)\n                  .eq(y)\n                  .find('input[type=checkbox]')\n                  .eq(x)\n                  .prop('checked', true);\n          });\n      }\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function(interaction) {\n      var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\n      return response;\n  };\n\n  var resetResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input[type=checkbox]:checked', $container).each(function() {\n          $$1(this).prop('checked', false);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  var _filterResponse = function(response) {\n      if (typeof response.list === 'undefined') {\n          // Maybe it's a base?\n          if (typeof response.base === 'undefined') {\n              // Oops, it is even not a base.\n              throw 'The given response is not compliant with PCI JSON representation.';\n          } else {\n              // It's a base, Is it a directedPair? Null?\n              if (response.base === null) {\n                  return { list: { directedPair: [] } };\n              } else if (typeof response.base.directedPair === 'undefined') {\n                  // Oops again, it is not a directedPair.\n                  throw 'The matchInteraction only accepts directedPair values as responses.';\n              } else {\n                  return { list: { directedPair: [response.base.directedPair] } };\n              }\n          }\n      } else if (typeof response.list.directedPair === 'undefined') {\n          // Oops, not a directedPair.\n          throw 'The matchInteraction only accept directedPair values as responses.';\n      } else {\n          return response;\n      }\n  };\n\n  var _getRawResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      var values = [];\n\n      $container.find('input[type=checkbox]:checked').each(function() {\n          values.push(_inferValue(this));\n      });\n\n      return values;\n  };\n\n  var _inferValue = function(element) {\n      var $element = $$1(element);\n      var $container = $element.closest('.match-interaction-area');\n      var y = $element.closest('tr').index();\n      var x = $element.closest('td').index();\n      var firstId = $$1('.matrix > thead th', $container)\n          .eq(x)\n          .data('identifier');\n      var secondId = $$1('.matrix > tbody th', $container)\n          .eq(y)\n          .data('identifier');\n      return [firstId, secondId];\n  };\n\n  var _onCheckboxSelected = function(interaction, e) {\n      var choice;\n      var currentResponse = _getRawResponse(interaction);\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n\n      if (maxAssociations === 0) {\n          maxAssociations = _countChoices(interaction);\n      }\n\n      if (_.size(currentResponse) > maxAssociations) {\n          // No more associations possible.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction);\n      } else if ((choice = _maxMatchReached(interaction, e.target)) !== false) {\n          // Check if matchmax is respected for both choices\n          // involved in the selection.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction, choice);\n      } else {\n          containerHelper.triggerResponseChangeEvent(interaction, {});\n          instructionMgr.validateInstructions(interaction);\n      }\n  };\n\n  var _maxMatchReached = function(interaction, input) {\n      var association = _inferValue(input);\n      var overflow = false;\n\n      _(association).forEach(function(identifier) {\n          var choice = _getChoiceDefinitionByIdentifier(interaction, identifier);\n          var matchMin = choice.attributes.matchMin;\n          var matchMax = choice.attributes.matchMax;\n          var assoc = _countAssociations(interaction, choice);\n\n          if (matchMax > 0 && assoc > matchMax) {\n              overflow = choice;\n          }\n      });\n\n      return overflow;\n  };\n\n  var _countAssociations = function(interaction, choice) {\n      var rawResponse = _getRawResponse(interaction);\n      var count = 0;\n\n      // How much time can we find rawChoice in rawResponses?\n      _(rawResponse).forEach(function(response) {\n          if (response[0] === choice.attributes.identifier || response[1] === choice.attributes.identifier) {\n              count++;\n          }\n      });\n\n      return count;\n  };\n\n  var _countChoices = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      return $container.find('input[type=checkbox]').length;\n  };\n\n  var _getChoiceDefinitionByIdentifier = function(interaction, identifier) {\n      var rawChoices = _getRawChoices(interaction);\n      return rawChoices[identifier];\n  };\n\n  var _getRawChoices = function(interaction) {\n      var rawChoices = {};\n\n      _(interaction.choices).forEach(function(matchset) {\n          _(matchset).forEach(function(choice) {\n              rawChoices[choice.attributes.identifier] = choice;\n          });\n      });\n\n      return rawChoices;\n  };\n\n  var _setInstructions = function(interaction) {\n      var msg;\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n      var choiceCount = _countChoices(interaction);\n\n      // Super closure is here again to save our souls! Houray!\n      // ~~~~~~~ |==||||0__\n\n      var superClosure = function() {\n          var onMaxChoicesReached = function(report, msg) {\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  report.update({\n                      level: 'warning',\n                      message: __('Maximum number of choices reached.'),\n                      timeout: 2000,\n                      stop: function() {\n                          report.update({ level: 'success', message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          var onMatchMaxReached = function(interaction, choice, report, msg, level) {\n              var $container = containerHelper.get(interaction);\n\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  var $choice = $container.find(\n                      '.qti-simpleAssociableChoice[data-identifier=\"' + choice.attributes.identifier + '\"]'\n                  );\n                  var originalBackgroundColor = $choice.css('background-color');\n                  var originalColor = $choice.css('color');\n\n                  report.update({\n                      level: 'warning',\n                      message: __('The highlighted choice cannot be associated more than %d time(s).').replace(\n                          '%d',\n                          choice.attributes.matchMax\n                      ),\n                      timeout: 3000,\n                      start: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: '#fff',\n                                  color: '#ba122b'\n                              },\n                              250,\n                              function() {\n                                  $choice.animate(\n                                      {\n                                          backgroundColor: '#ba122b',\n                                          color: '#fff'\n                                      },\n                                      250\n                                  );\n                              }\n                          );\n                      },\n                      stop: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: originalBackgroundColor,\n                                  color: originalColor\n                              },\n                              500\n                          );\n                          report.update({ level: level, message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          if (minAssociations === 0 && maxAssociations > 0) {\n              // No minimum but maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', maxAssociations);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.reset();\n                  }\n              });\n          } else if (minAssociations === 0 && maxAssociations === 0) {\n              // No minimum, no maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations === 0) {\n              // minimum but no maximum.\n              msg = __('You must select %1$d to %2$d choices.');\n              msg = msg.replace('%1$d', minAssociations);\n              msg = msg.replace('%2$d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > choiceCount) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations > 0) {\n              // minimum and maximum.\n              if (minAssociations !== maxAssociations) {\n                  msg = __('You must select %1$d to %2$d choices.');\n                  msg = msg.replace('%1$d', minAssociations);\n                  msg = msg.replace('%2$d', maxAssociations);\n              } else {\n                  msg = __('You must select exactly %d choice(s).');\n                  msg = msg.replace('%d', minAssociations);\n              }\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else if (responseCount >= minAssociations && responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  }\n              });\n          }\n      };\n\n      superClosure();\n  };\n\n  var destroy = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $container.off('.commonRenderer');\n\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      var $container;\n\n      if (_.isObject(state)) {\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === 2) {\n              $container = containerHelper.get(interaction);\n\n              $$1('thead .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[0], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[0], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('thead tr', $container));\n\n              $$1('tbody .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[1], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[1], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .each(function(index, elt) {\n                      $$1(elt).prependTo($$1('tbody tr', $container).eq(index));\n                  });\n          }\n\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var $container;\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          $container = containerHelper.get(interaction);\n\n          state.order = [[], []];\n          $$1('thead .qti-choice', $container).each(function() {\n              state.order[0].push($$1(this).data('identifier'));\n          });\n          $$1('tbody .qti-choice', $container).each(function() {\n              state.order[1].push($$1(this).data('identifier'));\n          });\n      }\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the match interaction\n   * @exports qtiCommonRenderer/renderers/interactions/MatchInteraction\n   */\n  var MatchInteraction = {\n      qtiClass: 'matchInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState,\n      inferValue: _inferValue\n  };\n\n  return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/mediaplayer'], function ($$1, _, Handlebars, Helpers0, pciResponse, containerHelper, mediaplayer) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    mediaplayer = mediaplayer && Object.prototype.hasOwnProperty.call(mediaplayer, 'default') ? mediaplayer['default'] : mediaplayer;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-mediaInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"media-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2018 (original work) Open Assessment Technlogies SA\n     *\n     */\n\n    const qtiClass = 'mediaInteraction';\n    const getContainer = containerHelper.get;\n\n    //some default values\n    const defaults = {\n        type: 'video/mp4'\n    };\n\n    //some patterns to match context in which disable the media preview\n    const reWebM = /.*\\.webm/i;\n    const reFirefoxVersion = /firefox\\/([0-9]+\\.*[0-9]*)/i;\n\n    /**\n     * Checks if a media can be previewed safely\n     * @param {String} type - The type of media\n     * @param {String} url - The URL to the media\n     * @returns {Boolean}\n     */\n    function canPreviewMedia(type, url) {\n        const firefox = reFirefoxVersion.exec(navigator.userAgent);\n        const webm = reWebM.test(url);\n        return !(webm && firefox && parseFloat(firefox[1]) >= 87);\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10391\n     *\n     * @param {Object} interaction\n     * @fires playerrendered when the player is at least rendered\n     * @fires playerready when the player is sucessfully loaded and configured\n     * @returns {Promise}\n     */\n    function render(interaction) {\n        return new Promise(resolve => {\n            const $container = getContainer(interaction);\n            const media = interaction.object;\n            const $item = $container.parents('.qti-item');\n            const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n\n            //check if the media can be played (using timesPlayed and maxPlays)\n            const canBePlayed = () => maxPlays === 0 || maxPlays > parseInt($container.data('timesPlayed'), 10);\n\n            /**\n             * Resize video player elements to fit container size\n             * @param {Object} mediaElement - player instance\n             * @param {jQueryElement} $container   - container element to adapt\n             */\n            const resize = _.debounce(() => {\n                // only resize when width in px\n                // new version has width in %\n                const  currentWidth = media.attr('width');\n                if (interaction.mediaElement && currentWidth && !`${currentWidth}`.includes('%')) {\n                    const height = $container.find('.media-container').height();\n                    const width = $container.find('.media-container').width();\n\n                    interaction.mediaElement.resize(width, height);\n                }\n            }, 200);\n\n            //intialize the player if not yet done\n            const initMediaPlayer = () => {\n                if (!interaction.mediaElement) {\n                    const type = media.attr('type') || defaults.type;\n                    const mediaUrl = media.attr('data') || '';\n                    const url = mediaUrl && this.resolveUrl(mediaUrl);\n                    const preview = canPreviewMedia(type, url);\n\n                    interaction.mediaElement = mediaplayer({\n                        url,\n                        type,\n                        preview,\n                        canPause: $container.hasClass('pause'),\n                        maxPlays: maxPlays,\n                        canSeek: !maxPlays,\n                        width: media.attr('width'),\n                        height: media.attr('height'),\n                        volume: 100,\n                        autoStart: !!interaction.attr('autostart') && canBePlayed(),\n                        loop: !!interaction.attr('loop'),\n                        renderTo: $$1('.media-container', $container),\n                        transcriptionUrl: interaction.object.metaData.transcriptionUrl\n                    })\n                        .on('render', () => {\n                            resize();\n\n                            $$1(window)\n                                .off('resize.mediaInteraction')\n                                .on('resize.mediaInteraction', resize);\n\n                            $item.off('resize.gridEdit').on('resize.gridEdit', resize);\n                            /**\n                             * @event playerrendered\n                             */\n                            $container.trigger('playerrendered');\n                        })\n                        .on('ready', function () {\n                            /**\n                             * @event playerready\n                             */\n                            $container.trigger('playerready');\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n\n                            // on slow network the resize runs before ready, so it should be called again\n                            resize();\n\n                            // declare the item ready when player is ready to play.\n                            resolve();\n                        })\n                        .on('update', _.throttle(() => containerHelper.triggerResponseChangeEvent(interaction), 1000))\n                        .on('ended', function () {\n                            $container.data('timesPlayed', $container.data('timesPlayed') + 1);\n                            containerHelper.triggerResponseChangeEvent(interaction);\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n                        });\n                }\n            };\n\n\n            //set up the number of times played\n            if (!$container.data('timesPlayed')) {\n                $container.data('timesPlayed', 0);\n            }\n\n            //initialize the component\n            $container.on('responseSet', initMediaPlayer);\n\n            //gives a small chance to the responseSet event before initializing the player\n            initMediaPlayer();\n        });\n    }\n\n    /**\n     * Destroy the current interaction\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = getContainer(interaction);\n\n        if (interaction.mediaElement) {\n            interaction.mediaElement.destroy();\n            interaction.mediaElement = null;\n        }\n\n        $$1('.instruction-container', $container).empty();\n        $$1('.media-container', $container).empty();\n\n        $container.removeData('timesPlayed');\n\n        $$1(window).off('resize.video');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    function _getRawResponse(interaction) {\n        return [getContainer(interaction).data('timesPlayed') || 0];\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    function setResponse(interaction, response) {\n        if (response) {\n            try {\n                const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n                const responseValues = pciResponse.unserialize(response, interaction);\n                const timesPlayed = parseInt(responseValues[0], 10) || 0;\n                getContainer(interaction).data('timesPlayed', timesPlayed);\n\n                if (interaction.mediaElement) {\n                    if (maxPlays !== 0 && maxPlays <= timesPlayed) {\n                        interaction.mediaElement.disable();\n                    } else if (interaction.mediaElement.is('disabled')) {\n                        interaction.mediaElement.enable();\n                    }\n                }\n            } catch (e) {\n                // something went wrong\n            }\n        }\n    }\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    function resetResponse(interaction) {\n        getContainer(interaction).data('timesPlayed', 0);\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    function getResponse(interaction) {\n        if (!getContainer(interaction).data('timesPlayed')) {\n            return { base: null };\n        }\n\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        /**\n         * Restore the media player state\n         * @private\n         * @param {Object} [playerState]\n         * @param {Boolean} [playerState.muted] - is the player muted\n         * @param {Number} [playerState.volume] - the current volume\n         * @param {Number} [playerState.position] - the position to seek to\n         */\n        const restorePlayerState = playerState => {\n            if (playerState && interaction.mediaElement) {\n                //Volume\n                if (_.isNumber(playerState.volume)) {\n                    interaction.mediaElement.setVolume(playerState.volume);\n                }\n\n                //Muted state (always after the volume)\n                if (_.isBoolean(playerState.muted)) {\n                    interaction.mediaElement.mute(playerState.muted);\n                    interaction.mediaElement.startMuted = playerState.muted;\n                }\n\n                //Position\n                if (playerState.position && playerState.position > 0) {\n                    interaction.mediaElement.seek(playerState.position);\n                    if (!interaction.attr('autostart')) {\n                        interaction.mediaElement.pause();\n                    }\n                }\n            }\n        };\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            if (_.isPlainObject(state.player) && interaction.mediaElement) {\n                if (interaction.mediaElement.is('ready')) {\n                    restorePlayerState(state.player);\n                } else {\n                    interaction.mediaElement.on('ready.state', () => {\n                        interaction.mediaElement.off('ready.state');\n                        restorePlayerState(state.player);\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //collect player's state\n        if (interaction.mediaElement) {\n            state.player = {\n                position: interaction.mediaElement.getPosition(),\n                muted: interaction.mediaElement.is('muted'),\n                volume: interaction.mediaElement.getVolume()\n            };\n        }\n        return state;\n    }\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MediaInteraction\n     */\n    var MediaInteraction = {\n        qtiClass,\n        template,\n        render,\n        getContainer,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',['lodash', 'jquery', 'i18n', 'core/mouseEvent', 'services/features', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, $$1, __, mouseEvent, features, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      return \" qti-horizontal\";\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" qti-vertical\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      \n      return \" qti-single\";\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"horizontal\";\n      }\n\n    function program13(depth0,data) {\n      \n      \n      return \"vertical\";\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program19(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program21(depth0,data) {\n      \n      \n      return \"icon-down\";\n      }\n\n    function program23(depth0,data) {\n      \n      \n      return \"icon-right\";\n      }\n\n    function program25(depth0,data) {\n      \n      \n      return \"icon-up\";\n      }\n\n    function program27(depth0,data) {\n      \n      \n      return \"icon-left\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-orderInteraction\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['data-order']), \"single\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['data-order']), \"single\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.order), \"single\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.order), \"single\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n     data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n     data-qti-class=\\\"orderInteraction\\\"\\n     data-orientation=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"order-interaction-area\\\">\\n        <ul class=\\\"choice-area square source solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n        <div class=\\\"arrow-bar middle\\\">\\n            <span class=\\\"icon-add-to-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(23, program23, data),fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\\n            <span class=\\\"icon-remove-from-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n        <ul class=\\\"drag-container block-listing\\\"></ul>\\n        <ul class=\\\"result-area decimal target solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n        </ul>\\n        <div class=\\\"arrow-bar\\\">\\n            <span class=\\\"icon-move-before \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(25, program25, data),fn:self.program(27, program27, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n            <span class=\\\"icon-move-after \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(21, program21, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const orientationSelectionEnabled = features.isVisible('taoQtiItem/creator/interaction/order/property/orientation');\n\n    const _freezeSize = function ($container) {\n        const $orderArea = $container.find('.order-interaction-area');\n        $orderArea.height($orderArea.height());\n    };\n\n    const _setInstructions = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container),\n            $resultArea = $$1('.result-area', $container),\n            min = parseInt(interaction.attr('minChoices'), 10),\n            max = parseInt(interaction.attr('maxChoices'), 10);\n\n        if (min) {\n            instructionMgr.appendInstruction(interaction, __('You must use at least %d choices', min), function () {\n                if ($resultArea.find('>li').length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n\n        if (max && max < _.size(interaction.getChoices())) {\n            const instructionMax = instructionMgr.appendInstruction(\n                interaction,\n                __('You can use maximum %d choices', max),\n                function () {\n                    if ($resultArea.find('>li').length >= max) {\n                        $choiceArea.find('>li').addClass('deactivated');\n                        this.setMessage(__('Maximum choices reached'));\n                    } else {\n                        $choiceArea.find('>li').removeClass('deactivated');\n                        this.reset();\n                    }\n                }\n            );\n\n            interact(`${$choiceArea.selector} >li.deactivated`).on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n                $target.addClass('brd-error');\n                instructionMax.setLevel('warning', 2000);\n                setTimeout(function () {\n                    $target.removeClass('brd-error');\n                }, 150);\n            });\n\n            // we don't check for isDragAndDropEnabled on purpose, as this binding is not to allow dragging,\n            // but only to provide feedback in case of a drag action on an inactive choice\n            interact(`${$choiceArea.selector} >li.deactivated`)\n                .draggable({\n                    onstart: function (e) {\n                        const $target = $$1(e.target);\n                        $target.addClass('brd-error');\n                        instructionMax.setLevel('warning');\n                    },\n                    onend: function (e) {\n                        const $target = $$1(e.target);\n                        $target.removeClass('brd-error');\n                        instructionMax.setLevel('info');\n                    }\n                })\n                .styleCursor(false);\n        }\n    };\n\n    const resetResponse = function (interaction) {\n        const orderState = interaction.attr('data-order') || interaction.attr('order');\n        const isSingleOrder = orderState === 'single';\n        const $container = containerHelper.get(interaction);\n        const initialOrder = _.keys(interaction.getChoices());\n        const $resultArea = $$1('.result-area', $container);\n        const $resultItems = $$1('.result-area>li', $container);\n\n        $container.find('.qti-choice.active').each(function deactivateChoice() {\n            interactUtils.tapOn(this);\n        });\n\n        if (isSingleOrder) {\n            // if it's a single order interaction, sort the items in result-area in initial order\n            $resultItems.detach().sort(function (item1, item2) {\n                return _.indexOf(initialOrder, $$1(item1).data('serial')) - _.indexOf(initialOrder, $$1(item2).data('serial'));\n            });\n            $resultArea.empty();\n            $resultArea.append($resultItems);\n        } else {\n            const $choiceArea = $$1('.choice-area', $container).append($$1('.result-area>li', $container));\n            const $choices = $choiceArea.children('.qti-choice');\n            $choices.detach().sort(function (choice1, choice2) {\n                return _.indexOf(initialOrder, $$1(choice1).data('serial')) - _.indexOf(initialOrder, $$1(choice2).data('serial'));\n            });\n            $choiceArea.prepend($choices);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    const render = function (interaction) {\n        const $container = containerHelper.get(interaction),\n            $choiceArea = $container.find('.choice-area'),\n            $resultArea = $container.find('.result-area'),\n            $iconAdd = $container.find('.icon-add-to-selection'),\n            $iconRemove = $container.find('.icon-remove-from-selection'),\n            $iconBefore = $container.find('.icon-move-before'),\n            $iconAfter = $container.find('.icon-move-after'),\n            choiceSelector = `${$choiceArea.selector} >li:not(.deactivated)`,\n            resultSelector = `${$resultArea.selector} >li`,\n            $dragContainer = $container.find('.drag-container'),\n            orderState = interaction.attr('data-order') || interaction.attr('order'),\n            isSingleOrder = orderState === 'single',\n            orientation =\n                interaction.attr('orientation') && orientationSelectionEnabled\n                    ? interaction.attr('orientation')\n                    : 'vertical';\n\n        if (isSingleOrder) {\n            const $choices = $choiceArea.children('.qti-choice');\n            $container.addClass('test-preview');\n            $resultArea.append($choices);\n        }\n\n        let $activeChoice = null,\n            scaleX,\n            scaleY,\n            isDragAndDropEnabled,\n            dragOptions,\n            $dropzoneElement;\n\n        const _activeControls = function _activeControls() {\n            $iconAdd.addClass('inactive');\n            $iconRemove.removeClass('inactive').addClass('active');\n            $iconBefore.removeClass('inactive').addClass('active');\n            $iconAfter.removeClass('inactive').addClass('active');\n        };\n\n        const _resetControls = function _resetControls() {\n            $iconAdd.removeClass('inactive');\n            $iconRemove.removeClass('active').addClass('inactive');\n            $iconBefore.removeClass('active').addClass('inactive');\n            $iconAfter.removeClass('active').addClass('inactive');\n        };\n\n        const _setSelection = function _setSelection($choice) {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n            }\n            $activeChoice = $choice;\n            $activeChoice.addClass('active');\n        };\n\n        const _resetSelection = function _resetSelection() {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n                $activeChoice = null;\n            }\n            _resetControls();\n        };\n\n        const _addChoiceToSelection = function _addChoiceToSelection($target, position) {\n            const $results = $$1(resultSelector);\n            _resetSelection();\n\n            //move choice to the result list:\n            if (typeof position !== 'undefined' && position < $results.length) {\n                $results.eq(position).before($target);\n            } else {\n                $resultArea.append($target);\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            //update constraints :\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        const _toggleResultSelection = function _toggleResultSelection($target) {\n            if ($target.hasClass('active')) {\n                _resetSelection();\n            } else {\n                _setSelection($target);\n                _activeControls();\n            }\n        };\n\n        const _removeChoice = function _removeChoice() {\n            if ($activeChoice) {\n                //restore choice back to choice list\n                $choiceArea.append($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                //update constraints :\n                instructionMgr.validateInstructions(interaction);\n            }\n\n            _resetSelection();\n        };\n\n        const _moveResultBefore = function _moveResultBefore() {\n            const $prev = $activeChoice.prev();\n\n            if ($prev.length) {\n                $prev.before($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        const _moveResultAfter = function _moveResultAfter() {\n            const $next = $activeChoice.next();\n\n            if ($next.length) {\n                $next.after($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function () {\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n\n            $iconAdd.addClass('triggered');\n            setTimeout(function () {\n                $iconAdd.removeClass('triggered');\n            }, 150);\n\n            _addChoiceToSelection($target);\n        });\n\n        interact(resultSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _toggleResultSelection($target);\n        });\n\n        interact($iconRemove.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _removeChoice();\n        });\n\n        interact($iconBefore.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultBefore();\n        });\n\n        interact($iconAfter.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultAfter();\n        });\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').order) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').order;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function () {\n                if (_isDropzoneVisible()) {\n                    interact($resultArea.selector).fire({\n                        type: 'drop',\n                        target: $dropzoneElement.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            $dropzoneElement = $$1('<li>', { class: 'dropzone qti-choice' });\n            $$1('<div>', { class: 'qti-block' }).appendTo($dropzoneElement);\n\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result draggables\n            interact(resultSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _setSelection($target);\n\n                            // move dragged result to drag container\n                            $dragContainer.show();\n                            $dragContainer.offset($target.offset());\n                            if (orientation === 'horizontal') {\n                                $dragContainer.width($$1(e.currentTarget).width());\n                            } else {\n                                $dragContainer.width($target.parent().width());\n                            }\n                            $dragContainer.append($target);\n\n                            _iFrameDragFix(resultSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target),\n                                hasBeenDroppedInResultArea = $target.parent === $resultArea;\n\n                            $target.removeClass('dragged');\n                            $dragContainer.hide();\n\n                            if (!hasBeenDroppedInResultArea) {\n                                _removeChoice();\n                            }\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result area droppable\n            interact($resultArea.selector).dropzone({\n                overlap: 0.5,\n                ondragenter: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    _insertDropzone($dragged);\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function (e) {\n                    const $dragged = $$1(e.relatedTarget),\n                        dropzoneIndex = $$1(resultSelector).index($dropzoneElement);\n\n                    this.ondragleave(e);\n\n                    _addChoiceToSelection($dragged, dropzoneIndex);\n                    interactUtils.restoreOriginalPosition($dragged);\n                },\n                ondragleave: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    $dropzoneElement.remove();\n                    $dragged.removeClass('droppable');\n                }\n            });\n        }\n\n        function _isDropzoneVisible() {\n            return $$1.contains($container.get(0), $dropzoneElement.get(0));\n        }\n\n        function _insertDropzone($dragged) {\n            const draggedMiddle = _getMiddleOf($dragged),\n                previousMiddle = {\n                    x: 0,\n                    y: 0\n                };\n            let insertPosition;\n\n            // look for position where to insert dropzone\n            $$1(resultSelector).each(function (index) {\n                const currentMiddle = _getMiddleOf($$1(this));\n\n                if (orientation !== 'horizontal') {\n                    if (draggedMiddle.y > previousMiddle.y && draggedMiddle.y < currentMiddle.y) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.y = currentMiddle.y;\n                } else {\n                    if (draggedMiddle.x > previousMiddle.x && draggedMiddle.x < currentMiddle.x) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.x = currentMiddle.x;\n                }\n            });\n            // append dropzone to DOM\n            if (typeof insertPosition !== 'undefined') {\n                $$1(resultSelector).eq(insertPosition).before($dropzoneElement);\n            } else {\n                // no index found, we just append to the end\n                $resultArea.append($dropzoneElement);\n            }\n\n            // style dropzone\n            $dropzoneElement.height($dragged.height());\n            $dropzoneElement.find('div').text($dragged.text());\n        }\n\n        function _adjustDropzonePosition($dragged) {\n            const draggedBox = $dragged.get(0).getBoundingClientRect(),\n                $prevResult = $dropzoneElement.prev('.qti-choice'),\n                $nextResult = $dropzoneElement.next('.qti-choice'),\n                prevMiddle = $prevResult.length > 0 ? _getMiddleOf($prevResult) : false,\n                nextMiddle = $nextResult.length > 0 ? _getMiddleOf($nextResult) : false;\n\n            if (orientation !== 'horizontal') {\n                if (prevMiddle && draggedBox.top < prevMiddle.y) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.bottom > nextMiddle.y) {\n                    $nextResult.after($dropzoneElement);\n                }\n            } else {\n                if (prevMiddle && draggedBox.left < prevMiddle.x) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.right > nextMiddle.x) {\n                    $nextResult.after($dropzoneElement);\n                }\n            }\n        }\n\n        function _getMiddleOf($element) {\n            const elementBox = $element.get(0).getBoundingClientRect();\n            return {\n                x: elementBox.left + elementBox.width / 2,\n                y: elementBox.top + elementBox.height / 2\n            };\n        }\n\n        // rendering init\n\n        _setInstructions(interaction);\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function (e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'maxChoices' || data.key === 'minChoices') {\n                    instructionMgr.removeInstructions(interaction);\n                    _setInstructions(interaction);\n                    instructionMgr.validateInstructions(interaction);\n                }\n            }\n        });\n\n        _freezeSize($container);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container);\n        const $resultArea = $$1('.result-area', $container);\n        // legacy order attr support\n        const orderState = interaction.attr('data-order') || interaction.attr('order');\n        const isSingleOrder = orderState === 'single';\n\n        if (response === null || _.isEmpty(response)) {\n            resetResponse(interaction);\n        } else {\n            try {\n                _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n                    $resultArea.append(\n                        (isSingleOrder ? $resultArea : $choiceArea).find(`[data-identifier=\"${identifier}\"]`)\n                    );\n                });\n            } catch (e) {\n                throw new Error(`wrong response format in argument : ${e}`);\n            }\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const response = [];\n        $$1('.result-area>li', $container).each(function () {\n            response.push($$1(this).data('identifier'));\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Set additionnal data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    const getCustomData = function (interaction, data) {\n        return _.merge(data || {}, {\n            horizontal: interaction.attr('orientation') === 'horizontal' && orientationSelectionEnabled\n        });\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //first, remove all events\n        const selectors = [\n            '.choice-area >li:not(.deactivated)',\n            '.result-area >li',\n            '.icon-add-to-selection',\n            '.icon-remove-from-selection',\n            '.icon-move-before',\n            '.icon-move-after'\n        ];\n        selectors.forEach(function unbindInteractEvents(selector) {\n            interact($container.find(selector).selector).unset();\n        });\n\n        $$1(document).off('.commonRenderer');\n\n        $container.find('.order-interaction-area').removeAttr('style');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                const $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            const $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the order interaction\n     * @exports qtiCommonRenderer/renderers/interactions/OrderInteraction\n     */\n    var OrderInteraction = {\n        qtiClass: 'orderInteraction',\n        getData: getCustomData,\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2020 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('qtiCustomInteractionContext',['lodash'], function(_) {\n    'use strict';\n\n    //need a global reference to have pciHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._pciHooks = window._pciHooks || {};\n\n    /**\n     * Global object accessible by all PCIs\n     *\n     * @type Object\n     */\n    return {\n        /**\n         * register a custom interaction (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} pciHook\n         * @returns {undefined}\n         */\n        register(pciHook) {\n            const typeIdentifier =\n                typeof pciHook.getTypeIdentifier === 'function' ? pciHook.getTypeIdentifier() : pciHook.typeIdentifier;\n            if (typeIdentifier) {\n                window._pciHooks[typeIdentifier] = pciHook;\n            } else {\n                throw new Error('invalid PCI hook');\n            }\n        },\n        /**\n         * notify when a custom interaction is ready for test taker interaction\n         *\n         * @param {string} pciInstance\n         * @fires custominteractionready\n         */\n        notifyReady(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n        /**\n         * notify when a custom interaction is completed by test taker\n         *\n         * @param {string} pciInstance\n         * @fires custominteractiondone\n         */\n        notifyDone(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n\n        onready(customInteraction, state) {\n            //to be implemented in future story\n        },\n        ondone(customInteraction, response, state, status) {\n            //to be implemented in future story\n        },\n\n        /**\n         * Get a cloned object representing the PCI model\n         *\n         * @param {string} pciTypeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance(pciTypeIdentifier) {\n            const registeredPCI = window._pciHooks[pciTypeIdentifier];\n\n            if (!registeredPCI) {\n                throw new Error('no portable custom interaction hook found with the id ' + pciTypeIdentifier);\n            }\n\n            return _.cloneDeep(registeredPCI);\n        }\n    };\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator',['qtiCustomInteractionContext'], function (qtiCustomInteractionContext) { 'use strict';\n\n    qtiCustomInteractionContext = qtiCustomInteractionContext && Object.prototype.hasOwnProperty.call(qtiCustomInteractionContext, 'default') ? qtiCustomInteractionContext['default'] : qtiCustomInteractionContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var instanciator = {\n        /**\n         * Get the PCI instance associated to the interaction object\n         * If none exists, create a new one based on the PCI typeIdentifier\n         *\n         * @param {Object} interaction - the js object representing the interaction\n         * @returns {Object} PCI instance\n         */\n        getPci(interaction) {\n            let pciTypeIdentifier;\n            let pci = interaction.data('pci');\n\n            if (!pci) {\n                pciTypeIdentifier = interaction.typeIdentifier;\n                pci = qtiCustomInteractionContext.createPciInstance(pciTypeIdentifier);\n                if (pci) {\n                    //binds the PCI instance to TAO interaction object and vice versa\n                    interaction.data('pci', pci);\n                    pci._taoCustomInteraction = interaction;\n                } else {\n                    throw new Error('no custom interaction hook found for the type ' + pciTypeIdentifier);\n                }\n            }\n\n            return pci;\n        },\n\n        /**\n         * Associate a PCI instance to the interaction object\n         * @param {Object} interaction - the js object representing the interaction\n         * @param {Object} instance - PCI instance\n         */\n        setPci(interaction, instance) {\n            interaction.data('pci', instance);\n        }\n    };\n\n    return instanciator;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator'], function (_, containerHelper, instanciator) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    function commonPciRenderer(runtime) {\n        return {\n            getRequiredModules: function getRequiredModules() {\n                var requireEntries = [];\n                //load hook if applicable\n                if (runtime.hook) {\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                }\n                //load libs\n                _.forEach(runtime.libraries, function(lib) {\n                    requireEntries.push(lib.replace(/\\.js$/, ''));\n                });\n                //load stylesheets\n                _.forEach(runtime.stylesheets, function(stylesheet) {\n                    requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                });\n                return requireEntries;\n            },\n            createInstance: function(interaction, context) {\n                var id = interaction.attr('responseIdentifier');\n                var pci = instanciator.getPci(interaction);\n                var properties = _.clone(interaction.properties);\n                var assetManager = context.assetManager;\n                var pciAssetManager = {\n                    resolve: function pciAssetResolve(url) {\n                        var resolved = assetManager.resolveBy('portableElementLocation', url);\n                        if (resolved === url || _.isUndefined(resolved)) {\n                            return assetManager.resolve(url);\n                        } else {\n                            return resolved;\n                        }\n                    }\n                };\n                pci.initialize(\n                    id,\n                    containerHelper\n                        .get(interaction)\n                        .children()\n                        .get(0),\n                    properties,\n                    pciAssetManager\n                );\n                return Promise.resolve(pci);\n            },\n            /**\n             *\n             * @param {Object }interaction\n             * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n             */\n            destroy: function destroy(interaction) {\n                return instanciator.getPci(interaction).destroy();\n            },\n            setState: function setState(interaction, state) {\n                instanciator.getPci(interaction).setSerializedState(state);\n            },\n            getState: function getState(interaction) {\n                return instanciator.getPci(interaction).getSerializedState();\n            }\n        };\n    }\n\n    return commonPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims',['lodash', 'core/logger', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'context'], function (_, loggerFactory, containerHelper, instanciator, sharedContext) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    sharedContext = sharedContext && Object.prototype.hasOwnProperty.call(sharedContext, 'default') ? sharedContext['default'] : sharedContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims');\n\n    const pciDoneCallback = pci => {\n        //standard callback function to be implemented in a future story\n        logger.info('pciDoneCallback called on PCI ' + pci.typeIdentifier);\n    };\n\n    /**\n     * Key under the IMS PCI constructor is stored on interaction\n     */\n    const pciConstructorDataKey = 'pciConstructor';\n\n    function defaultPciRenderer(runtime) {\n        return {\n            getRequiredModules() {\n                const requireEntries = [];\n                // load modules\n                _.forEach(runtime.modules, function (module, name) {\n                    requireEntries.push(name);\n                });\n                return requireEntries;\n            },\n            /**\n             * Saves the original IMS PCI module to be able to reinstanciate later\n             * @param {Object} interaction\n             * @param {Object} pciConstructor\n             */\n            setPCIConstructor(interaction, pciConstructor) {\n                interaction.data(pciConstructorDataKey, pciConstructor);\n            },\n            /**\n             * Returns with original IMS PCI module\n             * @param {Object} interaction\n             */\n            getPCIConstructor(interaction) {\n                return interaction.data(pciConstructorDataKey);\n            },\n            createInstance(interaction, context) {\n                let pciConstructor = this.getPCIConstructor(interaction);\n\n                //get interaction xml:lang prop to put it into pci instance config\n                const contentLanguage = interaction.attributes && interaction.attributes.language;\n                const itemLanguage = interaction.rootElement && interaction.rootElement.attributes && interaction.rootElement.attributes['xml:lang'];\n                const language = contentLanguage || itemLanguage;\n                const userLanguage = sharedContext && sharedContext.locale;\n\n                const properties = _.assign(_.clone(interaction.properties), {language, userLanguage});\n\n                // save original IMS PCI module first time to be able to reinstanciate later if necessary\n                if (!pciConstructor) {\n                    pciConstructor = instanciator.getPci(interaction);\n                    this.setPCIConstructor(interaction, pciConstructor);\n                }\n\n                // serialize any array or object properties\n                _.forOwn(properties, function (propVal, propKey) {\n                    properties[propKey] = _.isArray(propVal) || _.isObject(propVal) ? JSON.stringify(propVal) : propVal;\n                });\n\n                let pciReadyCallback;\n                const readyPromise = new Promise(resolve => {\n                    pciReadyCallback = resolve;\n                });\n\n                const config = {\n                    properties,\n                    templateVariables: {}, //not supported yet\n                    boundTo: context.response || {},\n                    onready: pciReadyCallback,\n                    ondone: pciDoneCallback,\n                    status: 'interacting' //only support interacting state currently(TODO: solution, review),\n                };\n\n                pciConstructor.getInstance(containerHelper.get(interaction).get(0), config, context.state);\n\n                return readyPromise.then(instance => {\n                    instanciator.setPci(interaction, instance);\n                    return instance;\n                });\n            },\n            destroy: function destroy(interaction) {\n                instanciator.getPci(interaction).oncompleted();\n            },\n            /**\n             * IMS PCI does not have setState, so PCI should be destroyed and reinstanciated with response.\n             * This function should run only in review mode.\n             * @param {Object} interaction\n             * @param {Object} state - state that should be set\n             * @returns {Promise<Object>} - Resolves with newly created instance\n             */\n            setReviewState(interaction, state) {\n                this.destroy(interaction);\n                return this.createInstance(interaction, { response: { RESPONSE: state.response } });\n            },\n            setState: _.noop,\n            getState(interaction) {\n                return instanciator.getPci(interaction).getState();\n            }\n        };\n    }\n\n    return defaultPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/ciRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, instanciator, commonPciRenderer, imsPciRenderer, util, ciRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    commonPciRenderer = commonPciRenderer && Object.prototype.hasOwnProperty.call(commonPciRenderer, 'default') ? commonPciRenderer['default'] : commonPciRenderer;\n    imsPciRenderer = imsPciRenderer && Object.prototype.hasOwnProperty.call(imsPciRenderer, 'default') ? imsPciRenderer['default'] : imsPciRenderer;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n    lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-customInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _setPciModel = function _setPciModel(interaction, runtime) {\n        var pciRenderer;\n        if (runtime.model === 'IMSPCI') {\n            pciRenderer = imsPciRenderer(runtime);\n        } else {\n            pciRenderer = commonPciRenderer(runtime);\n        }\n        interaction.data('pci-model', runtime.model);\n        interaction.data('pci-renderer', pciRenderer);\n    };\n\n    var _getPciRenderer = function _getPciRenderer(interaction) {\n        return interaction.data('pci-renderer');\n    };\n\n    /**\n     * Execute javascript codes to bring the interaction to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. configure the paths\n     * 2. require all required libs\n     * 3. create a pci instance based on the interaction model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable (state and/or response)\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction, options) {\n        var self = this;\n\n        options = options || {};\n        return new Promise(function (resolve, reject) {\n            var id = interaction.attr('responseIdentifier');\n            var typeIdentifier = interaction.typeIdentifier;\n            var assetManager = self.getAssetManager();\n            var state;\n            var response = {};\n\n            if (options.state && options.state[id]) {\n                state = options.state[id];\n            }\n            response[id] = { base: null };\n\n            ciRegistry\n                .loadRuntimes({ include: [typeIdentifier] })\n                .then(function () {\n                    var pciRenderer;\n                    var runtime = ciRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pci cannot be found : ' + typeIdentifier);\n                    }\n\n                    _setPciModel(interaction, runtime);\n\n                    pciRenderer = _getPciRenderer(interaction);\n\n                    window.require(\n                        pciRenderer.getRequiredModules(),\n                        function () {\n                            var pci = instanciator.getPci(interaction);\n                            if (pci) {\n                                pciRenderer.createInstance(interaction, {\n                                    response: response,\n                                    state: state,\n                                    assetManager: assetManager\n                                }).then(instance => {\n                                    //forward internal PCI event responseChange\n                                    if (_.isFunction(instance.on)) {\n                                        interaction.onPci('responseChange', function () {\n                                            containerHelper.triggerResponseChangeEvent(interaction);\n                                        });\n                                    }\n                                    resolve();\n                                });\n                            } else {\n                                reject('Unable to initialize pci \"' + id + '\"');\n                            }\n                        },\n                        reject\n                    );\n                })\n                .catch(function (error) {\n                    reject('Error loading runtime \"' + id + '\": ' + error);\n                });\n        });\n    };\n\n    /**\n     * Programmatically set the response following the json schema described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        instanciator.getPci(interaction).setResponse(response);\n    };\n\n    /**\n     * Get the response in the json format described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return instanciator.getPci(interaction).getResponse();\n    };\n\n    /**\n     * Remove the current response set in the interaction\n     * The state may not be restored at this point.\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function resetResponse(interaction) {\n        instanciator.getPci(interaction).resetResponse();\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} interaction\n     * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n     */\n    var destroy = function destroy(interaction) {\n        return _getPciRenderer(interaction).destroy(interaction);\n    };\n\n    /**\n     * Restore the state of the interaction from the serializedState.\n     *\n     * @param {Object} interaction\n     * @param {Object} serializedState - json format\n     */\n    var setState = function setState(interaction, serializedState) {\n        _getPciRenderer(interaction).setState(interaction, serializedState);\n    };\n\n    /**\n     * Get the current state of the interaction as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} interaction\n     * @returns {Object} json format\n     */\n    var getState = function getState(interaction) {\n        return _getPciRenderer(interaction).getState(interaction);\n    };\n\n    var getData = function getData(customInteraction, data) {\n        //remove ns + fix media file path\n        var markup = data.markup;\n        markup = util.removeMarkupNamespaces(markup);\n        markup = PortableElement.fixMarkupMediaSources(markup, this);\n        data.markup = markup;\n\n        return data;\n    };\n\n    var PortableCustomInteraction = {\n        qtiClass: 'customInteraction',\n        template: tpl,\n        getData: getData,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableCustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div\\n    class=\\\"qti-prompt-container\\\"\\n    data-html-editable-container\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <div class=\\\"qti-prompt\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-html-editable id=\\\"prompt-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Prompt = {\n        qtiClass: 'prompt',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Prompt;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-selectPointInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the responses from the interaction\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const getRawResponse = function getRawResponse(interaction) {\n        if (interaction && interaction.paper && _.isArray(interaction.paper.points)) {\n            return _.map(interaction.paper.points, function(point) {\n                return [point.x, point.y];\n            });\n        }\n        return [];\n    };\n\n    /**\n     * Add a new point to the interaction\n     * @param {Object} interaction\n     * @param {Object} point - the x/y point\n     */\n    const addPoint = function addPoint(interaction, point) {\n        const maxChoices = interaction.attr('maxChoices');\n\n        const pointChange = function pointChange() {\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        if (maxChoices > 0 && getRawResponse(interaction).length >= maxChoices) {\n            instructionMgr.validateInstructions(interaction);\n        } else {\n            if (!_.isArray(interaction.paper.points)) {\n                interaction.paper.points = [];\n            }\n\n            graphic.createTarget(interaction.paper, {\n                point: point,\n                create: function create(target) {\n                    if (interaction.isTouch && target && target.getBBox) {\n                        graphic.createTouchCircle(interaction.paper, target.getBBox());\n                    }\n\n                    interaction.paper.points.push(point);\n\n                    pointChange();\n                },\n                remove: function remove() {\n                    _.remove(interaction.paper.points, point);\n\n                    pointChange();\n                }\n            });\n        }\n    };\n\n    /**\n     * Make the image clickable and place targets at the given position.\n     * @param {Object} interaction\n     */\n    const enableSelection = function enableSelection(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $imageBox = $container.find('.main-image-box');\n        const isResponsive = $container.hasClass('responsive');\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n\n        interaction.paper.isTouch = false;\n\n        //used to see if we are in a touch context\n        image.touchstart(function() {\n            interaction.paper.isTouch = true;\n            image.untouchstart();\n        });\n\n        //get the point on click\n        image.click(function imageClicked(event) {\n            addPoint(interaction, graphic.getPoint(event, interaction.paper, $imageBox, isResponsive));\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function(resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive  : $container.hasClass('responsive')\n            });\n\n            //enable to select the paper to position a target\n            enableSelection(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                choiceCount: false,\n                getResponse: getRawResponse,\n                onError: function(data) {\n                    if (data) {\n                        graphic.highlightError(data.target, 'success');\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    const setResponse = function(interaction, response) {\n        let responseValues;\n\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n\n                if (interaction.getResponseDeclaration().attr('cardinality') === 'single') {\n                    responseValues = [responseValues];\n                }\n                _(responseValues)\n                    .filter(function(point) {\n                        return _.isArray(point) && point.length === 2;\n                    })\n                    .forEach(function(point) {\n                        addPoint(interaction, {\n                            x: point[0],\n                            y: point[1]\n                        });\n                    });\n            } catch (err) {\n                return;\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        if (interaction && interaction.paper) {\n            interaction.paper.points = [];\n\n            interaction.paper.forEach(function(element) {\n                const point = element.data('point');\n                if (typeof point === 'object') {\n\n                    if(!element.events) {\n                        // fix for error on empty raphael triggers\n                        element.events = [];\n                    }\n\n                    graphic.trigger(element, 'click');\n                }\n            });\n        }\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {Object} interaction\n         * @returns {Object} the response\n         */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize(getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var SelectPointInteraction = {\n        qtiClass: 'selectPointInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'nouislider'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, pciResponse, nouislider) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-sliderInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"sliderInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _slideTo = function(options) {\n        options.sliderCurrentValue.find('.qti-slider-cur-value').text(options.value);\n        options.sliderValue.val(options.value);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    const render = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            direction = window.getComputedStyle($container[0]).getPropertyValue('direction') || 'ltr',\n            $el = $$1('<div />').attr({ id: `${attributes.responseIdentifier}-qti-slider`, class: 'qti-slider' }), //slider element\n            $sliderLabels = $$1('<div />').attr({ class: 'qti-slider-values' }),\n            $sliderCurrentValue = $$1('<div />').attr({\n                id: `${attributes.responseIdentifier}-qti-slider-cur-value`,\n                class: 'qti-slider-cur-value'\n            }), //show the current selected value\n            $sliderValue = $$1('<input />').attr({ type: 'hidden', id: `${attributes.responseIdentifier}-qti-slider-value`, class: 'qti-slider-value' }); //the input that always holds the slider value\n\n        //getting the options\n        let orientation = 'horizontal';\n        const reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false, //setting the slider whether to be reverse or not\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            step = typeof attributes.step !== 'undefined' && attributes.step ? parseInt(attributes.step) : 1, //default value as per QTI standard\n            steps = (max - min) / step; //number of the steps\n\n        //add the containers\n        $sliderCurrentValue\n            .append(`<span class=\"qti-slider-cur-value-text\">${__('Current value:')}</span>`)\n            .append('<span class=\"qti-slider-cur-value\"></span>');\n\n        //setting the orientation of the slider\n        if (\n            typeof attributes.orientation !== 'undefined' &&\n            $$1.inArray(attributes.orientation, ['horizontal', 'vertical']) > -1\n        ) {\n            orientation = attributes.orientation;\n        }\n\n        let reversedLabels = false;\n        //for vertical only reverse matters\n        if(orientation === 'vertical') {\n            reversedLabels = reverse;\n        }else {\n            reversedLabels = ((!reverse && direction === 'rtl') || (reverse && direction !== 'rtl'));\n        }\n\n        $sliderLabels\n            .append(`<span class=\"slider-min\">${reversedLabels ? max : min }</span>`)\n            .append(`<span class=\"slider-max\">${reversedLabels ? min : max}</span>`);\n\n        interaction\n            .getContainer()\n            .append($el)\n            .append($sliderLabels)\n            .append($sliderCurrentValue)\n            .append($sliderValue);\n\n\n        let sliderSize = 0;\n\n        if (orientation === 'horizontal') {\n            $container.addClass('qti-slider-horizontal');\n        } else {\n            const maxHeight = 300;\n            sliderSize = steps * 20;\n            if (sliderSize > maxHeight) {\n                sliderSize = maxHeight;\n            }\n            $container.addClass('qti-slider-vertical');\n            $el.height(`${sliderSize}px`);\n            $sliderLabels.height(`${sliderSize}px`);\n        }\n\n        //set the middle value if the stepLabel attribute is enabled\n        if (typeof attributes.stepLabel !== 'undefined' && attributes.stepLabel) {\n            const middleStep = parseInt(steps / 2),\n                leftOffset = (100 / steps) * middleStep,\n                middleValue = reverse ? max - middleStep * step : min + middleStep * step;\n\n            if (orientation === 'horizontal') {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"left:'${leftOffset}%\">${middleValue}</span>`);\n            } else {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"top:${leftOffset}%\">${middleValue}</span>`);\n            }\n        }\n\n        //create the slider\n        $el.noUiSlider({\n            start: reverse ? max : min,\n            range: {\n                min: min,\n                max: max\n            },\n            step: step,\n            orientation,\n            direction\n        }).on('slide', function() {\n            let val = parseInt($$1(this).val());\n            if (interaction.attr('reverse')) {\n                val = max + min - val;\n            }\n            val = Math.round(val * 1000) / 1000;\n            _slideTo({\n                value: val,\n                sliderValue: $sliderValue,\n                sliderCurrentValue: $sliderCurrentValue\n            });\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n        });\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function(e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'responseIdentifier' && data.value) {\n                    const attributesNew = interaction.getAttributes();\n                    // data.value and attributesNew.responseIdentifier is the same\n                    $container.find('.qti-slider').attr({ id: `${attributesNew.responseIdentifier}-qti-slider`});\n                    $container.find('.qti-slider-cur-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-cur-value`});\n                    $container.find('.qti-slider-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-value`});\n                }\n            }\n        });\n    };\n\n    var resetResponse = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false,\n            startValue = reverse ? max : min;\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(startValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound);\n        let value;\n\n        value = pciResponse.unserialize(response, interaction)[0];\n\n        _slideTo({\n            value: value,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(interaction.attr('reverse') ? max + min - value : value);\n    };\n\n    var _getRawResponse = function(interaction) {\n        let value;\n        const attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            min = parseInt(attributes.lowerBound),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`);\n\n        if (baseType === 'integer') {\n            value = parseInt($sliderValue.val());\n        } else if (baseType === 'float') {\n            value = parseFloat($sliderValue.val());\n        }\n\n        return isNaN(value) ? min : value;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize([_getRawResponse(interaction)], interaction);\n    };\n\n    const destroy = function(interaction) {\n        const $container = interaction.getContainer();\n\n        $container.empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    var SliderInteraction = {\n        qtiClass: 'sliderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'util/locale', 'ui/tooltip', 'core/logger', 'util/converter', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, patternMaskHelper, locale, tooltip, loggerFactory, converter, verticalWriting) { 'use strict';\n\n        $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n        _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n        __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n        Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n        Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n        containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n        instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n        pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n        patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n        locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n        tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n        loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n        converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n\n        if (!Helpers0.__initialized) {\n          Helpers0(Handlebars);\n          Helpers0.__initialized = true;\n        }\n        var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n          this.compilerInfo = [4,'>= 1.0.0'];\n        helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n          var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n        function program1(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \"id=\\\"\"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\\"\";\n          return buffer;\n          }\n\n        function program3(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \" \"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n          return buffer;\n          }\n\n          buffer += \"<input\\n        \";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \"\\n        class=\\\"qti-interaction qti-inlineInteraction qti-textEntryInteraction\";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \"\\\"\\n        data-serial=\\\"\";\n          if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n          else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n          buffer += escapeExpression(stack1)\n            + \"\\\"\\n        data-qti-class=\\\"textEntryInteraction\\\"\\n        type=\\\"text\\\"\\n>\";\n          return buffer;\n          });\n        function tpl(data, options, asString) {\n          var html = Template(data, options);\n          return (asString || true) ? html : $(html);\n        }\n\n        /*\n         * This program is free software; you can redistribute it and/or\n         * modify it under the terms of the GNU General Public License\n         * as published by the Free Software Foundation; under version 2\n         * of the License (non-upgradable).\n         *\n         * This program is distributed in the hope that it will be useful,\n         * but WITHOUT ANY WARRANTY; without even the implied warranty of\n         * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n         * GNU General Public License for more details.\n         *\n         * You should have received a copy of the GNU General Public License\n         * along with this program; if not, write to the Free Software\n         * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n         *\n         * Copyright (c) 2014-2022 Open Assessment Technologies SA (under the project TAO-PRODUCT);\n         *\n         */\n\n        /**\n         * Create a logger\n         */\n        const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js');\n\n        /**\n         * Hide the tooltip for the text input\n         * @param {jQuery} $input\n         */\n        function hideTooltip($input) {\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').hide();\n                $input.data('textentry-tooltip-is-shown', false);\n            }\n        }\n\n        /**\n         * Create/Show tooltip for the text input\n         * @param {jQuery} $input\n         * @param {String} theme\n         * @param {String} message\n         */\n        function showTooltip($input, theme, message) {\n            const isVertical = verticalWriting.getIsItemWritingModeVerticalRl();\n            message = verticalWriting.wrapDigitsInCombineUpright(message, isVertical);\n\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').updateTitleContent(message);\n            } else {\n                let tooltipOptions = {\n                    theme: theme,\n                    trigger: 'manual',\n                    placement: isVertical ? 'right' : 'top'\n                };\n                const textEntryTooltip = tooltip.create($input, message, tooltipOptions);\n\n                $input.data('$tooltip', textEntryTooltip);\n            }\n\n            $input.data('$tooltip').show();\n            $input.data('textentry-tooltip-is-shown', true);\n        }\n\n        /**\n         * Refresh tooltip position\n         * @param {jQuery} $input\n         */\n        function refreshTooltip($input) {\n            if ($input.data('$tooltip') && $input.data('textentry-tooltip-is-shown')) {\n                $input.data('$tooltip').hide();\n                $input.data('$tooltip').show();\n            }\n        }\n\n        /**\n         * Validate the input for decimal values.\n         *\n         * This function ensures that the input value is either empty or follows\n         * the rules for decimal numbers. It allows numbers with optional\n         * thousands separators (commas) and a mandatory decimal point (dot).\n         *\n         * @param {jQuery} $input\n         * @param {Object} options - `{ allowMinusOnly: boolean, withTooltip: boolean }`\n         */\n        function validateDecimalInput($input, { allowMinusOnly = false, withTooltip = true } = {}) {\n            const separatorName = {\n                '.': __('(dot)'),\n                ',': __('(comma)'),\n                ' ': __('(space)')\n            };\n            const value = converter.convert($input.val());\n            const thousandsSeparator = locale.getThousandsSeparator();\n            const decimalSeparator = locale.getDecimalSeparator();\n            const thousandsSeparatorName = separatorName[thousandsSeparator] ? separatorName[thousandsSeparator] : '';\n            const decimalSeparatorName = separatorName[decimalSeparator] ? separatorName[decimalSeparator] : '';\n\n            const escapedThousandsSeparator = thousandsSeparator.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n            const escapedDecimalSeparator = decimalSeparator.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n            let regexPattern = `^$|^-?\\\\d+(${escapedDecimalSeparator}\\\\d+)?$|^-?\\\\d*${escapedDecimalSeparator}$|^-?${escapedDecimalSeparator}\\\\d+$`;\n            if (thousandsSeparator) {\n                regexPattern += `|^-?\\\\d{1,3}(${escapedThousandsSeparator}\\\\d{3})*(${escapedDecimalSeparator}\\\\d+)?$`;\n            }\n            if (allowMinusOnly) {\n                regexPattern += '|^-$';\n            }\n\n            const regex = new RegExp(regexPattern);\n\n            if (!regex.test(value)) {\n                $input.addClass('error');\n\n                if (withTooltip) {\n                    const decimalError = thousandsSeparator\n                        ? __(\n                              'Invalid value, use %s %s for decimal point and %s %s for thousands separator.',\n                              decimalSeparator,\n                              decimalSeparatorName,\n                              thousandsSeparator,\n                              thousandsSeparatorName\n                          )\n                        : __('Invalid value, use %s %s for decimal point.', decimalSeparator, decimalSeparatorName);\n                    showTooltip($input, 'error', decimalError);\n                } else {\n                    hideTooltip($input);\n                }\n            } else {\n                $input.removeClass('error');\n                hideTooltip($input);\n            }\n        }\n\n        /**\n         * Validate the input for integer values.\n         * @param {jQuery} $input\n         * @param {Object} options - `{ allowMinusOnly: boolean, withTooltip: boolean }`\n         */\n        function validateIntegerInput($input, { allowMinusOnly = false, withTooltip = true } = {}) {\n            const value = converter.convert($input.val());\n            const regex = new RegExp(`^${allowMinusOnly ? '-?' : ''}$|^-?\\\\d+$`);\n            if (!regex.test(value)) {\n                $input.addClass('error');\n                if (withTooltip) {\n                    showTooltip($input, 'error', __('Invalid value, should be an integer number.'));\n                } else {\n                    hideTooltip($input);\n                }\n            } else {\n                $input.removeClass('error');\n                hideTooltip($input);\n            }\n        }\n\n        /**\n         * Init rendering, called after template injected into the DOM\n         * All options are listed in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * @param {object} interaction\n         */\n        function render(interaction) {\n            const attributes = interaction.getAttributes();\n            const baseType = interaction.getResponseDeclaration().attr('baseType');\n            const $input = interaction.getContainer();\n            const serial = $input.data('serial');\n            const patternMask = interaction.attr('patternMask');\n            const maxChars = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n            let expectedLength;\n\n            // Setting up baseType\n            switch (baseType) {\n                case 'integer':\n                    $input.attr('inputmode', 'numeric');\n                    $input\n                        .on('input.commonRenderer', () =>\n                            validateIntegerInput($input, { allowMinusOnly: true, withTooltip: true })\n                        )\n                        .on('focus.commonRenderer', () =>\n                            validateIntegerInput($input, { allowMinusOnly: false, withTooltip: true })\n                        )\n                        .on('blur.commonRenderer', () =>\n                            validateIntegerInput($input, { allowMinusOnly: false, withTooltip: false })\n                        );\n                    break;\n                case 'float':\n                    $input.attr('inputmode', 'decimal');\n                    $input\n                        .on('input.commonRenderer', () =>\n                            validateDecimalInput($input, { allowMinusOnly: true, withTooltip: true })\n                        )\n                        .on('focus.commonRenderer', () =>\n                            validateDecimalInput($input, { allowMinusOnly: false, withTooltip: true })\n                        )\n                        .on('blur.commonRenderer', () =>\n                            validateDecimalInput($input, { allowMinusOnly: false, withTooltip: false })\n                        );\n                    break;\n                default:\n                    $input.attr('inputmode', 'text');\n            }\n\n            //setting up the width of the input field\n            if (attributes.expectedLength) {\n                //adding 2 chars to include reasonable padding size\n                expectedLength = parseInt(attributes.expectedLength) + 2;\n                $input.css('inline-size', expectedLength + 'ch');\n                $input.css('min-inline-size', expectedLength + 'ch');\n            }\n\n            //checking if there's a placeholder for the input\n            if (attributes.placeholderText) {\n                $input.attr('placeholder', attributes.placeholderText);\n            }\n\n            if (maxChars) {\n                const updateMaxCharsTooltip = () => {\n                    const count = $input.val().length;\n                    let message;\n                    let messageType;\n\n                    if (count) {\n                        message = __('%d/%d', count, maxChars);\n                    } else {\n                        message = __('%d characters allowed', maxChars);\n                    }\n\n                    if (count >= maxChars) {\n                        $input.addClass('maxed');\n                        messageType = 'warning';\n                    } else {\n                        $input.removeClass('maxed');\n                        messageType = 'info';\n                    }\n\n                    showTooltip($input, messageType, message);\n                    if (count && messageType === 'warning') {\n                        hideTooltip($input);\n                    }\n                };\n\n                $input\n                    .attr('maxlength', maxChars)\n                    .on('focus.commonRenderer', function () {\n                        updateMaxCharsTooltip();\n                    })\n                    .on('keyup.commonRenderer', function () {\n                        updateMaxCharsTooltip();\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                    })\n                    .on('blur.commonRenderer', function () {\n                        hideTooltip($input);\n                    });\n            } else if (attributes.patternMask) {\n                const updatePatternMaskTooltip = () => {\n                    const regex = new RegExp(attributes.patternMask);\n\n                    hideTooltip($input);\n\n                    if ($input.val()) {\n                        if (regex.test($input.val())) {\n                            $input.removeClass('error');\n                        } else {\n                            $input.addClass('error');\n                            showTooltip($input, 'error', __('This is not a valid answer'));\n                        }\n                    }\n                };\n\n                $input\n                    .on('focus.commonRenderer', function () {\n                        updatePatternMaskTooltip();\n                    })\n                    .on('keyup.commonRenderer', function () {\n                        updatePatternMaskTooltip();\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                    })\n                    .on('blur.commonRenderer', function () {\n                        hideTooltip($input);\n                    });\n            } else {\n                $input.on('keyup.commonRenderer', function () {\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                });\n            }\n\n            //refresh tooltip position when all styles loaded.\n            $$1(document).on(`themeapplied.textEntryInteraction-${serial}`, () => {\n                refreshTooltip($input);\n            });\n        }\n\n        function resetResponse(interaction) {\n            interaction.getContainer().val('');\n        }\n\n        /**\n         * Set the response to the rendered interaction.\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * Special value: the empty object value {} resets the interaction responses\n         *\n         * @param {object} interaction\n         * @param {object} response\n         */\n        function setResponse(interaction, response) {\n            let responseValue;\n\n            try {\n                responseValue = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                logger.warn(`setResponse error ${e}`);\n            }\n\n            if (responseValue && responseValue.length) {\n                interaction.getContainer().val(responseValue[0]);\n            }\n        }\n\n        /**\n         * Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n        function getResponse(interaction) {\n            const ret = { base: {} };\n            const $input = interaction.getContainer();\n            const attributes = interaction.getAttributes();\n            const baseType = interaction.getResponseDeclaration().attr('baseType');\n            const numericBase = attributes.base || 10;\n\n            const inputValue = $input.val();\n            let value;\n\n            if (\n                (attributes.patternMask && $input.hasClass('error')) ||\n                (attributes.placeholderText && inputValue === attributes.placeholderText)\n            ) {\n                //invalid response or response equals to the placeholder text are considered empty\n                value = '';\n            } else {\n                const convertedValue = converter.convert(inputValue.trim());\n                if (baseType === 'integer') {\n                    value = locale.parseInt(convertedValue, numericBase);\n                } else if (baseType === 'float') {\n                    value = locale.parseFloat(convertedValue);\n                } else if (baseType === 'string') {\n                    value = convertedValue;\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n\n            return ret;\n        }\n\n        function destroy(interaction) {\n            const $interaction = containerHelper.get(interaction);\n            const serial = $interaction.data('serial');\n\n            $$1('input.qti-textEntryInteraction').each(function (index, el) {\n                const $input = $$1(el);\n                if ($input.data('$tooltip')) {\n                    $input.data('$tooltip').dispose();\n                    $input.removeData('$tooltip');\n                }\n            });\n\n            //remove event\n            $$1(document).off('.commonRenderer');\n            $interaction.off('.commonRenderer');\n            $$1(document).off(`.textEntryInteraction-${serial}`);\n\n            //remove instructions\n            instructionMgr.removeInstructions(interaction);\n\n            //remove all references to a cache container\n            containerHelper.reset(interaction);\n        }\n\n        /**\n         * Set the interaction state. It could be done anytime with any state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @param {Object} state - the interaction state\n         */\n        function setState(interaction, state) {\n            if (_.isObject(state)) {\n                if (state.response) {\n                    interaction.resetResponse();\n                    interaction.setResponse(state.response);\n                }\n            }\n        }\n\n        /**\n         * Get the interaction state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @returns {Object} the interaction current state\n         */\n        function getState(interaction) {\n            const state = {};\n            const response = interaction.getResponse();\n\n            if (response) {\n                state.response = response;\n            }\n\n            const $input = interaction.getContainer();\n            if ($input.hasClass('error')) {\n                state.validity = { isValid: false };\n            }\n\n            return state;\n        }\n\n        var TextEntryInteraction = {\n            qtiClass: 'textEntryInteraction',\n            template: tpl,\n            render: render,\n            getContainer: containerHelper.get,\n            setResponse: setResponse,\n            getResponse: getResponse,\n            resetResponse: resetResponse,\n            destroy: destroy,\n            setState: setState,\n            getState: getState\n        };\n\n        return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',['jquery', 'lodash', 'i18n', 'core/mimetype', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/uploadMime', 'ui/progressbar', 'ui/previewer', 'ui/modal', 'ui/waitForMedia'], function ($$1, _, __, mimetype, Handlebars, Helpers0, containerHelper, instructionMgr, uploadHelper, progressbar, previewer, modal, waitForMedia) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimetype = mimetype && Object.prototype.hasOwnProperty.call(mimetype, 'default') ? mimetype['default'] : mimetype;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    uploadHelper = uploadHelper && Object.prototype.hasOwnProperty.call(uploadHelper, 'default') ? uploadHelper['default'] : uploadHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"accept=\\\"\";\n      if (helper = helpers.accept) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.accept); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-blockInteraction qti-uploadInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n\t\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\t<div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"file-upload fixed-grid-row lft\\\">\\n        <div class=\\\"progressbar\\\"></div>\\n        <span class=\\\"btn-info small col-4\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Browse...\", options) : helperMissing.call(depth0, \"__\", \"Browse...\", options)))\n        + \"</span>\\n        <span class=\\\"file-name placeholder col-8 truncate\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No file selected\", options) : helperMissing.call(depth0, \"__\", \"No file selected\", options)))\n        + \"</span>\\n        <input type=\\\"file\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.accept), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"/>\\n    </div>\\n    <div class=\\\"file-upload-preview lft visible-file-upload-preview runtime-visible-file-upload-preview\\\">\\n        <p class=\\\"nopreview\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No preview available\", options) : helperMissing.call(depth0, \"__\", \"No preview available\", options)))\n        + \"</p>\\n    </div>\\n    <div class=\\\"file-upload-preview-popup modal\\\">\\n        <div class=\\\"modal-body\\\">\\n        </div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _initialInstructions = __('Browse your computer and select the appropriate file.');\n\n    var _readyInstructions = __('The selected file is ready to be sent.');\n\n    /**\n     * Validate type of selected file\n     * @param file\n     * @param interaction\n     * @returns {boolean}\n     */\n    var validateFileType = function validateFileType(file, interaction) {\n        var expectedTypes = uploadHelper.getExpectedTypes(interaction, true);\n        var filetype = mimetype.getMimeType(file);\n        if (expectedTypes.length) {\n            return _.indexOf(expectedTypes, filetype) >= 0;\n        }\n        return true;\n    };\n\n    /**\n     * Compute the message to be displayed when an invalid file type has been selected\n     *\n     * @param {Object} interaction\n     * @param {Function} userSelectedType\n     * @param {Function} messageWrongType\n     * @returns {String}\n     */\n    var getMessageWrongType = function getMessageWrongType(interaction, userSelectedType, messageWrongType) {\n        var types = uploadHelper.getExpectedTypes(interaction);\n        var expectedTypeLabels = _.map(_.uniq(types), function (type) {\n            var mime = _.find(uploadHelper.getMimeTypes(), { mime: type });\n            if (mime) {\n                return mime.label;\n            } else {\n                return type;\n            }\n        });\n\n        if (messageWrongType && _.isFunction(messageWrongType)) {\n            return messageWrongType({\n                userSelectedType: userSelectedType,\n                types: expectedTypeLabels\n            });\n        } else {\n            return __(\n                'Wrong type of file. Expected %s. The selected file has the mimetype \"%s\".',\n                expectedTypeLabels.join(__(' or ')),\n                userSelectedType\n            );\n        }\n    };\n\n    var _handleSelectedFiles = function _handleSelectedFiles(interaction, file, messageWrongType) {\n        var reader;\n        var $container = containerHelper.get(interaction);\n\n        // Show information about the processed file to the candidate.\n        var filename = file.name;\n        var filetype = mimetype.getMimeType(file);\n        instructionMgr.removeInstructions(interaction);\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        if (!validateFileType(file, interaction)) {\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(\n                interaction,\n                getMessageWrongType(interaction, filetype, messageWrongType),\n                function () {\n                    this.setLevel('error');\n                    //clear preview\n                }\n            );\n            instructionMgr.validateInstructions(interaction);\n            return;\n        }\n\n        $container\n            .find('.file-name')\n            .empty()\n            .append(filename);\n\n        // Let's read the file to get its base64 encoded content.\n        reader = new FileReader();\n\n        // Update file processing progress.\n\n        reader.onload = function (e) {\n            var base64Data, commaPosition, base64Raw, $previewArea;\n\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(interaction, _readyInstructions, function () {\n                this.setLevel('success');\n            });\n            instructionMgr.validateInstructions(interaction);\n\n            $container.find('.progressbar').progressbar('value', 100);\n\n            base64Data = e.target.result;\n            commaPosition = base64Data.indexOf(',');\n\n            // Store the base64 encoded data for later use.\n            base64Raw = base64Data.substring(commaPosition + 1);\n            interaction.data('_response', { base: { file: { data: base64Raw, mime: filetype, name: filename } } });\n\n            $previewArea = $container.find('.file-upload-preview');\n            $previewArea.previewer({\n                url: base64Data,\n                name: filename,\n                mime: filetype\n            });\n\n            // we wait for the image to be completely loaded\n            $previewArea.waitForMedia(function () {\n                var $originalImg = $previewArea.find('img'),\n                    $largeDisplay = $$1('.file-upload-preview-popup'),\n                    $item = $$1('.qti-item'),\n                    itemWidth = $item.width(),\n                    winWidth = $$1(window).width() - 80,\n                    fullHeight = $$1('body').height(),\n                    imgNaturalWidth,\n                    isOversized,\n                    modalWidth;\n\n                if (!$originalImg.length) {\n                    return;\n                }\n\n                imgNaturalWidth = $originalImg[0].naturalWidth;\n                isOversized = imgNaturalWidth > itemWidth;\n                modalWidth = Math.min(winWidth, imgNaturalWidth);\n\n                $previewArea.toggleClass('clickable', isOversized);\n\n                if (!isOversized) {\n                    return;\n                }\n\n                $previewArea.on('click', function () {\n                    var $modalBody;\n\n                    $$1('.upload-ia-modal-bg').remove();\n\n                    // remove any previous unnecessary content before inserting the preview image\n                    $modalBody = $largeDisplay.find('.modal-body');\n                    $modalBody.empty().append($originalImg.clone());\n\n                    $largeDisplay\n                        .on('opened.modal', function () {\n                            // prevents the rest of the page from scrolling when modal is open\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'hidden');\n\n                            $largeDisplay.css({\n                                width: modalWidth,\n                                height: fullHeight,\n                                left: (modalWidth - itemWidth - 40) / -2\n                            });\n                        })\n                        .on('closed.modal', function () {\n                            // make the page scrollable again\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'auto');\n                        })\n                        .modal({ modalOverlayClass: 'modal-bg upload-ia-modal-bg' });\n                });\n            });\n        };\n\n        reader.onloadstart = function onloadstart() {\n            instructionMgr.removeInstructions(interaction);\n            $container.find('.progressbar').progressbar('value', 0);\n        };\n\n        reader.onprogress = function onprogress(e) {\n            var percentProgress = Math.ceil((Math.round(e.loaded) / Math.round(e.total)) * 100);\n            $container.find('.progressbar').progressbar('value', percentProgress);\n        };\n\n        reader.readAsDataURL(file);\n    };\n\n    /**\n     * Resets the GUI state to the default display.\n     *\n     * @param {Object} interaction\n     */\n    function resetGui(interaction) {\n        var $container = containerHelper.get(interaction);\n        $container.find('.file-name').text(__('No file selected'));\n        $container.find('.btn-info').text(__('Browse...'));\n    }\n    function callResetGui(interaction) {\n        const renderer = interaction.getRenderer();\n        if (_.isFunction(renderer.resetGui)) {\n            renderer.resetGui(interaction);\n        }\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    function render(interaction) {\n        var changeListener,\n            self = this,\n            $input;\n        var $container = containerHelper.get(interaction);\n        callResetGui(interaction);\n\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        //init response\n        interaction.data('_response', { base: null });\n\n        changeListener = function (e) {\n            var file = e.target.files[0];\n\n            // Are you really sure something was selected\n            // by the user... huh? :)\n            if (typeof file !== 'undefined') {\n                _handleSelectedFiles(interaction, file, self.getCustomMessage('upload', 'wrongType'));\n            }\n        };\n\n        $input = $container.find('input');\n\n        $container.find('.progressbar').progressbar();\n\n        if (!window.FileReader) {\n            throw new Error('FileReader API not supported! Please use a compliant browser!');\n        }\n        $input.bind('change', changeListener);\n\n        // IE Specific hack, prevents button to slightly move on click\n        $input.bind('mousedown', function (e) {\n            e.preventDefault();\n            $$1(this).blur();\n            return false;\n        });\n    }\n    var resetResponse = function resetResponse(interaction) {\n        callResetGui(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        var filename,\n            $container = containerHelper.get(interaction);\n\n        if (response.base !== null) {\n            filename =\n                typeof response.base.file.name !== 'undefined' ? response.base.file.name : 'previously-uploaded-file';\n            $container\n                .find('.file-name')\n                .empty()\n                .text(filename);\n        }\n\n        interaction.data('_response', response);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return interaction.data('_response');\n    };\n\n    var destroy = function destroy(interaction) {\n        //remove event\n        $$1(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     * This way we could cover a lot more types. How could this be matched with the preview templates\n     * in tao/views/js/ui/previewer.js\n     */\n    var getCustomData = function getCustomData(interaction, data) {\n        return _.merge(data || {}, {\n            accept: uploadHelper.getExpectedTypes(interaction, true).join(',')\n        });\n    };\n\n    var UploadInteraction = {\n        qtiClass: 'uploadInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        getData: getCustomData,\n\n        // Exposed private methods for qtiCreator\n        resetGui: resetGui\n    };\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Item',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler'], function (Handlebars, Helpers0, containerHelper, itemStylesheetHandler) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    itemStylesheetHandler = itemStylesheetHandler && Object.prototype.hasOwnProperty.call(itemStylesheetHandler, 'default') ? itemStylesheetHandler['default'] : itemStylesheetHandler;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-item tao-scope runtime\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-itemBody \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    <div id=\\\"modalFeedbacks\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var Item = {\n        qtiClass: 'assessmentItem',\n        template: tpl,\n        getContainer: containerHelper.get,\n\n        /**\n         * Rendering initializations for the item\n         * @param {Object} item - the item model\n         */\n        render: function render(item) {\n            //target blank for all <a>\n            containerHelper.targetBlank(containerHelper.get(item));\n\n            //add stylesheets\n            itemStylesheetHandler.attach(item.stylesheets);\n        },\n\n        /**\n         * Unrender\n         * @param {Object} item - the item model\n         */\n        destroy: function destroy(item) {\n            //clear the container cache\n            containerHelper.clear();\n\n            //detach stylesheets\n            if (item.stylesheets) {\n                itemStylesheetHandler.detach(item.stylesheets);\n            }\n        }\n    };\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Math',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'mathJax', 'jquery'], function (Handlebars, Helpers0, containerHelper, MathJax, $$1) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    MathJax = MathJax && Object.prototype.hasOwnProperty.call(MathJax, 'default') ? MathJax['default'] : MathJax;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math display=\\\"block\\\">\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math>\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.block), {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    // Do not wait between rendering each individual math element\n    // http://docs.mathjax.org/en/latest/api/hub.html\n    if (typeof MathJax !== 'undefined' && MathJax) {\n        MathJax.Hub.processSectionDelay = 0;\n    }\n\n    var _Math = {\n        qtiClass: 'math',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(math) {\n            $$1('body').on('mathjaxRendered', function (event, reference) {\n                if ($$1(reference).find('math').length !== 0) {\n                    $$1(reference).closest('.qti-choice').addClass('flexible-choice-width');\n                }\n            });\n\n            return new Promise(function (resolve) {\n                const $self = containerHelper.get(math);\n                if (typeof MathJax !== 'undefined' && MathJax) {\n                    //MathJax needs to be exported globally to integrate with tools like TTS, it's weird...\n                    if (!window.MathJax) {\n                        window.MathJax = MathJax;\n                    }\n                    //defer execution fix some rendering issue in chrome\n                    if ($self.length) {\n                        MathJax.Hub.Queue(['Typeset', MathJax.Hub, $self[0]]);\n                        MathJax.Hub.Queue(function () {\n                            $$1('body').trigger('mathjaxRendered', [$self[0]]);\n                            resolve();\n                        });\n                    } else {\n                        resolve();\n                    }\n                } else {\n                    resolve();\n                }\n            });\n        }\n    };\n\n    return _Math;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n     **/\n\n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n\n    /**\n     * Check if the element is of a qti container type\n     *\n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element) {\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\n            return true;\n        } else {\n            throw 'the element is not of a container type';\n        }\n    }\n\n    /**\n     * Get the body element of the container\n     *\n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element) {\n        if (_checkContainerType(element)) {\n            return $('<div>')\n                .html(element.body())\n                .find('.x-tao-wrapper');\n        }\n    }\n\n    /**\n     * Add a class to the body element of the qti container\n     *\n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass) {\n        if (_checkContainerType(element) && (oldClass || newClass)) {\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n\n    /**\n     * Switch class to the wrapped DOM\n     *\n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass) {\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if (!$bodyDom.length) {\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if (oldClass) {\n            $bodyDom.removeClass(oldClass);\n        }\n        if (newClass) {\n            $bodyDom.addClass(newClass);\n        }\n    }\n\n    /**\n     * Add manually the encoded information to a dom element\n     *\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n\n    /**\n     * Get the full variable name for the data store\n     *\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value) {\n        if (dataName && value) {\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n\n    /**\n     * Set a data string to the element identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue) {\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(\n            element,\n            _getEncodedDataString(dataName, newValue),\n            _getEncodedDataString(dataName, oldValue)\n        );\n    }\n\n    /**\n     * Remove the stored data from the element by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName) {\n        var oldValue = getEncodedData(element, dataName);\n        if (dataName && oldValue) {\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value) {\n        var $body = _getBodyDom(element);\n        if ($body && $body.length && dataName && value) {\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n\n    /**\n     * Get the encoded data identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName) {\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if (dataName && $body && $body.length && $body.attr('class')) {\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\n            matches = $body.attr('class').match(regex);\n            if (matches) {\n                return matches[1];\n            }\n        }\n    }\n\n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    var container = {\n        setEncodedData: setEncodedData,\n        hasEncodedData: hasEncodedData,\n        getEncodedData: getEncodedData,\n        removeEncodedData: removeEncodedData,\n        setEncodedDataToDom: setEncodedDataToDom\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiItem/helper/container', 'ui/waitForMedia', 'ui/modal'], function (_, Handlebars, Helpers0, containerHelper, coreContainerHelper, waitForMedia, modal) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    coreContainerHelper = coreContainerHelper && Object.prototype.hasOwnProperty.call(coreContainerHelper, 'default') ? coreContainerHelper['default'] : coreContainerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"modal \";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"<h2 class=\\\"qti-title modal-title\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</h2>\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.inline), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-modalFeedback \";\n      if (helper = helpers.feedbackStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.feedbackStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"modal-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var modalFeedbackRenderer = {\n        qtiClass: 'modalFeedback',\n        template: tpl,\n        getContainer: containerHelper.get,\n        width: 600,\n        getData: function(fb, data) {\n            data.feedbackStyle = coreContainerHelper.getEncodedData(fb, 'modalFeedback');\n            return data;\n        },\n        render: function(modalFeedback, data) {\n            var $modal = containerHelper.get(modalFeedback);\n\n            $modal.waitForMedia(function() {\n                //when we are sure that media is loaded:\n                $modal\n                    .on('opened.modal', function() {\n                        //set item body height\n                        var $itemBody = containerHelper.get(modalFeedback.getRootElement()).children('.qti-itemBody');\n                        var requiredHeight = $modal.outerHeight() + parseInt($modal.css('top'));\n                        if (requiredHeight > $itemBody.height()) {\n                            $itemBody.height(requiredHeight);\n                        }\n                    })\n                    .on('closed.modal', function() {\n                        data = data || {};\n\n                        if (_.isFunction(data.callback)) {\n                            data.callback.call(this);\n                        }\n                    })\n                    .modal({\n                        startClosed: false,\n                        minHeight: modalFeedbackRenderer.minHeight,\n                        width: modalFeedbackRenderer.width\n                    });\n            });\n        }\n    };\n\n    return modalFeedbackRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Object',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/previewer'], function (Handlebars, Helpers0, containerHelper, previewer) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-object-container\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA\n     */\n\n    var _Object = {\n        qtiClass: 'object',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function(obj) {\n            var $container = containerHelper.get(obj);\n            var previewOptions = {\n                url: obj.renderer.resolveUrl(obj.attr('data')),\n                mime: obj.attr('type')\n            };\n            if (obj.attr('height')) {\n                previewOptions.height = obj.attr('height');\n            }\n            if (obj.attr('width')) {\n                previewOptions.width = obj.attr('width');\n            }\n            if (\n                obj.metaData.metadataUri\n                && obj.metaData.resourceMetadataUrl\n                && obj.attr('data').includes('taomedia://mediamanager/')\n            ) {\n                const transcriptionUrl = obj.metaData.resourceMetadataUrl;\n                const metadataUri = encodeURIComponent(obj.metaData.metadataUri);\n                const resourceUri = obj.attr('data').replace('taomedia://mediamanager/', '');\n                previewOptions.transcriptionUrl = `${transcriptionUrl}?metadataUri=${metadataUri}&resourceUri=${resourceUri}`;\n            }\n            if (previewOptions.url && previewOptions.mime) {\n                $container.previewer(previewOptions);\n            }\n        }\n    };\n\n    return _Object;\n\n});\n\n","define('qtiInfoControlContext',[],function(){\n\n    //need a global reference to have picHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._picHooks = window._picHooks || {};\n\n    /**\n     * Global object accessible by all PICs\n     *\n     * @type Object\n     */\n    var taoQtiInfoControlContext = {\n        /**\n         * register a info control (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} picHook\n         * @returns {undefined}\n         */\n        register : function(picHook){\n            //@todo check picHook validity\n            window._picHooks[picHook.getTypeIdentifier()] = picHook;\n        },\n        /**\n         * notify when a info control is ready for test taker interaction\n         *\n         * @param {string} picInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(picInstance){\n            //@todo add pciInstance as event data and notify event to delivery engine\n        },\n        /**\n         * Get a cloned object representing the PIC model\n         *\n         * @param {string} typeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(typeIdentifier){\n\n            if(window._picHooks[typeIdentifier]){\n\n                var instance = {},\n                    proto = window._picHooks[typeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable info control hook found with the id ' + typeIdentifier;\n            }\n        }\n    };\n\n\n    return taoQtiInfoControlContext;\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'qtiInfoControlContext', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/icRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, qtiInfoControlContext, util, icRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    qtiInfoControlContext = qtiInfoControlContext && Object.prototype.hasOwnProperty.call(qtiInfoControlContext, 'default') ? qtiInfoControlContext['default'] : qtiInfoControlContext;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-infoControl\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * Get the PIC instance associated to the infoControl object\n     * If none exists, create a new one based on the PIC typeIdentifier\n     *\n     * @param {Object} infoControl - the js object representing the infoControl\n     * @returns {Object} PIC instance\n     */\n    var _getPic = function(infoControl) {\n        var typeIdentifier,\n            pic = infoControl.data('pic') || undefined;\n\n        if (!pic) {\n            typeIdentifier = infoControl.typeIdentifier;\n            pic = qtiInfoControlContext.createPciInstance(typeIdentifier);\n\n            if (pic) {\n                //binds the PIC instance to TAO infoControl object and vice versa\n                infoControl.data('pic', pic);\n                pic._taoInfoControl = infoControl;\n            } else {\n                throw 'no custom infoControl hook found for the type ' + typeIdentifier;\n            }\n        }\n\n        return pic;\n    };\n\n    /**\n     * Execute javascript codes to bring the infoControl to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. ensure the context is configured correctly\n     * 2. require all required libs\n     * 3. create a pic instance based on the infoControl model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable\n     *\n     * @param {Object} infoControl\n     * @param {Object} [options]\n     */\n    var render = function(infoControl, options) {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var state = {}; //@todo pass state and response to renderer here:\n            var id = infoControl.attr('id');\n            var typeIdentifier = infoControl.typeIdentifier;\n            var config = infoControl.properties;\n            var $dom = containerHelper.get(infoControl).children();\n            var assetManager = self.getAssetManager();\n\n            icRegistry\n                .loadRuntimes()\n                .then(function() {\n                    var requireEntries = [];\n                    var runtime = icRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pic cannot be found : ' + typeIdentifier);\n                    }\n\n                    //load the entrypoint, becomes optional per IMS PCI v1\n                    if (runtime.hook) {\n                        requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                    }\n\n                    //load required libraries\n                    _.forEach(runtime.libraries, function(module) {\n                        requireEntries.push(module.replace(/\\.js$/, ''));\n                    });\n\n                    //load stylesheets\n                    _.forEach(runtime.stylesheets, function(stylesheet) {\n                        requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                    });\n\n                    //load the entrypoint\n                    window.require(requireEntries, function() {\n                        var pic = _getPic(infoControl);\n                        var picAssetManager = {\n                            resolve: function resolve(url) {\n                                var resolved = assetManager.resolveBy('portableElementLocation', url);\n                                if (resolved === url) {\n                                    return assetManager.resolveBy('baseUrl', url);\n                                } else {\n                                    return resolved;\n                                }\n                            }\n                        };\n\n                        if (pic) {\n                            //call pic initialize() to render the pic\n                            pic.initialize(id, $dom[0], config, picAssetManager);\n                            //restore context (state + response)\n                            pic.setSerializedState(state);\n\n                            return resolve();\n                        }\n\n                        return reject('Unable to initialize pic : ' + id);\n                    }, reject);\n                })\n                .catch(function(error) {\n                    reject('Error loading runtime : ' + id);\n                });\n        });\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} infoControl\n     */\n    var destroy = function destroy(infoControl) {\n        _getPic(infoControl).destroy();\n    };\n\n    /**\n     * Restore the state of the infoControl from the serializedState.\n     *\n     * @param {Object} infoControl - the element instance\n     * @param {Object} state - the state to set\n     */\n    var setState = function setState(infoControl, state) {\n        _getPic(infoControl).setSerializedState(state);\n    };\n\n    /**\n     * Get the current state of the infoControl as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} infoControl - the element instance\n     * @returns {Object} the state\n     */\n    var getState = function getState(infoControl) {\n        return _getPic(infoControl).getSerializedState();\n    };\n\n    var PortableInfoControl = {\n        qtiClass: 'infoControl',\n        template: tpl,\n        getData: function(infoControl, data) {\n            //remove ns + fix media file path\n            var markup = data.markup;\n            markup = util.removeMarkupNamespaces(markup);\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\n            data.markup = markup;\n            return data;\n        },\n        render: render,\n        getContainer: containerHelper.get,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"printedVariable\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var PrintedVariable = {\n        qtiClass: 'printedVariable',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * Common helper functions\n     */\n    var interactionHelper = {\n        convertChoices: function (choices, outputType) {\n            var ret = [],\n                _this = this;\n\n            _.forEach(choices, function (c) {\n                if (Element.isA(c, 'choice')) {\n                    switch (outputType) {\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices: function (interaction, choices, inputType) {\n            var ret = [],\n                _this = this;\n\n            _.forEach(choices, function (c) {\n                var choice;\n                if (_.isString(c)) {\n                    if (inputType === 'serial') {\n                        choice = interaction.getChoice(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else if (inputType === 'identifier') {\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else {\n                        ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                } else {\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices: function (choices) {\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for (var i in choices) {\n                if (Element.isA(choices[i], 'choice')) {\n                    var choice = choices[i];\n                    if (choice.attr('fixed')) {\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                } else {\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for (var n = 0; n < r.length - 1; n++) {\n                if (f[n]) {\n                    continue;\n                }\n                var k = -1;\n                do {\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                } while (f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier: function (interaction, choiceSerial) {\n            var choice = interaction.getChoice(choiceSerial);\n            if (choice) {\n                return choice.id();\n            } else {\n                return '';\n            }\n        }\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //webpack trick : handlebar is usale only from cjs.\n    //but anyway we should deprecate the practice to invoke\n    //directly Handlebars at runtimej\n    let hb = Handlebars;\n    if (typeof hb.compile !== 'function') {\n        hb = require('handlebars');\n    }\n\n    const _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'figure',\n        'img',\n        'figcaption',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    const _dependencies = {\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock: ['_container'],\n        associateInteraction: ['simpleAssociableChoice'],\n        choiceInteraction: ['simpleChoice'],\n        gapMatchInteraction: ['gap', 'gapText'],\n        graphicAssociateInteraction: ['associableHotspot'],\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction: ['hotspotChoice'],\n        hotspotInteraction: ['hotspotChoice'],\n        hottextInteraction: ['hottext'],\n        inlineChoiceInteraction: ['inlineChoice'],\n        matchInteraction: ['simpleAssociableChoice'],\n        orderInteraction: ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    const _renderableSubclasses = {\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    const _defaults = {\n        shuffleChoices: true\n    };\n\n    const _isValidRenderer = function (renderer) {\n        let valid = true;\n\n        if (typeof renderer !== 'object') {\n            return false;\n        }\n\n        let classCorrect = false;\n        if (renderer.qtiClass) {\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\n                classCorrect = true;\n            } else {\n                const pos = renderer.qtiClass.indexOf('.');\n                if (pos > 0) {\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\n                    const subClass = renderer.qtiClass.slice(pos + 1);\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if (!classCorrect) {\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if (!renderer.template) {\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl() {\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    const Renderer = function (options) {\n        /**\n         * Store the registered renderer location\n         */\n        const _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        const _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        const _getClassRenderer = function (qtiClass) {\n            let ret = null;\n            if (_renderers[qtiClass]) {\n                ret = _renderers[qtiClass];\n            } else {\n                const pos = qtiClass.indexOf('.');\n                if (pos > 0) {\n                    qtiClass = qtiClass.slice(0, pos);\n                    if (_renderers[qtiClass]) {\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            let success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function (key, value) {\n            if (typeof key === 'string') {\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function (opts) {\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function (key) {\n            if (typeof key === 'string' && options[key]) {\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\n            const messages = this.getOption('messages');\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\n                //currently not translatable but potentially could be if the need raises\n                return hb.compile(messages[elementName][messageKey]);\n            } else {\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager() {\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader() {\n            return this.themeLoader;\n        };\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function (element, data, qtiSubclass) {\n            let res;\n            let ret = '';\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n            const decorators = this.getOption('decorators');\n\n            if (!renderer || !_.isFunction(renderer.template)) {\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n            //post rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function (element, data, qtiSubclass) {\n            let ret = data;\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getData === 'function') {\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function (tpl, data) {\n            return hb.compile(tpl)(data);\n        };\n\n        this.getContainer = function (qtiElement, $scope, qtiSubclass) {\n            let ret = null;\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                ret = renderer.getContainer(qtiElement, $scope);\n            } else {\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\n            }\n            return ret;\n        };\n\n        this.postRender = function (qtiElement, data, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer && typeof renderer.render === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function (qtiInteraction, response, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.setResponse === 'function') {\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\n                    if ($container instanceof $ && $container.length) {\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getResponse = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getResponse === 'function') {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.resetResponse = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.resetResponse === 'function') {\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState = function (qtiInteraction, state, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function () {\n            return _renderers;\n        };\n\n        this.register = function (renderersLocations) {\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function (callback, requiredClasses) {\n            const self = this;\n            let required = [];\n\n            const themeData = themesHelper.getCurrentThemeData();\n            if (themeData) {\n                options.themes = themeData;\n            }\n            if (options.themes) {\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function (theme, index) {\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\n            }\n\n            if (requiredClasses) {\n                if (_.isArray(requiredClasses)) {\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.forEach(requiredClasses, function (reqClass) {\n                        const deps = _dependencies[reqClass];\n                        if (deps) {\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function (qtiClass) {\n                        let requiredSubClasses;\n                        if (_renderableSubclasses[qtiClass]) {\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.forEach(requiredSubClasses, function (subclass) {\n                                if (\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\n                                    !registerRendererClass(qtiClass, required)\n                                ) {\n                                    throw new Error(\n                                        self.name +\n                                            ' : missing qti class location declaration: ' +\n                                            qtiClass +\n                                            ', subclass: ' +\n                                            subclass\n                                    );\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            } else {\n                required = _.values(_locations);\n            }\n\n            moduleLoader([], () => true)\n                .addList(required.map(module => ({ module, category: 'qti' })))\n                .load()\n                .then(loaded => {\n                    loaded.forEach(clazz => {\n                        if (_isValidRenderer(clazz)) {\n                            _renderers[clazz.qtiClass] = clazz;\n                        }\n                    });\n                    if (typeof callback === 'function') {\n                        callback.call(self, _renderers);\n                    }\n                });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload() {\n            if (this.themeLoader) {\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function (interaction, choices, identificationType) {\n            if (Element.isA(interaction, 'interaction')) {\n                this.shuffledChoices[interaction.getSerial()] = interactionHelper\n                    .findChoices(interaction, choices, identificationType)\n                    .map(val => val.serial);\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function (interaction, reshuffle, returnedType) {\n            let choices = [];\n            let serial, i;\n\n            if (Element.isA(interaction, 'interaction')) {\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if (!this.shuffledChoices[serial] || reshuffle) {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        this.shuffledChoices[serial] = [];\n                        for (i = 0; i < 2; i++) {\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = choices[i].map(val => val.serial);\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = choices.map(val => val.serial);\n                    }\n\n                    //otherwise get the choices from the serials\n                } else {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        _.forEach(choices, function (choice, index) {\n                            if (index < 2) {\n                                _.forEach(this.shuffledChoices[serial][i], function (choiceSerial) {\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function (choiceSerial) {\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if (returnedType === 'serial' || returnedType === 'identifier') {\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function () {\n            return _renderers;\n        };\n\n        this.getLocations = function () {\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url) {\n            if (!options.assetManager) {\n                return url;\n            }\n            if (typeof url === 'string' && url.length > 0) {\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function (relUrl) {\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if (this.getOption('userRelativeUrl')) {\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\n                //already absolute or base64 encoded\n                return relUrl;\n            } else {\n                let absUrl = '';\n                const runtimeLocations = this.getOption('runtimeLocations');\n\n                if (runtimeLocations && _.size(runtimeLocations)) {\n                    _.forIn(runtimeLocations, function (runtimeLocation, typeIdentifier) {\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false; //break\n                        }\n                    });\n                }\n\n                if (absUrl) {\n                    return absUrl;\n                } else {\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    var Renderer$1 = {\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build: function (renderersLocations, name, defaultOptions) {\n            const NewRenderer = function () {\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n\n    return Renderer$1;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/rendererProvider',['taoQtiItem/qtiCommonRenderer/renderers/Renderer'], function (QtiRenderer) { 'use strict';\n\n    QtiRenderer = QtiRenderer && Object.prototype.hasOwnProperty.call(QtiRenderer, 'default') ? QtiRenderer['default'] : QtiRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for qtiCommonRenderer\n     */\n    var rendererProvider = {\n        name: 'commonRenderer',\n        init: () => {},\n        getRenderer: () => QtiRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<div class=\\\"grid-row qti-rubricBlock\\\" data-use=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.use)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"rubricBlock\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"qti-rubricBlock-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var RubricBlock = {\n        qtiClass: 'rubricBlock',\n        getContainer: containerHelper.get,\n        template: tpl,\n        getData: function getData(rubric, data) {\n            if (rubric.isEmpty()) {\n                data.empty = true;\n            }\n            return data;\n        }\n    };\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"media=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<link \\n    href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    type=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    rel=\\\"stylesheet\\\" \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Stylesheet = {\n        qtiClass: 'stylesheet',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Table',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"summary=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<table\\n    class=\\\"qti-table\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-qti-class=\\\"table\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    >\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</table>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = {\n        qtiClass: 'table',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Table;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Tooltip',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/tooltip', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting'], function (Handlebars, Helpers0, containerHelper, tooltip, verticalWriting) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"_tooltip\\\"\\n    data-role=\\\"tooltip-target\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Tooltip = {\n        qtiClass: '_tooltip',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(tooltipDOM) {\n            var $container = containerHelper.get(tooltipDOM);\n            const isVertical = verticalWriting.getIsItemWritingModeVerticalRl();\n\n            var renderedTooltip = tooltip.create($container, tooltipDOM.content(), {\n                theme: 'default',\n                placement: isVertical ? 'right' : 'top'\n            });\n\n            if ($container.data('$tooltip')) {\n                $container.data('$tooltip').dispose();\n                $container.removeData('$tooltip');\n            }\n            $container.data('$tooltip', renderedTooltip);\n        }\n    };\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/IdentifiedElement',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/util'], function (Element, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * IdentifiedElement model\n     */\n    var IdentifiedElement = Element.extend({\n        /**\n         * Generates and assign an identifier\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {Object} for chaining\n         */\n        buildIdentifier: function buildIdentifier(prefix, useSuffix) {\n            var item = this.getRootElement();\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\n            if (id) {\n                this.attr('identifier', id);\n            }\n            return this;\n        },\n\n        /**\n         * Get/set and identifier. It will be generated if it doesn't exists.\n         * @param {String} [value] - set the value or get it if not set.\n         * @returns {String} the identifier\n         */\n        id: function id(value) {\n            if (!value && !this.attr('identifier')) {\n                this.buildIdentifier(this.qtiClass, true);\n            }\n            return this.attr('identifier', value);\n        }\n    });\n\n    return IdentifiedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Choice',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Choice = IdentifiedElement.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'choice' || this._super(qtiClass);\n        },\n        getInteraction: function() {\n            var found,\n                ret = null,\n                item = this.getRootElement();\n            if (item) {\n                found = item.find(this.serial);\n                if (found) {\n                    ret = found.parent;\n                }\n            }\n            return ret;\n        }\n    });\n\n    return Choice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hotspot',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n\tQtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n\tvar QtiHotspot = QtiChoice.extend({});\n\n\treturn QtiHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/AssociableHotspot',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiAssociableHotspot = QtiHotspot.extend({\n        qtiClass: 'associableHotspot'\n    });\n\n    return QtiAssociableHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function () { 'use strict';\n\n    //@todo : need refactoring of qti item mixin with lodash.mixin()\n    var Mixin = {\n        augment: function(targetClass, methods, options) {\n            if (typeof targetClass === 'function' && typeof methods === 'object') {\n                for (var methodName in methods) {\n                    if (!Object.hasOwnProperty(targetClass.prototype, methodName)) {\n                        targetClass.prototype[methodName] = methods[methodName];\n                    } else {\n                        if (options && options.append) {\n                            var _parent = targetClass.prototype[methodName];\n                            targetClass.prototype[methodName] = function() {\n                                methods[methodName].apply(this, arguments);\n                                return _parent.apply(this, arguments);\n                            };\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    return Mixin;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Container',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, Element, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = Element.extend({\n        qtiClass: '_container',\n        init: function (body) {\n            this._super(); //generate serial, attributes array always empty\n            if (body && typeof body !== 'string') {\n                throw 'the body of a container must be a string';\n            }\n            this.bdy = body || '';\n            this.elements = {};\n        },\n        body: function (body) {\n            if (typeof body === 'undefined') {\n                return this.bdy;\n            } else {\n                if (typeof body === 'string') {\n                    this.bdy = body;\n                    $(document).trigger('containerBodyChange', {\n                        body: body,\n                        container: this,\n                        parent: this.parent()\n                    });\n                } else {\n                    throw 'body must be a string';\n                }\n            }\n        },\n        setElements: function (elements, body) {\n            var returnValue = false;\n\n            for (var i in elements) {\n                var elt = elements[i];\n                if (elt instanceof Element) {\n                    body = body || this.bdy;\n                    if (body.indexOf(elt.placeholder()) === -1) {\n                        body += elt.placeholder(); //append the element if no placeholder found\n                    }\n\n                    elt.setRootElement(this.getRootElement() || null);\n                    this.elements[elt.getSerial()] = elt;\n                    $(document).trigger('containerElementAdded', {\n                        element: elt,\n                        container: this\n                    });\n\n                    returnValue = true;\n                } else {\n                    returnValue = false;\n                    throw 'expected a qti element';\n                }\n            }\n\n            this.body(body);\n\n            return returnValue;\n        },\n        setElement: function (element, body) {\n            return this.setElements([element], body);\n        },\n        removeElement: function (element) {\n            var serial = '';\n            if (typeof element === 'string') {\n                serial = element;\n            } else if (element instanceof Element) {\n                serial = element.getSerial();\n            }\n            delete this.elements[serial];\n            this.body(this.body().replace('{{' + serial + '}}', ''));\n            return this;\n        },\n        getElements: function (qtiClass) {\n            var elts = {};\n            if (typeof qtiClass === 'string') {\n                for (var serial in this.elements) {\n                    if (Element.isA(this.elements[serial], qtiClass)) {\n                        elts[serial] = this.elements[serial];\n                    }\n                }\n            } else {\n                elts = _.clone(this.elements);\n            }\n            return elts;\n        },\n        getElement: function (serial) {\n            return this.elements[serial] ? this.elements[serial] : null;\n        },\n        getComposingElements: function () {\n            var elements = this.getElements();\n            var elts = {};\n            for (var serial in elements) {\n                elts[serial] = elements[serial]; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, elements[serial].getComposingElements());\n            }\n            return elts;\n        },\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                elementsData = [],\n                tpl = this.body();\n\n            for (var serial in this.elements) {\n                var elt = this.elements[serial];\n                if (typeof elt.render === 'function') {\n                    if (elt.qtiClass === '_container') {\n                        //@todo : container rendering merging, to be tested\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\n                    } else {\n                        tpl = tpl\n                            .replace(elt.placeholder(), serial)\n                            .replace(new RegExp(`{${serial}`), `&lcub;${serial}`)\n                            .replace(serial, '{{{' + serial + '}}}');\n                        elementsData[serial] = elt.render(renderer);\n                    }\n                } else {\n                    throw 'render() is not defined for the qti element: ' + serial;\n                }\n            }\n\n            if (renderer.isRenderer) {\n                return this._super(\n                    {\n                        body: renderer.renderDirect(tpl, elementsData),\n                        contentModel: this.contentModel || 'flow'\n                    },\n                    renderer,\n                    args.placeholder\n                );\n            } else {\n                throw 'invalid qti renderer for qti container';\n            }\n        },\n        postRender: function (data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n\n            var res = _(this.elements)\n                .filter(function (elt) {\n                    return typeof elt.postRender === 'function';\n                })\n                .map(function (elt) {\n                    return elt.postRender(data, '', renderer);\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n            return res;\n        },\n        toArray: function () {\n            var arr = {\n                serial: this.serial,\n                body: this.bdy,\n                elements: {}\n            };\n\n            for (var serial in this.elements) {\n                arr.elements[serial] = this.elements[serial].toArray();\n            }\n\n            return arr;\n        },\n        find: function (serial, parent) {\n            var found = null;\n\n            if (this.elements[serial]) {\n                found = { parent: parent || this, element: this.elements[serial], location: 'body' };\n            } else {\n                _.forEach(this.elements, function (elt) {\n                    found = elt.find(serial);\n                    if (found) {\n                        return false; //break loop\n                    }\n                });\n            }\n\n            return found;\n        },\n        isEmpty: function () {\n            return !this.bdy;\n        }\n    });\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function (Mixin, Container$1) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container$1 = Container$1 && Object.prototype.hasOwnProperty.call(Container$1, 'default') ? Container$1['default'] : Container$1;\n\n    var methods = {\n        initContainer: function(body) {\n            this.bdy = new Container$1(body || '');\n            this.bdy.setRootElement(this.getRootElement() || null);\n            this.bdy.contentModel = 'blockStatic';\n        },\n        getBody: function() {\n            return this.bdy;\n        },\n        body: function(body) {\n            var ret = this.bdy.body(body);\n            return body ? this : ret; //for method chaining on get\n        },\n        setElement: function(element, body) {\n            this.bdy.setElement(element, body);\n            return this;\n        },\n        removeElement: function(element) {\n            return this.bdy.removeElement(element);\n        },\n        getElements: function(qtiClass) {\n            return this.bdy.getElements(qtiClass);\n        },\n        getElement: function(serial) {\n            return this.bdy.getElement(serial);\n        }\n    };\n\n    var Container = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/Container'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerInline',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'inlineStatic';\n        }\n    });\n\n    var ContainerInline = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerInlineChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Gap',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n    var QtiGap = QtiChoice.extend({\n        qtiClass: 'gap'\n    });\n\n    return QtiGap;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Object',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiObject = Element.extend({\n        qtiClass: 'object',\n        getMediaType: function() {\n            var type = 'undefined';\n            var mimetype = this.attr('type');\n            if (mimetype) {\n                if (mimetype.indexOf('video') === 0) {\n                    type = 'video';\n                } else if (mimetype.indexOf('audio') === 0) {\n                    type = 'audio';\n                } else if (mimetype.indexOf('image') === 0) {\n                    type = 'image';\n                } else if (mimetype.indexOf('text/html') === 0) {\n                    type = 'html';\n                } else {\n                    type = 'object';\n                }\n            }\n            return type;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            switch (this.getMediaType()) {\n                case 'video':\n                    defaultData.video = true;\n                    break;\n                case 'audio':\n                    defaultData.audio = true;\n                    break;\n                case 'html':\n                    defaultData.html = true;\n                    break;\n                case 'image':\n                default:\n                    defaultData.object = true;\n            }\n\n            defaultData.attributes = { data: renderer.resolveUrl(this.attr('data')) };\n            defaultData.body = this._alt;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('data');\n        }\n    });\n\n    return QtiObject;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapImg',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/core/Object'], function (QtiChoice, QtiObject) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiGapImg = QtiChoice.extend({\n        qtiClass: 'gapImg',\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiGapImg;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapText',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var QtiGapText = QtiContainerChoice.extend({\n        qtiClass: 'gapText'\n    });\n\n    return QtiGapText;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/HotspotChoice',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiHotspotChoice = QtiHotspot.extend({\n        qtiClass: 'hotspotChoice'\n    });\n\n    return QtiHotspotChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hottext',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var Hottext = Choice.extend({\n        qtiClass: 'hottext'\n    });\n\n    Container.augment(Hottext);\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/InlineChoice',['taoQtiItem/qtiItem/core/choices/ContainerInlineChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiInlineChoice = QtiContainerChoice.extend({\n        qtiClass: 'inlineChoice'\n    });\n\n    return QtiInlineChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleAssociableChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleAssociableChoice'\n    });\n\n    return QtiSimpleAssociableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleChoice'\n    });\n\n    return QtiSimpleChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextVariableChoice',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, QtiChoice, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiTextVariableChoice = QtiChoice.extend({\n        init: function(serial, attributes, text) {\n            this._super(serial, attributes);\n            this.val(text || '');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'textVariableChoice' || this._super(qtiClass);\n        },\n        val: function(text) {\n            if (typeof text === 'undefined') {\n                return this.text;\n            } else {\n                if (typeof text === 'string') {\n                    this.text = text;\n                    $(document).trigger('choiceTextChange', {\n                        choice: this,\n                        text: text\n                    });\n                } else {\n                    throw 'text must be a string';\n                }\n            }\n            return this;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    body: this.text\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiTextVariableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextEntry',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiTextEntry = QtiTextVariableChoice.extend({\r\n        qtiClass: 'textEntry'\r\n    });\n\n    return QtiTextEntry;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/Feedback',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Feedback = IdentifiedElement.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    return Feedback;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackBlock = Feedback.extend({});\n\n\treturn FeedbackBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackInline = Feedback.extend({});\n\n\treturn FeedbackInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function (IdentifiedElement, Container) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ModalFeedback = IdentifiedElement.extend({\n        qtiClass: 'modalFeedback',\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ModalFeedback);\n\n    return ModalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigcaption',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figcaption';\n        }\n    });\n\n    var ContainerFigcaption = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/NamespacedElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    var methods = {\n        getNamespace: function() {\n            var relatedItem;\n            var namespaces;\n            var ns;\n\n            if (this.ns && (this.ns.name || this.ns.uri)) {\n                return _.clone(this.ns);\n            } else {\n                relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    namespaces = relatedItem.getNamespaces();\n                    for (ns in namespaces) {\n                        if (namespaces[ns].indexOf(this.nsUriFragment) > 0) {\n                            return {\n                                name: ns,\n                                uri: namespaces[ns]\n                            };\n                        }\n                    }\n                    //if no ns found in the item, set the default one!\n                    relatedItem.namespaces[this.defaultNsName] = this.defaultNsUri;\n                    return {\n                        name: this.defaultNsName,\n                        uri: this.defaultNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setNamespace: function(name, uri) {\n            this.ns = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var NamespacedElement = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return NamespacedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figcaption',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigcaption', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figcaption = Element.extend({\n        qtiClass: 'figcaption',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figcaption' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(Figcaption);\n    NamespacedElement.augment(Figcaption);\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigure',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figure';\n        }\n    });\n\n    var ContainerFigure = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figure',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigure', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figure = Element.extend({\n        qtiClass: 'figure',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figure' || this._super(qtiClass);\n        },\n        isEmpty: function () {\n            const imgElements = this.getElements('img');\n            if (imgElements && Object.values(imgElements).length) {\n                return Object.values(imgElements)[0].isEmpty();\n            } else {\n                return true;\n            }\n        }\n    });\n    Container.augment(Figure);\n    NamespacedElement.augment(Figure);\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Img',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Img = Element.extend({\n        qtiClass: 'img',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {\n                src: renderer.resolveUrl(this.attr('src'))\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('src');\n        }\n    });\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Include',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Include = Element.extend({\n        qtiClass: 'include',\n        defaultNsName: 'xi',\n        defaultNsUri: 'http://www.w3.org/2001/XInclude',\n        nsUriFragment: 'XInclude',\n        isEmpty: function() {\n            return !this.attr('href') || this.getBody().isEmpty();\n        }\n    });\n    Container.augment(Include);\n    NamespacedElement.augment(Include);\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Interaction',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util'], function (Element, _, rendererConfig, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    var QtiInteraction = Element.extend({\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = {};\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'interaction' || this._super(qtiClass);\n        },\n        addChoice: function (choice) {\n            choice.setRootElement(this.getRootElement() || null);\n            this.choices[choice.getSerial()] = choice;\n            return this;\n        },\n        getChoices: function () {\n            var choices = {};\n            for (var i in this.choices) {\n                //prevent passing the whole array by ref\n                choices[i] = this.choices[i];\n            }\n            return choices;\n        },\n        getChoice: function (serial) {\n            var ret = null;\n            if (this.choices[serial]) {\n                ret = this.choices[serial];\n            }\n            return ret;\n        },\n        getChoiceByIdentifier: function (identifier) {\n            for (var i in this.choices) {\n                if (this.choices[i].id() === identifier) {\n                    return this.choices[i];\n                }\n            }\n            return null;\n        },\n        getComposingElements: function () {\n            var elts = this._super();\n            //recursive to choices:\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    elts[serial] = this.choices[serial];\n                    elts = _.extend(elts, this.choices[serial].getComposingElements());\n                }\n            }\n            return elts;\n        },\n        find: function (serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, 'choices', serial);\n            }\n            return found;\n        },\n        getResponseDeclaration: function () {\n            var response = null;\n            var responseId = this.attr('responseIdentifier');\n            if (responseId) {\n                var item = this.getRootElement();\n                if (item) {\n                    response = item.getResponseDeclaration(responseId);\n                } else {\n                    throw 'cannot get response of an interaction out of its item context';\n                }\n            }\n            return response;\n        },\n        /**\n         * Render the interaction to the view.\n         * The optional argument \"subClass\" allows distinguishing customInteraction: e.g. customInteraction.matrix, customInteraction.likertScale ...\n         */\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    _type: this.qtiClass.replace(/([A-Z])/g, function ($1) {\n                        return '_' + $1.toLowerCase();\n                    }),\n                    choices: [],\n                    choiceShuffle: true\n                };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            var choices =\n                this.attr('shuffle') && renderer.getOption('shuffleChoices')\n                    ? renderer.getShuffledChoices(this)\n                    : this.getChoices();\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n            var _this = this;\n            _.forEach(choices, function (choice) {\n                if (Element.isA(choice, 'choice')) {\n                    try {\n                        var renderedChoice = choice.render(\n                            _.clone(interactionData, true),\n                            null,\n                            choice.qtiClass + '.' + _this.qtiClass,\n                            renderer\n                        ); //use interaction type as choice subclass\n                        defaultData.choices.push(renderedChoice);\n                    } catch (e) {\n                        //leave choices empty in case of error\n                    }\n                }\n            });\n\n            var tplName = args.subclass ? this.qtiClass + '.' + args.subclass : this.qtiClass;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, tplName, renderer);\n        },\n        postRender: function (data, altClassName, renderer) {\n            var self = this;\n            renderer = renderer || this.getRenderer();\n\n            return _(this.getChoices())\n                .filter(function (elt) {\n                    return Element.isA(elt, 'choice');\n                })\n                .map(function (choice) {\n                    return choice.postRender(data, choice.qtiClass + '.' + self.qtiClass, renderer);\n                })\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        setResponse: function (values) {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.setResponse(this, values);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        getResponse: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.getResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        resetResponse: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.resetResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state is provided by the interaction's renderer.\n         *\n         * @returns {Object} the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        getState: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState(this);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state will be given to the interaction's renderer.\n         *\n         * @param {Object} state - the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        setState: function (state) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState(this, state);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n        },\n\n        /**\n         * Clean up an interaction rendering.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n         */\n        clear: function () {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.destroy)) {\n                return renderer.destroy(this);\n            }\n        },\n\n        toArray: function () {\n            var arr = this._super();\n            arr.choices = {};\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    arr.choices[serial] = this.choices[serial].toArray();\n                }\n            }\n            return arr;\n        },\n\n        getNormalMaximum: function getNormalMaximum() {\n            //by default\n            return false;\n        }\n    });\n\n    return QtiInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Prompt',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Element, Container) { 'use strict';\n\n\tElement = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar Prompt = Element.extend({ qtiClass: 'prompt' });\n\tContainer.augment(Prompt);\n\n\treturn Prompt;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/BlockInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/core/interactions/Prompt', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Interaction, Prompt, _, rendererConfig) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    Prompt = Prompt && Object.prototype.hasOwnProperty.call(Prompt, 'default') ? Prompt['default'] : Prompt;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var BlockInteraction = Interaction.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.prompt = new Prompt('');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'blockInteraction' || this._super(qtiClass);\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            elts = _.extend(elts, this.prompt.getComposingElements());\n            elts[this.prompt.getSerial()] = this.prompt;\n            return elts;\n        },\n        find: function(serial) {\n            return this._super(serial) || this.prompt.find(serial);\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    promptId: `prompt-${this.prompt.getSerial()}`,\n                    prompt: this.prompt.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return [].concat(this.prompt.postRender(data, '', renderer)).concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.prompt = this.prompt.toArray();\n            return arr;\n        }\n    });\n\n    return BlockInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    var responseRules = {\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'match',\n                    expressions: [\n                        {\n                            qtiClass: 'variable',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                        {\n                            qtiClass: 'correct',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    },\n                                },\n                                {\n                                    qtiClass: 'baseValue',\n                                    attributes: {\n                                        baseType: 'integer'\n                                    },\n                                    value: '1',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponse',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponsePoint',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const _templateNames = {\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        NONE: 'no_response_processing'\n    };\n\n\n    var response = {\n        isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName(tplName) {\n            return _templateNames[tplName] || '';\n        },\n        getTemplateNameFromUri(tplUri) {\n            let tplName = '';\n\n            _.forIn(_templateNames, (uri, name) => {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n\n            return tplName;\n        },\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\n            if (!responseRules) {\n                return 'NONE';\n            }\n\n            const {\n                responseIf: {\n                    responseRules: [outcomeRules = {}] = [],\n                } = {}\n            } = responseRules;\n            const {\n                attributes: {\n                    identifier: outcomeIdentifier,\n                } = {},\n            } = outcomeRules;\n\n            if (!outcomeIdentifier) {\n                return '';\n            }\n\n            return Object.keys(responseRulesHelper).find(\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\n            );\n        }\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * It is the top abstract class for all variable classes\n     * (so not renderable and qtiClass undefined)\n     */\n    var VariableDeclaration = IdentifiedElement.extend({\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.defaultValue = null;\n        },\n        is: function is(qtiClass) {\n            return qtiClass === 'variableDeclaration' || this._super(qtiClass);\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            arr.defaultValue = this.defaultValue;\n            return arr;\n        },\n        setDefaultValue: function setDefaultValue(value) {\n            this.defaultValue = value;\n        },\n        getDefaultValue: function getDefaultValue() {\n            return this.defaultValue;\n        }\n    });\n\n    return VariableDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function (VariableDeclaration) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n\n    var OutcomeDeclaration = VariableDeclaration.extend({\n        qtiClass: 'outcomeDeclaration'\n    });\n\n    return OutcomeDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/maxScore',['lodash', 'lib/gamp/gamp', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function (_, gamp, responseHelper, OutcomeDeclaration) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    gamp = gamp && Object.prototype.hasOwnProperty.call(gamp, 'default') ? gamp['default'] : gamp;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    OutcomeDeclaration = OutcomeDeclaration && Object.prototype.hasOwnProperty.call(OutcomeDeclaration, 'default') ? OutcomeDeclaration['default'] : OutcomeDeclaration;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var pairExists = function pairExists(collection, pair) {\n        if (pair.length !== 2) {\n            return false;\n        }\n        return collection[pair[0] + ' ' + pair[1]] || collection[pair[1] + ' ' + pair[0]];\n    };\n    const externalScoredValues = ['human', 'externalMachine'];\n\n    var maxScore = {\n        /**\n         * Set the normal maximum to the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setNormalMaximum(item) {\n            var normalMaximum,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (\n                scoreOutcome &&\n                item.responseProcessing &&\n                item.responseProcessing.processingType === 'templateDriven' &&\n                !externalScoredValues.includes(scoreOutcome.attr('externalScored'))\n            ) {\n                const interactions = item.getInteractions();\n                normalMaximum = _.reduce(\n                    interactions,\n                    function (acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            return false;\n                        }\n                    },\n                    0\n                );\n\n                if (_.isNumber(normalMaximum)) {\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\n                } else {\n                    scoreOutcome.removeAttr('normalMaximum');\n                }\n            }\n        },\n\n        /**\n         * Set the maximum score of the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setMaxScore(item) {\n            var hasInvalidInteraction = false,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\n                maxScore,\n                maxScoreOutcome;\n\n            if (!scoreOutcome) {\n                // add new score outcome if not already defined\n                scoreOutcome = new OutcomeDeclaration({\n                    cardinality: 'single',\n                    baseType: 'float',\n                    normalMinimum: 0.0,\n                    normalMaximum: 0.0\n                });\n                item.addOutcomeDeclaration(scoreOutcome);\n                scoreOutcome.buildIdentifier('SCORE', false);\n            }\n            const customOutcomes = _(item.getOutcomes()).filter(function (outcome) {\n                return outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE';\n            });\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                const interactions = item.getInteractions();\n                maxScore = _.reduce(\n                    interactions,\n                    function (acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            hasInvalidInteraction = true;\n                            return acc;\n                        }\n                    },\n                    0\n                );\n                if (externalScoredValues.includes(scoreOutcome.attr('externalScored'))) {\n                    maxScore = maxScore + (scoreOutcome.attr('normalMaximum') || 0);\n                } else {\n                    if (customOutcomes.size()) {\n                        maxScore = customOutcomes.reduce(function (acc, outcome) {\n                            return gamp.add(acc, parseFloat(outcome.attr('normalMaximum') || 0));\n                        }, maxScore);\n                    }\n                }\n\n                maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\n                if (!hasInvalidInteraction || customOutcomes.size()) {\n                    if (!maxScoreOutcome) {\n                        //add new outcome\n                        maxScoreOutcome = new OutcomeDeclaration({\n                            cardinality: 'single',\n                            baseType: 'float'\n                        });\n\n                        //attach the outcome to the item before generating item-level unique id\n                        item.addOutcomeDeclaration(maxScoreOutcome);\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\n                    }\n                    maxScoreOutcome.setDefaultValue(maxScore);\n                }\n\n                //handle special case when MAXSCORE is set up manually for some interaction like ExtendedText\n                if (hasInvalidInteraction && maxScoreOutcome) {\n                    if (maxScoreOutcome.attributes && maxScoreOutcome.attributes.externalScored) {\n                        if (_.isUndefined(maxScoreOutcome.defaultValue)) {\n                            maxScoreOutcome.setDefaultValue(1);\n                        }\n                    } else {\n                        item.removeOutcome('MAXSCORE');\n                    }\n                }\n\n                const isAllResponseProcessingRulesNone = !interactions.some(interaction => {\n                    const responseDeclaration = interaction.getResponseDeclaration();\n                    const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n                    return template !== 'NONE';\n                });\n\n                const outcomesWithExternalScored = customOutcomes.filter(outcome => {\n                    return externalScoredValues.includes(outcome.attr('externalScored'));\n                });\n                const isResponsesEmpty = _.isEmpty(item.responses);\n                // remove MAXSCORE and SCORE outcome variables when all interactions are configured with none response processing rule,\n                // and the externalScored property of the SCORE variable is set to None\n                // and there are no other outcome variables with externalScored property set to human or externalMachine\n                // or in case all interactions are without responses\n                if (\n                    (!scoreOutcome.attr('externalScored') &&\n                        isAllResponseProcessingRulesNone &&\n                        outcomesWithExternalScored.size() === 0) ||\n                    isResponsesEmpty\n                ) {\n                    item.removeOutcome('MAXSCORE');\n                    item.removeOutcome('SCORE');\n                }\n                // remove custom outcomes if all interactions are without responses\n                if (isResponsesEmpty) {\n                    customOutcomes.forEach(outcome => {\n                        item.removeOutcome(outcome.id());\n                    });\n                }\n            }\n        },\n\n        /**\n         * Sort an array of associable choices by its matchMax attr value\n         * @param {Array} choiceCollection\n         * @returns {Array}\n         */\n        getMatchMaxOrderedChoices(choiceCollection) {\n            return _(choiceCollection)\n                .map(function (choice) {\n                    var matchMax = parseInt(choice.attr('matchMax'), 10);\n                    if (_.isNaN(matchMax)) {\n                        matchMax = 0;\n                    }\n                    return {\n                        matchMax: matchMax === 0 ? Infinity : matchMax,\n                        id: choice.id()\n                    };\n                })\n                .sortBy('matchMax')\n                .reverse()\n                .valueOf();\n        },\n\n        /**\n         * Compute the maximum score of a \"choice\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        choiceInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max,\n                maxChoice,\n                minChoice,\n                scoreMaps,\n                requiredChoiceCount,\n                totalAnswerableResponse,\n                sortedMapEntries,\n                missingMapsCount;\n\n            options = _.defaults(options || {}, { maxChoices: 0, minChoices: 0 });\n            maxChoice = parseInt(interaction.attr('maxChoices') || options.maxChoices, 10);\n            minChoice =  0 ;\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    maxChoice &&\n                    _.isArray(responseDeclaration.correctResponse) &&\n                    (responseDeclaration.correctResponse.length > maxChoice ||\n                        responseDeclaration.correctResponse.length < minChoice)\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //prepare constraint params\n                requiredChoiceCount = minChoice;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                //sort the score map entries by the score\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n\n                sortedMapEntries = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse);\n\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\n                missingMapsCount = minChoice - sortedMapEntries.length;\n                _.times(missingMapsCount, function () {\n                    sortedMapEntries.push(mapDefault);\n                });\n\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\n                if (mapDefault && mapDefault > 0) {\n                    if (maxChoice) {\n                        missingMapsCount = maxChoice - sortedMapEntries.length;\n                    } else {\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.length;\n                    }\n                    if (missingMapsCount > 0) {\n                        _.times(missingMapsCount, function () {\n                            sortedMapEntries.push(mapDefault);\n                        });\n                    }\n                }\n\n                //calculate the maximum reachable score by choice map\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v;\n                    if (score < 0 && requiredChoiceCount <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredChoiceCount--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //map point response processing does not work on choice based interaction\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"order\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        orderInteractionBased(interaction) {\n            var minChoice =  0 ;\n            var maxChoice = parseInt(interaction.attr('maxChoices') || 0, 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max;\n\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        maxChoice &&\n                        responseDeclaration.correctResponse.length > maxChoice) ||\n                    (minChoice )\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\n                //map response processing does not work on order based interaction\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"associate\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        associateInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = parseInt(interaction.attr('maxAssociations') || 0, 10);\n            var minAssoc =  0 ;\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                requiredAssoc,\n                totalAnswerableResponse,\n                usedChoices,\n                choicesIdentifiers,\n                sortedMapEntries,\n                i,\n                allPossibleMapEntries,\n                infiniteScoringPair;\n\n            options = _.defaults(options || {}, { possiblePairs: [], checkInfinitePair: false });\n\n            if (maxAssoc && minAssoc && maxAssoc < minAssoc) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        (!responseDeclaration.correctResponse.length ||\n                            (maxAssoc && responseDeclaration.correctResponse.length > maxAssoc) ||\n                            (minAssoc )))\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n\n                    //get the list of choices used in map entries\n                    choicesIdentifiers = [];\n                    _.forEach(responseDeclaration.correctResponse, function (pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choicesIdentifiers.push(choices[0].trim());\n                            choicesIdentifiers.push(choices[1].trim());\n                        }\n                    });\n\n                    //check if the choices usage are possible within the constraint defined in the interaction\n                    _.forEach(_.countBy(choicesIdentifiers), function (count, identifier) {\n                        var matchMax;\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        if (!choice) {\n                            max = 0;\n                            return false;\n                        }\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                requiredAssoc = minAssoc;\n                totalAnswerableResponse = maxAssoc === 0 ? Infinity : maxAssoc;\n                usedChoices = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(options.possiblePairs, function (pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                //get the sorted list of mapentries ordered by the score\n                sortedMapEntries = _(allPossibleMapEntries)\n                    .map(function (score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function (mapEntry) {\n                        var pair = mapEntry.pair;\n                        var choices, choiceId, choice, _usedChoices;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        //check that the pair is possible in term of matchMax\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            //clone the global used choices array to brings the changes in that object first before storing in the actual object\n                            _usedChoices = _.cloneDeep(usedChoices);\n\n                            for (i = 0; i < 2; i++) {\n                                choiceId = choices[i];\n\n                                //collect choices usage to check if the pair is possible\n                                if (!_usedChoices[choiceId]) {\n                                    choice = interaction.getChoiceByIdentifier(choiceId);\n                                    if (!choice) {\n                                        //unexisting choice, skip\n                                        return false;\n                                    }\n                                    _usedChoices[choiceId] = {\n                                        used: 0,\n                                        max: parseInt(choice.attr('matchMax'), 10)\n                                    };\n                                }\n                                if (\n                                    _usedChoices[choiceId].max &&\n                                    _usedChoices[choiceId].used === _usedChoices[choiceId].max\n                                ) {\n                                    //skip\n                                    return false;\n                                } else {\n                                    _usedChoices[choiceId].used++;\n                                }\n                            }\n\n                            //identify the edge case when we can get infinite association pair that create an infinite score\n                            infiniteScoringPair =\n                                infiniteScoringPair ||\n                                (options.checkInfinitePair &&\n                                    mapEntry.score > 0 &&\n                                    _usedChoices[choices[0]].max === 0 &&\n                                    _usedChoices[choices[1]].max === 0);\n\n                            //update the global used choices array\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse);\n\n                //infinite score => no normalMaximum should be generated for it\n                if (infiniteScoringPair) {\n                    return false;\n                }\n\n                //reduce the ordered list of map entries to calculate the max score\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v.score;\n                    if (v.score < 0 && requiredAssoc <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredAssoc--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"gap match\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        gapMatchInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                skippableWrongResponse,\n                totalAnswerableResponse,\n                usedChoices,\n                usedGaps,\n                group1,\n                group2,\n                allPossibleMapEntries;\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection) {\n                return _(choiceCollection)\n                    .map(function (choice) {\n                        return {\n                            matchMax: choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\n                            id: choice.id()\n                        };\n                    })\n                    .sortBy('matchMax')\n                    .reverse()\n                    .valueOf();\n            };\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\n\n                _.forEach(matchSet1, function (choice1) {\n                    _.forEach(matchSet2, function (choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n                    group1 = [];\n                    group2 = [];\n                    _.forEach(responseDeclaration.correctResponse, function (pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            group1.push(choices[0].trim());\n                            group2.push(choices[1].trim());\n                        }\n                    });\n\n                    _.forEach(_.countBy(group1), function (count, identifier) {\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n\n                    _.forEach(_.countBy(group2), function (count) {\n                        var matchMax = 1; //match max for a gap is always 1\n                        if ( matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse =  Infinity ;\n                usedChoices = {};\n                usedGaps = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(calculatePossiblePairs(interaction), function (pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                max = _(allPossibleMapEntries)\n                    .map(function (score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function (mapEntry) {\n                        var pair = mapEntry.pair;\n                        var _usedChoices = _.cloneDeep(usedChoices);\n                        var choices, choiceId, gapId, choice;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choiceId = choices[0];\n                            gapId = choices[1];\n                            if (!_usedChoices[choiceId]) {\n                                choice = interaction.getChoiceByIdentifier(choiceId);\n                                if (!choice) {\n                                    //inexisting choice, skip\n                                    return false;\n                                }\n                                _usedChoices[choiceId] = {\n                                    used: 0,\n                                    max: parseInt(choice.attr('matchMax'), 10)\n                                };\n                            }\n                            if (_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max) {\n                                //skip\n                                return false;\n                            }\n                            _usedChoices[choiceId].used++;\n\n                            if (!usedGaps[gapId]) {\n                                usedGaps[gapId] = {\n                                    used: 0,\n                                    max: 1\n                                };\n                            }\n                            if (usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max) {\n                                //skip\n                                return false;\n                            }\n                            usedGaps[gapId].used++;\n\n                            //if an only if it is ok, we merge the temporary used choices array into the global one\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse)\n                    .reduce(function (acc, v) {\n                        var score = v.score;\n                        if (score >= 0) {\n                            return acc + score;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + score;\n                        }\n                    }, 0);\n\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = false;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"select point\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        selectPointInteractionBased(interaction) {\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, skippableWrongResponse, totalAnswerableResponse;\n\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\n                //such templates are not allowed\n                return 0;\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //calculate the maximum reachable score by choice map\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                max = _(responseDeclaration.mapEntries)\n                    .map(function (v) {\n                        return parseFloat(v.mappedValue);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse)\n                    .reduce(function (acc, v) {\n                        if (v >= 0) {\n                            return acc + v;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + v;\n                        }\n                    }, 0);\n                max = parseFloat(max);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"slider\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        sliderInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                max = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"text entry\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        textEntryInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            /**\n             * Check that a response is possible or not according to the defined patternmask\n             * @param {String} value\n             * @returns {Boolean}\n             */\n            var isPossibleResponse = function isPossibleResponse(value) {\n                var patternMask = interaction.attr('patternMask');\n                if (patternMask) {\n                    return !!value.match(new RegExp(patternMask));\n                } else {\n                    //no restriction by pattern so always possible\n                    return true;\n                }\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(\n                    _.filter(responseDeclaration.mapEntries, function (score, key) {\n                        return isPossibleResponse(key);\n                    })\n                );\n                max = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"custom\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        customInteractionBased(interaction) {\n            const responseDeclaration = interaction.getResponseDeclaration();\n            const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            let max;\n            if (template === 'MATCH_CORRECT') {\n                if (Array.isArray(responseDeclaration.correctResponse) && responseDeclaration.correctResponse.length) {\n                    max = 1;\n                } else {\n                    max = 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                const values = _.values(responseDeclaration.mapEntries).map(function (v) {\n                    return parseFloat(v);\n                });\n                max = _.max(values);\n\n                max = this.getMaxCutByUpperBound(max, responseDeclaration);\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            } else {\n                max = 0;\n            }\n            return max;\n        },\n\n        getMaxCutByUpperBound(max, responseDeclaration) {\n            if (!_.has(responseDeclaration, 'mappingAttributes.upperBound')) {\n                return max;\n            }\n\n            //compare the calculated maximum with the mapping upperbound\n            return Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n        }\n    };\n\n    return maxScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/AssociateInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var AssociateInteraction = BlockInteraction.extend({\n        qtiClass: 'associateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        pairs.push([choices[i].id, choices[j].id]);\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ChoiceInteraction = BlockInteraction.extend({\n        qtiClass: 'choiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ContainerInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/mixin/Container'], function (BlockInteraction, Container) { 'use strict';\n\n\tBlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar ContainerInteraction = BlockInteraction.extend({});\n\tContainer.augment(ContainerInteraction);\n\n\treturn ContainerInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/CustomElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {\n        prop: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.properties[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.prop(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.properties[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.properties[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeProp: function (propNames) {\n            var _this = this;\n            if (typeof propNames === 'string') {\n                propNames = [propNames];\n            }\n            _.forEach(propNames, function (propName) {\n                delete _this.attributes[propName];\n            });\n            return this;\n        },\n        getProperties: function () {\n            return _.clone(this.properties);\n        },\n        getMarkupNamespace: function () {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function (name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var CustomElement = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return CustomElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/CustomInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, Interaction, CustomElement, NamespacedElement, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    var CustomInteraction = Interaction.extend({\n        qtiClass: 'customInteraction',\n        defaultNsName: 'pci',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableCustomInteraction',\n        nsUriFragment: 'portableCustomInteraction',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            this.pciReadyCallbacks = [];\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'customInteraction' || this._super(qtiClass);\n        },\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pci: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function () {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n        getMarkupNamespace: function () {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function (name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        },\n        onPciReady: function (callback) {\n            this.pciReadyCallbacks.push(callback);\n\n            if (this.data('pci')) {\n                //if pci is already ready, call it immediately\n                this.triggerPciReady();\n            }\n        },\n        triggerPciReady: function () {\n            var _this = this,\n                pci = this.data('pci');\n\n            if (pci) {\n                _.forEach(this.pciReadyCallbacks, function (fn) {\n                    fn.call(_this, pci);\n                });\n\n                //empty the stack of ready callbacks\n                this.pciReadyCallbacks = [];\n\n                //mark the interaction as ready\n                this.data('pciReady', true);\n            } else {\n                throw 'cannot trigger pci ready when no pci is actually attached to the interaction';\n            }\n        },\n        onPci: function (event, callback) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.on)) {\n                    pci.on(event, callback);\n                } else {\n                    throw 'the pci does not implement on() function';\n                }\n            });\n            return this;\n        },\n        offPci: function (event) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.off(event);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        triggerPci: function (event, args) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.trigger(event, args);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        getNormalMaximum() {\n            return maxScore.customInteractionBased(this);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(CustomInteraction);\n    NamespacedElement.augment(CustomInteraction);\n\n    return CustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction'], function (Interaction) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var InlineInteraction = Interaction.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'inlineInteraction' || this._super(qtiClass);\n        }\n    });\n\n    return InlineInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var EndAttemptInteraction = InlineInteraction.extend({\n        qtiClass: 'endAttemptInteraction',\n        getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, BlockInteraction, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ExtendedTextInteraction = BlockInteraction.extend({\n        qtiClass: 'extendedTextInteraction',\n        render: function render() {\n            var i,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    multiple: false,\n                    maxStringLoop: []\n                },\n                response = this.getResponseDeclaration();\n\n            if (\n                this.attr('maxStrings') &&\n                (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n            ) {\n                defaultData.multiple = true;\n                for (i = 0; i < this.attr('maxStrings'); i++) {\n                    defaultData.maxStringLoop.push(i + ''); //need to convert to string. The tpl engine fails otherwise\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapMatchInteraction = ContainerInteraction.extend({\n        qtiClass: 'gapMatchInteraction',\n        getGaps: function getGaps() {\n            return this.getBody().getElements('gap');\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.gapMatchInteractionBased(this);\n        }\n    });\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ObjectInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/Object'], function (QtiBlockInteraction, QtiObject) { 'use strict';\n\n    QtiBlockInteraction = QtiBlockInteraction && Object.prototype.hasOwnProperty.call(QtiBlockInteraction, 'default') ? QtiBlockInteraction['default'] : QtiBlockInteraction;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiObjectInteraction = QtiBlockInteraction.extend({\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiObjectInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicInteraction',['taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (QtiObjectInteraction, _, rendererConfig) { 'use strict';\n\n    QtiObjectInteraction = QtiObjectInteraction && Object.prototype.hasOwnProperty.call(QtiObjectInteraction, 'default') ? QtiObjectInteraction['default'] : QtiObjectInteraction;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiGraphicInteraction = QtiObjectInteraction.extend({\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    backgroundImage: this.object.getAttributes(),\n                    object: this.object.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiGraphicInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicAssociateInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicAssociateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        if (i !== j) {\n                            pairs.push([choices[i].id, choices[j].id]);\n                        }\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, Element, _, rendererConfig, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicGapMatchInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicGapMatchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.gapImgs = {};\n        },\n        addGapImg: function addGapImg(gapImg) {\n            if (Element.isA(gapImg, 'gapImg')) {\n                gapImg.setRootElement(this.getRootElement() || null);\n                this.gapImgs[gapImg.getSerial()] = gapImg;\n            }\n        },\n        removeGapImg: function removeGapImg(gapImg) {\n            var serial = '';\n            if (typeof gapImg === 'string') {\n                serial = gapImg;\n            } else if (Element.isA(gapImg, 'gapImg')) {\n                serial = gapImg.getSerial();\n            }\n            delete this.gapImgs[serial];\n            return this;\n        },\n        getGapImgs: function getGapImgs() {\n            return _.clone(this.gapImgs);\n        },\n        getGapImg: function getGapImg(serial) {\n            return this.gapImgs[serial];\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var choice = this._super(identifier);\n            if (!choice) {\n                //if not found among the choices, search the gapImgs\n                choice = _.find(this.gapImgs, function(elt) {\n                    return elt && elt.id() === identifier;\n                });\n            }\n            return choice;\n        },\n        getComposingElements: function getComposingElements() {\n            var serial,\n                elts = this._super();\n            //recursive to choices:\n            for (serial in this.gapImgs) {\n                elts[serial] = this.gapImgs[serial];\n                elts = _.extend(elts, this.gapImgs[serial].getComposingElements());\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                if (this.gapImgs[serial]) {\n                    found = { parent: this, element: this.gapImgs[serial] };\n                }\n            }\n            return found;\n        },\n        render: function render() {\n            var serial,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    gapImgs: []\n                };\n\n            //note: no choice shuffling option available for graphic gap match\n            var gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                if (Element.isA(gapImgs[serial], 'choice')) {\n                    defaultData.gapImgs.push(gapImgs[serial].render({}, null, '', renderer));\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function toArray() {\n            var serial,\n                gapImgs,\n                arr = this._super();\n            arr.gapImgs = {};\n            gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                arr.gapImgs[serial] = gapImgs[serial].toArray();\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(graphicGapInteraction) {\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getGapImgs());\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getChoices());\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {\n                possiblePairs: calculatePossiblePairs(this),\n                checkInfinitePair: true\n            });\n        }\n    });\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicOrderInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicOrderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HotspotInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HotspotInteraction = GraphicInteraction.extend({\n        qtiClass: 'hotspotInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HottextInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, Element, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HottextInteraction = ContainerInteraction.extend({\n        qtiClass: 'hottextInteraction',\n        getChoices: function() {\n            return this.getBody().getElements('hottext');\n        },\n        getChoice: function(serial) {\n            var element = this.getBody().getElement(serial);\n            return Element.isA(element, 'choice') ? element : null;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoiceInteraction = InlineInteraction.extend({\n        qtiClass: 'inlineChoiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this, { maxChoices: 1 });\n        }\n    });\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MatchInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, SimpleAssociableChoice, _, rendererConfig, util, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    SimpleAssociableChoice = SimpleAssociableChoice && Object.prototype.hasOwnProperty.call(SimpleAssociableChoice, 'default') ? SimpleAssociableChoice['default'] : SimpleAssociableChoice;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var MatchInteraction = BlockInteraction.extend({\n        qtiClass: 'matchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = [{}, {}];\n        },\n        addChoice: function addChoice(choice, matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                choice.setRootElement(this.getRootElement() || null);\n                this.choices[matchSet][choice.getSerial()] = choice;\n            }\n        },\n        getChoices: function getChoices(matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                return _.clone(this.choices[matchSet]);\n            } else {\n                return _.clone(this.choices);\n            }\n        },\n        getChoice: function getChoice(serial) {\n            return this.choices[0][serial] || this.choices[1][serial] || null;\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var i, matchSet, serial;\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice && matchSet[serial].id() === identifier) {\n                        return matchSet[serial];\n                    }\n                }\n            }\n            return null;\n        },\n        getComposingElements: function getComposingElements() {\n            var i, matchSet, serial;\n            var elts = this._super();\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        elts[serial] = matchSet[serial];\n                        elts = _.extend(elts, matchSet[serial].getComposingElements());\n                    }\n                }\n            }\n\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, ['choices.0', 'choices.1'], serial);\n            }\n            return found;\n        },\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var renderer = args.renderer || this.getRenderer();\n            var defaultData = {\n                matchSet1: [],\n                matchSet2: []\n            };\n            var choices, i, matchSet, serial;\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            if (this.attr('shuffle') && renderer.getOption('shuffleChoices')) {\n                choices = renderer.getShuffledChoices(this);\n            } else {\n                choices = this.getChoices();\n            }\n\n            for (i = 0; i < 2; i++) {\n                matchSet = choices[i];\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        defaultData['matchSet' + (i + 1)].push(\n                            matchSet[serial].render(\n                                _.clone(interactionData, true),\n                                null,\n                                'simpleAssociableChoice.matchInteraction',\n                                renderer\n                            )\n                        );\n                    }\n                }\n            }\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function postRender(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return _(this.getChoices())\n                .map(function(choices) {\n                    return _(choices)\n                        .filter(function(choice) {\n                            return choice instanceof SimpleAssociableChoice;\n                        })\n                        .map(function(choice) {\n                            return choice.postRender(data, 'simpleAssociableChoice.matchInteraction', renderer);\n                        })\n                        .value();\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function toArray() {\n            var i, matchSet, serial;\n            var arr = this._super();\n            arr.choices = { 0: {}, 1: {} };\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        arr.choices[i][serial] = matchSet[serial].toArray();\n                    }\n                }\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(matchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(0));\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(1));\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MediaInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, ObjectInteraction, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    ObjectInteraction = ObjectInteraction && Object.prototype.hasOwnProperty.call(ObjectInteraction, 'default') ? ObjectInteraction['default'] : ObjectInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    var MediaInteraction = ObjectInteraction.extend({\n        qtiClass: 'mediaInteraction',\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    object: this.object.render({}, null, '', renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/OrderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var OrderInteraction = BlockInteraction.extend({\n        qtiClass: 'orderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return OrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SelectPointInteraction = GraphicInteraction.extend({\n        qtiClass: 'selectPointInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.selectPointInteractionBased(this);\n        }\n    });\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SliderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SliderInteraction = BlockInteraction.extend({\n        qtiClass: 'sliderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.sliderInteractionBased(this);\n        }\n    });\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var TextEntryInteraction = InlineInteraction.extend({\n        qtiClass: 'textEntryInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/UploadInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var UploadInteraction = InlineInteraction.extend({\n        qtiClass: 'uploadInteraction',\n        getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'itemBody';\n        }\n    });\n\n    var ContainerItemBody = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerItemBody;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Item',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/ContainerItemBody', 'lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util'], function (Element, IdentifiedElement, Container, _, $, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Item = IdentifiedElement.extend({\n        qtiClass: 'assessmentItem',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.rootElement = this;\n            this.stylesheets = {};\n            this.responses = {};\n            this.outcomes = {};\n            this.modalFeedbacks = {};\n            this.namespaces = {};\n            this.schemaLocations = {};\n            this.responseProcessing = null;\n            this.apipAccessibility = null;\n        },\n        getInteractions: function getInteractions() {\n            var interactions = [];\n            var elts = this.getComposingElements();\n            for (var serial in elts) {\n                if (Element.isA(elts[serial], 'interaction')) {\n                    interactions.push(elts[serial]);\n                }\n            }\n            return interactions;\n        },\n        addResponseDeclaration: function addResponseDeclaration(response) {\n            if (Element.isA(response, 'responseDeclaration')) {\n                response.setRootElement(this);\n                this.responses[response.getSerial()] = response;\n            } else {\n                throw 'is not a qti response declaration';\n            }\n            return this;\n        },\n        getResponseDeclaration: function getResponseDeclaration(identifier) {\n            for (var i in this.responses) {\n                if (this.responses[i].attr('identifier') === identifier) {\n                    return this.responses[i];\n                }\n            }\n            return null;\n        },\n        addOutcomeDeclaration: function addOutcomeDeclaration(outcome) {\n            if (Element.isA(outcome, 'outcomeDeclaration')) {\n                outcome.setRootElement(this);\n                this.outcomes[outcome.getSerial()] = outcome;\n            } else {\n                throw 'is not a qti outcome declaration';\n            }\n            return this;\n        },\n        getOutcomeDeclaration: function getOutcomeDeclaration(identifier) {\n            var found;\n            _.forEach(this.outcomes, function(outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        getOutcomes: function getOutcomes() {\n            return _.clone(this.outcomes);\n        },\n        removeOutcome: function removeOutcome(identifier) {\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if (outcome) {\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        addModalFeedback: function addModalFeedback(feedback) {\n            if (Element.isA(feedback, 'modalFeedback')) {\n                feedback.setRootElement(this);\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\n            } else {\n                throw 'is not a qti modal feedback';\n            }\n            return this;\n        },\n        getComposingElements: function getComposingElements() {\n            var elts = this._super(),\n                _this = this;\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection) {\n                for (var i in _this[elementCollection]) {\n                    var elt = _this[elementCollection][i];\n                    elts[i] = elt;\n                    elts = _.extend(elts, elt.getComposingElements());\n                }\n            });\n            if (this.responseProcessing instanceof Element) {\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n\n            if (!found) {\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\n            }\n\n            return found;\n        },\n        getResponses: function getResponses() {\n            return _.clone(this.responses);\n        },\n        getRootElement: function getRootElement() {\n            return this;\n        },\n        addNamespace: function addNamespace(name, uri) {\n            this.namespaces[name] = uri;\n        },\n        setNamespaces: function setNamespaces(namespaces) {\n            this.namespaces = namespaces;\n        },\n        getNamespaces: function getNamespaces() {\n            return _.clone(this.namespaces);\n        },\n        setSchemaLocations: function setSchemaLocations(locations) {\n            this.schemaLocations = locations;\n        },\n        getSchemaLocations: function getSchemaLocations() {\n            return _.clone(this.schemaLocations);\n        },\n        setApipAccessibility: function setApipAccessibility(apip) {\n            this.apipAccessibility = apip || null;\n        },\n        getApipAccessibility: function getApipAccessibility() {\n            return this.apipAccessibility;\n        },\n        addStylesheet: function addStylesheet(stylesheet) {\n            if (Element.isA(stylesheet, 'stylesheet')) {\n                stylesheet.setRootElement(this);\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\n            } else {\n                throw 'is not a qti stylesheet declaration';\n            }\n            return this;\n        },\n        removeStyleSheet: function removeStyleSheet(stylesheet) {\n            delete this.stylesheets[stylesheet.getSerial()];\n            return this;\n        },\n        stylesheetExists: function stylesheetExists(href) {\n            var exists = false;\n            _.forEach(this.stylesheets, function(stylesheet) {\n                if (stylesheet.attr('href') === href) {\n                    exists = true;\n                    return false; //break each loop\n                }\n            });\n            return exists;\n        },\n        setResponseProcessing: function setResponseProcessing(rp) {\n            if (Element.isA(rp, 'responseProcessing')) {\n                rp.setRootElement(this);\n                this.responseProcessing = rp;\n            } else {\n                throw 'is not a response processing';\n            }\n            return this;\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            var toArray = function(elt) {\n                return elt.toArray();\n            };\n            arr.namespaces = this.namespaces;\n            arr.schemaLocations = this.schemaLocations;\n            arr.outcomes = _.map(this.outcomes, toArray);\n            arr.responses = _.map(this.responses, toArray);\n            arr.stylesheets = _.map(this.stylesheets, toArray);\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\n            arr.responseProcessing = this.responseProcessing.toArray();\n            return arr;\n        },\n        isEmpty: function isEmpty() {\n            var body = this.body().trim();\n\n            if (body) {\n                //hack to fix #2652\n                var $dummy = $('<div>').html(body),\n                    $children = $dummy.children();\n\n                if ($children.length === 1 && $children.hasClass('empty')) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        },\n\n        /**\n         * Clean up an item rendering.\n         * Ask the renderer to run destroy if exists.\n         */\n        clear: function clear() {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    renderer.destroy(this);\n                }\n            }\n        }\n    });\n\n    Container.augment(Item);\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\n        _container: 'taoQtiItem/qtiItem/core/Container',\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\n        math: 'taoQtiItem/qtiItem/core/Math',\n        figure: 'taoQtiItem/qtiItem/core/Figure',\n        img: 'taoQtiItem/qtiItem/core/Img',\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\n        object: 'taoQtiItem/qtiItem/core/Object',\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        include: 'taoQtiItem/qtiItem/core/Include',\n        table: 'taoQtiItem/qtiItem/core/Table',\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA\n     */\n\n    /**\n     * XML namespace handling\n     */\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    const prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        let key;\n        for (key in namespaces) {\n            if (namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    var xmlNsHandler = {\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs: function stripNs(body) {\n            const pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            const openRegEx = new RegExp('(<' + pattern + ')', 'gi');\n            const closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs: function restoreNs(xml, namespaces, ignoreMarkup = false) {\n            let xmlCopy = xml;\n            if (ignoreMarkup) {\n                // cut from xmlCopy <markup...>...</markup>\n                // because markup should be html without namespace qh5\n                xmlCopy = xml.replace(/((?=<markup)(.|\\n)*?(?:<\\/markup>)+)/gim, '');\n            }\n            const xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            const tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            const xmlMatch = xmlCopy.match(xmlRe);\n            const imsXsd = 'http://www.imsglobal.org/xsd';\n            const html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            const prefix = getPrefix(namespaces, html5Ns);\n            const prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            let i = xmlMatch ? xmlMatch.length : 0;\n\n            if (!xmlMatch) {\n                return xml;\n            }\n\n            while (i--) {\n                const tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(\n                    xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Returns iteraction score response rule object\n     *\n     * @param {String} responseIdentifiers interactions reponse indentifiers\n     * @returns {Obeject}\n     */\n    var itemScore = (responseIdentifiers) => {\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\n            qtiClass: 'variable',\n            attributes: {\n                identifier: `SCORE_${outcomeIdentifier}`,\n            },\n        }));\n\n        return {\n            qtiClass: 'setOutcomeValue',\n            attributes: {\n                identifier: 'SCORE',\n            },\n            expression: {\n                qtiClass: 'sum',\n                expressions: outcomeExpressions,\n            },\n        };\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\n        var properties = {};\n\n        _.forOwn(rawProperties, (value, key) => {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    };\n\n    const loadPortableCustomElementData = (portableElement, data) => {\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    };\n\n    var Loader = Class.extend({\n        init(item, classesLocation) {\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n            this.item = item || null; //starts either from scratch or with an existing item object\n\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\n        },\n        setClassesLocation(qtiClassesList) {\n            _.extend(this.classesLocation, qtiClassesList);\n\n            return this;\n        },\n        getRequiredClasses(data) {\n            let ret = [];\n\n            for (let i in data) {\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\n                    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n\n            return ret;\n        },\n        loadRequiredClasses(data, callback, reload) {\n            let requiredClass;\n            const requiredClasses = this.getRequiredClasses(data, reload);\n            const required = [];\n\n            for (let i in requiredClasses) {\n                requiredClass = requiredClasses[i];\n                if (this.classesLocation[requiredClass]) {\n                    required.push({\n                        module: this.classesLocation[requiredClass],\n                        category: 'qti'\n                    });\n                } else {\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\n                }\n            }\n\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\n                loadeded.forEach(QtiClass => {\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(this, this.qti);\n            });\n        },\n        getLoadedClasses() {\n            return _.keys(this.qti);\n        },\n        loadItemData(data, callback) {\n            this.loadRequiredClasses(data, Qti => {\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\n                    //unload an item from it's serial (in case of a reload)\n                    if (data.serial) {\n                        Element.unsetElement(data.serial);\n                    }\n\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    this.loadContainer(this.item.getBody(), data.body);\n\n                    for (let i in data.outcomes) {\n                        const outcome = this.buildOutcome(data.outcomes[i]);\n\n                        if (outcome) {\n                            this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n\n                    for (let i in data.feedbacks) {\n                        const feedback = this.buildElement(data.feedbacks[i]);\n\n                        if (feedback) {\n                            this.item.addModalFeedback(feedback);\n                        }\n                    }\n\n                    for (let i in data.stylesheets) {\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\n\n                        if (stylesheet) {\n                            this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\n                        ? [...data.responseProcessing.responseRules]\n                        : [];\n                    for (let i in data.responses) {\n                        const responseIdentifier = data.responses[i].identifier;\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\n                            expression: {\n                                expressions: [expression = {}] = [],\n                            } = {}\n                        } = {} }) => expression.attributes\n                        && expression.attributes.identifier === responseIdentifier\n                            || (\n                                expression.expressions\n                                && expression.expressions[0]\n                                && expression.expressions[0].attributes\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\n                            )\n                        );\n                        const [responseRule] = responseRuleItemIndex !== -1\n                            ? responseRules.splice(responseRuleItemIndex, 1)\n                            : [];\n\n                        const response = this.buildResponse(\n                            data.responses[i],\n                            responseRule\n                        );\n\n                        if (response) {\n                            this.item.addResponseDeclaration(response);\n\n                            const feedbackRules = data.responses[i].feedbackRules;\n\n                            if (feedbackRules) {\n                                _.forIn(feedbackRules, (fbData, serial) => {\n                                    const {\n                                        attributes: {\n                                            identifier: feedbackOutcomeIdentifier,\n                                        } = {}\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\n\n                                    // remove feedback response rule from response rules array\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\n                                        responseIf: {\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\n                                        } = {}\n                                    }) => {\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\n                                        const outcomeIdentifier = attributes.identifier;\n\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\n                                            && qtiClass === 'setOutcomeValue';\n                                    });\n\n                                    if (feedbackResponseRuleIndex !== -1) {\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\n                                    }\n                                });\n                            }\n                        }\n                    }\n\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\n\n                    if (data.responseProcessing) {\n                        const customResponseProcessing =\n                            (\n                                responseRules.length > 0\n                                && !(\n                                    responseRules.length === 1\n                                    && _.isEqual(\n                                        responseRules[0],\n                                        itemScoreHelper(\n                                            responseIdentifiers\n                                        )\n                                    )\n                                )\n                            )\n                            || (\n                                this.item.responses\n                                && Object.keys(this.item.responses)\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\n                            );\n\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\n                    }\n                    this.item.setNamespaces(data.namespaces);\n                    this.item.setSchemaLocations(data.schemaLocations);\n                    this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        loadAndBuildElement(data, callback) {\n            this.loadRequiredClasses(data, () => {\n                const element = this.buildElement(data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        loadElement(element, data, callback) {\n            this.loadRequiredClasses(data, () => {\n                this.loadElementData(element, data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements(data, callback) {\n            if (!this.item) {\n                throw new Error('QtiLoader : cannot load elements in empty item');\n            }\n\n            this.loadRequiredClasses(data, () => {\n                const allElements = this.item.getComposingElements();\n\n                for (let i in data) {\n                    const elementData = data[i];\n\n                    if (elementData && elementData.qtiClass && elementData.serial) {\n                        //find and update element\n                        if (allElements[elementData.serial]) {\n                            this.loadElementData(allElements[elementData.serial], elementData);\n                        }\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        buildResponse(data, responseRule) {\n            const response = this.buildElement(data);\n\n            response.template = responseHelper.getTemplateUriFromName(\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\n            )\n                || data.howMatch\n                || null;\n\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if (_.size(data.mapping)) {\n                response.mapEntries = data.mapping;\n            } else if (_.size(data.areaMapping)) {\n                response.mapEntries = data.areaMapping;\n            } else {\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule(data, response) {\n            const feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            const comparedOutcome = feedbackRule.comparedOutcome;\n\n            if (feedbackRule.feedbackThen) {\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\n            }\n\n            if (feedbackRule.feedbackElse) {\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome(data) {\n            const outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n\n            return outcome;\n        },\n        buildResponseProcessing(data, customResponseProcessing) {\n            const rp = this.buildElement(data);\n\n            if (customResponseProcessing) {\n                rp.xml = data.data;\n                rp.processingType = 'custom';\n            } else {\n                rp.processingType = 'templateDriven';\n            }\n\n            return rp;\n        },\n        loadContainer(bodyObject, bodyData) {\n            if (!Element.isA(bodyObject, '_container')) {\n                throw new Error('bodyObject must be a QTI Container');\n            }\n\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\n                throw new Error('wrong bodydata format');\n            }\n            //merge attributes when loading element data\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\n            bodyObject.setAttributes(attributes);\n\n            for (let serial in bodyData.elements) {\n                const eltData = bodyData.elements[serial];\n                const element = this.buildElement(eltData);\n\n                //check if class is loaded:\n                if (element) {\n                    bodyObject.setElement(element, bodyData.body);\n                }\n            }\n\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n        },\n        buildElement(elementData) {\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\n                throw new Error('wrong elementData format');\n            }\n\n            const className = elementData.qtiClass;\n\n            if (!this.qti[className]) {\n                throw new Error(`the qti element class does not exist: ${className}`);\n            }\n\n            const elt = new this.qti[className](elementData.serial);\n            this.loadElementData(elt, elementData);\n\n            return elt;\n        },\n        loadElementData(element, data) {\n            //merge attributes when loading element data\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            let body = data.body;\n            if (!body && data.text && data.qtiClass === 'inlineChoice') {\n                body = { body: data.text, elements: {} };\n            }\n            if (element.body && body) {\n                if (element.bdy) {\n                    this.loadContainer(element.getBody(), body);\n                }\n            }\n\n            if (element.object && data.object) {\n                if (element.object) {\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if (Element.isA(element, 'interaction')) {\n                this.loadInteractionData(element, data);\n            } else if (Element.isA(element, 'choice')) {\n                this.loadChoiceData(element, data);\n            } else if (Element.isA(element, 'math')) {\n                this.loadMathData(element, data);\n            } else if (Element.isA(element, 'infoControl')) {\n                this.loadPicData(element, data);\n            } else if (Element.isA(element, '_tooltip')) {\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData(interaction, data) {\n            if (Element.isA(interaction, 'blockInteraction')) {\n                if (data.prompt) {\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if (Element.isA(interaction, 'customInteraction')) {\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices(interaction, data) {\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if (data.choices) {\n                if (Element.isA(interaction, 'matchInteraction')) {\n                    for (let set = 0; set < 2; set++) {\n                        if (!data.choices[set]) {\n                            throw new Error(`missing match set #${set}`);\n                        }\n\n                        const matchSet = data.choices[set];\n\n                        for (let serial in matchSet) {\n                            const choice = this.buildElement(matchSet[serial]);\n\n                            if (choice) {\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                } else {\n                    for (let serial in data.choices) {\n                        const choice = this.buildElement(data.choices[serial]);\n\n                        if (choice) {\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\n                    if (data.gapImgs) {\n                        for (let serial in data.gapImgs) {\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\n\n                            if (gapImg) {\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loadChoiceData(choice, data) {\n            if (Element.isA(choice, 'textVariableChoice')) {\n                choice.val(data.text);\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\n                // this ensure compatibility of Qti 2.1 items\n                if (!choice.body()) {\n                    choice.body(data.text);\n                }\n            } else if (Element.isA(choice, 'containerChoice')) ;\n        },\n        loadObjectData(object, data) {\n            object.setAttributes(data.attributes);\n\n            //@todo: manage object like a container\n            if (data._alt) {\n                if (data._alt.qtiClass === 'object') {\n                    object._alt = Loader.buildElement(data._alt);\n                } else {\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData(math, data) {\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, (value, encoding) => {\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData(tooltip, data) {\n            tooltip.content(data.content);\n        },\n        loadPciData(pci, data) {\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData(pic, data) {\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Math',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function ($, _, Element, rendererConfig, NamespacedElement) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Math;\n\n    /**\n     * Remove the closing MathML tags and remove useless line breaks before and after it\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripMathTags(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : '') + 'math[^>]*>', 'g');\n        return mathML\n            .replace(regex, '')\n            .replace(/^\\s*[\\r\\n]/gm, '') //remove first blank line\n            .replace(/\\s*[\\r\\n]$/gm, ''); //last blank line\n    }\n\n    /**\n     * Remove mathML ns name prefix from the mathML\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripNamespace(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : ''), 'g');\n        return mathML.replace(regex, '<$1');\n    }\n\n    /**\n     * Check if the mathML string is to be considered empty\n     *\n     * @param {String} mathStr\n     * @returns {Boolean}\n     */\n    function _isEmptyMathML(mathStr) {\n        var $math,\n            mathText,\n            hasContent = false;\n\n        if (mathStr && mathStr.trim()) {\n            $math = $($.parseHTML(mathStr));\n            mathText = $math.text();\n            hasContent = _.isString(mathText) && !!mathText.trim();\n        }\n\n        return !hasContent;\n    }\n\n    Math = Element.extend({\n        qtiClass: 'math',\n        defaultNsName: 'm',\n        defaultNsUri: 'http://www.w3.org/1998/Math/MathML',\n        nsUriFragment: 'MathML',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.ns = null;\n            this.mathML = '';\n            this.annotations = {};\n        },\n        setAnnotation: function(encoding, value) {\n            this.annotations[encoding] = _.unescape(value);\n        },\n        getAnnotation: function(encoding) {\n            return this.annotations[encoding];\n        },\n        removeAnnotation: function(encoding) {\n            delete this.annotations[encoding];\n        },\n        setMathML: function(mathML) {\n            var ns = this.getNamespace(),\n                nsName = ns.name && ns.uri ? ns.name : '';\n\n            mathML = _stripMathTags(mathML, nsName);\n            if (ns) {\n                mathML = _stripNamespace(mathML, nsName);\n            }\n            this.mathML = mathML;\n        },\n        getMathML: function() {\n            return this.mathML;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                tag = this.qtiClass,\n                raw = this.mathML,\n                body = raw,\n                ns = this.getNamespace(),\n                annotations = '',\n                encoding,\n                defaultData;\n\n            for (encoding in this.annotations) {\n                annotations +=\n                    '<annotation encoding=\"' + encoding + '\">' + _.escape(this.annotations[encoding]) + '</annotation>';\n            }\n\n            if (annotations) {\n                if (raw.indexOf('</semantics>') > 0) {\n                    raw = raw.replace('</semantics>', annotations + '</semantics>');\n                } else {\n                    raw = '<semantics>' + raw + annotations + '</semantics>';\n                }\n            }\n\n            if (ns && ns.name) {\n                body = raw.replace(/<(\\/)?([^!<])/g, '<$1' + ns.name + ':$2');\n                tag = ns.name + ':' + tag;\n            }\n\n            body = body.replace(/<!--.*?-->/g, ''); // remove Mathjax-generated comments\n            body = body.replace(/&lt;!--.*?--&gt;/g, ''); // fix for broken items because of Mathjax comments\n\n            defaultData = {\n                block: this.attr('display') === 'block' ? true : false,\n                body: body,\n                raw: raw,\n                tag: tag,\n                ns: ns\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return _isEmptyMathML(this.mathML) && (!this.annotations.latex || !this.annotations.latex.trim());\n        }\n    });\n\n    NamespacedElement.augment(Math);\n\n    var Math$1 = Math;\n\n    return Math$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PortableInfoControl',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, CustomElement, NamespacedElement, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var PortableInfoControl = Element.extend({\n        qtiClass: 'infoControl',\n        defaultNsName: 'pic',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableInfoControl',\n        nsUriFragment: 'portableInfoControl',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            //stack of callback waiting to be ready\n            this.readyStack = [];\n        },\n\n        is: function(qtiClass) {\n            return qtiClass === 'infoControl' || this._super(qtiClass);\n        },\n\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pic: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n\n        /**\n         * Retrieve the state of the infoControl\n         * The call will be delegated to the infoControl's renderer.\n         *\n         * @returns {Object} the state\n         */\n        getState: function getState() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                ret = renderer.getState(this);\n            }\n            return ret;\n        },\n\n        /**\n         * Set the state of the infoControl\n         * The state will be set to the infoControl's renderer.\n         *\n         * @param {Object} state - the infoControl's state\n         */\n        setState: function setState(state) {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                renderer.setState(this, state);\n            }\n        },\n\n        toArray: function() {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n\n        /**\n         * Execute a callback when the PIC is ready (ie. registered, loaded and rendererd)\n         * @param {Function} cb - the function to execute once ready\n         */\n        onReady: function onReady(cb) {\n            this.readyStack.push(cb);\n\n            //if we are ready this will pop the stack\n            if (this.data('_ready') && this.data('pic')) {\n                this.triggerReady();\n            }\n        },\n\n        /**\n         * Define the PIC as ready and consume the waiting functions in the stack.\n         */\n        triggerReady: function triggerReady() {\n            var self = this;\n            _.forEach(this.readyStack, function(cb) {\n                cb.call(self, self.data('pic'));\n            });\n\n            //empty the stack\n            this.readyStack = [];\n\n            //mark the infoControl as ready\n            this.data('_ready', true);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(PortableInfoControl);\n    NamespacedElement.augment(PortableInfoControl);\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PrintedVariable',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var PrintedVariable = Element.extend({\n        qtiClass: 'printedVariable'\n    });\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',['taoQtiItem/qtiItem/core/Element', 'lodash'], function (Element, _) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var SimpleFeedbackRule = Element.extend({\n        qtiClass: '_simpleFeedbackRule',\n        serial: '',\n        rootElement: null,\n        init: function (serial, feedbackOutcome, feedbackThen, feedbackElse) {\n            this._super(serial, {});\n\n            this.condition = 'correct';\n            this.comparedOutcome = null;\n            this.comparedValue = 0.0;\n\n            this.feedbackOutcome = feedbackOutcome;\n            if (Element.isA(feedbackThen, 'feedback')) {\n                this.feedbackThen = feedbackThen;\n            } else {\n                this.feedbackThen = null;\n            }\n            if (Element.isA(feedbackElse, 'feedback')) {\n                this.feedbackElse = feedbackThen;\n            } else {\n                this.feedbackElse = null;\n            }\n        },\n        setCondition: function (comparedOutcome, condition, comparedValue) {\n            var _comparedValues = [];\n            if (Element.isA(comparedOutcome, 'variableDeclaration')) {\n                switch (condition) {\n                    case 'correct':\n                    case 'incorrect':\n                    case 'isNull':\n                        if (Element.isA(comparedOutcome, 'responseDeclaration')) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                        } else {\n                            throw 'invalid outcome type: must be a responseDeclaration';\n                        }\n                        break;\n                    case 'lt':\n                    case 'lte':\n                    case 'equal':\n                    case 'gte':\n                    case 'gt':\n                        if (comparedValue !== null && comparedValue !== undefined) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            this.comparedValue = comparedValue;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    case 'choices':\n                        if (\n                            Element.isA(comparedOutcome, 'responseDeclaration') &&\n                            comparedValue !== null &&\n                            _.isArray(comparedValue)\n                        ) {\n                            var choices = _.values(comparedOutcome.getInteraction().getChoices());\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            _.forEach(comparedValue, function (v) {\n                                if (v instanceof Element) {\n                                    _comparedValues.push(v);\n                                } else if (_.isString(v)) {\n                                    _.forEach(choices, function (c) {\n                                        if (c.attr('identifier') === v) {\n                                            _comparedValues.push(c);\n                                            return false; //break\n                                        }\n                                    });\n                                }\n                            });\n\n                            this.comparedValue = _comparedValues;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    default:\n                        throw 'unknown condition type : '.condition;\n                }\n            } else {\n                throw 'invalid outcome type: must be a variableDeclaration';\n            }\n\n            return this;\n        },\n        setFeedbackElse: function (feedback) {\n            if (Element.isA(feedback, 'feedback')) {\n                this.feedbackElse = feedback;\n            }\n        },\n        toArray: function () {\n            var val = this.comparedValue;\n            var _toString = function (v) {\n                if (val instanceof Element) {\n                    return val.attr('identifier');\n                } else {\n                    return val + '';\n                }\n            };\n            if (_.isArray(val)) {\n                val = _.map(val, _toString);\n            } else {\n                val = _toString();\n            }\n            return {\n                condition: this.condition,\n                comparedOutcome: this.comparedOutcome.id(),\n                comparedValue: val\n            };\n        }\n    });\n\n    return SimpleFeedbackRule;\n\n});\n\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    var ResponseProcessing = Element.extend({\n        qtiClass: 'responseProcessing',\n        processingType: '',\n        xml: '',\n        toArray: function() {\n            var arr = this._super();\n            arr.processingType = this.processingType;\n            arr.xml = this.xml;\n            return arr;\n        }\n    });\n\n    return ResponseProcessing;\n\n});\n\n","define('taoQtiItem/qtiItem/core/RubricBlock',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/Container'], function (Element, Container) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var RubricBlock = Element.extend({\n        qtiClass: 'rubricBlock',\n        isEmpty: function isEmpty() {\n            return !(this.bdy && this.bdy.body());\n        }\n    });\n\n    Container.augment(RubricBlock);\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Stylesheet = Element.extend({\n        qtiClass: 'stylesheet',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = { href: renderer.resolveUrl(this.attr('href')) };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerTable',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'table';\n        }\n    });\n\n    var ContainerTable = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerTable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Table',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerTable'], function (_, Element, Container) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = Element.extend({\n        qtiClass: 'table'\n    });\n\n    Container.augment(Table);\n\n    Table = Table.extend({\n        // on table creation, we might get a body wrapped in a table element, that we need to get rid of\n        body: function(newBody) {\n            if (_.isString(newBody)) {\n                newBody = newBody.replace('<table>', '').replace('</table>', '');\n            }\n            return this._super(newBody);\n        }\n    });\n\n    var Table$1 = Table;\n\n    return Table$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Tooltip',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, ContainerInline, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ContainerInline = ContainerInline && Object.prototype.hasOwnProperty.call(ContainerInline, 'default') ? ContainerInline['default'] : ContainerInline;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Tooltip = Element.extend({\n        qtiClass: '_tooltip',\n\n        init: function(serial, attributes, newContent) {\n            this._super(serial, attributes);\n            this.content(newContent || '');\n        },\n\n        /**\n         * Set/get the content of the tooltip\n         * @param {String} newContent - as HTML\n         * @returns {Element|String}\n         */\n        content: function content(newContent) {\n            if (typeof newContent === 'undefined') {\n                return this.tooltipContent;\n            } else {\n                if (typeof newContent === 'string') {\n                    this.tooltipContent = newContent;\n                } else {\n                    throw new Error('newContent must be a string');\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Adds the tooltip content to the template data\n         */\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    content: this.tooltipContent\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    ContainerInline.augment(Tooltip);\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/ResponseDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration', 'lodash'], function (VariableDeclaration, _) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var ResponseDeclaration = VariableDeclaration.extend({\n        qtiClass: 'responseDeclaration',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n\n            //MATCH_CORRECT, MAP_RESPONSE, MAP_RESPONSE_POINT\n            this.template = ''; //previously called 'howMatch'\n\n            //when template equals ont of the \"map\" one (MAP_RESPONSE, MAP_RESPONSE_POINT)\n            this.mappingAttributes = {};\n            this.mapEntries = {};\n\n            //correct response [0..*]\n            this.correctResponse = null;\n\n            //tao internal usage:\n            this.feedbackRules = {};\n        },\n        getFeedbackRules: function () {\n            return _.values(this.feedbackRules);\n        },\n        getComposingElements: function () {\n            var elts = this._super();\n            elts = _.extend(elts, this.feedbackRules);\n            return elts;\n        },\n        toArray: function () {\n            var arr = this._super();\n            arr.howMatch = this.template;\n            arr.correctResponses = this.correctResponse;\n            arr.mapping = this.mapEntries;\n            arr.mappingAttributes = this.mappingAttributes;\n            arr.feedbackRules = _.map(this.feedbackRules, function (rule) {\n                return rule.toArray();\n            });\n            return arr;\n        },\n        getInteraction: function () {\n            var interaction = null;\n            var responseId = this.id();\n            var item = this.getRootElement();\n            var interactions = item.getInteractions();\n            _.forEach(interactions, function (i) {\n                if (i.attributes.responseIdentifier === responseId) {\n                    interaction = i;\n                    return false; //break\n                }\n            });\n            return interaction;\n        },\n        isCardinality: function (cardinalities) {\n            var comparison;\n            if (_.isArray(cardinalities)) {\n                comparison = cardinalities;\n            } else if (_.isString(cardinalities)) {\n                cardinalities = [cardinalities];\n            } else {\n                return false;\n            }\n            return _.indexOf(comparison, this.attr('cardinality')) >= 0;\n        }\n    });\n\n    return ResponseDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/EventMgr',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    //@todo : complete with namespace managements\n    function EventMgr() {\n        var events = {};\n\n        this.get = function (event) {\n            if (event && events[event]) {\n                return _.clone(events[event]);\n            } else {\n                return [];\n            }\n        };\n\n        this.on = function (event, callback) {\n            var tokens = event.split('.');\n            if (tokens[0]) {\n                var name = tokens.shift();\n                events[name] = events[name] || [];\n                events[name].push({\n                    ns: tokens,\n                    callback: callback\n                });\n            }\n        };\n\n        this.off = function (event) {\n            if (event && events[event]) {\n                events[event] = [];\n            }\n        };\n\n        this.trigger = function (event, data) {\n            if (events[event]) {\n                _.forEach(events[event], function (e) {\n                    //@todo check ns:\n                    e.callback.apply(\n                        {\n                            type: event,\n                            ns: []\n                        },\n                        data\n                    );\n                });\n            }\n        };\n    }\n\n    return EventMgr;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\n        getRawValues: function (pciVar) {\n            if (_.isPlainObject(pciVar)) {\n                if (typeof pciVar.base !== 'undefined') {\n                    return _.values(pciVar.base);\n                } else if (pciVar.list) {\n                    return _.values(pciVar.list);\n                }\n            }\n            throw new Error('unsupported type ');\n        }\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/modalFeedback',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container'], function ($, _, pci, containerHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    var getFeedbackMessageSignature = function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    };\n\n    /**\n     * Extract the display information for an interaction-related feedback\n     *\n     * @private\n     * @param {Object} interaction - a qti interaction object\n     * @returns {Object} Object containing useful display information\n     */\n    var extractDisplayInfo = function extractDisplayInfo(interaction) {\n        var $interactionContainer = interaction.getContainer();\n        var responseIdentifier = interaction.attr('responseIdentifier');\n        var messageGroupId, $displayContainer;\n\n        if (interaction.is('inlineInteraction')) {\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\n            if (!messageGroupId) {\n                //generate a messageFromId\n                messageGroupId = _.uniqueId('inline_message_group_');\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\n            }\n        } else {\n            messageGroupId = responseIdentifier;\n            $displayContainer = $interactionContainer;\n        }\n\n        return {\n            responseIdentifier: responseIdentifier,\n            interactionContainer: $interactionContainer,\n            displayContainer: $displayContainer,\n            messageGroupId: messageGroupId,\n            order: -1\n        };\n    };\n\n    /**\n     * Get interaction display information sorted in the order of appearance within the item\n     *\n     * @param {Object} item\n     * @returns {Array}\n     */\n    var getInteractionsDisplayInfo = function getInteractionsDisplayInfo(item) {\n        var interactionsDisplayInfo = [];\n        var $itemContainer = item.getContainer();\n        var interactionOrder = 0;\n\n        //extract all interaction related information needed to display their\n        _.forEach(item.getComposingElements(), function (element) {\n            if (element.is('interaction')) {\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\n            }\n        });\n\n        //sort interactionsDisplayInfo on the item level\n        $itemContainer.find('.qti-interaction').each(function () {\n            var self = this;\n            _.forEach(interactionsDisplayInfo, function (_interactionInfo) {\n                if (_interactionInfo.interactionContainer[0] === self) {\n                    _interactionInfo.order = interactionOrder;\n                    return false;\n                }\n            });\n            interactionOrder++;\n        });\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\n\n        return interactionsDisplayInfo;\n    };\n\n    /**\n     * Returns feedbacks according to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @returns {Array} renderingFeedbacks - feedbacks to be displayed\n     */\n    var getFeedbacks = function getFeedbacks(item, itemSession) {\n        var messages = {};\n        var $itemContainer = item.getContainer();\n        var $itemBody = $('.qti-itemBody', $itemContainer);\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\n        var renderingQueue = [];\n\n        _.forEach(item.modalFeedbacks, function (feedback) {\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n            var order = -1;\n\n            //verify if the feedback should be displayed\n            if (itemSession[outcomeIdentifier]) {\n                //is the feedback in the list of feedbacks to be displayed ?\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                if (!feedbackIds.includes(feedback.id())) {\n                    return true; //continue with next feedback\n                }\n\n                //which group of feedbacks (interaction related) the feedback belongs to ?\n                message = getFeedbackMessageSignature(feedback);\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\n                if (comparedOutcome && interactionInfo) {\n                    $container = interactionInfo.displayContainer;\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\n                    order = interactionInfo.order;\n                } else {\n                    $container = $itemBody;\n                    _currentMessageGroupId = '__item__';\n                }\n                //is this message already displayed ?\n                if (!messages[_currentMessageGroupId]) {\n                    messages[_currentMessageGroupId] = [];\n                }\n\n                if (messages[_currentMessageGroupId] && messages[_currentMessageGroupId].includes(message)) {\n                    return true; //continue\n                } else {\n                    messages[_currentMessageGroupId].push(message);\n                }\n\n                //ok, display feedback\n                renderingQueue.push({\n                    feedback: feedback,\n                    $container: $container,\n                    order: order\n                });\n            }\n        });\n\n        renderingQueue = _.sortBy(renderingQueue, 'order');\n\n        return renderingQueue;\n    };\n\n    /**\n     * Provide helper function for collecting feedbacks\n     */\n    var modalFeedback = {\n        getFeedbacks: getFeedbacks\n    };\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/Parser',['jquery'], function ($) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /**\n     * Experimental parser\n     *\n     */\n\n    var Parser = function() {\n        var _$xml = null;\n        this.loadXML = function(xml) {\n            _$xml = $.parseXML(xml);\n        };\n        this.getDOM = function() {\n            return _$xml;\n        };\n    };\n\n    return Parser;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/simpleParser',['lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/core/Loader'], function (_, $, util, Loader) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2021 (original work) Open Assessment Technologies SA\n     **/\n\n    const _parsableElements = ['img', 'object', 'printedVariable'];\n    const _qtiClassNames = {\n        rubricblock: 'rubricBlock',\n        printedvariable: 'printedVariable'\n    };\n    const _qtiAttributesNames = {\n        powerform: 'powerForm',\n        mappingindicator: 'mappingIndicator'\n    };\n\n    const _defaultOptions = {\n        ns: {\n            math: '',\n            include: 'xi',\n            table: 'table',\n            image: 'img',\n            object: '',\n            figure: 'qh5',\n            figcaption: 'qh5'\n        },\n        loaded: null,\n        model: null\n    };\n\n    let parser;\n\n    function _getElementSelector(qtiClass, ns) {\n        return ns ? ns + '\\\\:' + qtiClass + ',' + qtiClass : qtiClass;\n    }\n\n    function getQtiClassFromXmlDom($node) {\n        let qtiClass = $node.prop('tagName').toLowerCase();\n\n        //remove ns :\n        qtiClass = qtiClass.replace(/.*:/, '');\n\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\n    }\n\n    function buildElement($elt) {\n        const qtiClass = getQtiClassFromXmlDom($elt);\n\n        const elt = {\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {}\n        };\n\n        $.each($elt[0].attributes, function () {\n            let attrName;\n            if (this.specified) {\n                attrName = _qtiAttributesNames[this.name] || this.name;\n                elt.attributes[attrName] = this.value;\n            }\n        });\n\n        return elt;\n    }\n\n    function buildMath($elt, options) {\n        const elt = buildElement($elt);\n\n        //set annotations:\n        elt.annotations = {};\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function () {\n            const $annotation = $(this);\n            const encoding = $annotation.attr('encoding');\n            if (encoding) {\n                elt.annotations[encoding] = _.unescape($annotation.html());\n            }\n            $annotation.remove();\n        });\n\n        //set math xml\n        elt.mathML = $elt.html();\n\n        //set ns:\n        elt.ns = {\n            name: 'm',\n            uri: 'http://www.w3.org/1998/Math/MathML' //@todo : remove hardcoding there\n        };\n\n        return elt;\n    }\n\n    function buildTooltip(targetHtml, contentId, contentHtml) {\n        const qtiClass = '_tooltip';\n\n        return {\n            elements: {},\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {\n                'aria-describedby': contentId\n            },\n            content: contentHtml,\n            body: {\n                elements: {},\n                serial: util.buildSerial('container'),\n                body: targetHtml\n            }\n        };\n    }\n\n    function parseTable($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedTable = parseContainer($elt, options);\n        elt.body.body = $parsedTable.body;\n        elt.body.elements = $parsedTable.elements;\n        return elt;\n    }\n\n    function parseFigure($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedFigure = parseContainer($elt, options);\n        elt.body.body = $parsedFigure.body;\n        elt.body.elements = $parsedFigure.elements;\n        const $figcaption = $elt.find(_getElementSelector('figcaption', options.ns.figcaption));\n        if ($figcaption.length) {\n            const element = buildElement($figcaption);\n            element.body = {\n                body: $figcaption.html(),\n                elements: {}\n            };\n            elt.body.elements[element.serial] = element;\n            $figcaption.replaceWith(_placeholder(element));\n        }\n        elt.body.body = $elt.html();\n        return elt;\n    }\n\n    function parseContainer($container, options) {\n        const ret = {\n            serial: util.buildSerial('_container_'),\n            body: '',\n            elements: {}\n        };\n        // table should be in top as it needs to be parsed first\n        $container.find('table').each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseTable($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        // figure should be in top as it needs to be parsed first\n        $container.find(_getElementSelector('figure', options.ns.figure)).each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseFigure($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('math', options.ns.math)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildMath($qtiElement, options);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('include', options.ns.include)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildElement($qtiElement);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find('[data-role=\"tooltip-target\"]').each(function () {\n            let element,\n                $target = $(this),\n                $content,\n                contentId = $target.attr('aria-describedBy'),\n                contentHtml;\n\n            if (contentId) {\n                $content = $container.find('#' + contentId);\n                if ($content.length) {\n                    contentHtml = $content.html();\n\n                    element = buildTooltip($target.html(), contentId, contentHtml);\n\n                    ret.elements[element.serial] = element;\n                    $target.replaceWith(_placeholder(element));\n                    $content.remove();\n                }\n            }\n        });\n\n        _.forEach(_parsableElements, function (qtiClass) {\n            $container.find(qtiClass).each(function () {\n                const $qtiElement = $(this);\n                const element = buildElement($qtiElement);\n                ret.elements[element.serial] = element;\n                $qtiElement.replaceWith(_placeholder(element));\n            });\n        });\n\n        ret.body = $container.html();\n        return ret;\n    }\n\n    function _placeholder(element) {\n        return '{{' + element.serial + '}}';\n    }\n\n    parser = {\n        parse: function (xmlStr, opts) {\n            const options = _.merge(_.clone(_defaultOptions), opts || {});\n\n            const $container = $(xmlStr);\n\n            const element = buildElement($container);\n\n            const data = parseContainer($container, options);\n\n            let loader;\n\n            if (!_.isUndefined(data.body)) {\n                element.body = data;\n            }\n\n            if (_.isFunction(options.loaded) && options.model) {\n                loader = new Loader().setClassesLocation(options.model);\n                loader.loadAndBuildElement(element, options.loaded);\n            }\n\n            return element;\n        }\n    };\n\n    var parser$1 = parser;\n\n    return parser$1;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xincludeLoader',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/simpleParser', 'taoQtiItem/qtiItem/core/Loader'], function ($, _, simpleParser, Loader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    simpleParser = simpleParser && Object.prototype.hasOwnProperty.call(simpleParser, 'default') ? simpleParser['default'] : simpleParser;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    function load(xinclude, baseUrl, callback) {\n        const href = xinclude.attr('href');\n        if (href && baseUrl) {\n            const fileUrl = `text!${baseUrl}${href}`;\n            // reset the previous definition of the XML, to receive updated passage\n            require.undef(fileUrl);\n            // require xml\n            require([fileUrl], function (stimulusXml) {\n                const $wrapper = $.parseXML(stimulusXml);\n                const $sampleXMLrootNode = $wrapper.children;\n                const $stimulus = $('<include>').append($sampleXMLrootNode);\n                const mathNs = 'm'; //for 'http://www.w3.org/1998/Math/MathML'\n                const data = simpleParser.parse($stimulus, {\n                    ns: {\n                        math: mathNs\n                    }\n                });\n\n                new Loader().loadElement(xinclude, data, function () {\n                    if (_.isFunction(callback)) {\n                        const loadedClasses = this.getLoadedClasses();\n                        loadedClasses.push('_container'); //the _container class is always required\n                        callback(xinclude, data, loadedClasses);\n                    }\n                });\n            }, function () {\n                //in case the file does not exist\n                callback(xinclude, false, []);\n            });\n        }\n    }\n\n    var xincludeLoader = {\n        load\n    };\n\n    return xincludeLoader;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/picManager',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element'], function ($, _, Element) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The template of a PicManager instance\n     * @type {picManager}\n     */\n    var picManager = {\n        /**\n         * Creates a manager for a particular PIC\n         *\n         * @param {Object} pic\n         * @param {QtiItem} item\n         * @returns {picManager}\n         */\n        init: function init(pic, item) {\n            if (Element.isA(pic, 'infoControl')) {\n                this._pic = pic;\n            }\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the managed PIC\n         *\n         * @returns {Object} the descriptor of the PIC\n         */\n        getPic: function getPic() {\n            return this._pic;\n        },\n\n        /**\n         * Gets the related Item\n         *\n         * @returns {QtiItem} the Item\n         */\n        getItem: function getItem() {\n            return this._item;\n        },\n\n        /**\n         * Gets the PIC serial\n         * @returns {String}\n         */\n        getSerial: function getSerial() {\n            return this._pic && this._pic.serial;\n        },\n\n        /**\n         * Gets the PIC type identifier\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return this._pic && this._pic.typeIdentifier;\n        },\n\n        /**\n         * Gets the underlying DOM element of the managed PIC\n         * @returns {{pic: (jQuery), tool: (jQuery), button: (jQuery), broken: (Boolean))}|*} An object providing the underlying DOM elements of the PIC and its tool\n         */\n        getDom: function getDom() {\n            if (!this._dom) {\n                var serial = this.getSerial();\n                var pic, tool;\n\n                if (serial) {\n                    pic = $('[data-serial=\"' + serial + '\"]');\n                    if (pic.length) {\n                        tool = $('[data-pic-serial=\"' + serial + '\"]');\n\n                        if (!tool.length) {\n                            tool = pic.children().first();\n                        }\n\n                        this._dom = {\n                            pic: pic,\n                            tool: tool,\n                            button: tool.find('.sts-button'),\n                            broken: pic.is(':empty') // tells if the tool has been moved outside of the PIC\n                        };\n                    }\n                }\n            }\n\n            return this._dom;\n        },\n\n        /**\n         * Enables the PIC.\n         * @fires enable\n         * @returns {picManager}\n         */\n        enable: function enable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            if (dom) {\n                // just remove the disabled state and destroy the disable mask\n                dom.button.removeClass('disabled');\n                dom.tool.find('.sts-button-disable-mask').remove();\n\n                this.disabled = false;\n                this.trigger('enable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Disables the PIC\n         * @fires disable\n         * @returns {picManager}\n         */\n        disable: function disable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            var button;\n            if (dom) {\n                // set a disabled state by adding a CSS class, then mask the button with a top-level element\n                button = dom.button.addClass('disabled');\n\n                $('<div class=\"sts-button-disable-mask\" style=\"position:absolute;z-index:10000000000000\"></div>')\n                    .appendTo(dom.tool)\n                    .offset(button.offset())\n                    .width(button.outerWidth())\n                    .height(button.outerHeight());\n\n                // also hide any sub component\n                dom.tool.find('.sts-container, .sts-menu-container').addClass('sts-hidden-container');\n\n                this.disabled = true;\n                this.trigger('disable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Shows the PIC\n         * @fires show\n         * @returns {picManager}\n         */\n        show: function show() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.show();\n\n                this.trigger('show');\n            }\n\n            return this;\n        },\n\n        /**\n         * Hides the PIC\n         * @fires hide\n         * @returns {picManager}\n         */\n        hide: function hide() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.hide();\n\n                this.trigger('hide');\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @returns {picManager}\n         */\n        trigger: function trigger(eventName) {\n            var dom = this.getDom();\n            var args = _.rest(arguments, 1);\n\n            args.unshift(this);\n\n            if (dom) {\n                // trigger the event, if the tool has been moved outside of the PIC, trigger also the event on the PIC\n                dom.tool.trigger(eventName, args);\n                if (dom.broken) {\n                    dom.pic.trigger(eventName, args);\n                }\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * The template of a PicManagerCollection instance\n     * @type {picManagerCollection}\n     */\n    var picManagerCollection = {\n        /**\n         * Creates the collection of PIC from an Item\n         *\n         * @param {QtiItem} item\n         * @returns {picManagerCollection}\n         */\n        init: function init(item) {\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the list of PIC managers for the PIC provided by the running item.\n         *\n         * @param {Boolean} [force] Force a list rebuild\n         * @returns {Array} Returns the list of managers for the provided PIC\n         */\n        getList: function getList(force) {\n            var self = this;\n\n            // build the list if empty\n            if (force || !self._list) {\n                self._map = {};\n                self._list = [];\n                if (self._item) {\n                    _.forEach(self._item.getElements(), function(element) {\n                        var manager;\n\n                        if (Element.isA(element, 'infoControl')) {\n                            manager = managerFactory(element, self._item);\n                            self._list.push(manager);\n                            self._map[element.serial] = manager;\n                            self._map[element.typeIdentifier] = manager;\n                        }\n                    });\n                }\n            }\n\n            return this._list;\n        },\n\n        /**\n         * Gets the manager of the first PIC matching the identifier from the list provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {Object} The manager of the PIC\n         */\n        getPic: function getPic(picId) {\n            this.getList();\n            return this._map[picId];\n        },\n\n        /**\n         * Executes an action on a particular PIC from the running item.\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @param {String} action The name of the action to call\n         * @returns {*} Returns the action result\n         */\n        execute: function execute(picId, action) {\n            var pic = this.getPic(picId);\n            if (pic && pic[action]) {\n                return pic[action].apply(pic, _.rest(arguments, 2));\n            }\n        },\n\n        /**\n         * Executes an action on each PIC provided by the running item.\n         * @param {String} action The name of the action to call\n         * @param {Function} [filter] An optional filter to reduce the list\n         * @returns {picManagerCollection}\n         */\n        executeAll: function executeAll(action, filter) {\n            var args = _.rest(arguments, 2);\n            var cb;\n\n            if (typeof filter === 'function') {\n                cb = function(pic) {\n                    if (filter.call(pic, pic) && pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            } else {\n                cb = function(pic) {\n                    if (pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            }\n\n            return this.each(cb);\n        },\n\n        /**\n         * Calls a callback function on each listed PIC from the running item.\n         * @param {Function} cb The callback function to apply on each listed PIC\n         * @returns {picManagerCollection}\n         */\n        each: function each(cb) {\n            _.forEach(this.getList(), cb);\n            return this;\n        },\n\n        /**\n         * Enables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        enablePic: function enablePic(picId) {\n            this.execute(picId, 'enable');\n            return this;\n        },\n\n        /**\n         * Disables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        disablePic: function disablePic(picId) {\n            this.execute(picId, 'disable');\n            return this;\n        },\n\n        /**\n         * Shows a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        showPic: function showPic(picId) {\n            this.execute(picId, 'show');\n            return this;\n        },\n\n        /**\n         * Hides a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        hidePic: function hidePic(picId) {\n            this.execute(picId, 'hide');\n            return this;\n        },\n\n        /**\n         * Enables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to enable\n         * @returns {picManagerCollection}\n         */\n        enableAll: function enableAll(filter) {\n            this.executeAll('enable', filter);\n            return this;\n        },\n\n        /**\n         * Disables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to disable\n         * @returns {picManagerCollection}\n         */\n        disableAll: function disableAll(filter) {\n            this.executeAll('disable', filter);\n            return this;\n        },\n\n        /**\n         * Shows all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to show\n         * @returns {picManagerCollection}\n         */\n        showAll: function showAll(filter) {\n            this.executeAll('show', filter);\n            return this;\n        },\n\n        /**\n         * Hides all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to hide\n         * @returns {picManagerCollection}\n         */\n        hideAll: function hideAll(filter) {\n            this.executeAll('hide', filter);\n            return this;\n        }\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {Object} pic\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var managerFactory = function managerFactory(pic, item) {\n        var manager = _.clone(picManager, true);\n        return manager.init(pic, item);\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var collectionFactory = function collectionFactory(item) {\n        var collection = _.clone(picManagerCollection, true);\n        return collection.init(item);\n    };\n\n    var picManager$1 = {\n        collection: collectionFactory,\n        manager: managerFactory\n    };\n\n    return picManager$1;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var userModules = {\n        /**\n         * Load user modules defined in the module config\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\n         * @returns {Promise}\n         */\n        load: function load(userModules) {\n            var config = module.config();\n\n            if (!userModules || !_.isArray(userModules)) {\n                if (config && config.userModules && _.isArray(config.userModules)) {\n                    userModules = config.userModules;\n                } else {\n                    userModules = [];\n                }\n            }\n            if(!userModules.length){\n                return Promise.resolve();\n            }\n            return new Promise(function(resolve, reject) {\n                window.require(userModules, function() {\n                    _.forEach(arguments, function(dependency) {\n                        if (dependency && _.isFunction(dependency.exec)) {\n                            dependency.exec();\n                        }\n                    });\n                    resolve();\n                }, function(err) {\n                    reject(err.message);\n                });\n            });\n        }\n    };\n\n    return userModules;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory',[],function(){\n    'use strict';\n\n    /**\n     * Generic portable element provider than loads portable elements directly on the client side\n     *\n     * Sample usage :\n     * var pciProvider = sideLoadingProviderFactory(pciManifestArray);\n     * pciProvider.add('anotherPciXYZ', anotherPciXYZObject);\n     *\n     */\n    return function sideLoadingProviderFactory(portableElements){\n\n        var _registry = portableElements;\n\n        return {\n            /**\n             * Side load the portable element here\n             * @param id\n             * @param pathToManifest\n             */\n            add : function add(id, portableElement){\n                _registry[id] = portableElement;\n                return this;\n            },\n            /**\n             * Implementation of the mandatory method load() of a portable element provider\n             *\n             * @returns {Promise} resolved when the added pci registered through their manifest are loaded\n             */\n            load : function load(){\n                return _registry;\n            }\n        };\n    };\n});\n","define('taoQtiItem/reviewRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (lodash, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    lodash = lodash && Object.prototype.hasOwnProperty.call(lodash, 'default') ? lodash['default'] : lodash;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const itemThemes = themes.get('items');\n    const moduleConfig = module.config();\n\n    //Create asset manager stack\n    const assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: url => {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base ||\n                            (itemThemes.available && itemThemes.available.map(val => val.path).includes(url.path)))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    const locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n\n        // Interactions/Choices customised for reviewRenderer\n\n        choiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/reviewRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        hottext: 'taoQtiItem/reviewRenderer/renderers/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        associableHotspot: false,\n        gapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicOrderInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        uploadInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/UploadInteraction',\n        customInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/PortableCustomInteraction',\n        mediaInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MediaInteraction',\n\n        // Interactions/Choices inherited from qtiCommonRenderer\n\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'reviewRenderer',\n        locations,\n        options: {\n            assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/reviewRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/rendererProvider',['taoQtiItem/reviewRenderer/renderers/Renderer'], function (ReviewRenderer) { 'use strict';\n\n    ReviewRenderer = ReviewRenderer && Object.prototype.hasOwnProperty.call(ReviewRenderer, 'default') ? ReviewRenderer['default'] : ReviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for reviewRenderer\n     */\n    var rendererProvider = {\n        name: 'reviewRenderer',\n        init: () => {},\n        getRenderer: () => ReviewRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/runner/rendererStrategies',['core/logger', 'core/providerRegistry', 'taoQtiItem/qtiCommonRenderer/renderers/rendererProvider', 'taoQtiItem/reviewRenderer/renderers/rendererProvider'], function (loggerFactory, providerRegistry, qtiRenderer, reviewRenderer) { 'use strict';\n\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n    qtiRenderer = qtiRenderer && Object.prototype.hasOwnProperty.call(qtiRenderer, 'default') ? qtiRenderer['default'] : qtiRenderer;\n    reviewRenderer = reviewRenderer && Object.prototype.hasOwnProperty.call(reviewRenderer, 'default') ? reviewRenderer['default'] : reviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/runner/rendererStrategies');\n\n    /**\n     * The default renderer provider. It should be the QTI common renderer.\n     * @type string\n     */\n    const defaultRenderer = qtiRenderer.name;\n\n    /**\n     * Alias mapping for particular names.\n     * Gives the appropriate renderer based on the IMS view property.\n     * Read more about IMS view here:\n     * https://www.imsglobal.org/question/qtiv2p2p2/QTIv2p2p2-ASI-InformationModelv1p0/imsqtiv2p2p2_asi_v1p0_InfoModelv1p0.html#FigEnumeratedListClass_DataModel_View\n     *\n     * @type {Object}\n     */\n    const alias = {\n        author: qtiRenderer.name,\n        candidate: qtiRenderer.name,\n        proctor: reviewRenderer.name,\n        scorer: reviewRenderer.name,\n        testConstructor: qtiRenderer.name,\n        tutor: reviewRenderer.name\n    };\n\n    /**\n     * Gets the name of an existing renderer.\n     * If the wanted renderer does not exist, it will fallback to the default one.\n     * A warning will be issue for unknown names.\n     * @param {String} name\n     * @returns {String}\n     */\n    function getProviderName(name) {\n        const providers = rendererStrategies.getAvailableProviders();\n\n        if (providers.includes(name)) {\n            return name;\n        }\n\n        if (alias[name]) {\n            return alias[name];\n        }\n\n        if (name) {\n            logger.warn(`Unknown QTI Item Runner renderer ${name}!`);\n        }\n\n        return defaultRenderer;\n    }\n\n    /**\n     * This renderer manager registers two different renderers at the moment:\n     * - qtiCommonRenderer: Standard renderer used for test taker view\n     * - reviewRenderer: This renderer is meant to render items in review mode (which is ready-only with some enhancement)\n     *\n     * @param {string} rendererName\n     * @returns {*|{init(): *, getRenderer(): *}|init}\n     */\n    function rendererStrategies(rendererName) {\n        const providerName = getProviderName(rendererName);\n        const provider = rendererStrategies.getProvider(providerName);\n        const renderer = {\n            /**\n             * Initializes the renderer.\n             * @returns {renderer}\n             */\n            init() {\n                provider.init.call(this);\n                return this;\n            },\n\n            /**\n             * Gets the renderer's name\n             * @returns {String}\n             */\n            getName() {\n                return provider.name;\n            },\n\n            /**\n             * Gets the renderer\n             * @returns {renderer}\n             */\n            getRenderer() {\n                return provider.getRenderer();\n            }\n        };\n\n        return renderer.init();\n    }\n\n    providerRegistry(rendererStrategies);\n\n    rendererStrategies.registerProvider(qtiRenderer.name, qtiRenderer);\n    rendererStrategies.registerProvider(reviewRenderer.name, reviewRenderer);\n\n    return rendererStrategies;\n\n});\n\n","define('taoQtiItem/runner/provider/qti',['jquery', 'lodash', 'i18n', 'context', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/portableElementRegistry/ciRegistry', 'taoQtiItem/portableElementRegistry/icRegistry', 'taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory', 'taoQtiItem/runner/rendererStrategies', 'taoQtiItem/runner/provider/manager/picManager', 'taoQtiItem/runner/provider/manager/userModules', 'taoQtiItem/qtiItem/helper/modalFeedback', 'taoItems/assets/manager', 'util/locale', 'taoQtiItem/qtiCommonRenderer/helpers/verticalWriting', 'taoQtiItem/qtiCommonRenderer/helpers/userAgent'], function ($, _, __, context, QtiLoader, Element, ciRegistry, icRegistry, sideLoadingProviderFactory, rendererStrategies, picManager, userModules, modalFeedbackHelper, manager, locale, verticalWriting, userAgent) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    QtiLoader = QtiLoader && Object.prototype.hasOwnProperty.call(QtiLoader, 'default') ? QtiLoader['default'] : QtiLoader;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n    sideLoadingProviderFactory = sideLoadingProviderFactory && Object.prototype.hasOwnProperty.call(sideLoadingProviderFactory, 'default') ? sideLoadingProviderFactory['default'] : sideLoadingProviderFactory;\n    rendererStrategies = rendererStrategies && Object.prototype.hasOwnProperty.call(rendererStrategies, 'default') ? rendererStrategies['default'] : rendererStrategies;\n    picManager = picManager && Object.prototype.hasOwnProperty.call(picManager, 'default') ? picManager['default'] : picManager;\n    userModules = userModules && Object.prototype.hasOwnProperty.call(userModules, 'default') ? userModules['default'] : userModules;\n    modalFeedbackHelper = modalFeedbackHelper && Object.prototype.hasOwnProperty.call(modalFeedbackHelper, 'default') ? modalFeedbackHelper['default'] : modalFeedbackHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    /**\n     * @exports taoQtiItem/runner/provider/qti\n     */\n    var qtiItemRuntimeProvider = {\n        init: function (itemData, done) {\n            var self = this;\n\n            var rendererOptions = _.merge(\n                {\n                    assetManager: this.assetManager\n                },\n                _.pick(this.options, ['themes', 'preload', 'view'])\n            );\n\n            const Renderer = rendererStrategies(rendererOptions.view).getRenderer();\n\n            this._renderer = new Renderer(rendererOptions);\n\n            this._loader = new QtiLoader();\n\n            this._loader.loadItemData(itemData, function (item) {\n                if (!item) {\n                    return self.trigger('error', __('Unable to load item from the given data.'));\n                }\n\n                self._item = item;\n                self._renderer.load(function () {\n                    self._item.setRenderer(this);\n\n                    done();\n                }, this.getLoadedClasses());\n            });\n        },\n\n        render: function (elt, done, options) {\n            var self = this;\n\n            options = _.defaults(options || {}, { state: {} });\n\n            if (this._item) {\n                try {\n                    //render item html\n                    elt.innerHTML = this._item.render({});\n\n                    //check rtl is set in body attributes of an item\n                    const bdyRTL = this._item.bdy && this._item.bdy.attr('dir') === 'rtl';\n\n                    // apply RTL layout according to item language\n                    const $item = $(elt).find('.qti-item');\n                    const $itemBody = $item.find('.qti-itemBody');\n                    const itemDir = $itemBody.attr('dir');\n                    if (!itemDir) {\n                        if (bdyRTL) {\n                            $itemBody.attr('dir', 'rtl');\n                        } else {\n                            const itemLang = $item.attr('lang');\n                            $itemBody.attr('dir', locale.getLanguageDirection(itemLang));\n                        }\n                    }\n                    if (verticalWriting.getIsItemWritingModeVerticalRl()) {\n                        document.body.classList.add('item-writing-mode-vertical-rl');\n                        if (userAgent.isSafari()) {\n                            $itemBody.attr('data-useragent-browser', 'safari');\n                        }\n                    }\n                } catch (e) {\n                    self.trigger('error', __('Error in template rendering: %s', e.message));\n                }\n                try {\n                    if (options.portableElements) {\n                        //if the option to directly load portable elements is provided, use only this one\n                        if (options.portableElements.pci) {\n                            ciRegistry.resetProviders();\n                            ciRegistry.registerProvider(\n                                'pciDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pci)\n                            );\n                        }\n                        if (options.portableElements.pic) {\n                            icRegistry.resetProviders();\n                            icRegistry.registerProvider(\n                                'picDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pic)\n                            );\n                        }\n                    }\n\n                    // Race between postRendering and timeout\n                    // postRendering waits for everything to be resolved or one reject\n                    Promise.race([\n                        Promise.all(this._item.postRender(options)),\n                        new Promise(function (resolve, reject) {\n                            _.delay(\n                                reject,\n                                timeout,\n                                new Error(\n                                    __(\n                                        'It seems that there is an error during item loading. The error has been reported. The test will be paused.'\n                                    )\n                                )\n                            );\n                        })\n                    ])\n                        .then(function () {\n                            $(elt)\n                                .off('responseChange')\n                                .on('responseChange', function () {\n                                    self.trigger('statechange', self.getState());\n                                    self.trigger('responsechange', self.getResponses());\n                                })\n                                .off('endattempt')\n                                .on('endattempt', function (e, responseIdentifier) {\n                                    self.trigger('endattempt', responseIdentifier || e.originalEvent.detail);\n                                })\n                                .off('themechange')\n                                .on('themechange', function (e, themeName) {\n                                    var themeLoader = self._renderer.getThemeLoader();\n                                    themeName = themeName || e.originalEvent.detail;\n                                    if (themeLoader) {\n                                        themeLoader.change(themeName);\n                                    }\n                                });\n\n                            /**\n                             * Lists the PIC provided by this item.\n                             * @event qti#listpic\n                             */\n                            self.trigger('listpic', picManager.collection(self._item));\n\n                            return userModules.load().then(done);\n                        })\n                        .catch(function (renderingError) {\n                            done(); // in case of postRendering issue, we are also done\n                            const errorMsg = renderingError instanceof Error ? renderingError.message : renderingError;\n                            const error = new Error(__('Error in post rendering: %s', errorMsg));\n                            error.unrecoverable = true;\n                            self.trigger('error', error);\n                        });\n                } catch (err) {\n                    self.trigger('error', __('Error in post rendering: %s', err.message));\n                }\n            }\n        },\n\n        /**\n         * Clean up stuffs\n         */\n        clear: function (elt, done) {\n            var self = this;\n\n            if (self._item) {\n                Promise.all(\n                    this._item.getInteractions().map(function (interaction) {\n                        return interaction.clear();\n                    })\n                )\n                    .then(function () {\n                        self._item.clear();\n\n                        $(elt).off('responseChange').off('endattempt').off('themechange').off('feedback').empty();\n\n                        if (self._renderer) {\n                            self._renderer.unload();\n                        }\n\n                        document.body.classList.remove('item-writing-mode-vertical-rl');\n\n                        self._item = null;\n                    })\n                    .then(done)\n                    .catch(function (err) {\n                        self.trigger('error', __('Something went wrong while destroying an interaction: %s', err.message));\n                    });\n            } else {\n                done();\n            }\n        },\n\n        /**\n         * Get state implementation.\n         * @returns {Object} that represents the state\n         */\n        getState: function getState() {\n            var state = {};\n            if (this._item) {\n                //get the state from interactions\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    state[interaction.attr('responseIdentifier')] = interaction.getState();\n                });\n\n                //get the state from infoControls\n                _.forEach(this._item.getElements(), function (element) {\n                    if (Element.isA(element, 'infoControl') && element.attr('id')) {\n                        state.pic = state.pic || {};\n                        state.pic[element.attr('id')] = element.getState();\n                    }\n                });\n            }\n            return state;\n        },\n\n        /**\n         * Set state implementation.\n         * @param {Object} state - the state\n         */\n        setState: function setState(state) {\n            if (this._item && state) {\n                //set interaction state\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    var id = interaction.attr('responseIdentifier');\n                    if (id && state[id]) {\n                        interaction.setState(state[id]);\n                    }\n                });\n\n                //set info control state\n                if (state.pic) {\n                    _.forEach(this._item.getElements(), function (element) {\n                        if (Element.isA(element, 'infoControl') && state.pic[element.attr('id')]) {\n                            element.setState(state.pic[element.attr('id')]);\n                        }\n                    });\n                }\n            }\n        },\n\n        getResponses: function () {\n            var responses = {};\n            if (this._item) {\n                _.reduce(\n                    this._item.getInteractions(),\n                    function (res, interaction) {\n                        responses[interaction.attr('responseIdentifier')] = interaction.getResponse();\n                        return responses;\n                    },\n                    responses\n                );\n            }\n            return responses;\n        },\n\n        renderFeedbacks: function (feedbacks, itemSession, done) {\n            var self = this;\n\n            var _renderer = self._item.getRenderer();\n            var _loader = new QtiLoader(self._item);\n\n            // loading feedbacks from response into the current item\n            _loader.loadElements(feedbacks, function (item) {\n                _renderer.load(function () {\n                    var renderingQueue = modalFeedbackHelper.getFeedbacks(item, itemSession);\n\n                    done(renderingQueue);\n                }, this.getLoadedClasses());\n            });\n        }\n    };\n\n    return qtiItemRuntimeProvider;\n\n});\n\n","define('taoQtiItem/runner/qtiItemRunner',['taoItems/runner/api/itemRunner', 'taoQtiItem/runner/provider/qti'], function (itemRunner, qtiRuntimeProvider) { 'use strict';\n\n\titemRunner = itemRunner && Object.prototype.hasOwnProperty.call(itemRunner, 'default') ? itemRunner['default'] : itemRunner;\n\tqtiRuntimeProvider = qtiRuntimeProvider && Object.prototype.hasOwnProperty.call(qtiRuntimeProvider, 'default') ? qtiRuntimeProvider['default'] : qtiRuntimeProvider;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\t//register the QTI Provider\n\titemRunner.register('qti', qtiRuntimeProvider);\n\n\treturn itemRunner;\n\n});\n\n","\ndefine(\"taoQtiItem/loader/taoQtiItemRunner.es5.bundle\", function(){});\n","define(\"taoQtiItem/loader/taoQtiItemRunner.es5.min\", [\"taoItems/loader/taoItemsRunner.es5.min\"], function(){});\n"],"mappings":"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"}