{"version":3,"mappings":"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","names":["define","ckConfigurator$1","getConfig","options","ckConfigurator","_","buildSerial","id","chars","buildId","i","suffix","exists","usedIds","buildIdentifier","useSuffix","prefix","replace","findInCollection","collectionNames","collection","elt","found","addMarkupNamespace","ns","markup","$0","$1","$3","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","$","getOptionsFromArguments","data","placeholder","subclass","renderer","arg","console","loggerFactory","util","rendererConfig","_instances","logger","Element","qtiClass","serial","rootElement","init","attributes","is","getSerial","getUsedIdentifiers","elts","getUsedIds","attr","removeData","removeAttr","setAttributes","getAttributes","removeAttributes","attrNames","getComposingElements","append","getUsedClasses","composingElts","ret","find","object","body","parent","setRelatedItem","setRootElement","getRelatedItem","getRootElement","setRenderer","getRenderer","render","args","_renderer","tplData","defaultData","tag","rendering","postRender","postRenderers","getContainer","toArray","type","arr","isEmpty","addClass","_containClass","hasClass","removeClass","clazz","toggleClass","state","isset","unset","_containers","_$containerContext","_getSelector","selector","containerHelper","setContext","$scope","getContext","get","element","reset","clear","trigger","eventType","triggerResponseChangeEvent","interaction","extraData","response","targetBlank","$container","e","href","window","Math","raphael","scaleRaphael","basic","stroke","fill","cursor","hover","selectable","active","error","success","layer","opacity","creator","target","path","width","assoc","close","gstyle","shapeMap","default","poly","coordsValidator","rect","ellipse","circle","qti2raphCoordsMapper","size","a","coords","raph2qtiCoordsMapper","GraphicHelper","_style","setStyle","responsivePaper","diff","maxWidth","containerWidth","givenWidth","factor","containerHeight","paper","$editor","$body","resizer","imgWidth","imgHeight","image","on","createElement","self","shaper","shapeCoords","createTarget","point","baseSize","half","x","y","targetSize","transform","count","tBBox","click","p","raphaelCoords","qtiCoords","mapper","result","join","createTouchCircle","radius","tCircle","createText","top","left","content","style","title","disableEvents","fontSize","scaledFontSize","text","createShapeText","bbox","createBorderedImage","padding","halfPad","rx","ry","rw","rh","ix","iy","iw","ih","set","offsetx","offsety","animation","updateElementState","updateTitle","highlightError","evt","getPoint","position","pw","cw","ph","ch","clickPoint","offset","event","Handlebars","__","DOMPurify","hb","keyValueGlue","fragmentGlue","wrapper","value","fragment","fragments","startIndex","stopIndex","increment","var1","Helpers0","Template","buffer","escapeExpression","helpers","helper","stack1","_notificationLevels","Instruction","instructionTpl","message","timeout","start","stop","level","_this","$$1","_instructions","instructionManager","validateInstructions","instruction","appendInstruction","removeInstructions","empty","resetInstructions","minMaxChoiceInstructions","min","max","getResponse","onError","choiceCount","minInstructionSet","msg","appendNotification","notifTpl","$notif","_remove","setTimeout","removeNotifications","remove","informLoaded","attach","$head","stylesheet","$link","detach","itemStylesheetHandler","regexChar","regexWords","patternMaskHelper","parsePattern","createMaxWordPattern","createMaxCharPattern","base","withType","print","list","_formatters","boolean","integer","float","string","pair","directedPair","duration","file","uri","intOrIdentifier","identifier","PciPrettyPrint","printBase","printList","printRecord","pciPrettyPrint","_qtiModelPciResponseCardinalities","single","multiple","ordered","record","PciResponse","unserialize","responseDeclaration","baseType","cardinality","mappedCardinality","serialize","responseValues","prettyPrint","html","imgSrcPattern","PortableElement","fixMarkupMediaSources","adaptSize","itemSelector","sizeAdapter","$elements","document","resetSize","mimeTypes","delimetr","uploadMime","getMimeTypes","setExpectedTypes","classes","types","trim","getExpectedTypes","equivalents","mimes","mimeData","Gap","template","GapImg","GapText","Hottext","InlineChoice","getData","SimpleAssociableChoice_AssociateInteraction","SimpleAssociableChoice_MatchInteraction","features","SimpleChoice_ChoiceInteraction","SimpleChoice_OrderInteraction","_requirejs","_defaultLoadingOptions","reload","loadModuleConfig","requireConfigAliases","reqConfigs","modules","baseUrl","manifest","pciConfig","require","paths","runtimeModules","resolve","reject","isPortableElementProvider","_loaded","__providers","_registry","version","registerProvider","resetProviders","loadProviders","loadPromise","Promise","providerLoadingStack","getAllVersions","all","getRuntime","portableElement","label","model","typeIdentifier","getCreator","xmlns","getLatestCreators","lastVersion","getBaseUrl","runtime","loadRuntimes","provider","loadStack","configLoadingStack","then","catch","loadCreators","requiredCreatorHooks","portableElementModel","creators","enable","disable","isEnabled","itemBody","atomicBlock","parents","contains","abstract","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","col","colgroup","div","dl","dt","dd","hr","math","li","ol","ul","param","table","xhtml","tbody","tfoot","thead","td","th","tr","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","pre","img","br","infoControl","textRun","feedbackInline","feedbackBlock","rubricBlock","blockInteraction","inlineInteraction","gap","hottext","printedVariable","prompt","templateElement","templateBlock","qti","templateInline","choiceInteraction","associateInteraction","orderInteraction","matchInteraction","hottextInteraction","gapMatchInteraction","mediaInteraction","sliderInteraction","uploadInteraction","drawingInteraction","graphicInteraction","hotspotInteraction","graphicAssociateInteraction","graphicOrderInteraction","graphicGapMatchInteraction","selectPointInteraction","textEntryInteraction","extendedTextInteraction","inlineChoiceInteraction","endAttemptInteraction","customInteraction","_container","cache","getAllowedContainersElements","jqSelector","getAllowedContainers","intersect","QtiElements","getAllowedContents","recursive","checked","isAllowedClass","qtiContainerClass","qtiContentClass","getParentClasses","getChildClasses","cacheType","isBlock","isInline","topClass","isVisible","featuresService","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","getAuthoringData","pciModel","qtiElements","registry","providers","config","ciRegistry","icRegistry","name","handle","url","runtimeLocation","fullmatch","context","themes","assetManagerFactory","assetStrategies","module","portableAssetStrategy","itemThemes","moduleConfig","assetManager","locations","assessmentItem","_simpleFeedbackRule","_tooltip","outcomeDeclaration","responseProcessing","figure","figcaption","modalFeedback","gapText","inlineChoice","hotspotChoice","gapImg","associableHotspot","include","enableDragAndDrop","associate","gapMatch","graphicGapMatch","order","messages","Container","Figcaption","Figure","$figure","$img","Img","Include","hider","instructionMgr","pciResponse","interact","interactUtils","Template$1","setChoice","choiceSerial","usage","choice","$choice","$target","$pair","thisPairSerial","$otherRepeatedPair","$resultArea","children","not","each","_setChoice","choices","color","border","unsetChoice","$parent","$sibling","isNumberOfMaxAssociationsZero","$filledChoice","animate","getChoice","renderEmptyPairs","scrollObserverFactory","currentDraggable","beforeY","beforeX","afterY","afterX","$scrollContainer","$el","ovf","getScrollContainer","resetScrollObserver","$activeDrop","relatedTarget","$choiceArea","$activeChoice","scrollObserver","$bin","choiceSelector","resultSelector","binSelector","_getChoice","_resetSelection","_unsetChoice","_isInsertionMode","_isModeEditing","_handleChoiceActivate","_activateChoice","_handleResultActivate","targetSerial","_activateResult","filter","isDragAndDropEnabled","dragOptions","dropOptions","scaleX","scaleY","closest","_setInstructions","inertia","autoScroll","container","restrict","restriction","endOnly","elementRect","draggable","onstart","scale","_iFrameDragFix","onmove","onend","styleCursor","overlap","ondragenter","ondragleave","ondrop","_getRawResponse","resetResponse","_setPairs","addedPairs","$emptyPair","pairs","setResponse","destroy","setState","sort","aIndex","bIndex","appendTo","getState","AssociateInteraction","KEY_CODE_SPACE","KEY_CODE_ENTER","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","_triggerInput","$input","$choiceBoxes","_pseudoLabel","$qtiChoice","keyCode","prev","focus","next","$choiceBox","eliminator","input","values","highlightInvalidInput","$li","$icon","clearTimeout","isEliminable","getCustomData","listStyleVisible","listStyles","horizontal","listStyle","eliminable","allowEliminationVisible","ChoiceInteraction","_setVal","val","change","EndAttemptInteraction","limiter","placeholderText","getItemLanguage","itemLang","itemLocale","toolbarType","ckOptions","resize_enabled","secure","forceCustomDomain","language","expectedLength","minStrings","patternMask","placeholderType","editor","_styleUpdater","themeLoaded","_getNumStrings","$element","num","_setPattern","hideXhtmlConstraints","qtiItem","qtiItemStyle","$editorBody","_getCKEditor","_setMultipleVal","setText","numericBase","expectedLines","isCke","enabled","patternRegEx","$textarea","$charsCounter","$wordsCounter","maxWords","maxLength","$maxLengthCounter","$maxWordsCounter","listenTextInput","ignoreKeyCodes","spaceKeyCodes","isComposing","hasCompositionJustEnded","acceptKeyCode","emptyOrSpace","hasSpace","getCharBefore","getCharAfter","noSpaceNode","cancelEvent","invalidToolip","patternHandler","newValue","keyLimitHandler","wordsCount","charsCount","sel","range","right","middle","textarea","nonKeyLimitHandler","elements","el","selectionStart","end","selectionEnd","handleCompositionStart","handleCompositionEnd","handleBeforeInput","editable","previousSnapshot","getWordsCount","getCharsCount","updateCounter","_ckEditorData","patt","raw","tempNode","format","_destroyCkEditor","pattern","parseInt","countChars","countWords","countExpectedLength","countMaxLength","countMaxWords","constraintHints","strLimiter","ckEditor","tooltip","hideXhtmlRecommendations","ExtendedTextInteraction","clearText","inputLimiter","_choiceUsages","getGap","$flowContainer","gapSelector","filledGapSelector","_handleChoiceSelect","_handleFilledGapSelect","$dragged","_handleGapSelect","GapMatchInteraction","graphic","background","height","imgId","_paperUnSelect","_renderChoice","shape","maxAssociations","rElement","assocs","_shapesUnSelectable","_createPath","_isMatchable","_shapesSelectable","_getActiveElement","closerBg","toFront","removeSet","closer","unclick","onRemove","vset","src","sx","sy","dest","dx","dy","srcBullet","destBullet","midPath","toBack","srcElement","destElement","showCloser","hideCloser","activeChoice","assocsElement","matchable","matching","matchMax","responses","map","res","el1","el2","toRemove","GraphicAssociateInteraction","activeDrop","isDirectedPairFlipped","gapFiller","$gapImages","bgImage","usages","_selectShape","$gapList","$active","$imageBox","boxOffset","$clone","shapeOffset","activeOffset","currentCount","display","shadow","gapFillerImage","handleShapeSelect","_renderGapList","_setInactiveGapState","_setActiveGapState","gapFillersSelector","toggleActiveGapState","resize","responseChoice","responseGap","GraphicGapMatchInteraction","$orderList","_renderOrderList","_unselectShape","$orderers","$orderer","_createTexts","_showText","siblings","first","number","unsetNumbers","_hideText","hide","texts","transf","show","index","sortBy","where","GraphicOrderInteraction","HotspotInteraction","pseudoLabel","$inupt","maxChoices","currentChoices","HottextInteraction","_emptyValue","_defaultOptions","allowEmpty","opts","required","choiceTooltip","getItemDir","itemDir","dirClass","minimumResultsForSearch","containerCssClass","dropdownCssClass","eq","$selectedIndex","choiceIdentifier","select2","InlineChoiceInteraction","inWarning","_onCheckboxSelected","prop","_filterResponse","_inferValue","firstId","secondId","currentResponse","minAssociations","_maxMatchReached","association","overflow","matchMin","_countAssociations","rawResponse","_countChoices","_getChoiceDefinitionByIdentifier","_getRawChoices","rawChoices","superClosure","onMaxChoicesReached","report","onMatchMaxReached","originalBackgroundColor","originalColor","backgroundColor","responseCount","MatchInteraction","inferValue","firefox","webm","media","$item","maxPlays","canBePlayed","initMediaPlayer","mediaUrl","preview","canPause","canSeek","volume","autoStart","loop","renderTo","off","timesPlayed","playerState","restorePlayerState","muted","mediaplayer","defaults","reWebM","reFirefoxVersion","MediaInteraction","orientationSelectionEnabled","_freezeSize","$orderArea","instructionMax","initialOrder","$choices","_isDropzoneVisible","draggedMiddle","previousMiddle","insertPosition","$dropzoneElement","$prevResult","$nextResult","prevMiddle","nextMiddle","$iconAdd","$iconRemove","$iconBefore","$iconAfter","$dragContainer","orientation","_activeControls","_resetControls","_setSelection","_addChoiceToSelection","$results","_toggleResultSelection","_removeChoice","_moveResultBefore","$prev","_moveResultAfter","$next","_adjustDropzonePosition","hasBeenDroppedInResultArea","_insertDropzone","dropzoneIndex","selectors","OrderInteraction","register","pciHook","notifyReady","pciInstance","notifyDone","onready","ondone","status","createPciInstance","pciTypeIdentifier","qtiCustomInteractionContext","getPci","pci","setPci","instance","getRequiredModules","requireEntries","createInstance","properties","pciAssetManager","resolved","instanciator","setPCIConstructor","pciConstructor","getPCIConstructor","contentLanguage","itemLanguage","userLanguage","readyPromise","pciReadyCallback","templateVariables","boundTo","setReviewState","sharedContext","pciDoneCallback","pciConstructorDataKey","commonPciRenderer","imsPciRenderer","_setPciModel","pciRenderer","_getPciRenderer","PortableCustomInteraction","Prompt","getRawResponse","addPoint","pointChange","create","enableSelection","isResponsive","forEach","SelectPointInteraction","_slideTo","direction","$sliderLabels","$sliderCurrentValue","class","$sliderValue","reverse","step","steps","reversedLabels","sliderSize","leftOffset","middleValue","after","sliderValue","sliderCurrentValue","startValue","SliderInteraction","locale","hideTooltip","DELIMETER_SYMBOL","MINUS_SYMBOL","cleanupIntegerRegExp","cleanupFloatRegExp","formatInteger","inputValue","formatFloat","firstDelimeterPosition","lastDelimeterPosition","delimeter","char","showTooltip","theme","maxChars","updateMaxCharsTooltip","updatePatternMaskTooltip","messageType","regex","responseValue","TextEntryInteraction","changeListener","callResetGui","_handleSelectedFiles","mimetype","uploadHelper","_initialInstructions","_readyInstructions","validateFileType","expectedTypes","filetype","getMessageWrongType","expectedTypeLabels","mime","messageWrongType","userSelectedType","filename","reader","base64Data","commaPosition","base64Raw","$previewArea","$largeDisplay","itemWidth","winWidth","fullHeight","imgNaturalWidth","isOversized","modalWidth","$originalImg","$modalBody","modal","percentProgress","accept","UploadInteraction","resetGui","Item","item","MathJax","$self","_setDomClass","$bodyDom","$wrapper","oldClass","newClass","dataName","_getEncodedDataString","_setBodyDomClass","matches","_prefix","setEncodedData","hasEncodedData","getEncodedData","removeEncodedData","setEncodedDataToDom","coreContainerHelper","modalFeedbackRenderer","$modal","$itemBody","requiredHeight","startClosed","minHeight","_Object","previewOptions","obj","proto","qtiInfoControlContext","_getPic","pic","$dom","picAssetManager","PortableInfoControl","PrintedVariable","convertChoices","outputType","findChoices","shuffleChoices","f","j","r","k","serialToIdentifier","interactionHelper","themeLoader","themesHelper","moduleLoader","_renderableClasses","_dependencies","_renderableSubclasses","simpleAssociableChoice","simpleChoice","_defaults","_isValidRenderer","classCorrect","subClass","valid","Renderer","_renderers","_locations","decorators","themeData","requiredClasses","deps","requiredSubClasses","addList","load","loaded","callback","absUrl","runtimeLocations","Renderer$1","build","NewRenderer","QtiRenderer","RubricBlock","rubric","Stylesheet","Table","Tooltip","renderedTooltip","placement","IdentifiedElement","getInteraction","QtiChoice","QtiHotspot","augment","targetClass","methods","setElements","returnValue","setElement","removeElement","getElements","getElement","elementsData","tpl","contentModel","flatten","concat","Mixin","Container$1","initContainer","getBody","Choice","getMediaType","QtiObject","initObject","getObject","QtiContainerChoice","QtiTextVariableChoice","Feedback","getNamespace","relatedItem","setNamespace","NamespacedElement","defaultNsName","defaultNsUri","nsUriFragment","imgElements","Object","addChoice","getChoices","getChoiceByIdentifier","getResponseDeclaration","responseId","_type","choiceShuffle","interactionData","getNormalMaximum","Interaction","promptId","MATCH_CORRECT","responseIf","expression","expressions","responseRules","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","isUsingTemplate","isValidTemplateName","tplName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","getTemplateNameFromResponseRules","responseIdentifier","outcomeRules","outcomeIdentifier","setDefaultValue","getDefaultValue","VariableDeclaration","gamp","responseHelper","OutcomeDeclaration","pairExists","maxScore","setNormalMaximum","scoreOutcome","normalMaximum","setMaxScore","customOutcomes","maxScoreOutcome","hasInvalidInteraction","acc","getMatchMaxOrderedChoices","valueOf","choiceInteractionBased","mapDefault","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","score","orderInteractionBased","associateInteractionBased","maxAssoc","minAssoc","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","choiceId","_usedChoices","used","gapMatchInteractionBased","calculatePossiblePairs","matchSet1","matchSet2","skippableWrongResponse","usedGaps","group1","group2","gapId","reduce","selectPointInteractionBased","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","customInteractionBased","Array","BlockInteraction","removeProp","propNames","getProperties","getMarkupNamespace","setMarkupNamespace","CustomElement","defaultMarkupNsName","defaultMarkupNsUri","libraries","entryPoint","onPciReady","triggerPciReady","fn","onPci","offPci","triggerPci","InlineInteraction","maxStringLoop","ContainerInteraction","getGaps","QtiBlockInteraction","QtiObjectInteraction","backgroundImage","GraphicInteraction","addGapImg","removeGapImg","getGapImgs","getGapImg","gapImgs","possiblePairs","checkInfinitePair","SimpleAssociableChoice","matchSet","ObjectInteraction","getInteractions","interactions","addResponseDeclaration","addOutcomeDeclaration","outcome","getOutcomeDeclaration","getOutcomes","removeOutcome","addModalFeedback","feedback","getResponses","addNamespace","setNamespaces","getNamespaces","setSchemaLocations","getSchemaLocations","setApipAccessibility","getApipAccessibility","addStylesheet","removeStyleSheet","stylesheetExists","setResponseProcessing","rp","$children","prefixed","xmlNsHandler","stripNs","openRegEx","closeRegEx","restoreNs","xmlRe","tagRe","xmlMatch","imsXsd","html5Ns","prefixAtt","tagMatch","xml","qtiClasses","itemScoreHelper","loadPortableCustomElementProperties","loadPortableCustomElementData","Loader","classesLocation","setClassesLocation","qtiClassesList","getRequiredClasses","loadRequiredClasses","requiredClass","category","loadeded","getLoadedClasses","loadItemData","responseRuleItemIndex","responseRule","feedbackRules","feedbackOutcomeIdentifier","setOutcomeResponseRule","responseIdentifiers","some","loadAndBuildElement","loadElement","loadElements","elementData","allElements","buildResponse","buildSimpleFeedbackRule","feedbackRule","buildOutcome","buildResponseProcessing","customResponseProcessing","loadContainer","bodyObject","bodyData","eltData","buildElement","loadElementData","loadInteractionData","buildInteractionChoices","loadChoiceData","loadObjectData","loadMathData","loadTooltipData","loadPciData","loadPicData","hasContent","mathText","mathStr","$math","setAnnotation","getAnnotation","removeAnnotation","setMathML","nsName","mathML","getMathML","annotations","encoding","block","onReady","triggerReady","cb","feedbackThen","setCondition","v","_comparedValues","setFeedbackElse","_toString","condition","comparedOutcome","comparedValue","processingType","newBody","ContainerInline","getFeedbackRules","isCardinality","comparison","cardinalities","events","getRawValues","getFeedbackMessageSignature","toLowerCase","extractDisplayInfo","$interactionContainer","messageGroupId","$displayContainer","interactionContainer","displayContainer","getInteractionsDisplayInfo","interactionsDisplayInfo","$itemContainer","interactionOrder","_interactionInfo","getFeedbacks","renderingQueue","feedbackIds","_currentMessageGroupId","interactionInfo","_$xml","attrName","$elt","$annotation","$figcaption","$qtiElement","contentId","$content","contentHtml","_parsableElements","_qtiClassNames","rubricblock","printedvariable","_qtiAttributesNames","powerform","mappingindicator","parser","parse","loader","$sampleXMLrootNode","$stimulus","mathNs","loadedClasses","simpleParser","picManager","getPic","getItem","getTypeIdentifier","getDom","tool","button","broken","dom","picManagerCollection","getList","force","manager","execute","executeAll","enablePic","disablePic","showPic","hidePic","enableAll","disableAll","showAll","hideAll","managerFactory","collectionFactory","picManager$1","userModules","dependency","add","ReviewRenderer","alias","defaultRenderer","providerName","getName","providerRegistry","qtiRenderer","reviewRenderer","author","candidate","proctor","scorer","testConstructor","tutor","rendererStrategies","QtiLoader","sideLoadingProviderFactory","modalFeedbackHelper","qtiItemRuntimeProvider","rendererOptions","done","themeName","errorMsg","renderingError","renderFeedbacks","_loader","itemRunner","qtiRuntimeProvider"],"sources":["/Users/yuriy/Projects/test/kitchen-playground/files/delivery/tao/views/build/config-wrap-start-default.js","../qtiCommonRenderer/helpers/ckConfigurator.js","../qtiItem/helper/util.js","../qtiItem/helper/rendererConfig.js","../qtiItem/core/Element.js","../qtiCommonRenderer/helpers/container.js","../qtiCommonRenderer/helpers/Graphic.js","../qtiCommonRenderer/helpers/instructions/Instruction.js","../qtiCommonRenderer/helpers/instructions/instructionManager.js","../qtiCommonRenderer/helpers/itemStylesheetHandler.js","../qtiCommonRenderer/helpers/patternMask.js","../qtiCommonRenderer/helpers/PciPrettyPrint.js","../qtiCommonRenderer/helpers/PciResponse.js","../qtiCommonRenderer/helpers/PortableElement.js","../qtiCommonRenderer/helpers/sizeAdapter.js","../qtiCommonRenderer/helpers/uploadMime.js","../qtiCommonRenderer/renderers/choices/Gap.js","../qtiCommonRenderer/renderers/choices/GapImg.js","../qtiCommonRenderer/renderers/choices/GapText.js","../qtiCommonRenderer/renderers/choices/Hottext.js","../qtiCommonRenderer/renderers/choices/InlineChoice.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction.js","../portableElementRegistry/factory/factory.js","../qtiCreator/helper/qtiElements.js","../portableElementRegistry/factory/ciRegistry.js","../portableElementRegistry/ciRegistry.js","../portableElementRegistry/factory/icRegistry.js","../portableElementRegistry/icRegistry.js","../portableElementRegistry/assetManager/portableAssetStrategy.js","../qtiCommonRenderer/renderers/config.js","../qtiCommonRenderer/renderers/Container.js","../qtiCommonRenderer/renderers/Figcaption.js","../qtiCommonRenderer/renderers/Figure.js","../qtiCommonRenderer/renderers/Img.js","../qtiCommonRenderer/renderers/Include.js","../qtiCommonRenderer/renderers/interactions/AssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/ChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/EndAttemptInteraction.js","../qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js","../qtiCommonRenderer/renderers/interactions/GapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction.js","../qtiCommonRenderer/renderers/interactions/HotspotInteraction.js","../qtiCommonRenderer/renderers/interactions/HottextInteraction.js","../qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/MatchInteraction.js","../qtiCommonRenderer/renderers/interactions/MediaInteraction.js","../qtiCommonRenderer/renderers/interactions/OrderInteraction.js","../../qtiCustomInteractionContext.js","../qtiCommonRenderer/renderers/interactions/pci/instanciator.js","../qtiCommonRenderer/renderers/interactions/pci/common.js","../qtiCommonRenderer/renderers/interactions/pci/ims.js","../qtiCommonRenderer/renderers/interactions/PortableCustomInteraction.js","../qtiCommonRenderer/renderers/interactions/Prompt.js","../qtiCommonRenderer/renderers/interactions/SelectPointInteraction.js","../qtiCommonRenderer/renderers/interactions/SliderInteraction.js","../qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js","../qtiCommonRenderer/renderers/interactions/UploadInteraction.js","../qtiCommonRenderer/renderers/Item.js","../qtiCommonRenderer/renderers/Math.js","../qtiItem/helper/container.js","../qtiCommonRenderer/renderers/ModalFeedback.js","../qtiCommonRenderer/renderers/Object.js","../../qtiInfoControlContext.js","../qtiCommonRenderer/renderers/PortableInfoControl.js","../qtiCommonRenderer/renderers/PrintedVariable.js","../qtiItem/helper/interactionHelper.js","../qtiRunner/core/Renderer.js","../qtiCommonRenderer/renderers/Renderer.js","../qtiCommonRenderer/renderers/rendererProvider.js","../qtiCommonRenderer/renderers/RubricBlock.js","../qtiCommonRenderer/renderers/Stylesheet.js","../qtiCommonRenderer/renderers/Table.js","../qtiCommonRenderer/renderers/Tooltip.js","../qtiItem/core/IdentifiedElement.js","../qtiItem/core/choices/Choice.js","../qtiItem/core/choices/Hotspot.js","../qtiItem/core/choices/AssociableHotspot.js","../qtiItem/mixin/Mixin.js","../qtiItem/core/Container.js","../qtiItem/mixin/Container.js","../qtiItem/core/choices/ContainerChoice.js","../qtiItem/core/choices/Gap.js","../qtiItem/core/Object.js","../qtiItem/core/choices/GapImg.js","../qtiItem/core/choices/GapText.js","../qtiItem/core/choices/HotspotChoice.js","../qtiItem/mixin/ContainerInline.js","../qtiItem/core/choices/Hottext.js","../qtiItem/core/choices/TextVariableChoice.js","../qtiItem/core/choices/InlineChoice.js","../qtiItem/core/choices/SimpleAssociableChoice.js","../qtiItem/core/choices/SimpleChoice.js","../qtiItem/core/choices/TextEntry.js","../qtiItem/core/feedbacks/Feedback.js","../qtiItem/core/feedbacks/FeedbackBlock.js","../qtiItem/core/feedbacks/FeedbackInline.js","../qtiItem/core/feedbacks/ModalFeedback.js","../qtiItem/mixin/ContainerFigcaption.js","../qtiItem/mixin/NamespacedElement.js","../qtiItem/core/Figcaption.js","../qtiItem/mixin/ContainerFigure.js","../qtiItem/core/Figure.js","../qtiItem/core/Img.js","../qtiItem/core/Include.js","../qtiItem/core/interactions/Interaction.js","../qtiItem/core/interactions/Prompt.js","../qtiItem/core/interactions/BlockInteraction.js","../qtiItem/helper/responseRules.js","../qtiItem/helper/response.js","../qtiItem/core/variables/VariableDeclaration.js","../qtiItem/core/variables/OutcomeDeclaration.js","../qtiItem/helper/maxScore.js","../qtiItem/core/interactions/AssociateInteraction.js","../qtiItem/core/interactions/ChoiceInteraction.js","../qtiItem/core/interactions/ContainerInteraction.js","../qtiItem/mixin/CustomElement.js","../qtiItem/core/interactions/CustomInteraction.js","../qtiItem/core/interactions/InlineInteraction.js","../qtiItem/core/interactions/EndAttemptInteraction.js","../qtiItem/core/interactions/ExtendedTextInteraction.js","../qtiItem/core/interactions/GapMatchInteraction.js","../qtiItem/core/interactions/ObjectInteraction.js","../qtiItem/core/interactions/GraphicInteraction.js","../qtiItem/core/interactions/GraphicAssociateInteraction.js","../qtiItem/core/interactions/GraphicGapMatchInteraction.js","../qtiItem/core/interactions/GraphicOrderInteraction.js","../qtiItem/core/interactions/HotspotInteraction.js","../qtiItem/core/interactions/HottextInteraction.js","../qtiItem/core/interactions/InlineChoiceInteraction.js","../qtiItem/core/interactions/MatchInteraction.js","../qtiItem/core/interactions/MediaInteraction.js","../qtiItem/core/interactions/OrderInteraction.js","../qtiItem/core/interactions/SelectPointInteraction.js","../qtiItem/core/interactions/SliderInteraction.js","../qtiItem/core/interactions/TextEntryInteraction.js","../qtiItem/core/interactions/UploadInteraction.js","../qtiItem/mixin/ContainerItemBody.js","../qtiItem/core/Item.js","../qtiItem/core/qtiClasses.js","../qtiItem/helper/xmlNsHandler.js","../qtiItem/helper/itemScore.js","../qtiItem/core/Loader.js","../qtiItem/core/Math.js","../qtiItem/core/PortableInfoControl.js","../qtiItem/core/PrintedVariable.js","../qtiItem/core/response/SimpleFeedbackRule.js","../qtiItem/core/ResponseProcessing.js","../qtiItem/core/RubricBlock.js","../qtiItem/core/Stylesheet.js","../qtiItem/mixin/ContainerTable.js","../qtiItem/core/Table.js","../qtiItem/core/Tooltip.js","../qtiItem/core/variables/ResponseDeclaration.js","../qtiItem/helper/EventMgr.js","../qtiItem/helper/pci.js","../qtiItem/helper/modalFeedback.js","../qtiItem/helper/Parser.js","../qtiItem/helper/simpleParser.js","../qtiItem/helper/xincludeLoader.js","../runner/provider/manager/picManager.js","../runner/provider/manager/userModules.js","../portableElementRegistry/provider/sideLoadingProviderFactory.js","../reviewRenderer/renderers/config.js","../reviewRenderer/renderers/Renderer.js","../reviewRenderer/renderers/rendererProvider.js","../runner/rendererStrategies.js","../runner/provider/qti.js","../runner/qtiItemRunner.js","module-create.js","/Users/yuriy/Projects/test/kitchen-playground/files/delivery/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","define('taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator'], function (ckConfigurator$1) { 'use strict';\n\n    ckConfigurator$1 = ckConfigurator$1 && Object.prototype.hasOwnProperty.call(ckConfigurator$1, 'default') ? ckConfigurator$1['default'] : ckConfigurator$1;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options) {\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator$1.getConfig(editor, toolbarType, options);\n    };\n\n    var ckConfigurator = {\n        getConfig: getConfig\n    };\n\n    return ckConfigurator;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var util = {\n        buildSerial: function buildSerial(prefix) {\n            var id = prefix || '';\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < 22; i++) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId: function buildId(item, prefix) {\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds = item.getUsedIds();\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (_.contains(usedIds, id)) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if (!prefix) {\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if (prefix) {\n                prefix = prefix\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\n                    .replace(/(_)+/gi, '_');\n                if (useSuffix) {\n                    suffix = '_' + i;\n                }\n            }\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds[id]) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\n            var found = null;\n\n            if (_.isString(collectionNames)) {\n                collectionNames = [collectionNames];\n            }\n\n            if (_.isArray(collectionNames)) {\n                _.each(collectionNames, function(collectionName) {\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken) {\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if (elt) {\n                        found = { parent: element, element: elt };\n                        return false; //break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt) {\n                        if (_.isFunction(elt.find)) {\n                            found = elt.find(searchedSerial);\n                            if (found) {\n                                return false; //break the each loop\n                            }\n                        }\n                    });\n\n                    if (found) {\n                        return false; //break the each loop\n                    }\n                });\n            } else {\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\n            if (ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4) {\n                    if ($2.indexOf(':') > 0) {\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\n                });\n                return markup;\n            }\n            return markup;\n        },\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node) {\n                namespaces.push(ns);\n                return '<' + slash + node + '>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args) {\n        var options = {\n            data: {},\n            placeholder: null,\n            subclass: '',\n            renderer: null\n        };\n\n        _.each(args, function(arg) {\n            if (arg) {\n                if (arg.isRenderer) {\n                    options.renderer = arg;\n                } else if (arg instanceof $ && arg.length) {\n                    options.placeholder = arg;\n                } else if (_.isString(arg)) {\n                    options.subclass = arg;\n                } else if (_.isPlainObject(arg)) {\n                    options.data = arg;\n                } else {\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n\n        return options;\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass: '',\n        serial: '',\n        rootElement: null,\n        init: function(serial, attributes) {\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if (typeof serial === 'object') {\n                attributes = serial;\n                serial = '';\n            }\n\n            if (!serial) {\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\n            }\n\n            if (!_instances[serial]) {\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            } else {\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if (typeof this.initContainer === 'function') {\n                this.initContainer(arguments[2] || '');\n            }\n            if (typeof this.initObject === 'function') {\n                this.initObject();\n            }\n        },\n        is: function(qtiClass) {\n            return qtiClass === this.qtiClass;\n        },\n        placeholder: function() {\n            return '{{' + this.serial + '}}';\n        },\n        getSerial: function() {\n            return this.serial;\n        },\n        getUsedIdentifiers: function() {\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for (var i in elts) {\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if (id) {\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds: function getUsedIds() {\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt) {\n                var id = elt.attr('id');\n                if (id && !_.contains(usedIds, id)) {\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.attributes[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.attr(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.attributes[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.data(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.metaData[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData: function(name) {\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr: function(name) {\n            return this.removeAttributes(name);\n        },\n        setAttributes: function(attributes) {\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes: function() {\n            return _.clone(this.attributes);\n        },\n        removeAttributes: function(attrNames) {\n            if (typeof attrNames === 'string') {\n                attrNames = [attrNames];\n            }\n            for (var i in attrNames) {\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements: function() {\n            var elts = {};\n            function append(element) {\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if (typeof this.initContainer === 'function') {\n                append(this.getBody());\n            }\n            if (typeof this.initObject === 'function') {\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v) {\n                if (Element.isA(v, '_container')) {\n                    append(v);\n                } else if (_.isArray(v)) {\n                    _.each(v, function(v) {\n                        if (Element.isA(v, '_container')) {\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses: function() {\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt) {\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find: function(serial) {\n            var found = null;\n            var object, body;\n\n            if (typeof this.initObject === 'function') {\n                object = this.getObject();\n                if (object.serial === serial) {\n                    found = { parent: this, element: object, location: 'object' };\n                }\n            }\n\n            if (!found && typeof this.initContainer === 'function') {\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = { parent: this, element: body, location: 'body' };\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent: function() {\n            var item = this.getRootElement();\n            if (item) {\n                var found = item.find(this.getSerial());\n                if (found) {\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem: function(item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement: function(item) {\n            var composingElts, i;\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for (i in composingElts) {\n                    composingElts[i].setRootElement(item);\n                }\n            }\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem: function() {\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement: function() {\n            var ret = null;\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer: function(renderer) {\n            if (renderer && renderer.isRenderer) {\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for (var serial in elts) {\n                    elts[serial].setRenderer(renderer);\n                }\n            } else {\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer: function() {\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    tag: this.qtiClass,\n                    serial: this.serial,\n                    attributes: this.getAttributes()\n                };\n\n            if (!_renderer) {\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if (typeof this.initObject === 'function') {\n                defaultData.object = {\n                    attributes: this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if (args.placeholder) {\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender: function(data, altClassName, renderer) {\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if (_renderer) {\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            } else {\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer: function($scope, subclass) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                return renderer.getContainer(this, $scope, subclass);\n            } else {\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray: function() {\n            var arr = {\n                serial: this.serial,\n                type: this.qtiClass,\n                attributes: this.getAttributes()\n            };\n\n            if (typeof this.initContainer === 'function') {\n                arr.body = this.getBody().toArray();\n            }\n            if (typeof this.initObject === 'function') {\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty: function() {\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (!_containClass(clazz, className)) {\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass: function(className) {\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (clazz) {\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if (clazz) {\n                    this.attr('class', clazz);\n                } else {\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass: function(className, state) {\n            if (typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if (this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset: function() {\n            return Element.issetElement(this.serial);\n        },\n        unset: function() {\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass) {\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\n    };\n\n    Element.getElementBySerial = function(serial) {\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial) {\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial) {\n        var element = Element.getElementBySerial(serial);\n\n        if (element) {\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt) {\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/container',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element'], function (_, $, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    //containers are cached, so do not forget to remove them.\n    let _containers = {};\n    let _$containerContext = $();\n\n    /**\n     * Build the selector for your element (from the element serial)\n     * @private\n     * @param {QtiElement} element\n     * @returns {String} the selector\n     */\n    const _getSelector = function(element) {\n        const serial = element.getSerial();\n        let selector = `[data-serial=${  serial  }]`;\n\n        if (Element.isA(element, 'choice')) {\n            selector = `.qti-choice${  selector}`;\n        } else if (Element.isA(element, 'interaction')) {\n            selector = `.qti-interaction${  selector}`;\n        }\n\n        return selector;\n    };\n\n    /**\n     * Helps you to retrieve the DOM element (as a jquery element)\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\n     */\n    const containerHelper = {\n        /**\n         * Set a global scope to look for element container\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         */\n        setContext($scope) {\n            _$containerContext = $scope;\n        },\n\n        /**\n         * Returns current scope\n         * @returns {jQueryElement}\n         */\n        getContext() {\n            return  _$containerContext;\n        },\n\n        /**\n         * Get the container of the given element\n         * @param {QtiElement} element - the QTI Element to find the container for\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         * @returns {jQueryElement} the container\n         */\n        get(element, $scope) {\n            const serial = element.getSerial();\n\n            if ($scope instanceof $ && $scope.length) {\n                //find in the given context\n                return $scope.find(_getSelector(element));\n            } else if (_$containerContext instanceof $ && _$containerContext.length) {\n                //find in the globally set context\n                return _$containerContext.find(_getSelector(element));\n            } else if (!_containers[serial] || !_containers[serial].length) {\n                //find in the global context\n                _containers[serial] = $(_getSelector(element));\n            }\n\n            return _containers[serial];\n        },\n\n        /**\n         * getContainer use a cache to store elements. This methods helps you to purge it.\n         * @param {Element} element - find the container of this element\n         */\n        reset(element) {\n            if (element instanceof Element && _containers[element.getSerial()]) {\n                _containers = _.omit(_containers, element.getSerial());\n            }\n        },\n\n        /**\n         * Clear the containers cache\n         */\n        clear() {\n            _containers = {};\n            _$containerContext = $();\n        },\n\n        /**\n         * Trigger an event on the element's container\n         * @param {String} eventType - the name of the event\n         * @param {QtiElement} element - find the container of this element\n         * @param {Array} [data] - data to give to the event\n         */\n        trigger(eventType, element, data) {\n            if (eventType) {\n                if (data && !_.isArray(data)) {\n                    data = [data];\n                }\n                this.get(element).trigger(eventType, data);\n            }\n        },\n\n        /**\n         * Alias to trigger a responseChange Event from an interaction\n         * @param {QtiElement} interaction - the interaction that had a response changed\n         * @param {Object} [extraData] - additionnal data to give to the event\n         */\n        triggerResponseChangeEvent(interaction, extraData) {\n            this.trigger('responseChange', interaction, [\n                {\n                    interaction: interaction,\n                    response: interaction.getResponse()\n                },\n                extraData\n            ]);\n        },\n\n        /**\n         * Make all links to opens in another tab/window\n         * @param {jQueryElement} $container\n         */\n        targetBlank($container) {\n            $container.on('click', 'a', function(e) {\n                e.preventDefault();\n                const href = $(this).attr('href');\n                if (href && href.match(/^http/i)) {\n                    window.open(href, '_blank');\n                }\n            });\n        }\n    };\n\n    return containerHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/Graphic',['jquery', 'lodash', 'raphael', 'scale.raphael'], function ($, _, raphael, scaleRaphael) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    raphael = raphael && Object.prototype.hasOwnProperty.call(raphael, 'default') ? raphael['default'] : raphael;\n    scaleRaphael = scaleRaphael && Object.prototype.hasOwnProperty.call(scaleRaphael, 'default') ? scaleRaphael['default'] : scaleRaphael;\n\n    var basic = {\n    \tstroke: \"#8D949E\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-dasharray\": \"\",\n    \t\"stroke-linejoin\": \"round\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5,\n    \tcursor: \"pointer\"\n    };\n    var hover = {\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.3\n    };\n    var selectable = {\n    \t\"stroke-dasharray\": \"-\",\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5\n    };\n    var active = {\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.5\n    };\n    var error = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \t\"fill-opacity\": 0.5,\n    \tfill: \"#661728\"\n    };\n    var success = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 0.5\n    };\n    var layer = {\n    \tfill: \"#ffffff\",\n    \topacity: 0,\n    \tcursor: \"pointer\"\n    };\n    var creator = {\n    \t\"fill-opacity\": 0.5,\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \tcursor: \"pointer\"\n    };\n    var target = {\n    \tpath: \"m 18,8.4143672 -1.882582,0 C 15.801891,4.9747852 13.071059,2.2344961 9.63508,1.9026738 L 9.63508,0 8.2305176,0 l 0,1.9026387 C 4.7947148,2.2343027 2.0637246,4.9746621 1.7481973,8.4143672 l -1.7481973,0 0,1.4045625 1.754877,0 c 0.3460429,3.4066753 3.0632871,6.1119843 6.4756406,6.4413813 l 0,1.739689 1.4045624,0 0,-1.739725 c 3.412547,-0.329537 6.129633,-3.034793 6.475641,-6.4413453 l 1.889279,0 z m -8.36492,6.5188648 0,-4.064673 -1.4045624,0 0,4.063882 C 5.5511016,14.612555 3.4232695,12.494619 3.0864551,9.8189297 l 4.0449512,0 0,-1.4045625 -4.0546368,0 C 3.3788672,5.6984941 5.5228887,3.5393379 8.2305176,3.2161113 l 0,3.9153125 1.4045624,0 0,-3.9160859 c 2.711162,0.3203965 4.858576,2.4808887 5.160955,5.1990293 l -3.927441,0 0,1.4045625 3.917773,0 C 14.449289,12.496957 12.318363,14.616158 9.63508,14.933232 z\",\n    \tfill: \"#0E914B\",\n    \twidth: 1,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var assoc = {\n    \t\"stroke-width\": 2,\n    \t\"stroke-linecap\": \"round\",\n    \tcursor: \"pointer\"\n    };\n    var close = {\n    \tpath: \"m 8.9997236,18.000001 c -4.9703918,0 -8.99972284217367,-4.02901 -8.99972284217367,-9 C 7.5782633e-7,4.029011 4.0293108,9.8531742e-7 8.9997236,9.8531742e-7 13.970691,9.8531742e-7 18.000001,4.029011 18.000001,9.000001 c 0,4.97099 -4.02931,9 -9.0002774,9 z m 0.0045,-16.37151 c -4.06191,0 -7.35492,3.29635 -7.35492,7.36251 0,4.06562 3.292989,7.36255 7.35492,7.36255 4.0630384,0 7.3554334,-3.29693 7.3554334,-7.36255 0,-4.06614 -3.292969,-7.36251 -7.3554334,-7.36251 v 0 z m 3.1314894,9.31167 -1.953823,-1.94014 1.953843,-1.94018 c 0.08964,-0.089 0.134622,-0.19099 0.135073,-0.30584 4.31e-4,-0.11488 -0.04383,-0.21712 -0.132838,-0.30681 l -0.54267,-0.54685 c -0.08898,-0.0897 -0.190903,-0.13473 -0.305719,-0.13514 -0.114837,-4.4e-4 -0.217064,0.0439 -0.306703,0.1329 l -1.9623724,1.94865 -1.962395,-1.94865 c -0.08964,-0.089 -0.191845,-0.13336 -0.306702,-0.1329 -0.114837,4.3e-4 -0.216736,0.0455 -0.305719,0.13514 l -0.54265,0.54685 c -0.08902,0.0897 -0.133269,0.19193 -0.132838,0.30681 4.3e-4,0.11485 0.04543,0.21681 0.135073,0.30584 l 1.953823,1.94018 -1.953782,1.94014 c -0.0896,0.089 -0.134684,0.19094 -0.135114,0.3058 -4.31e-4,0.11486 0.04386,0.21716 0.132838,0.30681 l 0.542671,0.54687 c 0.08896,0.0897 0.190923,0.13467 0.305718,0.13516 0.114857,3.9e-4 0.217105,-0.0439 0.306724,-0.13288 l 1.962332,-1.94863 1.9623324,1.94863 c 0.08962,0.089 0.191886,0.13323 0.306744,0.13288 0.114836,-4.5e-4 0.216736,-0.0455 0.305698,-0.13516 l 0.542691,-0.54687 c 0.089,-0.0897 0.133227,-0.19193 0.132838,-0.30681 -3.9e-4,-0.1149 -0.0455,-0.21683 -0.135073,-0.3058 z\",\n    \tfill: \"#0E5D91\",\n    \twidth: 1,\n    \topacity: 0,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var gstyle = {\n    \tbasic: basic,\n    \thover: hover,\n    \tselectable: selectable,\n    \tactive: active,\n    \terror: error,\n    \tsuccess: success,\n    \tlayer: layer,\n    \tcreator: creator,\n    \t\"imageset-rect-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#666666\",\n    \t\"stroke-width\": 1,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-rect-no-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#ffffff\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-img\": {\n    \tcursor: \"pointer\"\n    },\n    \t\"order-text\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.7,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"bold\",\n    \t\"font-size\": 22,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text-default\": {\n    \tstroke: \"#444444\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"small-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 16,\n    \tcursor: \"pointer\"\n    },\n    \t\"layer-pos-text\": {\n    \tstroke: \"#333\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 14\n    },\n    \ttarget: target,\n    \t\"target-hover\": {\n    \tfill: \"#3E7DA7\",\n    \t\"fill-opacity\": 1\n    },\n    \t\"target-success\": {\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 1\n    },\n    \tassoc: assoc,\n    \t\"assoc-layer\": {\n    \t\"stroke-width\": 12,\n    \tcursor: \"pointer\",\n    \t\"stroke-opacity\": 0\n    },\n    \t\"assoc-bullet\": {\n    \tfill: \"#000000\"\n    },\n    \tclose: close,\n    \t\"close-bg\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"none\",\n    \tcursor: \"pointer\",\n    \topacity: 0\n    },\n    \t\"touch-circle\": {\n    \tfill: \"none\",\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-width\": 2\n    }\n    };\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    //maps the QTI shapes to Raphael shapes\n    var shapeMap = {\n        default: 'rect',\n        poly: 'path'\n    };\n\n    //length constraints to validate coords\n    var coordsValidator = {\n        rect: 4,\n        ellipse: 4,\n        circle: 3,\n        poly: 6,\n        default: 0\n    };\n\n    //transform the coords from the QTI system to Raphael system\n    var qti2raphCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper:  from left-x,top-y,right-x-bottom-y to x,y,w,h\n         * @param {Array} coords - QTI coords\n         * @returns {Array} raphael coords\n         */\n        rect: function(coords) {\n            return [coords[0], coords[1], coords[2] - coords[0], coords[3] - coords[1]];\n        },\n\n        /**\n         * Creates the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        default: function(paper) {\n            return [0, 0, paper.width, paper.height];\n        },\n\n        /**\n         * polygone coordinate mapper:  from x1,y1,...,xn,yn to SVG path format\n         * @param {Array} coords - QTI coords\n         * @returns {Array} path desc\n         */\n        poly: function(coords) {\n            var a;\n            var size = coords.length;\n\n            // autoClose if needed\n            if (coords[0] !== coords[size - 2] && coords[1] !== coords[size - 1]) {\n                coords.push(coords[0]);\n                coords.push(coords[1]);\n            }\n\n            // move to first point\n            coords[0] = 'M' + coords[0];\n\n            for (a = 1; a < size; a++) {\n                if (a % 2 === 0) {\n                    coords[a] = 'L' + coords[a];\n                }\n            }\n\n            return [coords.join(' ')];\n        }\n    };\n\n    //transform the coords from a raphael shape to the QTI system\n    var raph2qtiCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper: from x,y,w,h to left-x,top-y,right-x-bottom-y\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        rect: function(attr) {\n            return [attr.x, attr.y, attr.x + attr.width, attr.y + attr.height];\n        },\n\n        /**\n         * Circle coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        circle: function(attr) {\n            return [attr.cx, attr.cy, attr.r];\n        },\n\n        /**\n         * Ellispe coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        ellipse: function(attr) {\n            return [attr.cx, attr.cy, attr.rx, attr.ry];\n        },\n\n        /**\n         * Get the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        default: function(attr) {\n            return this.rect(attr);\n        },\n\n        /**\n         * polygone coordinate mapper:  from SVG path (available as segments) to x1,y1,...,xn,yn format\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        path: function(attr) {\n            var poly = [];\n            var i;\n\n            if (_.isArray(attr.path)) {\n                for (i = 1; i < attr.path.length; i++) {\n                    if (attr.path[i].length === 3) {\n                        poly.push(attr.path[i][1]);\n                        poly.push(attr.path[i][2]);\n                    }\n                }\n            }\n\n            return poly;\n        }\n    };\n\n    /**\n     * Graphic interaction helper\n     * @exports qtiCommonRenderer/helpers/Graphic\n     */\n    var GraphicHelper = {\n        /**\n         * Raw access to the styles\n         * @type {Object}\n         */\n        _style: gstyle,\n\n        /**\n         * Apply the style defined by name to the element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         */\n        setStyle: function(element, name) {\n            if (element && gstyle[name]) {\n                element.attr(gstyle[name]);\n            }\n        },\n\n        /**\n         * Create a Raphael paper with a bg image, that is width responsive\n         * @param {String} id - the id of the DOM element that will contain the paper\n         * @param {String} serial - the interaction unique indentifier\n         * @param {Object} options - the paper parameters\n         * @param {String} options.img - the url of the background image\n         * @param {jQueryElement} [options.container] - the parent of the paper element (got the closest parent by default)\n         * @param {Number} [options.width] - the paper width\n         * @param {Number} [options.height] - the paper height\n         * @param {String} [options.imgId] - an identifier for the image element\n         * @param {Function} [options.done] - executed once the image is loaded\n         * @returns {Raphael.Paper} the paper\n         */\n        responsivePaper: function(id, serial, options) {\n            var paper, image;\n\n            var $container = options.container || $('#' + id).parent();\n            var $editor = $('.image-editor', $container);\n            var $body = $container.closest('.qti-itemBody');\n            var resizer = _.throttle(resizePaper, 10);\n\n            var imgWidth = options.width || $container.innerWidth();\n            var imgHeight = options.height || $container.innerHeight();\n\n            paper = scaleRaphael(id, imgWidth, imgHeight);\n            image = paper.image(options.img, 0, 0, imgWidth, imgHeight);\n            image.id = options.imgId || image.id;\n            paper.setViewBox(0, 0, imgWidth, imgHeight);\n\n            resizer();\n\n            //retry to resize once the SVG is loaded\n            $(image.node)\n                .attr('externalResourcesRequired', 'true')\n                .on('load', resizer);\n\n            if (raphael.type === 'SVG') {\n                // TODO: move listeners somewhere they can be easily turned off\n                $(window).on('resize.qti-widget.' + serial, resizer);\n                // TODO: favor window resize event and deprecate $container resive event (or don't allow $container to be destroyed and rebuilt\n                $container.on('resize.qti-widget.' + serial, resizer);\n                $(document).on('customcssloaded.styleeditor', resizer);\n            } else {\n                $container.find('.main-image-box').width(imgWidth);\n                if (typeof options.resize === 'function') {\n                    options.resize(imgWidth, 1);\n                }\n            }\n\n            /**\n             * scale the raphael paper\n             * @private\n             */\n            function resizePaper(e, givenWidth) {\n                var diff, maxWidth, containerWidth, containerHeight, factor;\n\n                if (e) {\n                    e.stopPropagation();\n                }\n\n                diff = $editor.outerWidth() - $editor.width() + ($container.outerWidth() - $container.width()) + 1;\n                maxWidth = $body.width();\n                containerWidth = $container.innerWidth();\n\n                if (containerWidth > 0 || givenWidth > 0) {\n                    if (givenWidth < containerWidth && givenWidth < maxWidth) {\n                        containerWidth = givenWidth - diff;\n                    } else if (containerWidth > maxWidth) {\n                        containerWidth = maxWidth - diff;\n                    } else {\n                        containerWidth -= diff;\n                    }\n\n                    factor = containerWidth / imgWidth;\n                    containerHeight = imgHeight * factor;\n\n                    if (containerWidth > 0) {\n                        paper.changeSize(containerWidth, containerHeight, false, false);\n                    }\n\n                    if (typeof options.resize === 'function') {\n                        options.resize(containerWidth, factor);\n                    }\n\n                    $container.trigger('resized.qti-widget');\n                }\n            }\n\n            return paper;\n        },\n\n        /**\n         * Create a new Element into a raphael paper\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @param {Object} [options] - additional creation options\n         * @param {String} [options.id] - to set the new element id\n         * @param {String} [options.title] - to set the new element title\n         * @param {String} [options.style = basic] - to default style\n         * @param {Boolean} [options.hover = true] - to disable the default hover state\n         * @param {Boolean} [options.touchEffect = true] - a circle appears on touch\n         * @param {Boolean} [options.qtiCoords = true] - if the coords are in QTI format\n         * @returns {Raphael.Element} the created element\n         */\n        createElement: function(paper, type, coords, options) {\n            var self = this;\n            var element;\n            var shaper = shapeMap[type] ? paper[shapeMap[type]] : paper[type];\n            var shapeCoords = options.qtiCoords !== false ? self.raphaelCoords(paper, type, coords) : coords;\n\n            if (typeof shaper === 'function') {\n                element = shaper.apply(paper, shapeCoords);\n                if (element) {\n                    if (options.id) {\n                        element.id = options.id;\n                    }\n\n                    if (options.title) {\n                        element.attr('title', options.title);\n                    }\n\n                    element.attr(gstyle[options.style || 'basic']).toFront();\n\n                    //prevent issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n\n                    if (options.hover !== false) {\n                        element.hover(\n                            function() {\n                                if (!element.flashing) {\n                                    self.updateElementState(this, 'hover');\n                                }\n                            },\n                            function() {\n                                if (!element.flashing) {\n                                    self.updateElementState(\n                                        this,\n                                        this.active ? 'active' : this.selectable ? 'selectable' : 'basic'\n                                    );\n                                }\n                            }\n                        );\n                    }\n\n                    if (options.touchEffect !== false) {\n                        element.touchstart(function() {\n                            self.createTouchCircle(paper, element.getBBox());\n                        });\n                    }\n                }\n            } else {\n                throw new Error('Unable to find method ' + type + ' on paper');\n            }\n\n            return element;\n        },\n\n        /**\n         * Create target point\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} [options]\n         * @param {Object} [options.id] - and id to identify the target\n         * @param {Object} [options.point] - the point to add to the paper\n         * @param {Number} [options.point.x = 0] - point's x coord\n         * @param {Number} [options.point.y = 0] - point's y coord\n         * @param {Boolean} [options.hover] = true - the target has an hover effect\n         * @param {Function} [options.create] - call once created\n         * @param {Function} [options.remove] - call once removed\n         */\n        createTarget: function createTarget(paper, options) {\n            var baseSize, count, factor, half, hover, layer, point, self, tBBox, targetSize, x, y, target;\n\n            options = options || {};\n\n            self = this;\n            point = options.point || { x: 0, y: 0 };\n            factor = paper.w !== 0 ? paper.width / paper.w : 1;\n            hover = typeof options.hover === 'undefined' ? true : !!options.hover;\n\n            baseSize = 18; // this is the base size of the path element to be placed on svg (i.e. the path element crosshair is created to have a size of 18)\n            half = baseSize / 2;\n            x = point.x - half;\n            y = point.y - half;\n            targetSize = factor !== 0 ? 2 / factor : 2;\n\n            //create the target from a path\n            target = paper\n                .path(gstyle.target.path)\n                .transform('t' + x + ',' + y + 's' + targetSize)\n                .attr(gstyle.target)\n                .attr('title', _('Click again to remove'));\n\n            //generate an id if not set in options\n            if (options.id) {\n                target.id = options.id;\n            } else {\n                count = 0;\n                paper.forEach(function(element) {\n                    if (element.data('target')) {\n                        count++;\n                    }\n                });\n                target.id = 'target-' + count;\n            }\n\n            tBBox = target.getBBox();\n\n            //create an invisible rect over the target to ensure path selection\n            layer = paper\n                .rect(tBBox.x, tBBox.y, tBBox.width, tBBox.height)\n                .attr(gstyle.layer)\n                .click(function() {\n                    var id = target.id;\n                    var p = this.data('point');\n\n                    if (_.isFunction(options.select)) {\n                        options.select(target, p, this);\n                    }\n\n                    if (_.isFunction(options.remove)) {\n                        this.remove();\n                        target.remove();\n                        options.remove(id, p);\n                    }\n                });\n\n            if (hover) {\n                layer.hover(\n                    function() {\n                        if (!target.flashing) {\n                            self.setStyle(target, 'target-hover');\n                        }\n                    },\n                    function() {\n                        if (!target.flashing) {\n                            self.setStyle(target, 'target-success');\n                        }\n                    }\n                );\n            }\n\n            layer.id = 'layer-' + target.id;\n            layer.data('point', point);\n            target.data('target', point);\n\n            if (_.isFunction(options.create)) {\n                options.create(target);\n            }\n\n            return target;\n        },\n\n        /**\n         * Get the Raphael coordinate from QTI coordinate\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @returns {Array} the arguments array of coordinate to give to the approriate raphael shapre creator\n         */\n        raphaelCoords: function raphaelCoords(paper, type, coords) {\n            var shapeCoords;\n\n            if (_.isString(coords)) {\n                coords = _.map(coords.split(','), function(coord) {\n                    return parseInt(coord, 10);\n                });\n            }\n\n            if (!_.isArray(coords) || coords.length < coordsValidator[type]) {\n                throw new Error('Invalid coords ' + JSON.stringify(coords) + '  for type ' + type);\n            }\n\n            switch (type) {\n                case 'rect':\n                    shapeCoords = qti2raphCoordsMapper.rect(coords);\n                    break;\n                case 'default':\n                    shapeCoords = qti2raphCoordsMapper['default'].call(null, paper);\n                    break;\n                case 'poly':\n                    shapeCoords = qti2raphCoordsMapper.poly(coords);\n                    break;\n                default:\n                    shapeCoords = coords;\n                    break;\n            }\n\n            return shapeCoords;\n        },\n\n        /**\n         * Get the QTI coordinates from a Raphael Element\n         * @param {Raphael.Element} element - the shape to get the coords from\n         * @returns {String} the QTI coords\n         */\n        qtiCoords: function qtiCoords(element) {\n            var mapper = raph2qtiCoordsMapper[element.type];\n            var result = '';\n\n            if (_.isFunction(mapper)) {\n                result = _.map(mapper.call(raph2qtiCoordsMapper, element.attr()), function(coord) {\n                    return _.parseInt(coord);\n                }).join(',');\n            }\n\n            return result;\n        },\n\n        /**\n         * Create a circle that animate and disapear from a shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} element - used to get the bbox from\n         */\n        createTouchCircle: function(paper, bbox) {\n            var radius = bbox.width > bbox.height ? bbox.width : bbox.height;\n            var tCircle = paper.circle(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2, radius);\n\n            tCircle.attr(gstyle['touch-circle']);\n\n            _.defer(function() {\n                tCircle.animate({ r: radius + 5, opacity: 0.7 }, 300, function() {\n                    tCircle.remove();\n                });\n            });\n        },\n\n        /**\n         * Create a text, that scales.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - the text options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {String} [options.disableEvents] - ignore events for the node\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @returns {Raphael.Element} the created text\n         */\n        createText: function(paper, options) {\n            var fontSize, scaledFontSize, text;\n            var top = options.top || 0;\n            var left = options.left || 0;\n            var content = options.content || '';\n            var style = options.style || 'small-text';\n            var title = options.title || '';\n            var disableEvents = options.disableEvents || false;\n            var factor = 1;\n\n            if (paper.width && paper.w) {\n                factor = paper.width / paper.w;\n            }\n\n            text = paper.text(left, top, content).toFront();\n            if (options.id) {\n                text.id = options.id;\n            }\n\n            if (options.hide) {\n                text.hide();\n            }\n\n            text.attr(gstyle[style]);\n\n            if(disableEvents) {\n                text.node.setAttribute('pointer-events', 'none');\n            }\n\n            if (typeof factor !== 'undefined' && factor !== 1) {\n                fontSize = parseInt(text.attr('font-size'), 10);\n                scaledFontSize = Math.floor(fontSize / factor) + 1;\n\n                text.attr('font-size', scaledFontSize);\n            }\n\n            if (title) {\n                this.updateTitle(text, title);\n            }\n\n            return text;\n        },\n\n        /**\n         * Create a text in the middle of the related shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} shape - the shape to add the text to\n         * @param {Object} options - the text options\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @param {Boolean} [options.shapeClick = false] - clicking the text delegates to the shape\n         * @returns {Raphael.Element} the created text\n         */\n        createShapeText: function(paper, shape, options) {\n            var self = this;\n            var bbox = shape.getBBox();\n\n            var text = this.createText(\n                paper,\n                _.merge(\n                    {\n                        left: bbox.x + bbox.width / 2,\n                        top: bbox.y + bbox.height / 2\n                    },\n                    options\n                )\n            );\n\n            if (options.shapeClick) {\n                text.click(function() {\n                    self.trigger(shape, 'click');\n                });\n            }\n\n            return text;\n        },\n\n        /**\n         * Create an image with a padding and a border, using a set.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - image options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {Number} options.width - image width\n         * @param {Number} options.height - image height\n         * @param {Number} options.url - image ulr\n         * @param {Number} [options.padding = 6] - a multiple of 2 is welcomed\n         * @param {Boolean} [options.border = false] - add a border around the image\n         * @param {Boolean} [options.shadow = false] - add a shadow back the image\n         * @returns {Raphael.Element} the created set, augmented of a move(x,y) method\n         */\n        createBorderedImage: function(paper, options) {\n            var padding = options.padding >= 0 ? options.padding : 6;\n            var halfPad = padding / 2;\n\n            var rx = options.left,\n                ry = options.top,\n                rw = options.width + padding,\n                rh = options.height + padding;\n\n            var ix = options.left + halfPad,\n                iy = options.top + halfPad,\n                iw = options.width,\n                ih = options.height;\n\n            var set = paper.set();\n\n            //create a rectangle with a padding and a border.\n            var rect = paper\n                .rect(rx, ry, rw, rh)\n                .attr(options.border ? gstyle['imageset-rect-stroke'] : gstyle['imageset-rect-no-stroke']);\n\n            //and an image centered into the rectangle.\n            var image = paper.image(options.url, ix, iy, iw, ih).attr(gstyle['imageset-img']);\n\n            if (options.shadow) {\n                set.push(\n                    rect.glow({\n                        width: 2,\n                        offsetx: 1,\n                        offsety: 1\n                    })\n                );\n            }\n\n            set.push(rect, image);\n\n            /**\n             * Add a move method to set that keep the given coords during an animation\n             * @private\n             * @param {Number} x - destination\n             * @param {Number} y - destination\n             * @param {Number} [duration = 400] - the animation duration\n             * @returns {Raphael.Element} the set for chaining\n             */\n            set.move = function move(x, y, duration) {\n                var animation = raphael.animation({ x: x, y: y }, duration || 400);\n                var elt = rect.animate(animation);\n                image.animateWith(elt, animation, { x: x + halfPad, y: y + halfPad }, duration || 400);\n                return set;\n            };\n\n            return set;\n        },\n\n        /**\n         * Update the visual state of an Element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         * @param {String} [title] - a title linked to this step\n         */\n        updateElementState: function(element, state, title) {\n            if (element && element.animate) {\n                element.animate(gstyle[state], 200, 'linear', function() {\n                    element.attr(gstyle[state]); //for attr that don't animate\n\n                    //preven issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n                });\n\n                if (title) {\n                    this.updateTitle(element, title);\n                }\n            }\n        },\n\n        /**\n         * Update the title of an element (the attr method of Raphael adds only new node instead of updating exisitings).\n         * @param {Raphael.Element} element - the element to update the title\n         * @param {String} [title] - the new title\n         */\n        updateTitle: function(element, title) {\n            if (element && element.node) {\n                //removes all remaining titles nodes\n                _.forEach(element.node.children, function(child) {\n                    if (child.nodeName.toLowerCase() === 'title') {\n                        element.node.removeChild(child);\n                    }\n                });\n\n                //then set the new title\n                element.attr('title', title);\n            }\n        },\n\n        /**\n         * Highlight an element with the error style\n         * @param {Raphael.Element} element - the element to hightlight\n         * @param {String} [restorState = 'basic'] - the state to restore the elt into after flash\n         */\n        highlightError: function(element, restoredState) {\n            var self = this;\n            if (element) {\n                element.flashing = true;\n                self.updateElementState(element, 'error');\n                _.delay(function() {\n                    self.updateElementState(element, restoredState || 'basic');\n                    element.flashing = false;\n                }, 800);\n            }\n        },\n\n        /**\n         * Trigger an event already bound to a raphael element\n         * @param {Raphael.Element} element\n         * @param {String} event - the event name\n         *\n         */\n        trigger: function(element, event) {\n            var evt = _.where(element.events, { name: event });\n            if (evt.length && evt[0] && typeof evt[0].f === 'function') {\n                evt[0].f.apply(element, Array.prototype.slice.call(arguments, 2));\n            }\n        },\n\n        /**\n         * Get an x/y point from a MouseEvent\n         * @param {MouseEvent} event - the source event\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {jQueryElement} $container - the paper container\n         * @param {Boolean} isResponsive - if the paper is scaling\n         * @returns {Object} x,y point\n         */\n        getPoint: function getPoint(event, paper, $container) {\n            var point = this.clickPoint($container, event);\n            var rect = $container.get(0).getBoundingClientRect();\n            var factor = paper.w / rect.width;\n\n            point.x = Math.round(point.x * factor);\n            point.y = Math.round(point.y * factor);\n\n            return point;\n        },\n\n        /**\n         * Get paper position relative to the container\n         * @param {jQueryElement} $container - the paper container\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @returns {Object} position with top and left\n         */\n        position: function($container, paper) {\n            var pw = parseInt(paper.w || paper.width, 10);\n            var cw = parseInt($container.width(), 10);\n            var ph = parseInt(paper.w || paper.width, 10);\n            var ch = parseInt($container.height(), 10);\n\n            return {\n                left: (cw - pw) / 2,\n                top: (ch - ph) / 2\n            };\n        },\n\n        /**\n         * Get a point from a click event\n         * @param {jQueryElement} $container - the element that contains the paper\n         * @param {MouseEvent} event - the event triggered by the click\n         * @returns {Object} the x,y point\n         */\n        clickPoint: function($container, event) {\n            var x, y;\n            var offset = $container.offset();\n\n            if (event.pageX || event.pageY) {\n                x = event.pageX - offset.left;\n                y = event.pageY - offset.top;\n            } else if (event.clientX || event.clientY) {\n                x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - offset.left;\n                y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop - offset.top;\n            }\n\n            return { x: x, y: y };\n        }\n    };\n\n    return GraphicHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',['lodash', 'taoQtiItem/qtiItem/helper/util', 'handlebars', 'i18n', 'lib/dompurify/purify'], function (_, util, Handlebars, __, DOMPurify) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"small feedback-info item-instruction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-info icon\\\"></span><span class=\\\"instruction-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n</div>\";\n      return buffer;\n      });\n    function instructionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var _notificationLevels = ['info', 'warning', 'error', 'success'];\n\n    var Instruction = function(interaction, message, callback) {\n        this.interaction = interaction;\n        this.defaultMessage = message || '';\n        this.currentMessage = '';\n        this.level = 'info';\n        this.serial = util.buildSerial('instruction_');\n        this.callback = callback;\n        this.$dom = null;\n        this.state = false;\n    };\n\n    Instruction.isValidLevel = function(level) {\n        return _.indexOf(_notificationLevels, level) >= 0;\n    };\n\n    Instruction.prototype.setState = function(state) {\n        this.state = state;\n    };\n\n    Instruction.prototype.checkState = function(state) {\n        return this.state === state;\n    };\n\n    Instruction.prototype.getId = function() {\n        return this.serial;\n    };\n\n    Instruction.prototype.create = function($container) {\n        $container.append(\n            instructionTpl({\n                message: this.defaultMessage,\n                serial: this.serial\n            })\n        );\n\n        this.$dom = $container.find('#' + this.serial);\n    };\n\n    Instruction.prototype.update = function(options) {\n        var level = options && options.level ? options.level : '',\n            message = options && options.message ? options.message : '',\n            timeout = options && options.timeout ? options.timeout : 0,\n            start = options && typeof options.start === 'function' ? options.start : null,\n            stop = options && typeof options.stop === 'function' ? options.stop : null;\n\n        if (level && Instruction.isValidLevel(level)) {\n            this.$dom.removeClass('feedback-' + this.level).addClass('feedback-' + level);\n            this.$dom\n                .find('.icon')\n                .removeClass('icon-' + this.level)\n                .addClass('icon-' + level);\n            this.level = level;\n        }\n\n        if (message) {\n            this.$dom.find('.instruction-message').html(message);\n            this.currentMessage = message;\n        }\n\n        if (timeout) {\n            var _this = this;\n            if (start) {\n                start.call(_this);\n            }\n            _this.timer = setTimeout(function() {\n                if (stop) {\n                    stop.call(_this);\n                }\n                _this.timer = null;\n            }, timeout);\n        }\n    };\n\n    Instruction.prototype.setLevel = function(level, timeout) {\n        var options = {\n            level: level\n        };\n\n        if (timeout) {\n            options.timeout = parseInt(timeout);\n            options.stop = function() {\n                this.setLevel('info');\n            };\n        }\n\n        this.update(options);\n    };\n\n    Instruction.prototype.getLevel = function() {\n        return this.level;\n    };\n\n    Instruction.prototype.setMessage = function(message, timeout) {\n        this.update({ message: message, timeout: timeout });\n    };\n\n    Instruction.prototype.reset = function() {\n        this.update({ level: 'info', message: this.defaultMessage });\n        this.state = false;\n    };\n\n    Instruction.prototype.validate = function(data) {\n        if (typeof this.callback === 'function') {\n            this.callback.call(this, data);\n        }\n    };\n\n    return Instruction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',['lodash', 'jquery', 'i18n', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction', 'handlebars', 'lib/dompurify/purify'], function (_, $$1, __, containerHelper, Instruction, Handlebars, DOMPurify) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Instruction = Instruction && Object.prototype.hasOwnProperty.call(Instruction, 'default') ? Instruction['default'] : Instruction;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"small feedback-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" item-notification\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span><span class=\\\"feedback-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n    <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n        + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\n</div>\\n\";\n      return buffer;\n      });\n    function notifTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //stores the instructions\n    var _instructions = {};\n\n    /**\n     * The instruction manager helps you in managing instructions and\n     * constraints on a QTI Element, usually an interaction or a choice.\n     *\n     * @exports qtiCommonRenderer/helpers/Instructions/instructionManager\n     */\n    var instructionManager = {\n        /**\n         * Validate the instructions of an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {Object} [data] - any data to give to the instructions\n         */\n        validateInstructions: function(element, data) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.each(_instructions[serial], function(instruction) {\n                    instruction.validate(data || {});\n                });\n            }\n        },\n\n        /**\n         * Add a new instructions to an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display to the user when the instruction is validated\n         * @param {Function} validateCallback - how to validate the instruction\n         * @returns {Instruction} the created instruction\n         */\n        appendInstruction: function(element, message, validateCallback) {\n            var serial = element.getSerial(),\n                instruction = new Instruction(element, message, validateCallback);\n\n            if (!_instructions[serial]) {\n                _instructions[serial] = {};\n            }\n            _instructions[serial][instruction.getId()] = instruction;\n\n            instruction.create($$1('.instruction-container', containerHelper.get(element)));\n\n            return instruction;\n        },\n\n        /**\n         * Remove instructions from an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         */\n        removeInstructions: function(element) {\n            _instructions[element.getSerial()] = {};\n            containerHelper\n                .get(element)\n                .find('.instruction-container')\n                .empty();\n        },\n\n        /**\n         * Reset the instructions states for an element (but keeps configuration)\n         * @param {Object} element - the qti object, ie. interaction, choice, etc.\n         */\n        resetInstructions: function(element) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.each(_instructions[serial], function(instruction) {\n                    instruction.reset();\n                });\n            }\n        },\n\n        /**\n         * Default instuction set with a min/max constraints.\n         * @param {Object} interaction\n         * @param {jQueryElement} $container\n         * @param {Object} options\n         * @param {Number} [options.min = 0] -\n         * @param {Number} [options.max = 0] -\n         * @param {Function} options.getResponse - a ref to a function that get the raw response (array) from the interaction in parameter\n         * @param {Function} [options.onError] - called by once an error occurs with validateInstruction data in parameters\n         */\n        minMaxChoiceInstructions: function(interaction, options) {\n            var self = this,\n                min = options.min || 0,\n                max = options.max || 0,\n                getResponse = options.getResponse,\n                onError = options.onError || _.noop(),\n                choiceCount = options.choiceCount === false ? false : _.size(interaction.getChoices()),\n                minInstructionSet = false,\n                msg;\n\n            if (!_.isFunction(getResponse)) {\n                throw 'invalid parameter getResponse';\n            }\n\n            //if maxChoice = 0, inifinite choice possible\n            if (max > 0 && (choiceCount === false || max < choiceCount)) {\n                if (max === min) {\n                    minInstructionSet = true;\n                    msg =\n                        max <= 1\n                            ? __('You must select exactly %d choice', max)\n                            : __('You must select exactly %d choices', max);\n\n                    self.appendInstruction(interaction, msg, function(data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    message: __('Maximum choices reached'),\n                                    timeout: 2000,\n                                    start: function() {\n                                        onError(data);\n                                    },\n                                    stop: function() {\n                                        this.update({ level: 'success', message: msg });\n                                    }\n                                });\n                            }\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                } else if (max > min) {\n                    msg =\n                        max <= 1\n                            ? __('You can select maximum %d choice', max)\n                            : __('You can select maximum %d choices', max);\n                    self.appendInstruction(interaction, msg, function(data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            this.setMessage(__('Maximum choices reached'));\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    timeout: 2000,\n                                    start: function() {\n                                        onError(data);\n                                    },\n                                    stop: function() {\n                                        this.setLevel('info');\n                                    }\n                                });\n                            }\n\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                }\n            }\n\n            if (!minInstructionSet && min > 0 && (choiceCount === false || min < choiceCount)) {\n                msg =\n                    min <= 1\n                        ? __('You must select at least %d choice', min)\n                        : __('You must select at least %d choices', min);\n                self.appendInstruction(interaction, msg, function() {\n                    if (getResponse(interaction).length >= min) {\n                        this.setLevel('success');\n                    } else {\n                        this.reset();\n                    }\n                });\n            }\n        },\n\n        /**\n         * Appends a instruction  notification message\n         * @deprecated in favor of instructions\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display\n         * @param {String} [level = 'info'] - the notification level in info, success, error or warning\n         */\n        appendNotification: function(element, message, level) {\n            level = level || 'info';\n\n            if (Instruction.isValidLevel(level)) {\n                var $container = containerHelper.get(element);\n\n                $container.find('.notification-container').prepend(\n                    notifTpl({\n                        level: level,\n                        message: message\n                    })\n                );\n\n                var $notif = $container.find('.item-notification:first');\n                var _remove = function() {\n                    $notif.fadeOut();\n                };\n\n                $notif.find('.close-trigger').on('click', _remove);\n                setTimeout(_remove, 2000);\n\n                return $notif;\n            }\n        },\n\n        /**\n         * Removes all the displayed notifications\n         * @deprecated in favor of instructions\n         */\n        removeNotifications: function(element) {\n            containerHelper\n                .get(element)\n                .find('.item-notification')\n                .remove();\n        }\n    };\n\n    return instructionManager;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    //throttle events because of the loop\n    var informLoaded = _.throttle(\n        function() {\n            $(document).trigger('customcssloaded.styleeditor',[{}]);\n        },\n        10,\n        { leading: false }\n    );\n\n    /**\n     * Attach QTI Stylesheets to the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     * @fires customcssloaded.styleeditor on document 10ms after stylesheets are loaded\n     */\n    var attach = function attach(stylesheets) {\n        var $head = $('head');\n\n        //fallback\n        if (!$head.length) {\n            $head = $('body');\n        }\n\n        // relative links with cache buster\n        _(stylesheets).forEach(function(stylesheet) {\n            var $link, href;\n\n            //if the href is something\n            if (stylesheet.attr('href')) {\n                $link = $(stylesheet.render());\n\n                //get the resolved href once rendererd\n                href = $link.attr('href');\n\n                //we need to set the href after the link is appended to the head (for our dear IE)\n                $link.removeAttr('href').attr('href', href);\n\n                $link.one('load', informLoaded).appendTo($head);\n            }\n        });\n    };\n\n    /**\n     * Remove QTI Stylesheets from the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     */\n    var detach = function detach(stylesheets) {\n        _(stylesheets).forEach(function(stylesheet) {\n            if (stylesheet.serial) {\n                $('link[data-serial=\"' + stylesheet.serial + '\"]').remove();\n            }\n        });\n    };\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler\n     */\n    var itemStylesheetHandler = {\n        attach: attach,\n        detach: detach\n    };\n\n    return itemStylesheetHandler;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/patternMask',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var regexChar = /\\^\\[\\\\s\\\\S\\]\\{\\d+\\,(\\d+)\\}\\$/,\n        regexWords = /\\^\\(\\?\\:\\(\\?\\:\\[\\^\\\\s\\\\:\\\\!\\\\\\?\\\\\\;\\\\\\…\\\\\\€\\]\\+\\)\\[\\\\s\\\\:\\\\!\\\\\\?\\\\;\\\\\\…\\\\\\€\\]\\*\\)\\{\\d+\\,(\\d+)\\}\\$/;\n\n    var patternMaskHelper = {\n        /**\n         * Parse the pattern string and according to the given type, try to extract the associate number\n         *\n         * @param {String} pattern - the pattern string to be parsed\n         * @param {String} type - words or chars\n         * @returns {*}\n         */\n        parsePattern: function parsePattern(pattern, type) {\n            if (pattern === undefined || pattern === null) {\n                return null;\n            }\n            if (type === 'words') {\n                //expre = /^(?:(?:[^\\s\\:\\!\\?\\;\\…\\€]+)[\\s\\:\\!\\?\\;\\…\\€]*){0,3}$/;\n                var result = pattern.match(regexWords);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else if (type === 'chars') {\n                // This is the original regExp generated by our code\n                // expre = /^[\\s\\S]{0,10}$/;\n                // and we will try to extract the top limit from it with this regexp\n                // which is mostly just escaped version of the first one.\n                var result = pattern.match(regexChar);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        },\n        /**\n         * Reverse function of parsePattern for word type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxWordPattern: function createMaxWordPattern(max) {\n            return '^(?:(?:[^\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]+)[\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]*){0,' + max.toString() + '}$';\n        },\n        /**\n         * Reverse function of parsePattern for char type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxCharPattern: function createMaxCharPattern(max) {\n            return '^[\\\\s\\\\S]{0,' + max.toString() + '}$';\n        }\n    };\n\n    return patternMaskHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _formatters = {\n        boolean: function(value) {\n            return value ? 'true' : 'false';\n        },\n        integer: function(value) {\n            return value;\n        },\n        float: function(value) {\n            return value;\n        },\n        string: function(value) {\n            return value === '' ? 'NULL' : '\"' + value + '\"';\n        },\n        point: function(value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        pair: function(value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        directedPair: function(value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        duration: function(value) {\n            return value;\n        },\n        file: function(value) {\n            return 'binary data';\n        },\n        uri: function(value) {\n            return value;\n        },\n        intOrIdentifier: function(value) {\n            return value;\n        },\n        identifier: function(value) {\n            return value;\n        }\n    };\n\n    /**\n     * Return the pretty print string for a qti base variable\n     *\n     * @param {type} value\n     * @param {type} withType - the qti baseType\n     * @returns {String}\n     */\n    function printBase(value, withType) {\n        var print = '',\n            base = value.base;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (base) {\n            _.forIn(_formatters, function(formatter, baseType) {\n                if (base[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n                    print += formatter(base[baseType]);\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti list variable\n     *\n     * @param {object} value\n     * @param {string} withType - the qti basetype of the list\n     * @returns {string}\n     */\n    function printList(value, withType) {\n        var print = '',\n            list = value.list;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (list) {\n            _.forIn(_formatters, function(formatter, baseType) {\n                if (list[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n\n                    print += '[';\n\n                    _.each(list[baseType], function(value) {\n                        print += formatter(value) + ', ';\n                    });\n\n                    if (_.size(list[baseType])) {\n                        print = print.substring(0, print.length - 2);\n                    }\n\n                    print += ']';\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti record variable\n     *\n     * @param {object} value\n     * @returns {String}\n     */\n    function printRecord(value) {\n        if (value && value.record) {\n            return '(record) ' + JSON.stringify(value.record);\n        }\n        return '';\n    }\n\n    var PciPrettyPrint = {\n        printBase: printBase,\n        printList: printList,\n        printRecord: printRecord\n    };\n\n    return PciPrettyPrint;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciResponse',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint'], function (_, pciPrettyPrint) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pciPrettyPrint = pciPrettyPrint && Object.prototype.hasOwnProperty.call(pciPrettyPrint, 'default') ? pciPrettyPrint['default'] : pciPrettyPrint;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _qtiModelPciResponseCardinalities = {\n        single: 'base',\n        multiple: 'list',\n        ordered: 'list',\n        record: 'record'\n    };\n\n    var PciResponse = {\n        /**\n         * Parse a response variable formatted according to IMS PCI: http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * @see serialize\n         * @param {Object} response\n         * @param {Object} interaction\n         * @returns {Array}\n         */\n        unserialize: function(response, interaction) {\n            var ret = [],\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                var responseValues = response[mappedCardinality];\n\n                if (responseValues === null) {\n                    ret = [];\n                } else if (_.isObject(responseValues)) {\n                    if (responseValues[baseType] !== undefined) {\n                        ret = responseValues[baseType];\n                        ret = _.isArray(ret) ? ret : [ret];\n                    } else {\n                        throw 'invalid response baseType';\n                    }\n                } else {\n                    throw 'invalid response cardinality, expected ' + cardinality + ' (' + mappedCardinality + ')';\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return ret;\n        },\n        /**\n         * Serialize the input response array into the format to be send to result server according to IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * With the only exception for empty response, which is represented by a javascript \"null\" value\n         *\n         * @see http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * @param {Array} responseValues\n         * @param {Object} interaction\n         * @returns {Object|null}\n         */\n        serialize: function(responseValues, interaction) {\n            if (!_.isArray(responseValues)) {\n                throw 'invalid argument : responseValues must be an Array';\n            }\n\n            var response = {},\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            responseValues = _.map(responseValues || [], function(v) {\n                return baseType === 'boolean' ? v === true || v === 'true' : v;\n            });\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                if (mappedCardinality === 'base') {\n                    if (responseValues.length === 0) {\n                        //return empty response:\n                        response.base = null;\n                    } else {\n                        response.base = {};\n                        response.base[baseType] = responseValues[0];\n                    }\n                } else {\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = responseValues;\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return response;\n        },\n        isEmpty: function(response) {\n            return (\n                response === null ||\n                _.isEmpty(response) ||\n                response.base === null ||\n                (_.isArray(response.list) && _.isEmpty(response.list)) ||\n                (_.isArray(response.record) && _.isEmpty(response.record))\n            );\n        },\n\n        /**\n         * Print a PCI JSON response into a human-readable string.\n         *\n         * @param {Object} response A response in PCI JSON representation.\n         * @returns {String} A human-readable version of the PCI JSON representation.\n         */\n        prettyPrint: function(response) {\n            var print = '';\n\n            if (typeof response.base !== 'undefined') {\n                // -- BaseType.\n                print += pciPrettyPrint.printBase(response, true);\n            } else if (typeof response.list !== 'undefined') {\n                // -- ListType\n                print += pciPrettyPrint.printList(response, true);\n            } else if (typeof response.record !== 'undefined') {\n                // -- RecordType\n                print += pciPrettyPrint.printRecord(response, true);\n            } else {\n                throw 'Not a valid PCI JSON Response';\n            }\n\n            return print;\n        }\n    };\n\n    return PciResponse;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PortableElement',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Portable element helper\n     */\n\n    var imgSrcPattern = /(<img[^>]*src=[\"'])([^\"']+)([\"'])/gi;\n\n    /**\n     * Replace all identified relative media urls by the absolute one.\n     * For now only images are supported.\n     *\n     * @param {String} html - the html to parse\n     * @param {Object} the renderer\n     * @returns {String} the html without updated URLs\n     */\n    function fixMarkupMediaSources(html, renderer) {\n        html = html || '';\n\n        return html.replace(imgSrcPattern, function(substr, $1, $2, $3) {\n            var resolved = renderer.resolveUrl($2) || $2;\n            return $1 + resolved + $3;\n        });\n    }\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/PortableElement\n     */\n    var PortableElement = {\n        fixMarkupMediaSources: fixMarkupMediaSources\n    };\n\n    return PortableElement;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',['jquery', 'util/adaptSize', 'ui/waitForMedia'], function ($, adaptSize, waitForMedia) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    const itemSelector = '.add-option, .result-area .target, .choice-area .qti-choice';\n\n    var sizeAdapter = {\n        /**\n         * Resize jQueryElement that have changed their dimensions due to a change of the content\n         *\n         * @param {jQueryElement|widget} target\n         */\n        adaptSize(target) {\n            let $elements;\n            let $container;\n\n            switch (true) {\n                // widget\n                case typeof target.$container !== 'undefined':\n                    $elements = target.$container.find(itemSelector);\n                    $container = target.$container;\n                    break;\n\n                // jquery elements\n                default:\n                    $elements = target;\n                    $container = $($elements).first().parent();\n            }\n\n            $container.waitForMedia(function () {\n                // Occasionally in caching scenarios, after waitForMedia(), image.height is reporting its naturalHeight instead of its CSS height\n                // The timeout allows adaptSize.height() to work with the true rendered heights of elements, instead of naturalHeights\n                setTimeout(() => {\n                    adaptSize.height($elements);\n\n                    // detect any CSS load, and adapt heights again after\n                    document.addEventListener(\n                        'load',\n                        e => {\n                            if (e.target && e.target.rel === 'stylesheet') {\n                                adaptSize.height($elements);\n                            }\n                        },\n                        true\n                    );\n                }, 1);\n            });\n        },\n\n        /**\n         * Reset height to jQueryElement(s) to auto\n         *\n         * @param {jQueryElement|widget} target\n         */\n        resetSize(target) {\n            adaptSize.resetHeight(target.$container.find(itemSelector));\n        }\n    };\n\n    return sizeAdapter;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/uploadMime',['lodash', 'i18n', 'core/mimetype/definitions'], function (_, __, mimeTypes) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimeTypes = mimeTypes && Object.prototype.hasOwnProperty.call(mimeTypes, 'default') ? mimeTypes['default'] : mimeTypes;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-21 (original work) Open Assessment Technologies SA ;\n     */\n\n    const delimetr = ' ';\n\n    const uploadMime = {\n        /**\n         * Fetch mime type definitions\n         * (translation function for labels must be injected from here)\n         * @returns {Array}\n         */\n        getMimeTypes: function getMimeTypes() {\n            return mimeTypes.getList(__);\n        },\n\n        /**\n         * Set the expected types in the format according to the number of types\n         *\n         * @param {Object} interaction\n         * @param {Array} types\n         */\n        setExpectedTypes: function setExpectedTypes(interaction, types) {\n            let classes = interaction.attr('class') || '';\n            classes = classes.replace(/x-tao-upload-type-[-_a-zA-Z+.0-9]*/g, '').trim();\n            interaction.attr('class', classes);\n            interaction.removeAttr('type');\n\n            if (!types) {\n                return;\n            }\n\n            if (types.length === 1) {\n                //if there is only one value set into the qti standard type attribute\n                if (types[0] !== 'any/kind') {\n                    interaction.attr('type', types[0]);\n                }\n            } else {\n                //For backward compatibility:\n                //if there is more than one value, set into into TAO specific css classes\n                interaction.attr(\n                    'class',\n                    _.reduce(\n                        types,\n                        function (acc, selectedType) {\n                            return acc + ' x-tao-upload-type-' + selectedType.replace('/', '_');\n                        },\n                        classes\n                    ).trim()\n                );\n\n                interaction.attr('type', types.join(delimetr));\n            }\n        },\n\n        /**\n         * Return the array of authorized mime types\n         * Get the standard \"type\" attribute value with mime types separated by space.\n         * @param {Object} interaction - standard QTI interaction model object\n         * @param {Boolean} [includeEquivalents] - enable including all recognized as equivalent types\n         * @returns {Array}\n         */\n        getExpectedTypes: function getExpectedTypes(interaction, includeEquivalents) {\n            let equivalents = [];\n            let types = [];\n            let mimes;\n\n            if (interaction.attr('type')) {\n                types = interaction.attr('type').split(delimetr);\n            }\n\n            // add in equivalent mimetypes to the list of expected types\n            if (includeEquivalents === true) {\n                mimes = uploadMime.getMimeTypes();\n                _.forEach(types, function (mime) {\n                    const mimeData = _.find(mimes, { mime: mime });\n                    if (mimeData && _.isArray(mimeData.equivalent)) {\n                        equivalents = _.union(equivalents, mimeData.equivalent);\n                    }\n                });\n            }\n\n            return _.union(types, equivalents);\n        }\n    };\n\n    return uploadMime;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-gap\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"gapmatch-content\\\">&nbsp;</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Gap = {\n        qtiClass: 'gap',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Gap;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objetLabel)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-gapImg selectable\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <img src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.data)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n         width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objectLabel), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapImg = {\n        qtiClass: 'gapImg',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapImg;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapText = {\n        qtiClass: 'gapText',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapText;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-hottext hottext\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <label class=\\\"hottext-checkmark\\\">\\r\\n        <input type=\\\"checkbox\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n        <span class=\\\"icon-checkbox small\\\"></span>\\r\\n    </label>\\r\\n    <span class=\\\"hottext-content\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Hottext = {\n        qtiClass: 'hottext',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (_, Handlebars, __, DOMPurify, containerHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<option data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</option>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoice = {\n        qtiClass: 'inlineChoice',\n        getContainer: containerHelper.get,\n        template: tpl,\n        getData: function getData(choice, data) {\n            data.body = _.unescape(data.body);\n            return data;\n        }\n    };\n\n    return InlineChoice;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_AssociateInteraction = {\n        qtiClass: 'simpleAssociableChoice.associateInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<th class=\\\"qti-choice qti-associableChoice qti-simpleAssociableChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</th>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_MatchInteraction = {\n        qtiClass: 'simpleAssociableChoice.matchInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'services/features'], function (Handlebars, __, _, DOMPurify, containerHelper, features) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"radio\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-radio\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-checkbox\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <label data-eliminable=\\\"container\\\" data-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Eliminate\", options) : helperMissing.call(depth0, \"__\", \"Eliminate\", options)))\n        + \"\\\">\\n        <span data-eliminable=\\\"trigger\\\" class=\\\"icon-checkbox\\\"></span>\\n    </label>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-simpleChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"pseudo-label-box\\\">\\n        <label class=\\\"real-label\\\">\\n            \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.unique), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </label>\\n        <div class=\\\"label-box\\\">\\n            <div class=\\\"label-content clear\\\" contenteditable=\\\"false\\\" id=\\\"choice-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n                \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                <svg class=\\\"overlay-answer-eliminator\\\">\\n                    <line x1=\\\"0\\\" y1=\\\"100%\\\" x2=\\\"100%\\\" y2=\\\"0\\\"/>\\n                    <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"/>\\n                </svg>\\n            </div>\\n        </div>\\n    </div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowElimination), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_ChoiceInteraction = {\n        qtiClass: 'simpleChoice.choiceInteraction',\n        getContainer: containerHelper.get,\n        getData: function(choice, data) {\n            data.unique = parseInt(data.interaction.attributes.maxChoices) === 1;\n            data.allowElimination = features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination');\n            return data;\n        },\n        template: tpl\n    };\n\n    return SimpleChoice_ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_OrderInteraction = {\n        qtiClass: 'simpleChoice.orderInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleChoice_OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    /**\n     * Evaluate if the given object is a proper portable element provider\n     * @param {Object} provider\n     * @returns {Boolean}\n     */\n    var isPortableElementProvider = function isPortableElementProvider(provider){\n        return (provider && _.isFunction(provider.load));\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        /**\n         * The portable element registry instance\n         * @typedef {portableElementRegistry}\n         */\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n\n            /**\n             * Get a register portable element\n             * @param {String} typeIdentifier\n             * @param {String} version\n             * @returns {Object}\n             */\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], {version : version});\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n\n            /**\n             * Register a portable element provider\n             * @param moduleName\n             * @param {String|Object }provider - the portable provider object or module name\n             * @returns {portableElementRegistry}\n             */\n            registerProvider : function registerProvider(moduleName, provider){\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Clear all previously registered providers\n             * @returns {portableElementRegistry}\n             */\n            resetProviders : function resetProviders(){\n                __providers = {};\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Load the providers\n             * @param {Object} [options]\n             * @param {Boolean} [options.reload] - force to reload the registered providers\n             * @returns {Promise}\n             */\n            loadProviders : function loadProviders(options){\n                var self = this;\n                var loadPromise;\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve([]);\n                } else {\n                    loadPromise = new Promise(function(resolve, reject) {\n                        var providerLoadingStack = [];\n                        _.forIn(__providers, function(provider, id){\n                            if(provider === null){\n                                providerLoadingStack.push(id);\n                            }\n                        });\n                        _requirejs(providerLoadingStack, function(){\n                            _.each([].slice.call(arguments), function(provider){\n                                if(isPortableElementProvider(provider)){\n                                    __providers[providerLoadingStack.shift()] = provider;\n                                }\n                            });\n                            resolve(__providers);\n                            _loaded = true;\n                            self.trigger('providersloaded', __providers);\n                        }, reject);\n                    });\n                }\n\n                return loadPromise;\n            },\n\n            /**\n             * Get all versions of all portable elements registered\n             * @returns {Object} - all portable elements and their versions\n             */\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n\n            /**\n             * Get the runtime for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the runtime model\n             */\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    return _.assign(portableElement.runtime, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        model : portableElement.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Get the creator model for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the creator model\n             */\n            getCreator : function getCreator(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement && portableElement.creator){\n                    return _.assign(portableElement.creator, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        response : portableElement.response,\n                        model : portableElement.model,\n                        xmlns : portableElement.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Returned all enabled created from the registry\n             * @returns {Object} the collection of creators\n             */\n            getLatestCreators : function getLatestCreators(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    var lastVersion = _.last(versions);\n\n                    //check if the portable element is creatable:\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\n                        all[id] = lastVersion;\n                    }\n                });\n                return all;\n            },\n\n            /**\n             * Get the baseUrl for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {String} the base url\n             */\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n\n            /**\n             * Load the runtimes from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                    loadPromise = self.loadProviders(options).then(function(providers){\n\n                        var loadStack = [];\n\n                        _.forEach(providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, self._registry || {});//incremental loading\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                        return true;\n                                    }\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n                                });\n                            });\n\n                    });\n\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * Load the creators from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\n                            if(portableElementModel.enabled){\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }else{\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.each(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var portableElementModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * enable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            enable: function enable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = true;\n                }\n                return this;\n            },\n\n            /**\n             * disable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            disable: function disable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = false;\n                }\n                return this;\n            },\n\n            /**\n             * check is a portable element is enabled\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                return (portableElement && portableElement.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Utility to retrieve and manipualte QTI Elements\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\n    'use strict';\n\n    const QtiElements = {\n        classes: {\n            //abstract classes:\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\n            atomicBlock: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            atomicInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\n            simpleInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            flowStatic: { parents: ['flow'], abstract: true },\n            blockStatic: { parents: ['block'], abstract: true },\n            inlineStatic: { parents: ['inline'], abstract: true },\n            flow: { parents: ['objectFlow'], abstract: true },\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\n            //html-derived qti elements:\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\n            col: { parents: ['bodyElement'], xhtml: true },\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\n            param: { parents: ['objectFlow'], xhtml: true },\n            table: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\n                xhtml: true\n            },\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            td: { parents: ['tableCell'], xhtml: true },\n            th: { parents: ['tableCell'], xhtml: true },\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\n            a: { parents: ['simpleInline'], xhtml: true },\n            abbr: { parents: ['simpleInline'], xhtml: true },\n            acronym: { parents: ['simpleInline'], xhtml: true },\n            b: { parents: ['simpleInline'], xhtml: true },\n            big: { parents: ['simpleInline'], xhtml: true },\n            cite: { parents: ['simpleInline'], xhtml: true },\n            code: { parents: ['simpleInline'], xhtml: true },\n            dfn: { parents: ['simpleInline'], xhtml: true },\n            em: { parents: ['simpleInline'], xhtml: true },\n            i: { parents: ['simpleInline'], xhtml: true },\n            kbd: { parents: ['simpleInline'], xhtml: true },\n            q: { parents: ['simpleInline'], xhtml: true },\n            samp: { parents: ['simpleInline'], xhtml: true },\n            small: { parents: ['simpleInline'], xhtml: true },\n            span: { parents: ['simpleInline'], xhtml: true },\n            strong: { parents: ['simpleInline'], xhtml: true },\n            sub: { parents: ['simpleInline'], xhtml: true },\n            sup: { parents: ['simpleInline'], xhtml: true },\n            tt: { parents: ['simpleInline'], xhtml: true },\n            var: { parents: ['simpleInline'], xhtml: true },\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\n            address: { parents: ['atomicBlock'], xhtml: true },\n            h1: { parents: ['atomicBlock'], xhtml: true },\n            h2: { parents: ['atomicBlock'], xhtml: true },\n            h3: { parents: ['atomicBlock'], xhtml: true },\n            h4: { parents: ['atomicBlock'], xhtml: true },\n            h5: { parents: ['atomicBlock'], xhtml: true },\n            h6: { parents: ['atomicBlock'], xhtml: true },\n            p: { parents: ['atomicBlock'], xhtml: true },\n            pre: { parents: ['atomicBlock'], xhtml: true },\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\n            br: { parents: ['atomicInline'], xhtml: true },\n            //qti elements:\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\n            gap: { parents: ['inlineStatic'], qti: true },\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\n            templateElement: { parents: ['bodyElement'], qti: true },\n            templateBlock: {\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\n                contains: ['blockStatic'],\n                qti: true\n            },\n            templateInline: {\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\n                contains: ['inlineStatic'],\n                qti: true\n            },\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\n        },\n\n        cache: { containable: {}, children: {}, parents: {} },\n\n        getAllowedContainersElements(qtiClass, $container) {\n            const classes = QtiElements.getAllowedContainers(qtiClass);\n            let jqSelector = '';\n            for (let i in classes) {\n                if (!classes[i].qti) {\n                    //html element:\n                    jqSelector += `${classes[i]}, `;\n                }\n            }\n\n            if (jqSelector) {\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n            }\n\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n        },\n\n        getAllowedContainers(qtiClass) {\n            let ret;\n            if (QtiElements.cache.containable[qtiClass]) {\n                ret = QtiElements.cache.containable[qtiClass];\n            } else {\n                ret = [];\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (model.contains) {\n                        const intersect = _.intersection(model.contains, parents);\n                        if (intersect.length) {\n                            if (!model.abstract) {\n                                ret.push(aClass);\n                            }\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                        }\n                    }\n                }\n                QtiElements.cache.containable[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getAllowedContents(qtiClass, recursive, checked) {\n            let ret = [];\n            checked = checked || {};\n\n            const model = QtiElements.classes[qtiClass];\n            if (model && model.contains) {\n                for (let i in model.contains) {\n                    const contain = model.contains[i];\n                    if (!checked[contain]) {\n                        checked[contain] = true;\n\n                        //qtiClass can contain everything defined as its contents\n                        ret.push(contain);\n\n                        //qtiClass can also contain subclass of its contents\n                        const children = QtiElements.getChildClasses(contain, true);\n                        for (let j in children) {\n                            const child = children[j];\n                            if (!checked[child]) {\n                                checked[child] = true;\n\n                                ret.push(child);\n\n                                //adding children allowed contents depends on the option \"recursive\"\n                                if (recursive) {\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                                }\n                            }\n                        }\n\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                        }\n                    }\n                }\n            }\n\n            //qtiClass can contain all allowed contents of its parents:\n            const parents = QtiElements.getParentClasses(qtiClass, true);\n            for (let i in parents) {\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n            }\n\n            return _.uniq(ret, false);\n        },\n\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\n        },\n\n        getParentClasses(qtiClass, recursive) {\n            let ret;\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\n                ret = QtiElements.cache.parents[qtiClass];\n            } else {\n                ret = [];\n                if (QtiElements.classes[qtiClass]) {\n                    ret = QtiElements.classes[qtiClass].parents;\n                    if (recursive) {\n                        for (let i in ret) {\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                        }\n                        ret = _.uniq(ret, false);\n                    }\n                }\n                QtiElements.cache.parents[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getChildClasses(qtiClass, recursive, type) {\n            let ret;\n            const cacheType = type ? type : 'all';\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\n                ret = QtiElements.cache.children[qtiClass][cacheType];\n            } else {\n                ret = [];\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\n                        if (type) {\n                            if (model[type]) {\n                                ret.push(aClass);\n                            }\n                        } else {\n                            ret.push(aClass);\n                        }\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                        }\n                    }\n                }\n                if (!QtiElements.cache.children[qtiClass]) {\n                    QtiElements.cache.children[qtiClass] = {};\n                }\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\n            }\n\n            return ret;\n        },\n\n        isBlock(qtiClass) {\n            return QtiElements.is(qtiClass, 'block');\n        },\n\n        isInline(qtiClass) {\n            return QtiElements.is(qtiClass, 'inline');\n        },\n\n        is(qtiClass, topClass) {\n            if (qtiClass === topClass) {\n                return true;\n            } else {\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                return _.indexOf(parents, topClass) >= 0;\n            }\n        },\n\n        /**\n         * Check wether an element is visible, using the feature viibility service\n         * @param {string} qtiClass - see the list of available classes\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\n         */\n        isVisible(qtiClass) {\n            if (this.is(qtiClass, 'customInteraction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\n            }\n            if (this.is(qtiClass, 'interaction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\n            }\n            return true;\n        },\n\n        /**\n         * Get the list of available elements for the authoring side\n         * The list of those element is statically defined, but we filter out elements that should be visible\n         * @returns {Object} the available elements\n         */\n        getAvailableAuthoringElements() {\n            const tagTitles = {\n                commonInteractions: __('Common Interactions'),\n                inlineInteractions: __('Inline Interactions'),\n                graphicInteractions: __('Graphic Interactions')\n            };\n\n            const authoringElements = {\n                choiceInteraction: {\n                    label: __('Choice Interaction'),\n                    description: __(\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\n                    ),\n                    icon: 'icon-choice',\n                    short: __('Choice'),\n                    qtiClass: 'choiceInteraction',\n                    tags: [tagTitles.commonInteractions, 'mcq'],\n                    group: 'common-interactions'\n                },\n                orderInteraction: {\n                    label: __('Order Interaction'),\n                    icon: 'icon-order',\n                    description: __('Arrange a list of choices in the correct order.'),\n                    short: __('Order'),\n                    qtiClass: 'orderInteraction',\n                    tags: [tagTitles.commonInteractions, 'ordering'],\n                    group: 'common-interactions'\n                },\n                associateInteraction: {\n                    label: __('Associate Interaction'),\n                    icon: 'icon-associate',\n                    description: __('Create pair(s) from a series of choices.'),\n                    short: __('Associate'),\n                    qtiClass: 'associateInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                matchInteraction: {\n                    label: __('Match Interaction'),\n                    icon: 'icon-match',\n                    description: __(\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\n                    ),\n                    short: __('Match'),\n                    qtiClass: 'matchInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                hottextInteraction: {\n                    label: __('Hottext Interaction'),\n                    icon: 'icon-hottext',\n                    description: __('Select one or more text parts (hottext) within a text.'),\n                    short: __('Hottext'),\n                    qtiClass: 'hottextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                gapMatchInteraction: {\n                    label: __('Gap Match Interaction'),\n                    icon: 'icon-gap-match',\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'gapMatchInteraction',\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\n                    group: 'common-interactions'\n                },\n                sliderInteraction: {\n                    label: __('Slider Interaction'),\n                    icon: 'icon-slider',\n                    description: __('Select a value within a numerical range.'),\n                    short: __('Slider'),\n                    qtiClass: 'sliderInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                extendedTextInteraction: {\n                    label: __('Extended Text Interaction'),\n                    icon: 'icon-extended-text',\n                    description: __(\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\n                    ),\n                    short: __('Extended Text'),\n                    qtiClass: 'extendedTextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                uploadInteraction: {\n                    label: __('File Upload Interaction'),\n                    icon: 'icon-upload',\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\n                    short: __('File Upload'),\n                    qtiClass: 'uploadInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                mediaInteraction: {\n                    label: __('Media Interaction'),\n                    icon: 'icon-media',\n                    description: __(\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\n                    ),\n                    short: __('Media'),\n                    qtiClass: 'mediaInteraction',\n                    tags: [tagTitles.commonInteractions, 'media'],\n                    group: 'common-interactions'\n                },\n                _container: {\n                    label: __('Text Block'),\n                    icon: 'icon-font',\n                    description: __(\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\n                    ),\n                    short: __('Block'),\n                    qtiClass: '_container',\n                    tags: [tagTitles.inlineInteractions, 'text'],\n                    group: 'inline-interactions'\n                },\n                inlineChoiceInteraction: {\n                    label: __('Inline Choice Interaction'),\n                    icon: 'icon-inline-choice',\n                    description: __('Select a choice from a drop-down list.'),\n                    short: __('Inline Choice'),\n                    qtiClass: 'inlineChoiceInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\n                    group: 'inline-interactions'\n                },\n                textEntryInteraction: {\n                    label: __('Text Entry Interaction'),\n                    icon: 'icon-text-entry',\n                    description: __(\n                        'Collect open-ended information in a short text input (strings or numeric values).'\n                    ),\n                    short: __('Text Entry'),\n                    qtiClass: 'textEntryInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\n                    group: 'inline-interactions'\n                },\n                endAttemptInteraction: {\n                    label: __('End Attempt Interaction'),\n                    icon: 'icon-end-attempt',\n                    description: __('Trigger the end of the item attempt.'),\n                    short: __('End Attempt'),\n                    qtiClass: 'endAttemptInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\n                    group: 'inline-interactions'\n                },\n                hotspotInteraction: {\n                    label: __('Hotspot Interaction'),\n                    icon: 'icon-hotspot',\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\n                    short: __('Hotspot'),\n                    qtiClass: 'hotspotInteraction',\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\n                    group: 'graphic-interactions'\n                },\n                graphicOrderInteraction: {\n                    label: __('Graphic Order Interaction'),\n                    icon: 'icon-graphic-order',\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\n                    short: __('Order'),\n                    qtiClass: 'graphicOrderInteraction',\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\n                    group: 'graphic-interactions'\n                },\n                graphicAssociateInteraction: {\n                    label: __('Graphic Associate Interaction'),\n                    icon: 'icon-graphic-associate',\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                    short: __('Associate'),\n                    qtiClass: 'graphicAssociateInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                graphicGapMatchInteraction: {\n                    label: __('Graphic Gap Match Interaction'),\n                    icon: 'icon-graphic-gap',\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'graphicGapMatchInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                selectPointInteraction: {\n                    label: __('Select Point Interaction'),\n                    icon: 'icon-select-point',\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\n                    short: __('Select Point'),\n                    qtiClass: 'selectPointInteraction',\n                    tags: [tagTitles.graphicInteractions],\n                    group: 'graphic-interactions'\n                }\n            };\n\n            //filter out hidden elements\n            const availableElements = {};\n            for (const [elementId, element] of Object.entries(authoringElements)) {\n                if (this.isVisible(elementId)) {\n                    availableElements[elementId] = element;\n                }\n            }\n            return availableElements;\n        }\n    };\n\n    return QtiElements;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'i18n',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, __, portableElementRegistry, qtiElements) {\n    'use strict';\n\n    /**\n     * Create a ney interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry() {\n        return portableElementRegistry({\n            /**\n             * Get the authoring information for a given custom interaction\n             * @param {string} typeIdentifier - the interaction type identifier\n             * @param {Object} [options]\n             * @param {string|number} [options.version] - the interaction version\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\n             * @returns {Object} the authoring info\n             */\n            getAuthoringData(typeIdentifier, options = {}) {\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\n                const pciModel = this.get(typeIdentifier, options.version);\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\n                if (\n                    pciModel &&\n                    pciModel.creator &&\n                    pciModel.creator.hook &&\n                    pciModel.creator.icon &&\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\n                ) {\n                    return {\n                        label: pciModel.label, //currently no translation available\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\n                        short: pciModel.short,\n                        description: pciModel.description,\n                        qtiClass, //custom interaction is block type\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\n                        group: 'custom-interactions'\n                    };\n                }\n            }\n        }).on('creatorsloaded', function () {\n            const creators = this.getLatestCreators();\n            _.forEach(creators, function (creator, typeIdentifier) {\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\n                    parents: ['customInteraction'],\n                    qti: true\n                };\n            });\n        });\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: function handleTheme(url) {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        associableHotspot: false,\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'commonRenderer',\n        locations: locations,\n        options: {\n            assetManager: assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Container',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify'], function (Handlebars, __, _, DOMPurify) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<div class=\\\"qti-block\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      return buffer;\n      }\n\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.contentModel), \"blockStatic\", options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.contentModel), \"blockStatic\", options));\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = {\n        qtiClass: '_container',\n        template: tpl\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figcaption',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify'], function (Handlebars, __, _, DOMPurify) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figcaption\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figcaption>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Figcaption = {\n        qtiClass: 'figcaption',\n        template: tpl\n    };\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figure',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figure data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Figure = {\n        qtiClass: 'figure',\n        getContainer: containerHelper.get,\n        template: tpl,\n        render: function(figure) {\n            const $figure = containerHelper.get(figure);\n            const $img = $figure.find('img');\n            if ($img.length) {\n                // move width from image to figure\n                $figure.css({ width: $img.attr('width') });\n                $img.attr('width', '100%');\n            }\n        }\n    };\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Img',['ui/waitForMedia', 'handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (waitForMedia, Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-describedby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-hidden=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-label=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-labelledby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-live=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" role=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<img\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"img\\\"\\n    src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.alt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby']), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby']), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live']), {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role), {hash:{},inverse:self.noop,fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Img = {\n        qtiClass: 'img',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(img, data) {\n            return new Promise(function(resolve, reject) {\n                containerHelper.get(img).waitForMedia(resolve);\n            });\n        }\n    };\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Include',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify'], function (Handlebars, __, _, DOMPurify) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-include\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Include = {\n        qtiClass: 'include',\n        template: tpl\n    };\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',['jquery', 'lodash', 'i18n', 'ui/hider', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'interact', 'ui/interactUtils'], function ($$1, _, __, hider, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, sizeAdapter, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    class=\\\"qti-interaction qti-blockInteraction qti-associateInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"associateInteraction\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <ul class=\\\"choice-area clearfix  none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <ul class=\\\"result-area none target clearfix\\\">\\n    </ul>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden incomplete-pair\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"target lft\\\"></div>\\n    <div class=\\\"target rgt\\\"></div>\\n</li>\\n\";\n      return buffer;\n      });\n    function pairTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var setChoice = function(interaction, $choice, $target) {\n        var $container = containerHelper.get(interaction);\n        var choiceSerial = $choice.data('serial');\n        var usage = $choice.data('usage') || 0;\n        var choice = interaction.getChoice(choiceSerial);\n\n        if (!choiceSerial) {\n            throw 'empty choice serial';\n        }\n\n        //to track number of times a choice is used in a pair\n        usage++;\n        $choice.data('usage', usage);\n\n        var _setChoice = function() {\n            $target\n                .data('serial', choiceSerial)\n                .html($choice.html())\n                .addClass('filled');\n\n            if (!interaction.responseMappingMode && choice.attr('matchMax') && usage >= choice.attr('matchMax')) {\n                $choice.addClass('deactivated');\n            }\n        };\n\n        if ($target.siblings('div').hasClass('filled')) {\n            var $resultArea = $$1('.result-area', $container),\n                $pair = $target.parent(),\n                thisPairSerial = [$target.siblings('div').data('serial'), choiceSerial],\n                $otherRepeatedPair = $$1();\n\n            //check if it is not a repeating association!\n            $resultArea\n                .children()\n                .not($pair)\n                .each(function() {\n                    var $otherPair = $$1(this).children('.filled');\n                    if ($otherPair.length === 2) {\n                        var otherPairSerial = [$$1($otherPair[0]).data('serial'), $$1($otherPair[1]).data('serial')];\n                        if (_.intersection(thisPairSerial, otherPairSerial).length === 2) {\n                            $otherRepeatedPair = $otherPair;\n                            return false;\n                        }\n                    }\n                });\n\n            if ($otherRepeatedPair.length === 0) {\n                //no repeated pair, so allow the choice to be set:\n                _setChoice();\n\n                //trigger pair made event\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'added',\n                    $pair: $pair,\n                    choices: thisPairSerial\n                });\n\n                instructionMgr.validateInstructions(interaction, { choice: $choice, target: $target });\n\n                if (interaction.responseMappingMode || parseInt(interaction.attr('maxAssociations')) === 0) {\n                    $pair.removeClass('incomplete-pair');\n\n                    //append new pair option?\n                    if (!$resultArea.children('.incomplete-pair').length) {\n                        $resultArea.append(pairTpl({ empty: true }));\n                        $resultArea.children('.incomplete-pair').fadeIn(600, function() {\n                            hider.show(this);\n                        });\n                    }\n                }\n            } else {\n                //repeating pair: show it:\n\n                //@todo add a notification message here in warning\n                $otherRepeatedPair.css('border', '1px solid orange');\n                $target.html(__('identical pair already exists')).css({\n                    color: 'orange',\n                    border: '1px solid orange'\n                });\n                setTimeout(function() {\n                    $otherRepeatedPair.removeAttr('style');\n                    $target.empty().css({ color: '', border: '' });\n                }, 2000);\n            }\n        } else {\n            _setChoice();\n        }\n    };\n\n    var unsetChoice = function(interaction, $filledChoice, animate, triggerChange) {\n        var $container = containerHelper.get(interaction);\n        var choiceSerial = $filledChoice.data('serial');\n        var $choice = $container.find('.choice-area [data-serial=' + choiceSerial + ']');\n        var usage = $choice.data('usage') || 0;\n        var $parent = $filledChoice.parent();\n        var $sibling = $container.find(\n            '.choice-area [data-serial=' + $filledChoice.siblings('.target').data('serial') + ']'\n        );\n        var isNumberOfMaxAssociationsZero = parseInt(interaction.attr('maxAssociations')) === 0;\n\n        //decrease the  use for this choice\n        usage--;\n\n        $choice.data('usage', usage).removeClass('deactivated');\n\n        $filledChoice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if (!interaction.swapping) {\n            if (triggerChange !== false) {\n                //a pair with one single element is not valid, so consider the response to be modified:\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'removed',\n                    $pair: $filledChoice.parent()\n                });\n                instructionMgr.validateInstructions(interaction, { choice: $choice });\n            }\n\n            // if we are removing the sibling too, update its usage\n            // but only if number of maximum assotiations is zero\n            if (isNumberOfMaxAssociationsZero) {\n                $sibling.data('usage', $sibling.data('usage') - 1).removeClass('deactivated');\n            }\n\n            //completely empty pair:\n            if (!$choice.siblings('div').hasClass('filled') && (isNumberOfMaxAssociationsZero || interaction.responseMappingMode)) {\n                //shall we remove it?\n                if (!$parent.hasClass('incomplete-pair')) {\n                    if (animate) {\n                        $parent.addClass('removing').fadeOut(500, function() {\n                            $$1(this).remove();\n                        });\n                    } else {\n                        $parent.remove();\n                    }\n                }\n            }\n        }\n    };\n\n    var getChoice = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n\n        //warning: do not use selector data-identifier=identifier because data-identifier may change dynamically\n        var choice = interaction.getChoiceByIdentifier(identifier);\n        if (!choice) {\n            throw new Error('cannot find a choice with the identifier : ' + identifier);\n        }\n        return $$1('.choice-area [data-serial=' + choice.getSerial() + ']', $container);\n    };\n\n    var renderEmptyPairs = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var max = parseInt(interaction.attr('maxAssociations'));\n        var $resultArea = $$1('.result-area', $container);\n\n        if (interaction.responseMappingMode || max === 0) {\n            $resultArea.append(pairTpl({ empty: true }));\n            hider.show($resultArea.children('.incomplete-pair'));\n        } else {\n            for (var i = 0; i < max; i++) {\n                $resultArea.append(pairTpl());\n            }\n        }\n    };\n\n    /**\n     * Builds a scroll observer that will make sure the dragged element keeps an accurate positioning\n     * @param {jQuery} $scrollContainer\n     * @returns {scrollObserver}\n     */\n    var scrollObserverFactory = function scrollObserverFactory($scrollContainer) {\n        var currentDraggable = null;\n        var beforeY = 0;\n        var beforeX = 0;\n        var afterY = 0;\n        var afterX = 0;\n\n        // reset the scroll observer context\n        function resetScrollObserver() {\n            currentDraggable = null;\n            beforeY = 0;\n            beforeX = 0;\n            afterY = 0;\n            afterX = 0;\n        }\n\n        // keep the position of the dragged element accurate with the scroll position\n        function onScrollCb() {\n            var x, y;\n            if (currentDraggable) {\n                beforeY = afterY;\n                beforeX = afterX;\n\n                if (afterY === 0 && beforeY === 0)\n                    beforeY = this.scrollTop;\n                if (afterX === 0 && beforeX === 0)\n                    beforeX = this.scrollLeft;\n\n                afterY = this.scrollTop;\n                afterX = this.scrollLeft;\n\n                y = (parseInt(currentDraggable.getAttribute('data-y'), 10) || 0) + (afterY - beforeY);\n                x = (parseInt(currentDraggable.getAttribute('data-x'), 10) || 0) + (afterX - beforeX);\n\n                // translate the element\n                currentDraggable.style.webkitTransform = currentDraggable.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n\n                // update the position attributes\n                currentDraggable.setAttribute('data-x', x);\n                currentDraggable.setAttribute('data-y', y);\n            }\n        }\n\n        // find the scroll container within the parents if any\n        $scrollContainer.parents().each(function findScrollContainer() {\n            var $el = $$1(this);\n            var ovf = $el.css('overflow');\n            if (ovf !== 'hidden' && ovf !== 'visible') {\n                $scrollContainer = $el;\n                return false;\n            }\n        });\n\n        // make sure the drop zones will follow the scroll\n        interact.dynamicDrop(true);\n\n        /**\n         * @typedef {Object} scrollObserver\n         */\n        return {\n            /**\n             * Gets the scroll container\n             * @returns {jQuery}\n             */\n            getScrollContainer: function getScrollContainer() {\n                return $scrollContainer;\n            },\n\n            /**\n             * Initializes the scroll observer while dragging a choice\n             * @param {HTMLElement|jQuery} draggedElement\n             */\n            start: function start(draggedElement) {\n                resetScrollObserver();\n                currentDraggable = draggedElement instanceof $$1 ? draggedElement.get(0) : draggedElement;\n                $scrollContainer.on('scroll.scrollObserver', _.throttle(onScrollCb, 50));\n            },\n\n            /**\n             * Tears down the the scroll observer once the dragging is done\n             */\n            stop: function stop() {\n                $scrollContainer.off('.scrollObserver');\n                resetScrollObserver();\n            }\n        };\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        var self = this;\n\n        return new Promise(function(resolve, reject) {\n            var $container = containerHelper.get(interaction);\n            var $choiceArea = $container.find('.choice-area');\n            var $resultArea = $container.find('.result-area');\n\n            var $activeChoice = null;\n            var scrollObserver = null;\n\n            var isDragAndDropEnabled;\n            var dragOptions;\n            var dropOptions;\n            var scaleX, scaleY;\n\n            var $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n            var choiceSelector = $choiceArea.selector + ' >li';\n            var resultSelector = $resultArea.selector + ' >li>div';\n            var binSelector = $container.selector + ' .remove-choice';\n\n            var _getChoice = function(serial) {\n                return $choiceArea.find('[data-serial=' + serial + ']');\n            };\n\n            /**\n             * @todo Tried to store $resultArea.find[...] in a variable but this fails\n             * @param $choice\n             * @param $target\n             * @private\n             */\n            var _setChoice = function($choice, $target) {\n                setChoice(interaction, $choice, $target);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            var _resetSelection = function() {\n                if ($activeChoice) {\n                    $resultArea.find('.remove-choice').remove();\n                    $activeChoice.removeClass('active');\n                    $container.find('.empty').removeClass('empty');\n                    $activeChoice = null;\n                }\n            };\n\n            var _unsetChoice = function($choice) {\n                unsetChoice(interaction, $choice, true);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            var _isInsertionMode = function() {\n                return $activeChoice && $activeChoice.data('identifier');\n            };\n\n            var _isModeEditing = function() {\n                return $activeChoice && !$activeChoice.data('identifier');\n            };\n\n            var _handleChoiceActivate = function($target) {\n                if ($target.hasClass('deactivated')) {\n                    return;\n                }\n\n                if (_isModeEditing()) {\n                    //swapping:\n                    interaction.swapping = true;\n                    _unsetChoice($activeChoice);\n                    _setChoice($target, $activeChoice);\n                    _resetSelection();\n                    interaction.swapping = false;\n                } else {\n                    if ($target.hasClass('active')) {\n                        _resetSelection();\n                    } else {\n                        _activateChoice($target);\n                    }\n                }\n            };\n\n            var _activateChoice = function($choice) {\n                _resetSelection();\n                $activeChoice = $choice;\n                $choice.addClass('active');\n                $resultArea.find('>li>.target').addClass('empty');\n            };\n\n            var _handleResultActivate = function($target) {\n                var choiceSerial,\n                    targetSerial = $target.data('serial');\n\n                if (_isInsertionMode()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled')) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n                        //set choices:\n                        if (targetSerial) {\n                            _unsetChoice($target);\n                        }\n                        _setChoice($activeChoice, $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (_isModeEditing()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled') || $activeChoice.siblings('div')[0] === $target[0]) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n\n                        _unsetChoice($activeChoice);\n                        if (targetSerial) {\n                            //swapping:\n                            _unsetChoice($target);\n                            _setChoice(_getChoice(targetSerial), $activeChoice);\n                        }\n                        _setChoice(_getChoice(choiceSerial), $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (targetSerial) {\n                    _activateResult($target);\n                    $target.append($bin);\n                }\n            };\n\n            var _activateResult = function($target) {\n                var targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $resultArea\n                    .find('>li>.target')\n                    .filter(function() {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function() {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n            };\n\n            // Point & click handlers\n\n            interact($container.selector).on('tap', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $$1(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n\n                _resetSelection();\n            });\n\n            interact($choiceArea.selector + ' >li').on('tap', function(e) {\n                var $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleChoiceActivate($target);\n                e.preventDefault();\n            });\n\n            interact($resultArea.selector + ' >li>div').on('tap', function(e) {\n                var $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleResultActivate($target);\n                e.preventDefault();\n            });\n\n            interact(binSelector).on('tap', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $$1(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _unsetChoice($activeChoice);\n                _resetSelection();\n                e.preventDefault();\n            });\n\n            if (!interaction.responseMappingMode) {\n                _setInstructions(interaction);\n            }\n\n            // Drag & drop handlers\n\n            if (self.getOption && self.getOption('enableDragAndDrop') && self.getOption('enableDragAndDrop').associate) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').associate;\n            }\n\n            function _iFrameDragFix(draggableSelector, target) {\n                interactUtils.iFrameDragFixOn(function() {\n                    var $activeDrop = $$1(resultSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(resultSelector).fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    $activeDrop = $$1(choiceSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(choiceSelector + '.empty').fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    interact(draggableSelector).fire({\n                        type: 'dragend',\n                        target: target\n                    });\n                });\n            }\n\n            if (isDragAndDropEnabled) {\n                scrollObserver = scrollObserverFactory($container);\n                dragOptions = {\n                    inertia: false,\n                    autoScroll: {\n                        container: scrollObserver.getScrollContainer().get(0)\n                    },\n                    restrict: {\n                        restriction: '.qti-interaction',\n                        endOnly: false,\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                    }\n                };\n\n                // makes choices draggables\n                interact(choiceSelector + ':not(.deactivated)')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function(e) {\n                                    var $target = $$1(e.target);\n                                    var scale;\n                                    $target.addClass('dragged');\n                                    _activateChoice($target);\n                                    _iFrameDragFix(choiceSelector + ':not(.deactivated)', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function(e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function(e) {\n                                    var $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n                                    // The reason of placing delay here is that there was timing conflict between \"draggable\" and \"drag-zone\" elements.\n                                    _.delay(function(){\n                                        _resetSelection();\n                                    });\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                // makes results draggables\n                interact(resultSelector + '.filled')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function(e) {\n                                    var $target = $$1(e.target);\n                                    var scale;\n                                    $target.addClass('dragged');\n                                    _resetSelection();\n                                    _activateResult($target);\n                                    _iFrameDragFix(resultSelector + '.filled', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function(e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function(e) {\n                                    var $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n\n                                    interactUtils.restoreOriginalPosition($target);\n\n                                    if ($activeChoice) {\n                                        _unsetChoice($activeChoice);\n                                    }\n                                    _resetSelection();\n\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                dropOptions = {\n                    overlap: 0.15,\n                    ondragenter: function(e) {\n                        $$1(e.target).addClass('dropzone');\n                        $$1(e.relatedTarget).addClass('droppable');\n                    },\n                    ondragleave: function(e) {\n                        $$1(e.target).removeClass('dropzone');\n                        $$1(e.relatedTarget).removeClass('droppable');\n                    }\n                };\n\n                // makes hotspots droppables\n                interact(resultSelector).dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function(e) {\n                                this.ondragleave(e);\n                                _handleResultActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n\n                // makes available choices droppables\n                interact(choiceSelector + '.empty').dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function(e) {\n                                this.ondragleave(e);\n                                _handleChoiceActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n            }\n\n            // interaction init\n\n            renderEmptyPairs(interaction);\n\n            sizeAdapter.adaptSize($$1('.result-area .target, .choice-area .qti-choice', $container));\n\n            resolve();\n        });\n    };\n\n    var _setInstructions = function(interaction) {\n        var min = parseInt(interaction.attr('minAssociations'), 10),\n            max = parseInt(interaction.attr('maxAssociations'), 10);\n\n        //infinite association:\n        if (min === 0) {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('You may make as many association pairs as you want.'));\n            }\n        } else {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('The maximum number of association is unlimited.'));\n            }\n            //the max value is implicit since the appropriate number of empty pairs have already been created\n            var msg = __('You need to make') + ' ';\n            msg += min > 1 ? __('at least') + ' ' + min + ' ' + __('association pairs') : __('one association pair');\n            instructionMgr.appendInstruction(interaction, msg, function() {\n                if (_getRawResponse(interaction).length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //destroy selected choice:\n        $container.find('.result-area .active').each(function() {\n            interactUtils.tapOn(this);\n        });\n\n        $$1('.result-area>li>div', $container).each(function() {\n            unsetChoice(interaction, $$1(this), false, false);\n        });\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    var _setPairs = function(interaction, pairs) {\n        var $container = containerHelper.get(interaction);\n        var addedPairs = 0;\n        var $emptyPair = $$1('.result-area>li:first', $container);\n        if (pairs && interaction.getResponseDeclaration().attr('cardinality') === 'single' && pairs.length) {\n            pairs = [pairs];\n        }\n        _.each(pairs, function(pair) {\n            if ($emptyPair.length) {\n                var $divs = $emptyPair.children('div');\n                setChoice(interaction, getChoice(interaction, pair[0]), $$1($divs[0]));\n                setChoice(interaction, getChoice(interaction, pair[1]), $$1($divs[1]));\n                addedPairs++;\n                $emptyPair = $emptyPair.next('li');\n            } else {\n                //the number of pairs exceeds the maximum allowed pairs: break;\n                return false;\n            }\n        });\n\n        return addedPairs;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\n    };\n\n    var _getRawResponse = function(interaction) {\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $$1('.result-area>li', $container).each(function() {\n            var pair = [];\n            $$1(this)\n                .find('div')\n                .each(function() {\n                    var serial = $$1(this).data('serial');\n                    if (serial) {\n                        pair.push(interaction.getChoice(serial).id());\n                    }\n                });\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' >li').unset();\n        interact($container.find('.result-area').selector + ' >li>div').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        $$1('.result-area', $container).empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the associate interaction\n     * @exports qtiCommonRenderer/renderers/interactions/AssociateInteraction\n     */\n    var AssociateInteraction = {\n        qtiClass: 'associateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n\n        renderEmptyPairs: renderEmptyPairs\n    };\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',['lodash', 'jquery', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'util/adaptSize', 'services/features'], function (_, $$1, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, sizeAdapter, adaptSize, features) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" allow-elimination-visible\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \" horizontal\";\n      }\n\n    function program13(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.listStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.listStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program15(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\n  \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n  class=\\\"qti-interaction qti-blockInteraction qti-choiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowEliminationVisible), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n  data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n  data-qti-class=\\\"choiceInteraction\\\"\\n  \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n  \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <ol\\n    class=\\\"plain block-listing solid choice-area\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.listStyle), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n  >\\n      \";\n      options={hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n  </ol>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const KEY_CODE_SPACE = 32;\n    const KEY_CODE_ENTER = 13;\n    const KEY_CODE_LEFT = 37;\n    const KEY_CODE_UP = 38;\n    const KEY_CODE_RIGHT = 39;\n    const KEY_CODE_DOWN = 40;\n\n    /**\n     * Propagate the checked state to the actual input.\n     * @type {Function}\n     * @param {jQuery} $choiceBox - list element with the class `.qti-choice`\n     * @param {Boolean} state\n     * @private\n     */\n    const _triggerInput = function _triggerInput($choiceBox, state) {\n        const $input = $choiceBox.find('input:radio,input:checkbox').not('[disabled]').not('.disabled');\n        const $choiceBoxes = $choiceBox.add($choiceBox.siblings());\n\n        if (!$input.length) {\n            return;\n        }\n\n        if (!_.isBoolean(state)) {\n            state = !$input.prop('checked');\n        }\n\n        $input.prop('checked', state);\n        $input.trigger('change');\n\n        $choiceBoxes.removeClass('user-selected');\n        $choiceBoxes\n            .find('input:checked')\n            .not('[disabled]')\n            .not('.disabled')\n            .parents('.qti-choice')\n            .addClass('user-selected');\n    };\n\n    /**\n     * 'pseudo-label' is technically a div that behaves like a label.\n     * This allows the usage of block elements inside the fake label\n     *\n     * @private\n     * @param {Object} interaction - the interaction instance\n     * @param {jQueryElement} $container\n     */\n    const _pseudoLabel = function _pseudoLabel(interaction, $container) {\n        const inputSelector =\n            '.qti-choice input:radio:not([disabled]):not(.disabled), .qti-choice input:checkbox:not([disabled]):not(.disabled)';\n        $container.off('.commonRenderer');\n\n        $container\n            .on('keydown.commonRenderer.keyNavigation', inputSelector, function (e) {\n                const $qtiChoice = $$1(this).closest('.qti-choice');\n                const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n                if (keyCode === KEY_CODE_UP || keyCode === KEY_CODE_LEFT) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    $qtiChoice\n                        .prev('.qti-choice')\n                        .find('input:radio,input:checkbox')\n                        .not('[disabled]')\n                        .not('.disabled')\n                        .focus();\n                } else if (keyCode === KEY_CODE_DOWN || keyCode === KEY_CODE_RIGHT) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    $qtiChoice\n                        .next('.qti-choice')\n                        .find('input:radio,input:checkbox')\n                        .not('[disabled]')\n                        .not('.disabled')\n                        .focus();\n                }\n            })\n            .on('keyup.commonRenderer.keyNavigation', inputSelector, function (e) {\n                const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n                if (keyCode === KEY_CODE_SPACE || keyCode === KEY_CODE_ENTER) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    _triggerInput($$1(this).closest('.qti-choice'));\n                }\n            });\n\n        $container.on('click.commonRenderer', '.qti-choice', function (e) {\n            const $choiceBox = $$1(this);\n            let state;\n            const eliminator = e.target.dataset && e.target.dataset.eliminable;\n            const input = this.querySelector('.real-label > input');\n\n            // if the click has been triggered by a keyboard check, prevent this listener to cancel this check\n            if (e.originalEvent && $$1(e.originalEvent.target).is('input')) {\n                return;\n            }\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($choiceBox.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation(); //required otherwise any tao scoped, form initialization might prevent it from working\n\n            if (!_.isUndefined(eliminator)) {\n                state = false;\n                if (eliminator === 'trigger') {\n                    this.classList.toggle('eliminated');\n                }\n            }\n\n            _triggerInput($choiceBox, state);\n\n            if (this.classList.contains('eliminated')) {\n                input.setAttribute('disabled', 'disabled');\n            } else {\n                input.removeAttribute('disabled');\n            }\n\n            instructionMgr.validateInstructions(interaction, { choice: $choiceBox });\n            containerHelper.triggerResponseChangeEvent(interaction);\n            $$1(input).focus();\n        });\n    };\n\n    /**\n     * Get the responses from the DOM.\n     * @private\n     * @param {Object} interaction - the interaction instance\n     * @returns {Array} the list of choices identifiers\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const values = [];\n        const $container = containerHelper.get(interaction);\n        $$1('.real-label > input[name=response-' + interaction.getSerial() + ']:checked', $container).each(function () {\n            values.push($$1(this).val());\n        });\n        return values;\n    };\n\n    /**\n     * Define the instructions for the interaction\n     * @private\n     * @param {Object} interaction - the interaction instance\n     */\n    const _setInstructions = function _setInstructions(interaction) {\n        const min = interaction.attr('minChoices');\n        const max = interaction.attr('maxChoices');\n        let msg;\n        const choiceCount = _.size(interaction.getChoices());\n\n        const highlightInvalidInput = function highlightInvalidInput($choice) {\n            const $input = $choice.find('.real-label > input');\n            const $li = $choice.css('color', '#BA122B');\n            const $icon = $choice.find('.real-label > span').css('color', '#BA122B').addClass('cross error');\n            let timeout = interaction.data('__instructionTimeout');\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n            timeout = setTimeout(function () {\n                $input.prop('checked', false);\n                $li.removeAttr('style');\n                $icon.removeAttr('style').removeClass('cross');\n                $li.toggleClass('user-selected', false);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }, 150);\n            interaction.data('__instructionTimeout', timeout);\n        };\n\n        // if maxChoice = 1, use the radio group behaviour\n        // if maxChoice = 0, infinite choice possible\n        // there are 5 cases according AUT-345 Choice interaction: reduce edge cases constraints\n        if (min === 1 && (max === 0 || max === choiceCount || typeof max === 'undefined')) {\n            // Multiple Choice: 4.Constraint: Answer required -> minChoices = 1 / maxChoices = 0 -> “You need to select at least 1 choice”\n            // Multiple Choice: 5.Constraint: Other constraints -> minChoices = 1 / maxChoices = (N or Disabled)\n            msg = __('You need to select at least 1 choice.');\n            instructionMgr.appendInstruction(interaction, msg, function () {\n                if (_getRawResponse(interaction).length >= 1) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        } else if (min >= 1 && max >= 2 && min !== max) {\n            // Multiple Choice: 5. Constraint: Other constraints -> “You must select from minChoices to maxChoices choices. for the correct answer“\n            msg = __('You need to select from %s to %s choices.', min, max);\n            instructionMgr.appendInstruction(interaction, msg, function (data) {\n                if (_getRawResponse(interaction).length >= min && _getRawResponse(interaction).length < max) {\n                    this.reset();\n                    this.setLevel('success');\n                } else if (_getRawResponse(interaction).length >= max) {\n                    this.setMessage(__('Maximum choices reached'));\n                    if (this.checkState('fulfilled')) {\n                        this.update({\n                            level: 'warning',\n                            timeout: 2000,\n                            start: function () {\n                                if (data && data.choice) {\n                                    highlightInvalidInput(data.choice);\n                                }\n                            },\n                            stop: function () {\n                                this.setLevel('info');\n                            }\n                        });\n                    }\n                    this.setState('fulfilled');\n                } else {\n                    this.reset();\n                }\n            });\n        } else if (min > 1 && min === max) {\n            // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices ≠ Disabled -> “You need to select {minChoices = maxChoices value} choices.“\n            msg = __('You need to select %s choices', min);\n            instructionMgr.appendInstruction(interaction, msg, function () {\n                if (_getRawResponse(interaction).length === min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        } else if (max > 1 && max < choiceCount && (typeof min === 'undefined' || min === 0)) {\n            // Multiple Choice: 5. Constraint: Other constraints -> minChoices = Disabled / maxChoices ≠ Disabled  -> \"You can select up to {maxChoices value} choices.\"\n            msg = __('You can select up to %s choices.', max);\n            instructionMgr.appendInstruction(interaction, msg, function (data) {\n                if (_getRawResponse(interaction).length >= max) {\n                    this.setMessage(__('Maximum choices reached'));\n                    if (this.checkState('fulfilled')) {\n                        this.update({\n                            level: 'warning',\n                            timeout: 2000,\n                            start: function () {\n                                if (data && data.choice) {\n                                    highlightInvalidInput(data.choice);\n                                }\n                            },\n                            stop: function () {\n                                this.setLevel('info');\n                            }\n                        });\n                    }\n                    this.setState('fulfilled');\n                } else {\n                    this.reset();\n                }\n            });\n        } else if (min > 1 && (typeof max === 'undefined' || max === 0)) {\n            // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices = Disabled or 0   -> \"You need to select at least {minChoices value} choices.\"\"\n            msg = __('You need to select at least %s choices.', min);\n            instructionMgr.appendInstruction(interaction, msg, function () {\n                if (_getRawResponse(interaction).length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n        // Single choice: 1.Constraint: None -> minChoices = 0 / maxChoices = 1 -> No messages\n        // Single choice: 2.Constraint: Answer required  -> minChoices = 1, maxChoices = 1 -> No messages\n        // Multiple Choice: 3.Constraint: None  -> minChoices = 0, maxChoices = 0 -> No messages\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    const render = function render(interaction) {\n        const $container = containerHelper.get(interaction);\n\n        _pseudoLabel(interaction, $container);\n\n        _setInstructions(interaction);\n\n        if (interaction.attr('orientation') === 'horizontal') {\n            const $elements = $$1('.add-option, .result-area .target, .choice-area .qti-choice', $container);\n            sizeAdapter.adaptSize($elements);\n\n            $$1(document).on('themeapplied.choiceInteraction', () => adaptSize.height($elements));\n        }\n    };\n\n    /**\n     * Reset the responses previously set\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n\n        $$1('.real-label > input', $container).prop('checked', false);\n    };\n\n    /**\n     * Set a new response to the rendered interaction.\n     * Please note that it does not reset previous responses.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {0bject} response - the PCI formated response\n     */\n    const setResponse = function setResponse(interaction, response) {\n        const $container = containerHelper.get(interaction);\n\n        try {\n            _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n                const $input = $container.find('.real-label > input[value=\"' + identifier + '\"]').prop('checked', true);\n                $input.closest('.qti-choice').toggleClass('user-selected', true);\n            });\n            instructionMgr.validateInstructions(interaction);\n        } catch (e) {\n            throw new Error('wrong response format in argument : ' + e);\n        }\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the response formatted in PCI\n     */\n    const getResponse = function getResponse(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Check if a choice interaction is choice-eliminable\n     *\n     * @param {Object} interaction\n     * @returns {boolean}\n     */\n    const isEliminable = function isEliminable(interaction) {\n        return /\\beliminable\\b/.test(interaction.attr('class'));\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    const getCustomData = function getCustomData(interaction, data) {\n        const listStyleVisible = features.isVisible('taoQtiItem/creator/interaction/choice/property/listStyle');\n        const listStyles = (interaction.attr('class') || '').match(/\\blist-style-[\\w-]+/) || [];\n        return _.merge(data || {}, {\n            horizontal: interaction.attr('orientation') === 'horizontal',\n            listStyle: listStyleVisible ? listStyles.pop() : void 0,\n            eliminable: isEliminable(interaction),\n            allowEliminationVisible: features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination')\n        });\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function destroy(interaction) {\n        const $container = containerHelper.get(interaction);\n\n        const timeout = interaction.data('__instructionTimeout');\n\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        //remove event\n        $container.off('.commonRenderer');\n        $$1(document).off('.commonRenderer').off('.choiceInteraction');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            const $container = containerHelper.get(interaction);\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $$1('.qti-simpleChoice', $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n\n            //restore eliminated choices\n            if (isEliminable(interaction) && _.isArray(state.eliminated) && state.eliminated.length) {\n                _.forEach(state.eliminated, function (identifier) {\n                    $container.find('.qti-simpleChoice[data-identifier=\"' + identifier + '\"]').addClass('eliminated');\n                });\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const $container = containerHelper.get(interaction);\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            state.order = [];\n            $$1('.qti-simpleChoice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n\n        //store the eliminated choices\n        if (isEliminable(interaction)) {\n            state.eliminated = [];\n            $container.find('.qti-simpleChoice.eliminated').each(function () {\n                state.eliminated.push($$1(this).data('identifier'));\n            });\n        }\n\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ChoiceInteraction\n     */\n    var ChoiceInteraction = {\n        qtiClass: 'choiceInteraction',\n        template: tpl,\n        getData: getCustomData,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function (_, Handlebars, __, DOMPurify, containerHelper, pciResponse) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<a class=\\\"qti-interaction qti-inlineInteraction qti-endAttemptInteraction btn small btn-info\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\n        data-qti-class=\\\"endAttemptInteraction\\\"\\n        value=\\\"false\\\"\\n        tabindex=\\\"0\\\"\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n        \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\n</a>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n     *\n     * @param {object} interaction\n     * @fires endattempt with the response identifier\n     */\n    function render(interaction, options) {\n        var $container = containerHelper.get(interaction);\n\n        //on click,\n        $container.on('click.commonRenderer', function(e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if (\n                $(e.currentTarget)\n                    .closest('.qti-item')\n                    .hasClass('prevent-click-handler')\n            ) {\n                return;\n            }\n            $container.val(true);\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            $container.trigger('endattempt', [interaction.attr('responseIdentifier')]);\n        });\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    function setResponse(interaction, response) {\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    function getResponse(interaction) {\n        var val = containerHelper.get(interaction).val();\n        val = val && val !== 'false' && val !== '0';\n        return pciResponse.serialize([val], interaction);\n    }\n\n    /**\n         * Reset the response ... wondering if it is useful ...\n\n         * @param {type} interaction\n         */\n    function resetResponse(interaction) {\n        _setVal(interaction, false);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    }\n\n    /**\n     *\n     * @param {Object} interaction\n     * @param {Boolean} val\n     */\n    function _setVal(interaction, val) {\n        containerHelper\n            .get(interaction)\n            .val(val)\n            .change();\n    }\n\n    /**\n     * Destroy the interaction to restore the dom as it is before render() is called\n     *\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        //remove event\n        containerHelper.get(interaction).off('.commonRenderer');\n    }\n\n    /**\n     * Define default template data\n     *\n     * @param {Object} interaction\n     * @param {Object} data\n     * @returns {Object}\n     */\n    function getCustomData(interaction, data) {\n        if (!data.attributes.title) {\n            data.attributes.title = __('End Attempt');\n        }\n        return data;\n    }\n\n    var EndAttemptInteraction = {\n        qtiClass: 'endAttemptInteraction',\n        template: tpl,\n        getData: getCustomData,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',['jquery', 'lodash', 'i18n', 'services/features', 'util/strLimiter', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'ckeditor', 'taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'ui/tooltip', 'core/logger'], function ($$1, _, __, features, strLimiter, Handlebars, DOMPurify, containerHelper, instructionMgr, ckEditor, ckConfigurator, patternMaskHelper, tooltip, loggerFactory) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    strLimiter = strLimiter && Object.prototype.hasOwnProperty.call(strLimiter, 'default') ? strLimiter['default'] : strLimiter;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n    ckConfigurator = ckConfigurator && Object.prototype.hasOwnProperty.call(ckConfigurator, 'default') ? ckConfigurator['default'] : ckConfigurator;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(14, program14, data),fn:self.program(10, program10, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n                <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\" contenteditable></div>\\n            \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \" attributes.class\";\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                <textarea\\n                    class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                    name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n                    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n                ></textarea>\\n            \";\n      return buffer;\n      }\n    function program16(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"pattern=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" contenteditable></div>\\n        \";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <textarea\\n                class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n            ></textarea>\\n        \";\n      return buffer;\n      }\n\n    function program23(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            \";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n\n    function program25(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            <span class=\\\"text-counter-chars\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n            <span class=\\\"text-counter-words\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n        \";\n      return buffer;\n      }\n    function program26(depth0,data) {\n      \n      \n      return \" style=\\\"display: none\\\"\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-extendedTextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"extendedTextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.multiple), {hash:{},inverse:self.program(18, program18, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"text-counter\\\">\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<span class=\\\"\";\n      if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n\";\n      return buffer;\n      });\n    function countTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Create a logger\n     */\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js');\n\n    const hideXhtmlConstraints = !features.isVisible('taoQtiItem/creator/interaction/extendedText/property/xhtmlConstraints');\n    const hideXhtmlRecommendations = !features.isVisible('taoQtiItem/creator/interaction/extendedText/property/xhtmlRecommendations');\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Promise} rendering is async\n     */\n    function render(interaction) {\n        return new Promise(function (resolve, reject) {\n            let $el, expectedLength, minStrings, patternMask, placeholderType, editor;\n            let _styleUpdater, themeLoaded, _getNumStrings;\n            let $container = containerHelper.get(interaction);\n\n            const multiple = _isMultiple(interaction);\n            const limiter = inputLimiter(interaction);\n\n            const placeholderText = interaction.attr('placeholderText');\n\n            const getItemLanguage = () => {\n                let itemLang = $container.closest('.qti-item').attr('lang');\n                let itemLocale = itemLang && itemLang.split('-')[0];\n                if (!itemLocale) {\n                    itemLang = window.document.documentElement.getAttribute('lang');\n                    itemLocale = itemLang && itemLang.split('-')[0];\n                }\n                return itemLocale;\n            };\n\n            const toolbarType = 'extendedText';\n            const ckOptions = {\n                resize_enabled: true,\n                secure: location.protocol === 'https:',\n                forceCustomDomain: true,\n                language: getItemLanguage()\n            };\n\n            if (!multiple) {\n                $el = $container.find('textarea');\n                if (placeholderText) {\n                    $el.attr('placeholder', placeholderText);\n                }\n                if (_getFormat(interaction) === 'xhtml') {\n\n                    if(hideXhtmlConstraints && hideXhtmlRecommendations) {\n                        $container.find('.text-counter').hide();\n                    }\n\n                    if(hideXhtmlConstraints) {\n                        limiter.enabled = false;\n                    }\n\n                    _styleUpdater = function () {\n                        let qtiItemStyle, $editorBody, qtiItem;\n\n                        if (editor.document) {\n                            qtiItem = $$1('.qti-item').get(0);\n                            qtiItemStyle = qtiItem.currentStyle || window.getComputedStyle(qtiItem);\n\n                            if (editor.document.$ && editor.document.$.body) {\n                                $editorBody = $$1(editor.document.$.body);\n                            } else {\n                                $editorBody = $$1(editor.document.getBody().$);\n                            }\n\n                            $editorBody.css({\n                                'background-color': 'transparent',\n                                color: qtiItemStyle.color\n                            });\n                        }\n                    };\n                    themeLoaded = function () {\n                        _styleUpdater();\n                    };\n\n                    editor = _setUpCKEditor(interaction, ckOptions);\n                    if (!editor) {\n                        reject('Unable to instantiate ckEditor');\n                    }\n\n                    editor.on('instanceReady', function () {\n                        _styleUpdater();\n\n                        //TAO-6409, disable navigation from cke toolbar\n                        if (editor.container && editor.container.$) {\n                            $$1(editor.container.$).addClass('no-key-navigation');\n                        }\n\n                        //it seems there's still something done after loaded, so resolved must be defered\n                        _.delay(resolve, 300);\n                    });\n                    if (editor.status === 'ready' || editor.status === 'loaded') {\n                        _.defer(resolve);\n                    }\n                    editor.on('configLoaded', function () {\n                        editor.config = ckConfigurator.getConfig(editor, toolbarType, ckOptions);\n\n                        if (limiter.enabled) {\n                            limiter.listenTextInput();\n                        }\n                    });\n                    editor.on('change', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    $$1(document).on('themechange.themeloader', themeLoaded);\n                } else {\n                    $el.on('keyup.commonRenderer change.commonRenderer', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    if (limiter.enabled) {\n                        limiter.listenTextInput();\n                    }\n\n                    resolve();\n                }\n\n                //multiple inputs\n            } else {\n                $el = $container.find('input');\n                minStrings = interaction.attr('minStrings');\n                expectedLength = interaction.attr('expectedLength');\n                patternMask = interaction.attr('patternMask');\n\n                //setting the checking for minimum number of answers\n                if (minStrings) {\n                    //get the number of filled inputs\n                    _getNumStrings = function ($element) {\n                        let num = 0;\n                        $element.each(function () {\n                            if ($$1(this).val() !== '') {\n                                num++;\n                            }\n                        });\n\n                        return num;\n                    };\n\n                    minStrings = parseInt(minStrings, 10);\n                    if (minStrings > 0) {\n                        $el.on('blur.commonRenderer', function () {\n                            setTimeout(function () {\n                                //checking if the user was clicked outside of the input fields\n\n                                //TODO remove notifications in favor of instructions\n\n                                if (!$el.is(':focus') && _getNumStrings($el) < minStrings) {\n                                    instructionMgr.appendNotification(\n                                        interaction,\n                                        `${__('The minimum number of answers is ')} : ${minStrings}`,\n                                        'warning'\n                                    );\n                                }\n                            }, 100);\n                        });\n                    }\n                }\n\n                //set the fields width\n                if (expectedLength) {\n                    expectedLength = parseInt(expectedLength, 10);\n\n                    if (expectedLength > 0) {\n                        $el.each(function () {\n                            $$1(this).css('width', `${expectedLength}em`);\n                        });\n                    }\n                }\n\n                //set the fields pattern mask\n                if (patternMask) {\n                    $el.each(function () {\n                        _setPattern($$1(this), patternMask);\n                    });\n                }\n\n                //set the fields placeholder\n                if (placeholderText) {\n                    /**\n                     * The type of the fileds placeholder:\n                     * multiple - set placeholder for each field\n                     * first - set placeholder only for first field\n                     * none - dont set placeholder\n                     */\n                    placeholderType = 'first';\n\n                    if (placeholderType === 'multiple') {\n                        $el.each(function () {\n                            $$1(this).attr('placeholder', placeholderText);\n                        });\n                    } else if (placeholderType === 'first') {\n                        $el.first().attr('placeholder', placeholderText);\n                    }\n                }\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Reset the textarea / ckEditor\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function resetResponse(interaction) {\n        if (_getFormat(interaction) === 'xhtml') {\n            _getCKEditor(interaction).setData('');\n        } else {\n            containerHelper.get(interaction).find('input, textarea').val('');\n        }\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {object} response\n     */\n    function setResponse(interaction, response) {\n        const _setMultipleVal = (identifier, value) => {\n            interaction.getContainer().find(`#${identifier}`).val(value);\n        };\n\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\n\n        if (response.base === null && Object.keys(response).length === 1) {\n            response = { base: { string: '' } };\n        }\n\n        if (response.base && typeof response.base[baseType] !== 'undefined') {\n            setText(interaction, response.base[baseType]);\n        } else if (response.list && response.list[baseType]) {\n            for (let i in response.list[baseType]) {\n                const serial = typeof response.list.serial === 'undefined' ? '' : response.list.serial[i];\n                _setMultipleVal(`${serial}_${i}`, response.list[baseType][i]);\n            }\n        } else {\n            throw new Error('wrong response format in argument.');\n        }\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {object}\n     */\n    function getResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const attributes = interaction.getAttributes();\n        const responseDeclaration = interaction.getResponseDeclaration();\n        const baseType = responseDeclaration.attr('baseType');\n        const numericBase = attributes.base || 10;\n        const multiple = !!(\n            attributes.maxStrings &&\n            (responseDeclaration.attr('cardinality') === 'multiple' ||\n                responseDeclaration.attr('cardinality') === 'ordered')\n        );\n        const ret = multiple ? { list: {} } : { base: {} };\n        let values;\n        let value = '';\n\n        if (multiple) {\n            values = [];\n\n            $container.find('input').each(function (i) {\n                const $el = $$1(this);\n\n                if (attributes.placeholderText && $el.val() === attributes.placeholderText) {\n                    values[i] = '';\n                } else {\n                    if (baseType === 'integer') {\n                        values[i] = parseInt($el.val(), numericBase);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'float') {\n                        values[i] = parseFloat($el.val());\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'string') {\n                        values[i] = $el.val();\n                    }\n                }\n            });\n\n            ret.list[baseType] = values;\n        } else {\n            if (attributes.placeholderText && _getTextareaValue(interaction) === attributes.placeholderText) {\n                value = '';\n            } else {\n                if (baseType === 'integer') {\n                    value = parseInt(_getTextareaValue(interaction), numericBase);\n                } else if (baseType === 'float') {\n                    value = parseFloat(_getTextareaValue(interaction));\n                } else if (baseType === 'string') {\n                    value = _getTextareaValue(interaction, true);\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n        }\n\n        return ret;\n    }\n\n    /**\n     * Creates an input limiter object\n     * @param {Object} interaction - the extended text interaction\n     * @returns {Object} the limiter\n     */\n    function inputLimiter(interaction) {\n        const $container = containerHelper.get(interaction);\n        const expectedLength = interaction.attr('expectedLength');\n        const expectedLines = interaction.attr('expectedLines');\n        const patternMask = interaction.attr('patternMask');\n        const isCke = _getFormat(interaction) === 'xhtml';\n        let patternRegEx;\n        let $textarea, $charsCounter, $wordsCounter, maxWords, maxLength, $maxLengthCounter, $maxWordsCounter;\n        let enabled = false;\n\n        if (expectedLength || expectedLines || patternMask) {\n            enabled = true;\n            $textarea = $$1('.text-container', $container);\n            $charsCounter = $$1('.count-chars', $container);\n            $wordsCounter = $$1('.count-words', $container);\n            $maxLengthCounter = $$1('.count-max-length', $container);\n            $maxWordsCounter = $$1('.count-max-words', $container);\n\n            if (patternMask !== '') {\n                maxWords = parseInt(patternMaskHelper.parsePattern(patternMask, 'words'), 10);\n                maxLength = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n                maxWords = _.isNaN(maxWords) ? 0 : maxWords;\n                maxLength = _.isNaN(maxLength) ? 0 : maxLength;\n                if (!maxLength && !maxWords) {\n                    patternRegEx = new RegExp(patternMask);\n                }\n                $maxLengthCounter.text(maxLength);\n                $maxWordsCounter.text(maxWords);\n            }\n        }\n\n        /**\n         * The limiter instance\n         */\n        const limiter = {\n            /**\n             * Is the limiter enabled regarding the interaction configuration\n             */\n            enabled,\n\n            /**\n             * Listen for text input into the interaction and limit it if necessary\n             */\n            listenTextInput() {\n                const ignoreKeyCodes = [\n                    8, // backspace\n                    13, // enter\n                    16, // shift\n                    17, // control\n                    46, // delete\n                    37, // arrow left\n                    38, // arrow up\n                    39, // arrow right\n                    40, // arrow down\n                    35, // home\n                    36, // end\n\n                    // ckeditor specific:\n                    1114177, // home\n                    3342401, // Shift + home\n                    1114181, // end\n                    3342405, // Shift + end\n\n                    2228232, // Shift + backspace\n                    2228261, // Shift + arrow left\n                    4456485, // Alt   + arrow left\n                    2228262, // Shift + arrow up\n                    2228263, // Shift + arrow right\n                    4456487, // Alt   + arrow right\n                    2228264, // Shift + arrow down\n                    2228237, // Shift + enter\n\n                    1114120, // Ctrl + backspace\n                    1114177, // Ctrl + a\n                    1114202, // Ctrl + z\n                    1114200 // Ctrl + x\n                ];\n                const spaceKeyCodes = [\n                    32, // space\n                    13, // enter\n                    2228237 // shift + enter in ckEditor\n                ];\n                let isComposing = false;\n                let hasCompositionJustEnded = false;\n\n                const acceptKeyCode = keyCode => _.contains(ignoreKeyCodes, keyCode);\n                const emptyOrSpace = txt => txt && txt.trim() === '' || /\\^s*$/.test(txt);\n                const hasSpace = txt => /\\s+/.test(txt);\n                const getCharBefore = (str, pos) => str && str.substring(Math.max(0, pos - 1), pos);\n                const getCharAfter = (str, pos) => str && str.substring(pos, pos + 1);\n                const noSpaceNode = node => node.type === ckEditor.NODE_TEXT || (!node.isBlockBoundary() && node.getName() !== 'br');\n                const cancelEvent = e => {\n                    if (e.cancel) {\n                        e.cancel();\n                    } else {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                    return false;\n                };\n                const invalidToolip = tooltip.error($container, __('This is not a valid answer'), {\n                    position: 'bottom',\n                    trigger: 'manual'\n                });\n                const patternHandler = function patternHandler(e) {\n                    if (isComposing || hasCompositionJustEnded) {\n                        // IME composing fires keydown/keyup events\n                        hasCompositionJustEnded = false;\n                        return;\n                    }\n\n                    if (patternRegEx) {\n                        let newValue;\n                        if (isCke) {\n                            // cke has its own object structure\n                            newValue = this.getData();\n                        } else {\n                            // covers input\n                            newValue = e.currentTarget.value;\n                        }\n\n                        if (!newValue) {\n                            return false;\n                        }\n                        _.debounce(function () {\n                            if (!patternRegEx.test(newValue)) {\n                                $container.addClass('invalid');\n                                $container.show();\n                                invalidToolip.show();\n                                containerHelper.triggerResponseChangeEvent(interaction);\n                            } else {\n                                $container.removeClass('invalid');\n                                invalidToolip.dispose();\n                            }\n                        }, 400)();\n                    }\n                };\n\n                /**\n                 * This part works on keyboard input\n                 *\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const keyLimitHandler = e => {\n                    if (isComposing) {\n                        return;\n                    }\n                    // Safari on OS X may send a keydown of 229 after compositionend\n                    if (e.which !== 229) {\n                        hasCompositionJustEnded = false;\n                    }\n\n                    const keyCode = e.data ? e.data.keyCode : e.which;\n                    const wordsCount = maxWords && this.getWordsCount();\n                    const charsCount = maxLength && this.getCharsCount();\n\n                    if (maxWords && wordsCount >= maxWords) {\n                        let left, right, middle;\n\n                        if (isCke) {\n                            const editor = _getCKEditor(interaction);\n                            const sel = editor.getSelection();\n                            const range = sel.getRanges()[0];\n\n                            if (range.startContainer && range.startContainer.type === ckEditor.NODE_TEXT) {\n                                left = getCharBefore(range.startContainer.getText(), range.startOffset);\n                            }\n                            if (!left) {\n                                const node = range.getPreviousNode();\n                                if (noSpaceNode(node)) {\n                                    const text = node.getText();\n                                    left = getCharBefore(text, text && text.length);\n                                } else {\n                                    left = ' ';\n                                }\n                            }\n\n                            if (range.endContainer && range.endContainer.type === ckEditor.NODE_TEXT) {\n                                right = getCharAfter(range.endContainer.getText(), range.endOffset);\n                            }\n                            if (!right) {\n                                const node = range.getNextNode();\n                                if (noSpaceNode(node)) {\n                                    right = getCharAfter(node.getText(), 0);\n                                } else {\n                                    right = ' ';\n                                }\n                            }\n\n                            middle = sel.getSelectedText();\n                        } else {\n                            const { selectionStart, selectionEnd, value } = $textarea[0];\n                            left = getCharBefore(value, selectionStart);\n                            right = getCharAfter(value, selectionEnd);\n                            middle = value.substring(selectionStart, selectionEnd);\n                        }\n\n                        // Will prevent the keystroke:\n                        // - IF there is a word part before and after the selection,\n                        //   AND the selection does not contain spaces,\n                        //   AND the keystroke is either a space or enter\n                        // - IF there is no word part before and after the selection,\n                        //   AND the selection is empty,\n                        //   AND the keystroke is not from the list of accepted codes,\n                        //   AND the keystroke is not a space\n                        if ((!emptyOrSpace(left) && !emptyOrSpace(right) && !hasSpace(middle) && _.contains(spaceKeyCodes, keyCode)) ||\n                            (emptyOrSpace(left) && emptyOrSpace(right) && !middle && !acceptKeyCode(keyCode) && keyCode !== 32)) {\n                            return cancelEvent(e);\n                        }\n                    }\n\n                    if (maxLength && charsCount >= maxLength && !acceptKeyCode(keyCode)) {\n                        if (!isCke && charsCount > maxLength) {\n                            const textarea = $textarea[0];\n                            textarea.value = textarea.value.substring(0, maxLength);\n                            textarea.focus();\n                        }\n                        return cancelEvent(e);\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                /**\n                 * This part works on drop or paste\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const nonKeyLimitHandler = e => {\n                    let newValue;\n\n                    if (typeof $$1(e.target).attr('data-clipboard') === 'string') {\n                        newValue = $$1(e.target).attr('data-clipboard');\n                    } else if (isCke) {\n                        // cke has its own object structure\n                        newValue = e.data.dataValue;\n                    } else {\n                        // covers input via paste or drop\n                        newValue = e.originalEvent.clipboardData\n                            ? e.originalEvent.clipboardData.getData('text')\n                            : e.originalEvent.dataTransfer.getData('text') ||\n                              e.originalEvent.dataTransfer.getData('text/plain') ||\n                              '';\n                    }\n\n                    // prevent insertion of non-limited data\n                    cancelEvent(e);\n\n                    if (!newValue) {\n                        return false;\n                    }\n\n                    // limit by word or character count if required\n                    if (maxWords) {\n                        newValue = strLimiter.limitByWordCount(newValue, maxWords - this.getWordsCount());\n                    } else if (maxLength) {\n                        newValue = strLimiter.limitByCharCount(newValue, maxLength - this.getCharsCount());\n                    }\n\n                    // insert the cut-off text\n                    if (isCke) {\n                        _getCKEditor(interaction).insertHtml(newValue);\n                    } else {\n                        let elements = containerHelper.get(interaction).find('textarea');\n                        let el = elements[0];\n                        let { selectionStart: start, selectionEnd: end, value: text } = el;\n                        elements.val(text.substring(0, start) + newValue + text.substring(end, text.length));\n                        el.focus();\n                        el.selectionStart = start + newValue.length;\n                        el.selectionEnd = el.selectionStart;\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                const handleCompositionStart = e => {\n                    isComposing = true;\n                    return e;\n                };\n\n                const handleCompositionEnd = e => {\n                    isComposing = false;\n                    hasCompositionJustEnded = true;\n                    // if plain text - then limit input right after composition end event\n                    if (_getFormat(interaction) !== 'xhtml' && maxLength !== null) {\n                        const currentValue = $textarea[0].value;\n                        $textarea[0].value = currentValue.substring(0, maxLength);\n                    }\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                const handleBeforeInput = e => {\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                if (_getFormat(interaction) === 'xhtml') {\n                    const editor = _getCKEditor(interaction);\n\n                    if (maxLength) {\n                        let previousSnapshot = editor.getSnapshot();\n\n                        editor.on('key', function () {\n                            const range = this.createRange();\n                            if (limiter.getCharsCount() > limiter.maxLength) {\n                                const editable = this.editable();\n                                editable.setData(previousSnapshot, true);\n                                range.moveToElementEditablePosition(editable, true);\n                                editor.getSelection().selectRanges([range]);\n                                return;\n                            }\n                            previousSnapshot = editor.getSnapshot();\n                        });\n                    }\n                    editor.on('key', keyLimitHandler);\n                    editor.on('change', evt => {\n                        patternHandler(evt);\n                        _.defer(() => this.updateCounter());\n                    });\n                    editor.on('paste', nonKeyLimitHandler);\n                    // @todo: drop requires cke 4.5\n                    // cke.on('drop', nonKeyLimitHandler);\n                } else {\n                    $textarea\n                        .on('beforeinput.commonRenderer', handleBeforeInput)\n                        .on('input.commonRenderer', () => {\n                            _.defer(() => this.updateCounter());\n                        })\n                        .on('compositionstart.commonRenderer', handleCompositionStart)\n                        .on('compositionend.commonRenderer', handleCompositionEnd)\n                        .on('keyup.commonRenderer', patternHandler)\n                        .on('keydown.commonRenderer', keyLimitHandler)\n                        .on('paste.commonRenderer drop.commonRenderer', nonKeyLimitHandler);\n                }\n            },\n\n            /**\n             * Get the number of words that are actually written in the response field\n             * @returns {Number} number of words\n             */\n            getWordsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                if (_.isEmpty(value)) {\n                    return 0;\n                }\n                // leading and trailing white space don't qualify as words\n                return value.trim().replace(/\\s+/gi, ' ').split(' ').length;\n            },\n\n            /**\n             * Get the number of characters that are actually written in the response field\n             * @returns {Number} number of characters\n             */\n            getCharsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                // remove NO-BREAK SPACE in empty lines added and all new line symbols\n                return value.replace(/[\\r\\n]{1}\\xA0[\\r\\n]{1}/gm, '\\r').replace(/[\\r\\n]+/gm, '').length;\n            },\n\n            /**\n             * Update the counter element\n             */\n            updateCounter() {\n                $charsCounter.text(this.getCharsCount());\n                $wordsCounter.text(this.getWordsCount());\n            },\n\n            maxLength\n        };\n\n        return limiter;\n    }\n\n    /**\n     * return the value of the textarea or ckeditor data\n     * @param  {Object} interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {String} the value\n     */\n    function _getTextareaValue(interaction, raw) {\n        if (_getFormat(interaction) === 'xhtml') {\n            return _ckEditorData(interaction, raw);\n        } else {\n            return containerHelper.get(interaction).find('textarea').val();\n        }\n    }\n\n    /**\n     * Setting the pattern mask for the input, for browsers which doesn't support this feature\n     * @param {jQuery} $element\n     * @param {string} pattern\n     */\n    function _setPattern($element, pattern) {\n        const patt = new RegExp(pattern);\n\n        //test when some data is entering in the input field\n        //@todo plug the validator + tooltip\n        $element.on('keyup.commonRenderer', function () {\n            $element.removeClass('field-error');\n            if (!patt.test($element.val())) {\n                $element.addClass('field-error');\n            }\n        });\n    }\n\n    /**\n     * Whether or not multiple strings are expected from the candidate to\n     * compose a valid response.\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Boolean} true if a multiple\n     */\n    function _isMultiple(interaction) {\n        const attributes = interaction.getAttributes();\n        const response = interaction.getResponseDeclaration();\n        return !!(\n            attributes.maxStrings &&\n            (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n        );\n    }\n\n    /**\n     * Instantiate CkEditor for the interaction\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {Object} [options= {}] - the CKEditor configuration options\n     * @returns {Object} the ckEditor instance (or you'll be in trouble\n     */\n    function _setUpCKEditor(interaction, options) {\n        const $container = containerHelper.get(interaction);\n        const editor = ckEditor.replace($container.find('.text-container')[0], options || {});\n        if (editor) {\n            $container.data('editor', editor.name);\n            return editor;\n        }\n    }\n\n    /**\n     * Destroy CKEditor\n     *\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function _destroyCkEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n        let editor;\n        if (name) {\n            editor = ckEditor.instances[name];\n        }\n        if (editor) {\n            editor.destroy();\n            $container.removeData('editor');\n        }\n    }\n\n    /**\n     * Gets the CKEditor instance\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Object}  CKEditor instance\n     */\n    function _getCKEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n\n        return ckEditor.instances[name];\n    }\n\n    /**\n     * get the text content of the ckEditor ( not the entire html )\n     * @param  {object} interaction the interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {string}             text content of the ckEditor\n     */\n    function _ckEditorData(interaction, raw) {\n        const editor = _getCKEditor(interaction);\n        let data = (editor && editor.getData()) || '';\n\n        if (!raw) {\n            data = _stripTags(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Remove HTML tags from a string\n     * @param {String} str\n     * @returns {String}\n     */\n    function _stripTags(str) {\n        const tempNode = document.createElement('div');\n        tempNode.innerHTML = str;\n        return tempNode.textContent;\n    }\n\n    /**\n     * Get the interaction format\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {String} format in 'plain', 'xhtml', 'preformatted'\n     */\n    function _getFormat(interaction) {\n        const format = interaction.attr('format');\n        if (_.contains(['plain', 'xhtml', 'preformatted'], format)) {\n            return format;\n        }\n        return 'plain';\n    }\n\n    function enable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').removeAttr('disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(false);\n                } else {\n                    editor.readOnly = false;\n                }\n            }\n        }\n    }\n\n    function disable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').attr('disabled', 'disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(true);\n                } else {\n                    editor.readOnly = true;\n                }\n            }\n        }\n    }\n\n    function clearText(interaction) {\n        setText(interaction, '');\n    }\n\n    function setText(interaction, text) {\n        const limiter = inputLimiter(interaction);\n        if (_getFormat(interaction) === 'xhtml') {\n            try {\n                _getCKEditor(interaction).setData(text, function () {\n                    if (limiter.enabled) {\n                        limiter.updateCounter();\n                    }\n                });\n            } catch (e) {\n                logger.warn(`setText error ${e}!`);\n            }\n        } else {\n            containerHelper.get(interaction).find('textarea').val(text);\n            if (limiter.enabled) {\n                limiter.updateCounter();\n            }\n        }\n    }\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $el = $container.find('input, textarea');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            _destroyCkEditor(interaction);\n        }\n\n        //remove event\n        $el.off('.commonRenderer');\n        $$1(document).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                try {\n                    interaction.setResponse(state.response);\n                } catch (e) {\n                    interaction.resetResponse();\n                    throw e;\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    }\n\n    /**\n     * Hydrates the dataset for the interaction with respect to its attributes.\n     *\n     * @param {object} interaction - the interaction instance\n     * @param {object} data - the default data object\n     * @returns {object} the hydrated data set\n     */\n    function getData(interaction, data) {\n        const pattern = interaction.attr('patternMask');\n        const maxWords = parseInt(patternMaskHelper.parsePattern(pattern, 'words'), 10);\n        const maxLength = parseInt(patternMaskHelper.parsePattern(pattern, 'chars'), 10);\n        const expectedLines = parseInt(interaction.attr('expectedLines'), 10);\n        const expectedLength = !isNaN(expectedLines)\n            ? expectedLines * 72\n            : parseInt(interaction.attr('expectedLength'), 10);\n\n        // Build DOM placeholders, this is needed to properly assemble the constraint hints\n        // The interaction will later rely on this to bind the values\n        const countChars = countTpl({ name: 'count-chars', value: 0 });\n        const countWords = countTpl({ name: 'count-words', value: 0 });\n        const countExpectedLength = countTpl({ name: 'count-expected-length', value: expectedLength });\n        const countMaxLength = countTpl({ name: 'count-max-length', value: maxLength });\n        const countMaxWords = countTpl({ name: 'count-max-words', value: maxWords });\n\n        return _.merge(data || {}, {\n            maxWords: !isNaN(maxWords) ? maxWords : 0,\n            maxLength: !isNaN(maxLength) ? maxLength : 0,\n            attributes: !isNaN(expectedLines) ? { expectedLength } : void 0,\n            // Build the constraint hints from translated text and DOM placeholders\n            // The template will render them as it, then the interaction will update the value from the binding\n            constraintHints: {\n                expectedLength: __('%s of %s characters recommended.', countChars, countExpectedLength),\n                maxLength: __('%s of %s characters maximum.', countChars, countMaxLength),\n                maxWords: __('%s of %s words maximum.', countWords, countMaxWords)\n            }\n        });\n    }\n\n    /**\n     * Expose the common renderer for the extended text interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction\n     */\n    var ExtendedTextInteraction = {\n        qtiClass: 'extendedTextInteraction',\n        getContainer: containerHelper.get,\n        template,\n        render,\n        setResponse,\n        getResponse,\n        getData,\n        resetResponse,\n        destroy,\n        getState,\n        setState,\n        enable,\n        disable,\n        clearText,\n        setText,\n        inputLimiter\n    };\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',['lodash', 'i18n', 'jquery', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, __, $$1, Handlebars, DOMPurify, containerHelper, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-gapMatchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"gapMatchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <ul class=\\\"choice-area none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    var setChoice = function(interaction, $choice, $target) {\n        var choiceSerial = $choice.data('serial'),\n            choice = interaction.getChoice(choiceSerial);\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n        _choiceUsages[choiceSerial]++;\n\n        $target\n            .data('serial', choiceSerial)\n            .html($choice.html())\n            .addClass('filled');\n\n        if (\n            !interaction.responseMappingMode &&\n            choice.attr('matchMax') &&\n            _choiceUsages[choiceSerial] >= choice.attr('matchMax')\n        ) {\n            $choice.attr('class', 'deactivated');\n        }\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n    };\n\n    var unsetChoice = function(interaction, $choice) {\n        var serial = $choice.data('serial');\n        var $container = containerHelper.get(interaction);\n\n        $container\n            .find('.choice-area [data-serial=' + serial + ']')\n            .removeClass()\n            .addClass('qti-choice');\n\n        _choiceUsages[serial]--;\n\n        $choice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if (!interaction.swapping) {\n            //set correct response\n            containerHelper.triggerResponseChangeEvent(interaction);\n        }\n    };\n\n    var getChoice = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.choice-area [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    var getGap = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.qti-flow-container [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $container.find('.choice-area');\n        var $flowContainer = $container.find('.qti-flow-container');\n\n        var $activeChoice = null;\n        var $activeDrop = null;\n\n        var isDragAndDropEnabled;\n        var dragOptions;\n        var scaleX, scaleY;\n\n        var $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n        var choiceSelector = $choiceArea.selector + ' .qti-choice';\n        var gapSelector = $flowContainer.selector + ' .gapmatch-content';\n        var filledGapSelector = gapSelector + '.filled';\n        var binSelector = $container.selector + ' .remove-choice';\n\n        var _getChoice = function(serial) {\n            return $choiceArea.find('[data-serial=' + serial + ']');\n        };\n\n        var _setChoice = function($choice, $target) {\n            return setChoice(interaction, $choice, $target);\n        };\n\n        var _resetSelection = function() {\n            if ($activeChoice) {\n                $flowContainer.find('.remove-choice').remove();\n                $activeChoice.removeClass('deactivated active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            }\n        };\n\n        var _unsetChoice = function($choice) {\n            return unsetChoice(interaction, $choice);\n        };\n\n        var _isInsertionMode = function() {\n            return $activeChoice && !$activeChoice.hasClass('filled');\n        };\n\n        var _isModeEditing = function() {\n            return $activeChoice && $activeChoice.hasClass('filled');\n        };\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').gapMatch) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').gapMatch;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function() {\n                if ($activeDrop) {\n                    interact(gapSelector).fire({\n                        type: 'drop',\n                        target: $activeDrop.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 1, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleChoiceSelect($target);\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes filled gaps draggables\n            interact(filledGapSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleFilledGapSelect($target);\n\n                            _iFrameDragFix(filledGapSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n\n                            if ($activeChoice) {\n                                _unsetChoice($activeChoice);\n                                _resetSelection();\n                            }\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes gaps droppables\n            interact(gapSelector).dropzone({\n                overlap: 0.05,\n                ondragenter: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $activeDrop = $target;\n                    $target.addClass('dropzone');\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function(e) {\n                    _handleGapSelect($$1(e.target));\n\n                    this.ondragleave(e);\n                },\n                ondragleave: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $target.removeClass('dropzone');\n                    $dragged.removeClass('droppable');\n\n                    $activeDrop = null;\n                }\n            });\n        }\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function(e) {\n            e.stopPropagation();\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleChoiceSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(gapSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleGapSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(binSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _unsetChoice($activeChoice);\n            _resetSelection();\n            e.preventDefault();\n        });\n\n        // Common handlers\n\n        function _handleChoiceSelect($target) {\n            if (($activeChoice && $target.hasClass('active')) || $target.hasClass('deactivated')) {\n                return;\n            }\n            _resetSelection();\n\n            $activeChoice = $target.addClass('active');\n            $$1(gapSelector).addClass('empty');\n        }\n\n        function _handleFilledGapSelect($target) {\n            $activeChoice = $target;\n            $$1(gapSelector).addClass('active');\n        }\n\n        function _handleGapSelect($target) {\n            var choiceSerial, targetSerial;\n\n            if (_isInsertionMode()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    //set choices:\n                    if (targetSerial) {\n                        _unsetChoice($target);\n                    }\n\n                    _setChoice($activeChoice, $target);\n                }\n\n                $activeChoice.removeClass('active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            } else if (_isModeEditing()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    _unsetChoice($activeChoice);\n                    if (targetSerial) {\n                        //swapping:\n                        _unsetChoice($target);\n                        _setChoice(_getChoice(targetSerial), $activeChoice);\n                    }\n                    _setChoice(_getChoice(choiceSerial), $target);\n                }\n\n                _resetSelection();\n            } else if ($target.data('serial') && $target.hasClass('filled')) {\n                targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $flowContainer\n                    .find('>li>div')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                //append trash bin:\n                $target.append($bin);\n            }\n        }\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        $$1('.gapmatch-content.active', $container).removeClass('active');\n        $$1('.gapmatch-content', $container).each(function() {\n            unsetChoice(interaction, $$1(this));\n        });\n    };\n\n    var _setPairs = function(interaction, pair) {\n        if (pair && pair.length) {\n            setChoice(interaction, getChoice(interaction, pair[0]), getGap(interaction, pair[1]).find('.gapmatch-content'));\n        }\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        resetResponse(interaction);\n        let pairs = pciResponse.unserialize(response, interaction);\n        if ( _.isArray(pairs) && _.isArray(pairs[0])) {\n            _.forEach(pairs, pair => _setPairs(interaction, pair));\n        } else {\n            _setPairs(interaction, pairs);\n        }\n    };\n\n    var _getRawResponse = function(interaction) {\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $$1('.gapmatch-content', $container).each(function() {\n            var choiceSerial = $$1(this).data('serial'),\n                pair = [];\n\n            if (choiceSerial) {\n                pair.push(interaction.getChoice(choiceSerial).attr('identifier'));\n            }\n            pair.push($$1(this).data('identifier'));\n\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10307\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' .qti-choice').unset();\n        interact($container.find('.qti-flow-container').selector + ' .gapmatch-content').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //restore selection\n        $container.find('.gapmatch-content').empty();\n        $container.find('.active').removeClass('active');\n        $container.find('.remove-choice').remove();\n        $container.find('.empty').removeClass('empty');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the gapmatch interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GapMatchInteraction\n     */\n    var GapMatchInteraction = {\n        qtiClass: 'gapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicAssociateInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {Promise}\n     */\n    var render = function render(interaction) {\n        var self = this;\n\n        return new Promise(function(resolve) {\n            var $container = containerHelper.get(interaction);\n            var background = interaction.object.attributes;\n            interaction._vsets = [];\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //make the paper clear the selection by clicking it\n            _paperUnSelect(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minAssociations'),\n                max: interaction.attr('maxAssociations'),\n                getResponse: _getRawResponse,\n                onError: function(data) {\n                    if (data && data.target) {\n                        graphic.highlightError(data.target);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice = function _renderChoice(interaction, choice) {\n        var shape = choice.attr('shape');\n        var coords = choice.attr('coords');\n        var maxAssociations = interaction.attr('maxAssociations');\n\n        var rElement = graphic\n            .createElement(interaction.paper, shape, coords, {\n                id: choice.serial,\n                title: __('Select this area to start an association')\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', 0)\n            .removeData('assocs')\n            .click(function() {\n                var self = this;\n                var active, assocs;\n\n                //can't create more associations than the maxAssociations attr\n                if (maxAssociations > 0 && _getRawResponse(interaction).length >= maxAssociations) {\n                    _shapesUnSelectable(interaction);\n                    instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                    return;\n                }\n                active = _getActiveElement(interaction);\n                if (this.selectable) {\n                    if (active) {\n                        //increment the matching counter\n                        active.data('matching', active.data('matching') + 1);\n                        this.data('matching', this.data('matching') + 1);\n\n                        //attach the response to the active (not the dest)\n                        assocs = active.data('assocs') || [];\n                        assocs.push(choice.id());\n                        active.data('assocs', assocs);\n\n                        //and create the path\n                        _createPath(interaction, active, this, function onRemove() {\n                            //decrement the matching counter\n                            active.data('matching', active.data('matching') - 1);\n                            self.data('matching', self.data('matching') - 1);\n\n                            //detach the response from the active\n                            active.data('assocs', _.pull(active.data('assocs') || [], choice.id()));\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: self });\n                        });\n                    }\n                    _shapesUnSelectable(interaction);\n                } else if (this.active) {\n                    _shapesUnSelectable(interaction);\n                } else if (_isMatchable(this)) {\n                    if (active) {\n                        _shapesUnSelectable(interaction);\n                    }\n                    graphic.updateElementState(this, 'active', __('Select this area to start an association'));\n                    this.active = true;\n                    _shapesSelectable(interaction, this);\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    var _paperUnSelect = function _paperUnSelect(interaction) {\n        var $container = containerHelper.get(interaction);\n        var image = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (image) {\n            image.click(function() {\n                _shapesUnSelectable(interaction);\n                $container.trigger('unselect.graphicassociate');\n            });\n        }\n    };\n\n    /**\n     * Get the element that has the active state\n     * @private\n     * @param {Object} interaction\n     * @returns {Raphael.Element} the active element\n     */\n    var _getActiveElement = function _getActiveElement(interaction) {\n        var active;\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (element && element.active === true) {\n                active = element;\n                return false;\n            }\n        });\n        return active;\n    };\n\n    /**\n     * Create a path from a src element to a destination.\n     * The path is selectable and can be removed by itself\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} srcElement - the path starts from this shape\n     * @param {Raphael.Element} destElement - the path ends to this shape\n     * @param {Function} onRemove - called back on path remove\n     */\n    var _createPath = function _createPath(interaction, srcElement, destElement, onRemove) {\n        var $container = containerHelper.get(interaction);\n\n        //virtual set, not a raphael one, just to group the elements\n        var vset = [];\n\n        //get the middle point of the source shape\n        var src = srcElement.getBBox();\n        var sx = src.x + src.width / 2;\n        var sy = src.y + src.height / 2;\n\n        //get the middle point of the source shape\n        var dest = destElement.getBBox();\n        var dx = dest.x + dest.width / 2;\n        var dy = dest.y + dest.height / 2;\n\n        //create a path with bullets at the beginning and the end\n        var srcBullet = interaction.paper.circle(sx, sy, 3).attr(graphic._style['assoc-bullet']);\n\n        var destBullet = interaction.paper.circle(dx, dy, 3).attr(graphic._style['assoc-bullet']);\n\n        var path = interaction.paper\n            .path('M' + sx + ',' + sy + 'L' + sx + ',' + sy)\n            .attr(graphic._style.assoc)\n            .animate({ path: 'M' + sx + ',' + sy + 'L' + dx + ',' + dy }, 300);\n\n        //create an overall layer that make easier the path selection\n        var layer = interaction.paper.path('M' + sx + ',' + sy + 'L' + dx + ',' + dy).attr(graphic._style['assoc-layer']);\n\n        //get the middle of the path\n        var midPath = layer.getPointAtLength(layer.getTotalLength() / 2);\n\n        //create an hidden background for the closer\n        var closerBg = interaction.paper\n            .circle(midPath.x, midPath.y, 9)\n            .attr(graphic._style['close-bg'])\n            .toBack();\n\n        //create an hidden closer\n        var closer = interaction.paper\n            .path(graphic._style.close.path)\n            .attr(graphic._style.close)\n            .transform('T' + (midPath.x - 9) + ',' + (midPath.y - 9))\n            .attr('title', _('Click again to remove'))\n            .toBack();\n\n        //the path is below the shapes\n        srcElement.toFront();\n        destElement.toFront();\n\n        //add the path into a set\n        vset = [srcBullet, path, destBullet, layer, closerBg, closer];\n        interaction._vsets.push(vset);\n\n        //to identify the element of the set outside the context\n        _.invoke(vset, 'data', 'assoc-path', true);\n\n        //enable to select the path by clicking the invisible layer\n        layer.click(function selectLigne() {\n            if (closer.attrs.opacity === 0) {\n                showCloser();\n            } else {\n                hideCloser();\n            }\n        });\n\n        $container.on('unselect.graphicassociate', function() {\n            hideCloser();\n        });\n\n        function showCloser() {\n            closerBg\n                .toFront()\n                .animate({ opacity: 0.8 }, 300)\n                .click(removeSet);\n            closer\n                .toFront()\n                .animate({ opacity: 1 }, 300)\n                .click(removeSet);\n        }\n\n        function hideCloser() {\n            if (closerBg && closerBg.type) {\n                closerBg\n                    .animate({ opacity: 0 }, 300, function() {\n                        closerBg.toBack();\n                    })\n                    .unclick();\n                closer\n                    .animate({ opacity: 0 }, 300, function() {\n                        closer.toBack();\n                    })\n                    .unclick();\n            }\n        }\n\n        //remove set handler\n        function removeSet() {\n            _.invoke(vset, 'remove');\n            interaction._vsets = _.without(interaction._vsets, vset);\n            if (typeof onRemove === 'function') {\n                onRemove();\n            }\n        }\n    };\n\n    /**\n     * Makes the shapes selectable\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} active - the active shape\n     */\n    var _shapesSelectable = function _shapesSelectable(interaction, active) {\n        var assocs = active.data('assocs') || [];\n        var choices = interaction.getChoices();\n        var activeChoice = choices[active.id];\n\n        //update the shape state\n        _.forEach(choices, function(choice) {\n            var element;\n            var assocsElement;\n            if (!_.contains(assocs, choice.id())) {\n                element = interaction.paper.getById(choice.serial);\n                assocsElement = element.data('assocs') || [];\n                if (\n                    !element.active &&\n                    element.id !== active.id &&\n                    _isMatchable(element) &&\n                    !_.contains(assocsElement, activeChoice.id())) {\n                    element.selectable = true;\n                    graphic.updateElementState(element, 'selectable');\n                }\n            }\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    var _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n    };\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    var _isMatchable = function(element) {\n        var matchable = false;\n        var matching, matchMax;\n        if (element) {\n            matchMax = element.data('max') || 0;\n            matching = element.data('matching') || 0;\n            matchable = matchMax === 0 || matchMax > matching;\n        }\n        return matchable;\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    var _getRawResponse = function _getRawResponse(interaction) {\n        var responses = [];\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            var assocs = element.data('assocs');\n            if (element && assocs) {\n                responses = responses.concat(\n                    _.map(assocs, function(id) {\n                        return [choice.id(), id];\n                    })\n                );\n            }\n        });\n        return responses;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        var responseValues;\n        var map;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n                if (responseValues.length === 2 && !Array.isArray(responseValues[0]) && !Array.isArray(responseValues[1])) {\n                    responseValues = [responseValues];\n                }\n            } catch (e) {}\n\n            if (_.isArray(responseValues)) {\n                //create an object with choiceId => shapeElement\n                map = _.transform(interaction.getChoices(), function(res, choice) {\n                    res[choice.id()] = interaction.paper.getById(choice.serial);\n                });\n                _.forEach(responseValues, function(responseValue) {\n                    var el1, el2;\n                    if (_.isArray(responseValue) && responseValue.length === 2) {\n                        el1 = map[responseValue[0]];\n                        el2 = map[responseValue[1]];\n                        if (el1 && el2) {\n                            graphic.trigger(el1, 'click');\n                            graphic.trigger(el2, 'click');\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var resetResponse = function resetResponse(interaction) {\n        var toRemove = [];\n\n        //reset response and state bound to shapes\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.data({\n                    max: choice.attr('matchMax'),\n                    matching: 0,\n                    assocs: []\n                });\n            }\n        });\n\n        if (interaction && interaction.paper) {\n            //remove the paths, but outside the forEach as it is implemented as a linked list\n            interaction.paper.forEach(function(elt) {\n                if (elt.data('assoc-path')) {\n                    toRemove.push(elt);\n                }\n            });\n        }\n        _.invoke(toRemove, 'remove');\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        var raw = _getRawResponse(interaction);\n        var response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction) {\n        var $container;\n        if (interaction.paper) {\n            $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $container.off('.graphicassociate');\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction\n     */\n    var GraphicAssociateInteraction = {\n        qtiClass: 'graphicAssociateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',['jquery', 'lodash', 'i18n', 'module', 'core/mouseEvent', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'interact', 'ui/interactUtils'], function ($$1, _, __, module, mouseEvent, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicGapMatchInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal source\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.gapImgs) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.gapImgs); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.gapImgs) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var isDragAndDropEnabled;\n\n    // this represents the state for the active droppable zone\n    // we need it only to access the active dropzone in the iFrameFix\n    // should be removed when the old test runner is discarded\n    var activeDrop = null;\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    /**\n     * This options enables to support old items created with the wrong\n     * direction in the directedpairs.\n     *\n     * @deprecated\n     */\n    var isDirectedPairFlipped = module.config().flipDirectedPair;\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    var _isMatchable = function(element) {\n        var matchable = false;\n        var matching, matchMax;\n        if (element) {\n            matchMax = element.data('max') || 0;\n            matching = element.data('matching') || [];\n            matchable = matchMax === 0 || matchMax > matching.length;\n        }\n        return matchable;\n    };\n\n    /**\n     * Makes the shapes selectable (at least those who can still accept matches)\n     * @private\n     * @param {Object} interaction\n     */\n    var _shapesSelectable = function _shapesSelectable(interaction) {\n        var tooltip = __('Select the area to add an image');\n\n        //update the shape state\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (_isMatchable(element)) {\n                element.selectable = true;\n                graphic.setStyle(element, 'selectable');\n                graphic.updateTitle(element, tooltip);\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function(gapFiller) {\n            gapFiller.forEach(function(element) {\n                graphic.updateTitle(element, tooltip);\n            });\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    var _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                graphic.setStyle(element, 'basic');\n                graphic.updateTitle(element, __('Select an image first'));\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function(gapFiller) {\n            gapFiller.forEach(function(element) {\n                graphic.updateTitle(element, __('Remove'));\n            });\n        });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    var _paperUnSelect = function _paperUnSelect(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $gapImages = $$1('ul > li', $container);\n        var bgImage = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (bgImage) {\n            interact(bgImage.node).on('tap', function() {\n                _shapesUnSelectable(interaction);\n                $gapImages.removeClass('active');\n            });\n        }\n    };\n\n    /**\n     * Sets a choice and marks as disabled if at max\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    var _setChoice = function _setChoice(interaction, $choice) {\n        var choiceSerial = $choice.data('serial');\n        var choice = interaction.getGapImg(choiceSerial);\n        var matchMax;\n        var usages;\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n\n        _choiceUsages[choiceSerial]++;\n\n        // disable choice if maxium usage reached\n        if (!interaction.responseMappingMode && choice.attr('matchMax')) {\n            matchMax = +choice.attr('matchMax');\n            usages = +_choiceUsages[choiceSerial];\n\n            // note: if matchMax is 0, then test taker is allowed unlimited usage of that choice\n            if (matchMax !== 0 && matchMax <= usages) {\n                interact($choice.get(0)).draggable(false);\n                $choice.addClass('disabled');\n                $choice.removeClass('selectable');\n            }\n        }\n    };\n\n    /**\n     * Unset a choice and unmark as disabled\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    var _unsetChoice = function _unsetChoice(interaction, $choice) {\n        var choiceSerial = $choice.data('serial');\n\n        _choiceUsages[choiceSerial]--;\n\n        $choice.removeClass('disabled');\n        $choice.addClass('selectable');\n        interact($choice.get(0)).draggable(true);\n    };\n\n    /**\n     * Select a shape (= hotspot) (a gap image must be active)\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} element - the selected shape\n     * @param {Boolean} [trackResponse = true] - if the selection trigger a response chane\n     */\n    var _selectShape = function _selectShape(interaction, element, trackResponse) {\n        var $img, $clone, gapFiller, id, bbox, shapeOffset, activeOffset, matching, currentCount;\n\n        //lookup for the active element\n        var $container = containerHelper.get(interaction);\n        var $gapList = $$1('ul', $container);\n        var $active = $gapList.find('.active:first');\n        var $imageBox = $$1('.main-image-box', $container);\n        var boxOffset = $imageBox.offset();\n\n        if ($active.length) {\n            //the macthing elements are linked to the shape\n            id = $active.data('identifier');\n            matching = element.data('matching') || [];\n            matching.push(id);\n            element.data('matching', matching);\n            currentCount = matching.length;\n\n            //the image to clone\n            $img = $active.find('img');\n\n            //then reset the state of the shapes and the gap images\n            _shapesUnSelectable(interaction);\n            $gapList.children().removeClass('active');\n\n            _setChoice(interaction, $active);\n\n            $clone = $img.clone();\n            shapeOffset = $$1(element.node).offset();\n            activeOffset = $active.offset();\n\n            $clone.css({\n                position: 'absolute',\n                display: 'block',\n                'z-index': 10000,\n                opacity: 0.8,\n                top: activeOffset.top - boxOffset.top,\n                left: activeOffset.left - boxOffset.left\n            });\n\n            $clone.appendTo($imageBox);\n            $clone.animate(\n                {\n                    top: shapeOffset.top - boxOffset.top,\n                    left: shapeOffset.left - boxOffset.left\n                },\n                200,\n                function animationEnd() {\n                    var gapFillerImage;\n\n                    $clone.remove();\n\n                    //extract some coords for positioning\n                    bbox = element.getBBox();\n\n                    //create an image into the paper and move it to the selected shape\n                    gapFiller = graphic\n                        .createBorderedImage(interaction.paper, {\n                            url: $img.attr('src'),\n                            left: bbox.x + 8 * (currentCount - 1),\n                            top: bbox.y + 8 * (currentCount - 1),\n                            width: parseInt($img.attr('width'), 10),\n                            height: parseInt($img.attr('height'), 10),\n                            padding: 0,\n                            border: false,\n                            shadow: true\n                        })\n                        .data('identifier', id)\n                        .toFront();\n\n                    gapFillerImage = gapFiller[2].node;\n                    interact(gapFillerImage).on('tap', function(e) {\n                        var target = e.currentTarget;\n                        var rElement = interaction.paper.getById(target.raphaelid);\n\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // adding a new gapfiller on the hotspot by simulating a click on the underlying shape...\n                        if ($gapList.find('.active').length > 0) {\n                            interactUtils.tapOn(element.node);\n\n                            // ... or removing the existing gapfiller\n                        } else {\n                            //update the element matching array\n                            element.data(\n                                'matching',\n                                _.without(element.data('matching') || [], rElement.data('identifier'))\n                            );\n\n                            //delete interaction.gapFillers[interaction.gapFillers.indexOf(gapFiller)];\n                            interaction.gapFillers = _.without(interaction.gapFillers, gapFiller);\n\n                            gapFiller.remove();\n\n                            _unsetChoice(interaction, $active);\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                        }\n                    });\n\n                    interaction.gapFillers.push(gapFiller);\n\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                }\n            );\n        }\n    };\n\n    /**\n     * Render a choice (= hotspot) inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     *\n     * @private\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice = function _renderChoice(interaction, choice) {\n        //create the shape\n        var rElement = graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select an image first'),\n                hover: false\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', []);\n\n        interact(rElement.node).on('tap', function onClickShape() {\n            handleShapeSelect();\n        });\n\n        if (isDragAndDropEnabled) {\n            interact(rElement.node).dropzone({\n                overlap: 0.15,\n                ondragenter: function() {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'hover');\n                        activeDrop = rElement.node;\n                    }\n                },\n                ondrop: function() {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        handleShapeSelect();\n                        activeDrop = null;\n                    }\n                },\n                ondragleave: function() {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        activeDrop = null;\n                    }\n                }\n            });\n        }\n\n        function handleShapeSelect() {\n            // check if can make the shape selectable on click\n            if (_isMatchable(rElement) && rElement.selectable === true) {\n                _selectShape(interaction, rElement);\n            }\n        }\n    };\n\n    var _iFrameDragFix = function _iFrameDragFix(draggableSelector, target) {\n        interactUtils.iFrameDragFixOn(function() {\n            if (activeDrop) {\n                interact(activeDrop).fire({\n                    type: 'drop',\n                    target: activeDrop,\n                    relatedTarget: target\n                });\n            }\n            interact(draggableSelector).fire({\n                type: 'dragend',\n                target: target\n            });\n        });\n    };\n\n    /**\n     * Render the list of gap fillers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $gapList - the list than contains the orderers\n     */\n    var _renderGapList = function _renderGapList(interaction, $gapList) {\n        var gapFillersSelector = $gapList.selector + ' li';\n        var dragOptions;\n        var scaleX, scaleY;\n\n        interact(gapFillersSelector).on('tap', function onClickGapImg(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            toggleActiveGapState($$1(e.currentTarget));\n        });\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            $$1(gapFillersSelector).each(function(index, gap) {\n                interact(gap)\n                    .draggable(\n                        _.assign({}, dragOptions, {\n                            onstart: function(e) {\n                                var $target = $$1(e.target);\n                                var scale;\n                                _setActiveGapState($target);\n                                $target.addClass('dragged');\n\n                                _iFrameDragFix(gapFillersSelector, e.target);\n                                scale = interactUtils.calculateScale(e.target);\n                                scaleX = scale[0];\n                                scaleY = scale[1];\n                            },\n                            onmove: function(e) {\n                                interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            },\n                            onend: function(e) {\n                                _.defer( () => {\n                                    var $target = $$1(e.target);\n                                    _setInactiveGapState($target);\n                                    $target.removeClass('dragged');\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n                                });\n                            }\n                        })\n                    )\n                    .styleCursor(false);\n            });\n        }\n\n        function toggleActiveGapState($target) {\n            if (!$target.hasClass('disabled')) {\n                if ($target.hasClass('active')) {\n                    _setInactiveGapState($target);\n                } else {\n                    _setActiveGapState($target);\n                }\n            }\n        }\n\n        function _setActiveGapState($target) {\n            $gapList.children('li').removeClass('active');\n            $target.addClass('active');\n            _shapesSelectable(interaction);\n        }\n\n        function _setInactiveGapState($target) {\n            $target.removeClass('active');\n            _shapesUnSelectable(interaction);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @return {Promise}\n     */\n    var render = function render(interaction) {\n        var self = this;\n\n        return new Promise(function(resolve) {\n            var $container = containerHelper.get(interaction);\n            var $gapList = $$1('ul.source', $container);\n            var background = interaction.object.attributes;\n\n            interaction.gapFillers = [];\n\n            if (\n                self.getOption &&\n                self.getOption('enableDragAndDrop') &&\n                self.getOption('enableDragAndDrop').graphicGapMatch\n            ) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').graphicGapMatch;\n            }\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                resize: function(newSize, factor) {\n                    $gapList.css('max-width', newSize + 'px');\n                    if (factor !== 1) {\n                        $gapList.find('img').each(function() {\n                            var $img = $$1(this);\n                            $img.width($img.attr('width') * factor);\n                            $img.height($img.attr('height') * factor);\n                        });\n                    }\n                }\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //create the list of gap images\n            _renderGapList(interaction, $gapList);\n\n            //clicking the paper to reset selection\n            _paperUnSelect(interaction);\n        });\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of matches\n     */\n    var _getRawResponse = function _getRawResponse(interaction) {\n        var pairs = [];\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (element && _.isArray(element.data('matching'))) {\n                _.forEach(element.data('matching'), function(gapImg) {\n                    //backward support of previous order\n                    if (isDirectedPairFlipped) {\n                        pairs.push([choice.id(), gapImg]);\n                    } else {\n                        pairs.push([gapImg, choice.id()]);\n                    }\n                });\n            }\n        });\n        return _.sortBy(pairs, [0, 1]);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        var $container = containerHelper.get(interaction);\n        var responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                responseValues = null;\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function(choice) {\n                    var element = interaction.paper.getById(choice.serial);\n                    if (element) {\n                        _.forEach(responseValues, function(pair) {\n                            var responseChoice;\n                            var responseGap;\n                            if (pair.length === 2) {\n                                //backward support of previous order\n                                responseChoice = isDirectedPairFlipped ? pair[0] : pair[1];\n                                responseGap = isDirectedPairFlipped ? pair[1] : pair[0];\n                                if (responseChoice === choice.id()) {\n                                    $$1('[data-identifier=\"' + responseGap + '\"]', $container).addClass('active');\n                                    _selectShape(interaction, element);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     */\n    var resetResponse = function resetResponse(interaction) {\n        _shapesUnSelectable(interaction);\n\n        _.forEach(interaction.gapFillers, function(gapFiller) {\n            interactUtils.tapOn(gapFiller.items[2][0]); // this refers to the gapFiller image\n        });\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        var raw = _getRawResponse(interaction);\n        return pciResponse.serialize(raw, interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction) {\n        var $container;\n        if (interaction.paper) {\n            $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n\n            interact($container.find('ul.source li').selector).unset(); // gapfillers\n            interact($container.find('.main-image-box rect').selector).unset(); // choices/hotspot\n        }\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var GraphicGapMatchInteraction = {\n        qtiClass: 'graphicGapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        isDirectedPairFlipped: isDirectedPairFlipped\n    };\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicOrderInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal ordinals\\\"></ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction) {\n        var self = this;\n\n        return new Promise(function(resolve, reject) {\n            var $container = containerHelper.get(interaction);\n            var $orderList = $$1('ul', $container);\n            var background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container\n            });\n\n            //create the list of number to order\n            _renderOrderList(interaction, $orderList);\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction, $orderList));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function(data) {\n                    graphic.highlightError(data.target);\n                }\n            });\n        });\n    };\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice = function _renderChoice(interaction, $orderList, choice) {\n        var rElement = graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $$1(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n                if (this.active) {\n                    _unselectShape(interaction.paper, this, $orderList);\n                } else {\n                    _selectShape(interaction.paper, this, $orderList);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice });\n            });\n    };\n\n    /**\n     * Render the list of numbers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    var _renderOrderList = function _renderOrderList(interaction, $orderList) {\n        var $orderers;\n        var size = _.size(interaction.getChoices());\n        var min = interaction.attr('minChoices');\n        var max = interaction.attr('maxChoices');\n\n        //calculate the number of orderer to display\n        if (max > 0 && max <= size) {\n            size = max;\n        } else if (min > 0 && min <= size) {\n            size = min;\n        }\n\n        //add them to the list\n        _.times(size, function(index) {\n            var position = index + 1;\n            var $orderer = $$1('<li class=\"selectable\" data-number=\"' + position + '\">' + position + '</li>');\n            if (index === 0) {\n                $orderer.addClass('active');\n            }\n            $orderList.append($orderer);\n        });\n\n        //create related svg texts\n        _createTexts(interaction.paper, size);\n\n        //bind the activation event\n        $orderers = $orderList.children('li');\n        $orderers.click(function(e) {\n            e.preventDefault();\n            var $orderer = $$1(this);\n\n            if (!$orderer.hasClass('active') && !$orderer.hasClass('disabled')) {\n                $orderers.removeClass('active');\n                $orderer.addClass('active');\n            }\n        });\n    };\n\n    /**\n     * Select a shape to position an order\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the selected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    var _selectShape = function _selectShape(paper, element, $orderList) {\n        //lookup for the active number\n        var $active = $orderList.find('.active:first');\n        if ($active.length && $active.data('number') > 0) {\n            //associate the current number directly to the element\n            element.data('number', $active.data('number'));\n            element.active = true;\n            _showText(paper, element);\n            graphic.updateElementState(element, 'active');\n\n            //update the state of the order list\n            $active\n                .toggleClass('active disabled')\n                .siblings(':not(.disabled)')\n                .first()\n                .toggleClass('active');\n        }\n    };\n\n    /**\n     * Unselect a shape to free the position\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the unselected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    var _unselectShape = function _unselectShape(paper, element, $orderList) {\n        var number = element.data('number');\n        var unsetNumbers = [number];\n\n        $orderList\n            .children(':not(.disabled)')\n            .each(function() {\n                unsetNumbers.push($$1(this).data('number'));\n            });\n\n        var activeNumber = Math.min.apply(Math, unsetNumbers) || number;\n\n        //update element state\n        element.active = false;\n        _hideText(paper, element);\n        element.removeData('number');\n        graphic.updateElementState(element, 'basic');\n\n        //reset order list state and activate the removed number\n        $orderList\n            .children()\n            .removeClass('active')\n            .filter('[data-number=' + number + ']')\n            .removeClass('disabled');\n\n        // Set (min) active number\n        $orderList\n            .find('li[data-number=\"' + activeNumber + '\"]')\n            .addClass('active');\n    };\n\n    /**\n     * Creates ALL the texts (the numbers to display in the shapes). They are created styled but hidden.\n     *\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Number} size - the number of numbers to create...\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @return {Array} the creates text element\n     */\n    var _createTexts = function _createTexts(paper, size) {\n        var texts = [];\n        _.times(size, function(index) {\n            var number = index + 1;\n            var text = graphic.createText(paper, {\n                id: 'text-' + number,\n                content: number,\n                title: __('Remove'),\n                style: 'order-text',\n                hide: true,\n                disableEvents: true\n            });\n\n            texts.push(text);\n        });\n        return texts;\n    };\n\n    /**\n     * Show the text that match the element's number.\n     * We need to display it at the center of the shape.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to show the text for\n     */\n    var _showText = function _showText(paper, element) {\n        var bbox = element.getBBox();\n        var transf;\n\n        //we retrieve the good text from it's id\n        var text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            //move it to the center of the shape (using absolute transform), and than display it\n            transf = 'T' + (bbox.x + bbox.width / 2) + ',' + (bbox.y + bbox.height / 2);\n            text.transform(transf)\n                .show()\n                .toFront();\n        }\n    };\n\n    /**\n     * Hide an element text.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to hide the text for\n     */\n    var _hideText = function _hideText(paper, element) {\n        var text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            text.hide();\n        }\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    var _getRawResponse = function _getRawResponse(interaction) {\n        var response = [];\n        _.forEach(interaction.getChoices(), function(choice) {\n            var elt = interaction.paper.getById(choice.serial);\n            if (elt && elt.data('number')) {\n                response.push({\n                    index: elt.data('number'),\n                    id: choice.id()\n                });\n            }\n        });\n        return _(response)\n            .sortBy('index')\n            .map('id')\n            .value();\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        var responseValues;\n        var $container = containerHelper.get(interaction);\n        var $orderList = $$1('ul', $container);\n        if (response && interaction.paper) {\n            try {\n                //try to unserualize tthe pci response\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {}\n\n            if (_.isArray(responseValues)) {\n                _.forEach(responseValues, function(responseValue, index) {\n                    var element;\n                    var number = index + 1;\n\n                    //get the choice that match the response\n                    var choice = _(interaction.getChoices())\n                        .where({ attributes: { identifier: responseValue } })\n                        .first();\n                    if (choice) {\n                        element = interaction.paper.getById(choice.serial);\n                        if (element) {\n                            //activate the orderer to be consistant\n                            $orderList.children('[data-number=' + number + ']').addClass('active');\n\n                            //select the related shape\n                            _selectShape(interaction.paper, element, $orderList);\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var resetResponse = function resetResponse(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $orderList = $$1('ul', $container);\n\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (element) {\n                _unselectShape(interaction.paper, element, $orderList);\n            }\n        });\n\n        $orderList\n            .children('li')\n            .removeClass('active disabled')\n            .first()\n            .addClass('active');\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction) {\n        var $container;\n        if (interaction.paper) {\n            $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var GraphicOrderInteraction = {\n        qtiClass: 'graphicOrderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-hotspotInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction) {\n        var self = this;\n\n        return new Promise(function(resolve, reject) {\n            var $container = containerHelper.get(interaction);\n            var background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                container: $container\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function(data) {\n                    if (data.target.active) {\n                        data.target.active = false;\n                        graphic.updateElementState(this, 'basic', __('Select this area'));\n                        graphic.highlightError(data.target);\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                        $container.trigger('inactiveChoice.qti-widget', [data.choice, data.target]);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice = function _renderChoice(interaction, choice) {\n        var $container = containerHelper.get(interaction);\n        var rElement = graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function() {\n                if (this.active) {\n                    graphic.updateElementState(this, 'basic', __('Select this area'));\n                    this.active = false;\n                    $container.trigger('inactiveChoice.qti-widget', [choice, this]);\n                } else {\n                    graphic.updateElementState(this, 'active', __('Click again to remove'));\n                    this.active = true;\n                    $container.trigger('activeChoice.qti-widget', [choice, this]);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    var _getRawResponse = function _getRawResponse(interaction) {\n        return _(interaction.getChoices())\n            .map(function(choice) {\n                var rElement = interaction.paper.getById(choice.serial);\n                return rElement && rElement.active === true ? choice.id() : false;\n            })\n            .filter(_.isString)\n            .value();\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        var responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {}\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function(choice) {\n                    var rElement;\n                    if (_.contains(responseValues, choice.attributes.identifier)) {\n                        rElement = interaction.paper.getById(choice.serial);\n                        if (rElement) {\n                            rElement.active = true;\n                            graphic.updateElementState(rElement, 'active', __('Click again to remove'));\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: rElement });\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var resetResponse = function resetResponse(interaction) {\n        _.forEach(interaction.getChoices(), function(choice) {\n            var element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n        instructionMgr.resetInstructions(interaction);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        var raw = _getRawResponse(interaction);\n        var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction) {\n        var $container;\n        if (interaction.paper) {\n            $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var HotspotInteraction = {\n        qtiClass: 'hotspotInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',['jquery', 'lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, Handlebars, __, DOMPurify, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-hottextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"hottextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n  \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * 'pseudo-label' is technically a div that behaves like a label.\n     * This allows the usage of block elements inside the fake label\n     */\n    var pseudoLabel = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        var setChoice = function($choice, interaction) {\n            var $inupt = $choice.find('input');\n\n            if ($inupt.prop('checked') || $inupt.hasClass('disabled')) {\n                $inupt.prop('checked', false);\n            } else {\n                var maxChoices = parseInt(interaction.attr('maxChoices'));\n                var currentChoices = _.values(_getRawResponse(interaction)).length;\n\n                if (currentChoices < maxChoices || maxChoices === 0) {\n                    $inupt.prop('checked', true);\n                }\n            }\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction, { choice: $choice });\n        };\n\n        $$1('.hottext', $container).on('click', function(e) {\n            e.preventDefault();\n            setChoice($$1(this), interaction);\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        pseudoLabel(interaction);\n\n        //set up the constraints instructions\n        instructionMgr.minMaxChoiceInstructions(interaction, {\n            min: interaction.attr('minChoices'),\n            max: interaction.attr('maxChoices'),\n            getResponse: _getRawResponse,\n            onError: function(data) {\n                var $input, $choice, $icon;\n                if (data.choice && data.choice.length) {\n                    $choice = data.choice.addClass('error');\n                    $input = $choice.find('input');\n                    $icon = $choice.find(' > label > span').addClass('error cross');\n\n                    setTimeout(function() {\n                        $input.prop('checked', false);\n                        $choice.removeClass('error');\n                        $icon.removeClass('error cross');\n                    }, 350);\n                }\n            }\n        });\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        $$1('input', $container).prop('checked', false);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        var $container = containerHelper.get(interaction);\n\n        try {\n            _.each(pciResponse.unserialize(response, interaction), function(identifier) {\n                $container.find('input[value=\"' + identifier + '\"]').prop('checked', true);\n            });\n            instructionMgr.validateInstructions(interaction);\n        } catch (e) {\n            throw new Error('wrong response format in argument : ' + e);\n        }\n    };\n\n    var _getRawResponse = function(interaction) {\n        var values = [];\n        var $container = containerHelper.get(interaction);\n        $$1('input:checked', $container).each(function() {\n            values.push($$1(this).val());\n        });\n        return values;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //restore selected choices:\n        $container.find('.hottext').off('click');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    var HottextInteraction = {\n        qtiClass: 'hottextInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'ui/tooltip', 'select2'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, tooltip, select2) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<select \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-inlineChoiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n        data-qti-class=\\\"inlineChoiceInteraction\\\"\\n        data-has-search=\\\"false\\\"\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <option></option>                \\n    <option value=\\\"empty\\\"></option>\\n    \";\n      options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</select>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * The value of the \"empty\" option\n     * @type String\n     */\n    var _emptyValue = 'empty';\n\n    var _defaultOptions = {\n        allowEmpty: true,\n        placeholderText: __('select a choice')\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction, options) {\n        var opts = _.clone(_defaultOptions);\n        var required = !!interaction.attr('required');\n        var choiceTooltip;\n        var $container = containerHelper.get(interaction);\n\n        _.extend(opts, options);\n\n        if (opts.allowEmpty && !required) {\n            $container.find('option[value=' + _emptyValue + ']').text('--- ' + __('leave empty') + ' ---');\n        } else {\n            $container.find('option[value=' + _emptyValue + ']').remove();\n        }\n\n        const getItemDir = () => {\n            const itemBody = $$1('.qti-itemBody');\n            const itemDir = itemBody.attr('dir') || 'ltr';\n            return itemDir;\n        };\n\n        const dirClass = getItemDir();\n        $container.select2({\n            width: 'element',\n            placeholder: opts.placeholderText,\n            minimumResultsForSearch: -1,\n            containerCssClass: `${dirClass}`,\n            dropdownCssClass: `qti-inlineChoiceInteraction-dropdown ${dirClass}`\n        });\n\n        var $el = $container.select2('container');\n\n        if (required) {\n            //set up the tooltip plugin for the input\n            choiceTooltip = tooltip.warning($el, __('A choice must be selected'));\n\n            if ($container.val() === '') {\n                choiceTooltip.show();\n            }\n        }\n\n        $container\n            .on('change', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we must fix the situation when select2 prevents tts from working\n                //for this a \"one-moment\" handler of option click is added and removed after event fired\n                if (\n                    $$1(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    var $selectedIndex = $$1(e.currentTarget)[0].options.selectedIndex\n                        ? $$1(e.currentTarget)[0].options.selectedIndex\n                        : null;\n                    $container.find('option').one('click', function(e) {\n                        e.stopPropagation();\n                    });\n                    $container\n                        .find('option')\n                        .eq($selectedIndex)\n                        .trigger('click');\n                }\n\n                if (required && $container.val() !== '') {\n                    choiceTooltip.hide();\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n            })\n            .on('select2-open', function() {\n                if (required) {\n                    choiceTooltip.hide();\n                }\n            })\n            .on('select2-close', function() {\n                if (required && $container.val() === '') {\n                    choiceTooltip.show();\n                }\n            });\n    };\n\n    var resetResponse = function(interaction) {\n        _setVal(interaction, _emptyValue);\n    };\n\n    var _setVal = function(interaction, choiceIdentifier) {\n        containerHelper\n            .get(interaction)\n            .val(choiceIdentifier)\n            .select2('val', choiceIdentifier);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    };\n\n    var _getRawResponse = function(interaction) {\n        var value = containerHelper.get(interaction).val();\n        return value && value !== _emptyValue ? [value] : [];\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        $$1(document).off('.commonRenderer');\n\n        $container.select2('destroy');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                //just in case the dropdown is opened\n                $container.select2('disable').select2('close');\n\n                $$1('option[data-identifier]', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($container);\n\n                $container.select2('enable');\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('option[data-identifier]', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the inline choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction\n     */\n    var InlineChoiceInteraction = {\n        qtiClass: 'inlineChoiceInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program11(depth0,data,depth1) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n      <tr>\\n        \";\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      stack1 = helpers.each.call(depth0, (depth1 && depth1.matchSet1), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n      </tr>\\n      \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \"\\n        <td>\\n          <label>\\n            <input type=\\\"checkbox\\\" >\\n            <span class=\\\"icon-checkbox cross\\\"></span>\\n          </label>\\n        </td>\\n        \";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-matchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"matchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n  \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"match-interaction-area\\\">\\n    <table class=\\\"matrix\\\">\\n      <thead>\\n      <tr>\\n        <th> </th>\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.matchSet1) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.matchSet1); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.matchSet1) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n      </tr>\\n      </thead>\\n      <tbody>\\n      \";\n      options={hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data};\n      if (helper = helpers.matchSet2) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.matchSet2); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.matchSet2) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * TODO do not use global context var, it's value is shared between interaction instances\n     *\n     * Flag to not throw warning instruction if already\n     * displaying the warning. If such a flag is not used,\n     * disturbances can be seen by the candidate if he clicks\n     * like hell on choices.\n     */\n    var inWarning = false;\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        // Initialize instructions system.\n        _setInstructions(interaction);\n\n        $container.on('click.commonRenderer', 'input[type=checkbox]', function(e) {\n            _onCheckboxSelected(interaction, e);\n        });\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        var $container = containerHelper.get(interaction);\n        response = _filterResponse(response);\n\n        if (typeof response.list !== 'undefined' && typeof response.list.directedPair !== 'undefined') {\n            _(response.list.directedPair).forEach(function(directedPair) {\n                var x = $$1('th[data-identifier=\"' + directedPair[0] + '\"]', $container).index() - 1;\n                var y = $$1('th[data-identifier=\"' + directedPair[1] + '\"]', $container)\n                    .parent()\n                    .index();\n\n                $$1('.matrix > tbody tr', $container)\n                    .eq(y)\n                    .find('input[type=checkbox]')\n                    .eq(x)\n                    .prop('checked', true);\n            });\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\n        return response;\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        $$1('input[type=checkbox]:checked', $container).each(function() {\n            $$1(this).prop('checked', false);\n        });\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    var _filterResponse = function(response) {\n        if (typeof response.list === 'undefined') {\n            // Maybe it's a base?\n            if (typeof response.base === 'undefined') {\n                // Oops, it is even not a base.\n                throw 'The given response is not compliant with PCI JSON representation.';\n            } else {\n                // It's a base, Is it a directedPair? Null?\n                if (response.base === null) {\n                    return { list: { directedPair: [] } };\n                } else if (typeof response.base.directedPair === 'undefined') {\n                    // Oops again, it is not a directedPair.\n                    throw 'The matchInteraction only accepts directedPair values as responses.';\n                } else {\n                    return { list: { directedPair: [response.base.directedPair] } };\n                }\n            }\n        } else if (typeof response.list.directedPair === 'undefined') {\n            // Oops, not a directedPair.\n            throw 'The matchInteraction only accept directedPair values as responses.';\n        } else {\n            return response;\n        }\n    };\n\n    var _getRawResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var values = [];\n\n        $container.find('input[type=checkbox]:checked').each(function() {\n            values.push(_inferValue(this));\n        });\n\n        return values;\n    };\n\n    var _inferValue = function(element) {\n        var $element = $$1(element);\n        var $container = $element.closest('.match-interaction-area');\n        var y = $element.closest('tr').index();\n        var x = $element.closest('td').index();\n        var firstId = $$1('.matrix > thead th', $container)\n            .eq(x)\n            .data('identifier');\n        var secondId = $$1('.matrix > tbody th', $container)\n            .eq(y)\n            .data('identifier');\n        return [firstId, secondId];\n    };\n\n    var _onCheckboxSelected = function(interaction, e) {\n        var choice;\n        var currentResponse = _getRawResponse(interaction);\n        var minAssociations = interaction.attr('minAssociations');\n        var maxAssociations = interaction.attr('maxAssociations');\n\n        if (maxAssociations === 0) {\n            maxAssociations = _countChoices(interaction);\n        }\n\n        if (_.size(currentResponse) > maxAssociations) {\n            // No more associations possible.\n            e.preventDefault();\n            instructionMgr.validateInstructions(interaction);\n        } else if ((choice = _maxMatchReached(interaction, e.target)) !== false) {\n            // Check if matchmax is respected for both choices\n            // involved in the selection.\n            e.preventDefault();\n            instructionMgr.validateInstructions(interaction, choice);\n        } else {\n            containerHelper.triggerResponseChangeEvent(interaction, {});\n            instructionMgr.validateInstructions(interaction);\n        }\n    };\n\n    var _maxMatchReached = function(interaction, input) {\n        var association = _inferValue(input);\n        var overflow = false;\n\n        _(association).forEach(function(identifier) {\n            var choice = _getChoiceDefinitionByIdentifier(interaction, identifier);\n            var matchMin = choice.attributes.matchMin;\n            var matchMax = choice.attributes.matchMax;\n            var assoc = _countAssociations(interaction, choice);\n\n            if (matchMax > 0 && assoc > matchMax) {\n                overflow = choice;\n            }\n        });\n\n        return overflow;\n    };\n\n    var _countAssociations = function(interaction, choice) {\n        var rawResponse = _getRawResponse(interaction);\n        var count = 0;\n\n        // How much time can we find rawChoice in rawResponses?\n        _(rawResponse).forEach(function(response) {\n            if (response[0] === choice.attributes.identifier || response[1] === choice.attributes.identifier) {\n                count++;\n            }\n        });\n\n        return count;\n    };\n\n    var _countChoices = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        return $container.find('input[type=checkbox]').length;\n    };\n\n    var _getChoiceDefinitionByIdentifier = function(interaction, identifier) {\n        var rawChoices = _getRawChoices(interaction);\n        return rawChoices[identifier];\n    };\n\n    var _getRawChoices = function(interaction) {\n        var rawChoices = {};\n\n        _(interaction.choices).forEach(function(matchset) {\n            _(matchset).forEach(function(choice) {\n                rawChoices[choice.attributes.identifier] = choice;\n            });\n        });\n\n        return rawChoices;\n    };\n\n    var _setInstructions = function(interaction) {\n        var msg;\n        var minAssociations = interaction.attr('minAssociations');\n        var maxAssociations = interaction.attr('maxAssociations');\n        var choiceCount = _countChoices(interaction);\n\n        // Super closure is here again to save our souls! Houray!\n        // ~~~~~~~ |==||||0__\n\n        var superClosure = function() {\n            var onMaxChoicesReached = function(report, msg) {\n                if (inWarning === false) {\n                    inWarning = true;\n\n                    report.update({\n                        level: 'warning',\n                        message: __('Maximum number of choices reached.'),\n                        timeout: 2000,\n                        stop: function() {\n                            report.update({ level: 'success', message: msg });\n                            inWarning = false;\n                        }\n                    });\n                }\n            };\n\n            var onMatchMaxReached = function(interaction, choice, report, msg, level) {\n                var $container = containerHelper.get(interaction);\n\n                if (inWarning === false) {\n                    inWarning = true;\n\n                    var $choice = $container.find(\n                        '.qti-simpleAssociableChoice[data-identifier=\"' + choice.attributes.identifier + '\"]'\n                    );\n                    var originalBackgroundColor = $choice.css('background-color');\n                    var originalColor = $choice.css('color');\n\n                    report.update({\n                        level: 'warning',\n                        message: __('The highlighted choice cannot be associated more than %d time(s).').replace(\n                            '%d',\n                            choice.attributes.matchMax\n                        ),\n                        timeout: 3000,\n                        start: function() {\n                            $choice.animate(\n                                {\n                                    backgroundColor: '#fff',\n                                    color: '#ba122b'\n                                },\n                                250,\n                                function() {\n                                    $choice.animate(\n                                        {\n                                            backgroundColor: '#ba122b',\n                                            color: '#fff'\n                                        },\n                                        250\n                                    );\n                                }\n                            );\n                        },\n                        stop: function() {\n                            $choice.animate(\n                                {\n                                    backgroundColor: originalBackgroundColor,\n                                    color: originalColor\n                                },\n                                500\n                            );\n                            report.update({ level: level, message: msg });\n                            inWarning = false;\n                        }\n                    });\n                }\n            };\n\n            if (minAssociations === 0 && maxAssociations > 0) {\n                // No minimum but maximum.\n                msg = __('You must select 0 to %d choices.').replace('%d', maxAssociations);\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                    var responseCount = _.size(_getRawResponse(interaction));\n\n                    if (\n                        choice &&\n                        choice.attributes &&\n                        choice.attributes.matchMax > 0 &&\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\n                    ) {\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    } else if (responseCount <= maxAssociations) {\n                        this.setLevel('success');\n                    } else if (responseCount > maxAssociations) {\n                        onMaxChoicesReached(this, msg);\n                    } else {\n                        this.reset();\n                    }\n                });\n            } else if (minAssociations === 0 && maxAssociations === 0) {\n                // No minimum, no maximum.\n                msg = __('You must select 0 to %d choices.').replace('%d', choiceCount);\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                    if (\n                        choice &&\n                        choice.attributes &&\n                        choice.attributes.matchMax > 0 &&\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\n                    ) {\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    } else {\n                        this.setLevel('success');\n                    }\n                });\n            } else if (minAssociations > 0 && maxAssociations === 0) {\n                // minimum but no maximum.\n                msg = __('You must select %1$d to %2$d choices.');\n                msg = msg.replace('%1$d', minAssociations);\n                msg = msg.replace('%2$d', choiceCount);\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                    var responseCount = _.size(_getRawResponse(interaction));\n\n                    if (\n                        choice &&\n                        choice.attributes &&\n                        choice.attributes.matchMax > 0 &&\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\n                    ) {\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    } else if (responseCount < minAssociations) {\n                        this.setLevel('info');\n                    } else if (responseCount > choiceCount) {\n                        onMaxChoicesReached(this, msg);\n                    } else {\n                        this.setLevel('success');\n                    }\n                });\n            } else if (minAssociations > 0 && maxAssociations > 0) {\n                // minimum and maximum.\n                if (minAssociations !== maxAssociations) {\n                    msg = __('You must select %1$d to %2$d choices.');\n                    msg = msg.replace('%1$d', minAssociations);\n                    msg = msg.replace('%2$d', maxAssociations);\n                } else {\n                    msg = __('You must select exactly %d choice(s).');\n                    msg = msg.replace('%d', minAssociations);\n                }\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                    var responseCount = _.size(_getRawResponse(interaction));\n\n                    if (\n                        choice &&\n                        choice.attributes &&\n                        choice.attributes.matchMax > 0 &&\n                        _countAssociations(interaction, choice) > choice.attributes.matchMax\n                    ) {\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    } else if (responseCount < minAssociations) {\n                        this.setLevel('info');\n                    } else if (responseCount > maxAssociations) {\n                        onMaxChoicesReached(this, msg);\n                    } else if (responseCount >= minAssociations && responseCount <= maxAssociations) {\n                        this.setLevel('success');\n                    }\n                });\n            }\n        };\n\n        superClosure();\n    };\n\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        $container.off('.commonRenderer');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === 2) {\n                $container = containerHelper.get(interaction);\n\n                $$1('thead .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order[0], $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order[0], $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('thead tr', $container));\n\n                $$1('tbody .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order[1], $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order[1], $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .each(function(index, elt) {\n                        $$1(elt).prependTo($$1('tbody tr', $container).eq(index));\n                    });\n            }\n\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [[], []];\n            $$1('thead .qti-choice', $container).each(function() {\n                state.order[0].push($$1(this).data('identifier'));\n            });\n            $$1('tbody .qti-choice', $container).each(function() {\n                state.order[1].push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the match interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MatchInteraction\n     */\n    var MatchInteraction = {\n        qtiClass: 'matchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        inferValue: _inferValue\n    };\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',['jquery', 'lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/mediaplayer'], function ($$1, _, Handlebars, __, DOMPurify, pciResponse, containerHelper, mediaplayer) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    mediaplayer = mediaplayer && Object.prototype.hasOwnProperty.call(mediaplayer, 'default') ? mediaplayer['default'] : mediaplayer;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-mediaInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"media-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2018 (original work) Open Assessment Technlogies SA\n     *\n     */\n\n    const qtiClass = 'mediaInteraction';\n    const getContainer = containerHelper.get;\n\n    //some default values\n    const defaults = {\n        type: 'video/mp4'\n    };\n\n    //some patterns to match context in which disable the media preview\n    const reWebM = /.*\\.webm/i;\n    const reFirefoxVersion = /firefox\\/([0-9]+\\.*[0-9]*)/i;\n\n    /**\n     * Checks if a media can be previewed safely\n     * @param {String} type - The type of media\n     * @param {String} url - The URL to the media\n     * @returns {Boolean}\n     */\n    function canPreviewMedia(type, url) {\n        const firefox = reFirefoxVersion.exec(navigator.userAgent);\n        const webm = reWebM.test(url);\n        return !(webm && firefox && parseFloat(firefox[1]) >= 87);\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10391\n     *\n     * @param {Object} interaction\n     * @fires playerrendered when the player is at least rendered\n     * @fires playerready when the player is sucessfully loaded and configured\n     * @returns {Promise}\n     */\n    function render(interaction) {\n        return new Promise(resolve => {\n            const $container = getContainer(interaction);\n            const media = interaction.object;\n            const $item = $container.parents('.qti-item');\n            const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n\n            //check if the media can be played (using timesPlayed and maxPlays)\n            const canBePlayed = () => maxPlays === 0 || maxPlays > parseInt($container.data('timesPlayed'), 10);\n\n            /**\n             * Resize video player elements to fit container size\n             * @param {Object} mediaElement - player instance\n             * @param {jQueryElement} $container   - container element to adapt\n             */\n            const resize = _.debounce(() => {\n                // only resize when width in px\n                // new version has width in %\n                const  currentWidth = media.attr('width');\n                if (interaction.mediaElement && currentWidth && !currentWidth.includes('%')) {\n                    const height = $container.find('.media-container').height();\n                    const width = $container.find('.media-container').width();\n\n                    interaction.mediaElement.resize(width, height);\n                }\n            }, 200);\n\n            //intialize the player if not yet done\n            const initMediaPlayer = () => {\n                if (!interaction.mediaElement) {\n                    const type = media.attr('type') || defaults.type;\n                    const mediaUrl = media.attr('data') || '';\n                    const url = mediaUrl && this.resolveUrl(mediaUrl);\n                    const preview = canPreviewMedia(type, url);\n\n                    interaction.mediaElement = mediaplayer({\n                        url,\n                        type,\n                        preview,\n                        canPause: $container.hasClass('pause'),\n                        maxPlays: maxPlays,\n                        canSeek: !maxPlays,\n                        width: media.attr('width'),\n                        height: media.attr('height'),\n                        volume: 100,\n                        autoStart: !!interaction.attr('autostart') && canBePlayed(),\n                        loop: !!interaction.attr('loop'),\n                        renderTo: $$1('.media-container', $container)\n                    })\n                        .on('render', () => {\n                            resize();\n\n                            $$1(window)\n                                .off('resize.mediaInteraction')\n                                .on('resize.mediaInteraction', resize);\n\n                            $item.off('resize.gridEdit').on('resize.gridEdit', resize);\n                            /**\n                             * @event playerrendered\n                             */\n                            $container.trigger('playerrendered');\n                        })\n                        .on('ready', function () {\n                            /**\n                             * @event playerready\n                             */\n                            $container.trigger('playerready');\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n\n                            // on slow network the resize runs before ready, so it should be called again\n                            resize();\n\n                            // declare the item ready when player is ready to play.\n                            resolve();\n                        })\n                        .on('update', _.throttle(() => containerHelper.triggerResponseChangeEvent(interaction), 1000))\n                        .on('ended', function () {\n                            $container.data('timesPlayed', $container.data('timesPlayed') + 1);\n                            containerHelper.triggerResponseChangeEvent(interaction);\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n                        });\n                }\n            };\n\n\n            //set up the number of times played\n            if (!$container.data('timesPlayed')) {\n                $container.data('timesPlayed', 0);\n            }\n\n            //initialize the component\n            $container.on('responseSet', initMediaPlayer);\n\n            //gives a small chance to the responseSet event before initializing the player\n            initMediaPlayer();\n        });\n    }\n\n    /**\n     * Destroy the current interaction\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = getContainer(interaction);\n\n        if (interaction.mediaElement) {\n            interaction.mediaElement.destroy();\n            interaction.mediaElement = null;\n        }\n\n        $$1('.instruction-container', $container).empty();\n        $$1('.media-container', $container).empty();\n\n        $container.removeData('timesPlayed');\n\n        $$1(window).off('resize.video');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    function _getRawResponse(interaction) {\n        return [getContainer(interaction).data('timesPlayed') || 0];\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    function setResponse(interaction, response) {\n        if (response) {\n            try {\n                const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n                const responseValues = pciResponse.unserialize(response, interaction);\n                const timesPlayed = parseInt(responseValues[0], 10) || 0;\n                getContainer(interaction).data('timesPlayed', timesPlayed);\n\n                if (interaction.mediaElement) {\n                    if (maxPlays !== 0 && maxPlays <= timesPlayed) {\n                        interaction.mediaElement.disable();\n                    } else if (interaction.mediaElement.is('disabled')) {\n                        interaction.mediaElement.enable();\n                    }\n                }\n            } catch (e) {\n                // something went wrong\n            }\n        }\n    }\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    function resetResponse(interaction) {\n        getContainer(interaction).data('timesPlayed', 0);\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    function getResponse(interaction) {\n        if (!getContainer(interaction).data('timesPlayed')) {\n            return { base: null };\n        }\n\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        /**\n         * Restore the media player state\n         * @private\n         * @param {Object} [playerState]\n         * @param {Boolean} [playerState.muted] - is the player muted\n         * @param {Number} [playerState.volume] - the current volume\n         * @param {Number} [playerState.position] - the position to seek to\n         */\n        const restorePlayerState = playerState => {\n            if (playerState && interaction.mediaElement) {\n                //Volume\n                if (_.isNumber(playerState.volume)) {\n                    interaction.mediaElement.setVolume(playerState.volume);\n                }\n\n                //Muted state (always after the volume)\n                if (_.isBoolean(playerState.muted)) {\n                    interaction.mediaElement.mute(playerState.muted);\n                    interaction.mediaElement.startMuted = playerState.muted;\n                }\n\n                //Position\n                if (playerState.position && playerState.position > 0) {\n                    interaction.mediaElement.seek(playerState.position);\n                    if (!interaction.attr('autostart')) {\n                        interaction.mediaElement.pause();\n                    }\n                }\n            }\n        };\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            if (_.isPlainObject(state.player) && interaction.mediaElement) {\n                if (interaction.mediaElement.is('ready')) {\n                    restorePlayerState(state.player);\n                } else {\n                    interaction.mediaElement.on('ready.state', () => {\n                        interaction.mediaElement.off('ready.state');\n                        restorePlayerState(state.player);\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //collect player's state\n        if (interaction.mediaElement) {\n            state.player = {\n                position: interaction.mediaElement.getPosition(),\n                muted: interaction.mediaElement.is('muted'),\n                volume: interaction.mediaElement.getVolume()\n            };\n        }\n        return state;\n    }\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MediaInteraction\n     */\n    var MediaInteraction = {\n        qtiClass,\n        template,\n        render,\n        getContainer,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',['lodash', 'jquery', 'i18n', 'core/mouseEvent', 'services/features', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, $$1, __, mouseEvent, features, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      return \" qti-horizontal\";\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" qti-vertical\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      \n      return \"horizontal\";\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"vertical\";\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program17(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program19(depth0,data) {\n      \n      \n      return \"icon-down\";\n      }\n\n    function program21(depth0,data) {\n      \n      \n      return \"icon-right\";\n      }\n\n    function program23(depth0,data) {\n      \n      \n      return \"icon-up\";\n      }\n\n    function program25(depth0,data) {\n      \n      \n      return \"icon-left\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-orderInteraction\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n     data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n     data-qti-class=\\\"orderInteraction\\\"\\n     data-orientation=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"order-interaction-area\\\">\\n        <ul class=\\\"choice-area square source solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n        <div class=\\\"arrow-bar middle\\\">\\n            <span class=\\\"icon-add-to-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\\n            <span class=\\\"icon-remove-from-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n        <ul class=\\\"drag-container block-listing\\\"></ul>\\n        <ul class=\\\"result-area decimal target solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n        </ul>\\n        <div class=\\\"arrow-bar\\\">\\n            <span class=\\\"icon-move-before \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(23, program23, data),fn:self.program(25, program25, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n            <span class=\\\"icon-move-after \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(19, program19, data),fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const orientationSelectionEnabled = features.isVisible('taoQtiItem/creator/interaction/order/property/orientation');\n\n    const _freezeSize = function ($container) {\n        const $orderArea = $container.find('.order-interaction-area');\n        $orderArea.height($orderArea.height());\n    };\n\n    const _setInstructions = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container),\n            $resultArea = $$1('.result-area', $container),\n            min = parseInt(interaction.attr('minChoices'), 10),\n            max = parseInt(interaction.attr('maxChoices'), 10);\n\n        if (min) {\n            instructionMgr.appendInstruction(interaction, __('You must use at least %d choices', min), function () {\n                if ($resultArea.find('>li').length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n\n        if (max && max < _.size(interaction.getChoices())) {\n            const instructionMax = instructionMgr.appendInstruction(\n                interaction,\n                __('You can use maximum %d choices', max),\n                function () {\n                    if ($resultArea.find('>li').length >= max) {\n                        $choiceArea.find('>li').addClass('deactivated');\n                        this.setMessage(__('Maximum choices reached'));\n                    } else {\n                        $choiceArea.find('>li').removeClass('deactivated');\n                        this.reset();\n                    }\n                }\n            );\n\n            interact(`${$choiceArea.selector} >li.deactivated`).on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n                $target.addClass('brd-error');\n                instructionMax.setLevel('warning', 2000);\n                setTimeout(function () {\n                    $target.removeClass('brd-error');\n                }, 150);\n            });\n\n            // we don't check for isDragAndDropEnabled on purpose, as this binding is not to allow dragging,\n            // but only to provide feedback in case of a drag action on an inactive choice\n            interact(`${$choiceArea.selector} >li.deactivated`)\n                .draggable({\n                    onstart: function (e) {\n                        const $target = $$1(e.target);\n                        $target.addClass('brd-error');\n                        instructionMax.setLevel('warning');\n                    },\n                    onend: function (e) {\n                        const $target = $$1(e.target);\n                        $target.removeClass('brd-error');\n                        instructionMax.setLevel('info');\n                    }\n                })\n                .styleCursor(false);\n        }\n    };\n\n    const resetResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const initialOrder = _.keys(interaction.getChoices());\n        const $choiceArea = $$1('.choice-area', $container).append($$1('.result-area>li', $container));\n        const $choices = $choiceArea.children('.qti-choice');\n\n        $container.find('.qti-choice.active').each(function deactivateChoice() {\n            interactUtils.tapOn(this);\n        });\n\n        $choices.detach().sort(function (choice1, choice2) {\n            return _.indexOf(initialOrder, $$1(choice1).data('serial')) - _.indexOf(initialOrder, $$1(choice2).data('serial'));\n        });\n        $choiceArea.prepend($choices);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    const render = function (interaction) {\n        const $container = containerHelper.get(interaction),\n            $choiceArea = $container.find('.choice-area'),\n            $resultArea = $container.find('.result-area'),\n            $iconAdd = $container.find('.icon-add-to-selection'),\n            $iconRemove = $container.find('.icon-remove-from-selection'),\n            $iconBefore = $container.find('.icon-move-before'),\n            $iconAfter = $container.find('.icon-move-after'),\n            choiceSelector = `${$choiceArea.selector} >li:not(.deactivated)`,\n            resultSelector = `${$resultArea.selector} >li`,\n            $dragContainer = $container.find('.drag-container'),\n            orientation = (interaction.attr('orientation') && orientationSelectionEnabled) ? interaction.attr('orientation') : 'vertical';\n\n        let $activeChoice = null,\n            scaleX,\n            scaleY,\n            isDragAndDropEnabled,\n            dragOptions,\n            $dropzoneElement;\n\n        const _activeControls = function _activeControls() {\n            $iconAdd.addClass('inactive');\n            $iconRemove.removeClass('inactive').addClass('active');\n            $iconBefore.removeClass('inactive').addClass('active');\n            $iconAfter.removeClass('inactive').addClass('active');\n        };\n\n        const _resetControls = function _resetControls() {\n            $iconAdd.removeClass('inactive');\n            $iconRemove.removeClass('active').addClass('inactive');\n            $iconBefore.removeClass('active').addClass('inactive');\n            $iconAfter.removeClass('active').addClass('inactive');\n        };\n\n        const _setSelection = function _setSelection($choice) {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n            }\n            $activeChoice = $choice;\n            $activeChoice.addClass('active');\n        };\n\n        const _resetSelection = function _resetSelection() {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n                $activeChoice = null;\n            }\n            _resetControls();\n        };\n\n        const _addChoiceToSelection = function _addChoiceToSelection($target, position) {\n            const $results = $$1(resultSelector);\n            _resetSelection();\n\n            //move choice to the result list:\n            if (typeof position !== 'undefined' && position < $results.length) {\n                $results.eq(position).before($target);\n            } else {\n                $resultArea.append($target);\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            //update constraints :\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        const _toggleResultSelection = function _toggleResultSelection($target) {\n            if ($target.hasClass('active')) {\n                _resetSelection();\n            } else {\n                _setSelection($target);\n                _activeControls();\n            }\n        };\n\n        const _removeChoice = function _removeChoice() {\n            if ($activeChoice) {\n                //restore choice back to choice list\n                $choiceArea.append($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                //update constraints :\n                instructionMgr.validateInstructions(interaction);\n            }\n\n            _resetSelection();\n        };\n\n        const _moveResultBefore = function _moveResultBefore() {\n            const $prev = $activeChoice.prev();\n\n            if ($prev.length) {\n                $prev.before($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        const _moveResultAfter = function _moveResultAfter() {\n            const $next = $activeChoice.next();\n\n            if ($next.length) {\n                $next.after($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function () {\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n\n            $iconAdd.addClass('triggered');\n            setTimeout(function () {\n                $iconAdd.removeClass('triggered');\n            }, 150);\n\n            _addChoiceToSelection($target);\n        });\n\n        interact(resultSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _toggleResultSelection($target);\n        });\n\n        interact($iconRemove.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _removeChoice();\n        });\n\n        interact($iconBefore.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultBefore();\n        });\n\n        interact($iconAfter.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultAfter();\n        });\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').order) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').order;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function () {\n                if (_isDropzoneVisible()) {\n                    interact($resultArea.selector).fire({\n                        type: 'drop',\n                        target: $dropzoneElement.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            $dropzoneElement = $$1('<li>', { class: 'dropzone qti-choice' });\n            $$1('<div>', { class: 'qti-block' }).appendTo($dropzoneElement);\n\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result draggables\n            interact(resultSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _setSelection($target);\n\n                            // move dragged result to drag container\n                            $dragContainer.show();\n                            $dragContainer.offset($target.offset());\n                            if (orientation === 'horizontal') {\n                                $dragContainer.width($$1(e.currentTarget).width());\n                            } else {\n                                $dragContainer.width($target.parent().width());\n                            }\n                            $dragContainer.append($target);\n\n                            _iFrameDragFix(resultSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target),\n                                hasBeenDroppedInResultArea = $target.parent === $resultArea;\n\n                            $target.removeClass('dragged');\n                            $dragContainer.hide();\n\n                            if (!hasBeenDroppedInResultArea) {\n                                _removeChoice();\n                            }\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result area droppable\n            interact($resultArea.selector).dropzone({\n                overlap: 0.5,\n                ondragenter: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    _insertDropzone($dragged);\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function (e) {\n                    const $dragged = $$1(e.relatedTarget),\n                        dropzoneIndex = $$1(resultSelector).index($dropzoneElement);\n\n                    this.ondragleave(e);\n\n                    _addChoiceToSelection($dragged, dropzoneIndex);\n                    interactUtils.restoreOriginalPosition($dragged);\n                },\n                ondragleave: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    $dropzoneElement.remove();\n                    $dragged.removeClass('droppable');\n                }\n            });\n        }\n\n        function _isDropzoneVisible() {\n            return $$1.contains($container.get(0), $dropzoneElement.get(0));\n        }\n\n        function _insertDropzone($dragged) {\n            const draggedMiddle = _getMiddleOf($dragged),\n                previousMiddle = {\n                    x: 0,\n                    y: 0\n                };\n            let insertPosition;\n\n            // look for position where to insert dropzone\n            $$1(resultSelector).each(function (index) {\n                const currentMiddle = _getMiddleOf($$1(this));\n\n                if (orientation !== 'horizontal') {\n                    if (draggedMiddle.y > previousMiddle.y && draggedMiddle.y < currentMiddle.y) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.y = currentMiddle.y;\n                } else {\n                    if (draggedMiddle.x > previousMiddle.x && draggedMiddle.x < currentMiddle.x) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.x = currentMiddle.x;\n                }\n            });\n            // append dropzone to DOM\n            if (typeof insertPosition !== 'undefined') {\n                $$1(resultSelector).eq(insertPosition).before($dropzoneElement);\n            } else {\n                // no index found, we just append to the end\n                $resultArea.append($dropzoneElement);\n            }\n\n            // style dropzone\n            $dropzoneElement.height($dragged.height());\n            $dropzoneElement.find('div').text($dragged.text());\n        }\n\n        function _adjustDropzonePosition($dragged) {\n            const draggedBox = $dragged.get(0).getBoundingClientRect(),\n                $prevResult = $dropzoneElement.prev('.qti-choice'),\n                $nextResult = $dropzoneElement.next('.qti-choice'),\n                prevMiddle = $prevResult.length > 0 ? _getMiddleOf($prevResult) : false,\n                nextMiddle = $nextResult.length > 0 ? _getMiddleOf($nextResult) : false;\n\n            if (orientation !== 'horizontal') {\n                if (prevMiddle && draggedBox.top < prevMiddle.y) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.bottom > nextMiddle.y) {\n                    $nextResult.after($dropzoneElement);\n                }\n            } else {\n                if (prevMiddle && draggedBox.left < prevMiddle.x) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.right > nextMiddle.x) {\n                    $nextResult.after($dropzoneElement);\n                }\n            }\n        }\n\n        function _getMiddleOf($element) {\n            const elementBox = $element.get(0).getBoundingClientRect();\n            return {\n                x: elementBox.left + elementBox.width / 2,\n                y: elementBox.top + elementBox.height / 2\n            };\n        }\n\n        // rendering init\n\n        _setInstructions(interaction);\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function (e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'maxChoices' || data.key === 'minChoices') {\n                    instructionMgr.removeInstructions(interaction);\n                    _setInstructions(interaction);\n                    instructionMgr.validateInstructions(interaction);\n                }\n            }\n        });\n\n        _freezeSize($container);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container);\n        const $resultArea = $$1('.result-area', $container);\n\n        if (response === null || _.isEmpty(response)) {\n            resetResponse(interaction);\n        } else {\n            try {\n                _.each(pciResponse.unserialize(response, interaction), function (identifier) {\n                    $resultArea.append($choiceArea.find(`[data-identifier=\"${identifier}\"]`));\n                });\n            } catch (e) {\n                throw new Error(`wrong response format in argument : ${e}`);\n            }\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const response = [];\n        $$1('.result-area>li', $container).each(function () {\n            response.push($$1(this).data('identifier'));\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Set additionnal data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    const getCustomData = function (interaction, data) {\n        return _.merge(data || {}, {\n            horizontal: interaction.attr('orientation') === 'horizontal' && orientationSelectionEnabled\n        });\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //first, remove all events\n        const selectors = [\n            '.choice-area >li:not(.deactivated)',\n            '.result-area >li',\n            '.icon-add-to-selection',\n            '.icon-remove-from-selection',\n            '.icon-move-before',\n            '.icon-move-after'\n        ];\n        selectors.forEach(function unbindInteractEvents(selector) {\n            interact($container.find(selector).selector).unset();\n        });\n\n        $$1(document).off('.commonRenderer');\n\n        $container.find('.order-interaction-area').removeAttr('style');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                const $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            const $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the order interaction\n     * @exports qtiCommonRenderer/renderers/interactions/OrderInteraction\n     */\n    var OrderInteraction = {\n        qtiClass: 'orderInteraction',\n        getData: getCustomData,\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2020 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('qtiCustomInteractionContext',['lodash'], function(_) {\n    'use strict';\n\n    //need a global reference to have pciHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._pciHooks = window._pciHooks || {};\n\n    /**\n     * Global object accessible by all PCIs\n     *\n     * @type Object\n     */\n    return {\n        /**\n         * register a custom interaction (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} pciHook\n         * @returns {undefined}\n         */\n        register(pciHook) {\n            const typeIdentifier =\n                typeof pciHook.getTypeIdentifier === 'function' ? pciHook.getTypeIdentifier() : pciHook.typeIdentifier;\n            if (typeIdentifier) {\n                window._pciHooks[typeIdentifier] = pciHook;\n            } else {\n                throw new Error('invalid PCI hook');\n            }\n        },\n        /**\n         * notify when a custom interaction is ready for test taker interaction\n         *\n         * @param {string} pciInstance\n         * @fires custominteractionready\n         */\n        notifyReady(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n        /**\n         * notify when a custom interaction is completed by test taker\n         *\n         * @param {string} pciInstance\n         * @fires custominteractiondone\n         */\n        notifyDone(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n\n        onready(customInteraction, state) {\n            //to be implemented in future story\n        },\n        ondone(customInteraction, response, state, status) {\n            //to be implemented in future story\n        },\n\n        /**\n         * Get a cloned object representing the PCI model\n         *\n         * @param {string} pciTypeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance(pciTypeIdentifier) {\n            const registeredPCI = window._pciHooks[pciTypeIdentifier];\n\n            if (!registeredPCI) {\n                throw new Error('no portable custom interaction hook found with the id ' + pciTypeIdentifier);\n            }\n\n            return _.cloneDeep(registeredPCI);\n        }\n    };\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator',['qtiCustomInteractionContext'], function (qtiCustomInteractionContext) { 'use strict';\n\n    qtiCustomInteractionContext = qtiCustomInteractionContext && Object.prototype.hasOwnProperty.call(qtiCustomInteractionContext, 'default') ? qtiCustomInteractionContext['default'] : qtiCustomInteractionContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var instanciator = {\n        /**\n         * Get the PCI instance associated to the interaction object\n         * If none exists, create a new one based on the PCI typeIdentifier\n         *\n         * @param {Object} interaction - the js object representing the interaction\n         * @returns {Object} PCI instance\n         */\n        getPci(interaction) {\n            let pciTypeIdentifier;\n            let pci = interaction.data('pci');\n\n            if (!pci) {\n                pciTypeIdentifier = interaction.typeIdentifier;\n                pci = qtiCustomInteractionContext.createPciInstance(pciTypeIdentifier);\n                if (pci) {\n                    //binds the PCI instance to TAO interaction object and vice versa\n                    interaction.data('pci', pci);\n                    pci._taoCustomInteraction = interaction;\n                } else {\n                    throw new Error('no custom interaction hook found for the type ' + pciTypeIdentifier);\n                }\n            }\n\n            return pci;\n        },\n\n        /**\n         * Associate a PCI instance to the interaction object\n         * @param {Object} interaction - the js object representing the interaction\n         * @param {Object} instance - PCI instance\n         */\n        setPci(interaction, instance) {\n            interaction.data('pci', instance);\n        }\n    };\n\n    return instanciator;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator'], function (_, containerHelper, instanciator) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    function commonPciRenderer(runtime) {\n        return {\n            getRequiredModules: function getRequiredModules() {\n                var requireEntries = [];\n                //load hook if applicable\n                if (runtime.hook) {\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                }\n                //load libs\n                _.forEach(runtime.libraries, function(lib) {\n                    requireEntries.push(lib.replace(/\\.js$/, ''));\n                });\n                //load stylesheets\n                _.forEach(runtime.stylesheets, function(stylesheet) {\n                    requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                });\n                return requireEntries;\n            },\n            createInstance: function(interaction, context) {\n                var id = interaction.attr('responseIdentifier');\n                var pci = instanciator.getPci(interaction);\n                var properties = _.clone(interaction.properties);\n                var assetManager = context.assetManager;\n                var pciAssetManager = {\n                    resolve: function pciAssetResolve(url) {\n                        var resolved = assetManager.resolveBy('portableElementLocation', url);\n                        if (resolved === url || _.isUndefined(resolved)) {\n                            return assetManager.resolve(url);\n                        } else {\n                            return resolved;\n                        }\n                    }\n                };\n                pci.initialize(\n                    id,\n                    containerHelper\n                        .get(interaction)\n                        .children()\n                        .get(0),\n                    properties,\n                    pciAssetManager\n                );\n                return Promise.resolve(pci);\n            },\n            /**\n             *\n             * @param {Object }interaction\n             * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n             */\n            destroy: function destroy(interaction) {\n                return instanciator.getPci(interaction).destroy();\n            },\n            setState: function setState(interaction, state) {\n                instanciator.getPci(interaction).setSerializedState(state);\n            },\n            getState: function getState(interaction) {\n                return instanciator.getPci(interaction).getSerializedState();\n            }\n        };\n    }\n\n    return commonPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims',['lodash', 'core/logger', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'context'], function (_, loggerFactory, containerHelper, instanciator, sharedContext) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    sharedContext = sharedContext && Object.prototype.hasOwnProperty.call(sharedContext, 'default') ? sharedContext['default'] : sharedContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims');\n\n    const pciDoneCallback = pci => {\n        //standard callback function to be implemented in a future story\n        logger.info('pciDoneCallback called on PCI ' + pci.typeIdentifier);\n    };\n\n    /**\n     * Key under the IMS PCI constructor is stored on interaction\n     */\n    const pciConstructorDataKey = 'pciConstructor';\n\n    function defaultPciRenderer(runtime) {\n        return {\n            getRequiredModules() {\n                const requireEntries = [];\n                // load modules\n                _.forEach(runtime.modules, function (module, name) {\n                    requireEntries.push(name);\n                });\n                return requireEntries;\n            },\n            /**\n             * Saves the original IMS PCI module to be able to reinstanciate later\n             * @param {Object} interaction\n             * @param {Object} pciConstructor\n             */\n            setPCIConstructor(interaction, pciConstructor) {\n                interaction.data(pciConstructorDataKey, pciConstructor);\n            },\n            /**\n             * Returns with original IMS PCI module\n             * @param {Object} interaction\n             */\n            getPCIConstructor(interaction) {\n                return interaction.data(pciConstructorDataKey);\n            },\n            createInstance(interaction, context) {\n                let pciConstructor = this.getPCIConstructor(interaction);\n\n                //get interaction xml:lang prop to put it into pci instance config\n                const contentLanguage = interaction.attributes && interaction.attributes.language;\n                const itemLanguage = interaction.rootElement && interaction.rootElement.attributes && interaction.rootElement.attributes['xml:lang'];\n                const language = contentLanguage || itemLanguage;\n                const userLanguage = sharedContext && sharedContext.locale;\n\n                const properties = _.assign(_.clone(interaction.properties), {language, userLanguage});\n\n                // save original IMS PCI module first time to be able to reinstanciate later if necessary\n                if (!pciConstructor) {\n                    pciConstructor = instanciator.getPci(interaction);\n                    this.setPCIConstructor(interaction, pciConstructor);\n                }\n\n                // serialize any array or object properties\n                _.forOwn(properties, function (propVal, propKey) {\n                    properties[propKey] = _.isArray(propVal) || _.isObject(propVal) ? JSON.stringify(propVal) : propVal;\n                });\n\n                let pciReadyCallback;\n                const readyPromise = new Promise(resolve => {\n                    pciReadyCallback = resolve;\n                });\n\n                const config = {\n                    properties,\n                    templateVariables: {}, //not supported yet\n                    boundTo: context.response || {},\n                    onready: pciReadyCallback,\n                    ondone: pciDoneCallback,\n                    status: 'interacting' //only support interacting state currently(TODO: solution, review),\n                };\n\n                pciConstructor.getInstance(containerHelper.get(interaction).get(0), config, context.state);\n\n                return readyPromise.then(instance => {\n                    instanciator.setPci(interaction, instance);\n                    return instance;\n                });\n            },\n            destroy: function destroy(interaction) {\n                instanciator.getPci(interaction).oncompleted();\n            },\n            /**\n             * IMS PCI does not have setState, so PCI should be destroyed and reinstanciated with response.\n             * This function should run only in review mode.\n             * @param {Object} interaction\n             * @param {Object} state - state that should be set\n             * @returns {Promise<Object>} - Resolves with newly created instance\n             */\n            setReviewState(interaction, state) {\n                this.destroy(interaction);\n                return this.createInstance(interaction, { response: { RESPONSE: state.response } });\n            },\n            setState: _.noop,\n            getState(interaction) {\n                return instanciator.getPci(interaction).getState();\n            }\n        };\n    }\n\n    return defaultPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/ciRegistry'], function (_, Handlebars, __, DOMPurify, containerHelper, PortableElement, instanciator, commonPciRenderer, imsPciRenderer, util, ciRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    commonPciRenderer = commonPciRenderer && Object.prototype.hasOwnProperty.call(commonPciRenderer, 'default') ? commonPciRenderer['default'] : commonPciRenderer;\n    imsPciRenderer = imsPciRenderer && Object.prototype.hasOwnProperty.call(imsPciRenderer, 'default') ? imsPciRenderer['default'] : imsPciRenderer;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n    lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-customInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _setPciModel = function _setPciModel(interaction, runtime) {\n        var pciRenderer;\n        if (runtime.model === 'IMSPCI') {\n            pciRenderer = imsPciRenderer(runtime);\n        } else {\n            pciRenderer = commonPciRenderer(runtime);\n        }\n        interaction.data('pci-model', runtime.model);\n        interaction.data('pci-renderer', pciRenderer);\n    };\n\n    var _getPciRenderer = function _getPciRenderer(interaction) {\n        return interaction.data('pci-renderer');\n    };\n\n    /**\n     * Execute javascript codes to bring the interaction to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. configure the paths\n     * 2. require all required libs\n     * 3. create a pci instance based on the interaction model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable (state and/or response)\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction, options) {\n        var self = this;\n\n        options = options || {};\n        return new Promise(function (resolve, reject) {\n            var id = interaction.attr('responseIdentifier');\n            var typeIdentifier = interaction.typeIdentifier;\n            var assetManager = self.getAssetManager();\n            var state;\n            var response = {};\n\n            if (options.state && options.state[id]) {\n                state = options.state[id];\n            }\n            response[id] = { base: null };\n\n            ciRegistry\n                .loadRuntimes({ include: [typeIdentifier] })\n                .then(function () {\n                    var pciRenderer;\n                    var runtime = ciRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pci cannot be found : ' + typeIdentifier);\n                    }\n\n                    _setPciModel(interaction, runtime);\n\n                    pciRenderer = _getPciRenderer(interaction);\n\n                    window.require(\n                        pciRenderer.getRequiredModules(),\n                        function () {\n                            var pci = instanciator.getPci(interaction);\n                            if (pci) {\n                                pciRenderer.createInstance(interaction, {\n                                    response: response,\n                                    state: state,\n                                    assetManager: assetManager\n                                }).then(instance => {\n                                    //forward internal PCI event responseChange\n                                    if (_.isFunction(instance.on)) {\n                                        interaction.onPci('responseChange', function () {\n                                            containerHelper.triggerResponseChangeEvent(interaction);\n                                        });\n                                    }\n                                    resolve();\n                                });\n                            } else {\n                                reject('Unable to initialize pci \"' + id + '\"');\n                            }\n                        },\n                        reject\n                    );\n                })\n                .catch(function (error) {\n                    reject('Error loading runtime \"' + id + '\": ' + error);\n                });\n        });\n    };\n\n    /**\n     * Programmatically set the response following the json schema described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        instanciator.getPci(interaction).setResponse(response);\n    };\n\n    /**\n     * Get the response in the json format described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return instanciator.getPci(interaction).getResponse();\n    };\n\n    /**\n     * Remove the current response set in the interaction\n     * The state may not be restored at this point.\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function resetResponse(interaction) {\n        instanciator.getPci(interaction).resetResponse();\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} interaction\n     * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n     */\n    var destroy = function destroy(interaction) {\n        return _getPciRenderer(interaction).destroy(interaction);\n    };\n\n    /**\n     * Restore the state of the interaction from the serializedState.\n     *\n     * @param {Object} interaction\n     * @param {Object} serializedState - json format\n     */\n    var setState = function setState(interaction, serializedState) {\n        _getPciRenderer(interaction).setState(interaction, serializedState);\n    };\n\n    /**\n     * Get the current state of the interaction as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} interaction\n     * @returns {Object} json format\n     */\n    var getState = function getState(interaction) {\n        return _getPciRenderer(interaction).getState(interaction);\n    };\n\n    var getData = function getData(customInteraction, data) {\n        //remove ns + fix media file path\n        var markup = data.markup;\n        markup = util.removeMarkupNamespaces(markup);\n        markup = PortableElement.fixMarkupMediaSources(markup, this);\n        data.markup = markup;\n\n        return data;\n    };\n\n    var PortableCustomInteraction = {\n        qtiClass: 'customInteraction',\n        template: tpl,\n        getData: getData,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableCustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div\\n    class=\\\"qti-prompt-container\\\"\\n    data-html-editable-container\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <div class=\\\"qti-prompt\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-html-editable id=\\\"prompt-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Prompt = {\n        qtiClass: 'prompt',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Prompt;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',['jquery', 'lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, Handlebars, __, DOMPurify, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-selectPointInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the responses from the interaction\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    var getRawResponse = function getRawResponse(interaction) {\n        if (interaction && interaction.paper && _.isArray(interaction.paper.points)) {\n            return _.map(interaction.paper.points, function(point) {\n                return [point.x, point.y];\n            });\n        }\n        return [];\n    };\n\n    /**\n     * Add a new point to the interaction\n     * @param {Object} interaction\n     * @param {Object} point - the x/y point\n     */\n    var addPoint = function addPoint(interaction, point) {\n        var maxChoices = interaction.attr('maxChoices');\n\n        var pointChange = function pointChange() {\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        if (maxChoices > 0 && getRawResponse(interaction).length >= maxChoices) {\n            instructionMgr.validateInstructions(interaction);\n        } else {\n            if (!_.isArray(interaction.paper.points)) {\n                interaction.paper.points = [];\n            }\n\n            graphic.createTarget(interaction.paper, {\n                point: point,\n                create: function create(target) {\n                    if (interaction.isTouch && target && target.getBBox) {\n                        graphic.createTouchCircle(interaction.paper, target.getBBox());\n                    }\n\n                    interaction.paper.points.push(point);\n\n                    pointChange();\n                },\n                remove: function remove() {\n                    _.remove(interaction.paper.points, point);\n\n                    pointChange();\n                }\n            });\n        }\n    };\n\n    /**\n     * Make the image clickable and place targets at the given position.\n     * @param {Object} interaction\n     */\n    var enableSelection = function enableSelection(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $imageBox = $container.find('.main-image-box');\n        var isResponsive = $container.hasClass('responsive');\n        var image = interaction.paper.getById('bg-image-' + interaction.serial);\n\n        interaction.paper.isTouch = false;\n\n        //used to see if we are in a touch context\n        image.touchstart(function() {\n            interaction.paper.isTouch = true;\n            image.untouchstart();\n        });\n\n        //get the point on click\n        image.click(function imageClicked(event) {\n            addPoint(interaction, graphic.getPoint(event, interaction.paper, $imageBox, isResponsive));\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction) {\n        var self = this;\n\n        return new Promise(function(resolve) {\n            var $container = containerHelper.get(interaction);\n            var background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container\n            });\n\n            //enable to select the paper to position a target\n            enableSelection(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                choiceCount: false,\n                getResponse: getRawResponse,\n                onError: function(data) {\n                    if (data) {\n                        graphic.highlightError(data.target, 'success');\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function(interaction, response) {\n        var responseValues;\n\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n\n                if (interaction.getResponseDeclaration().attr('cardinality') === 'single') {\n                    responseValues = [responseValues];\n                }\n                _(responseValues)\n                    .filter(function(point) {\n                        return _.isArray(point) && point.length === 2;\n                    })\n                    .forEach(function(point) {\n                        addPoint(interaction, {\n                            x: point[0],\n                            y: point[1]\n                        });\n                    });\n            } catch (err) {\n                return;\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function resetResponse(interaction) {\n        if (interaction && interaction.paper) {\n            interaction.paper.points = [];\n\n            interaction.paper.forEach(function(element) {\n                var point = element.data('point');\n                if (typeof point === 'object') {\n                    graphic.trigger(element, 'click');\n                }\n            });\n        }\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {Object} interaction\n         * @returns {Object} the response\n         */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction) {\n        var $container;\n        if (interaction.paper) {\n            $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var SelectPointInteraction = {\n        qtiClass: 'selectPointInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'nouislider'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, pciResponse, nouislider) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-sliderInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"sliderInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _slideTo = function(options) {\n        options.sliderCurrentValue.find('.qti-slider-cur-value').text(options.value);\n        options.sliderValue.val(options.value);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    const render = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            direction = window.getComputedStyle($container[0]).getPropertyValue('direction') || 'ltr',\n            $el = $$1('<div />').attr({ id: `${attributes.responseIdentifier}-qti-slider`, class: 'qti-slider' }), //slider element\n            $sliderLabels = $$1('<div />').attr({ class: 'qti-slider-values' }),\n            $sliderCurrentValue = $$1('<div />').attr({\n                id: `${attributes.responseIdentifier}-qti-slider-cur-value`,\n                class: 'qti-slider-cur-value'\n            }), //show the current selected value\n            $sliderValue = $$1('<input />').attr({ type: 'hidden', id: `${attributes.responseIdentifier}-qti-slider-value`, class: 'qti-slider-value' }); //the input that always holds the slider value\n\n        //getting the options\n        let orientation = 'horizontal';\n        const reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false, //setting the slider whether to be reverse or not\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            step = typeof attributes.step !== 'undefined' && attributes.step ? parseInt(attributes.step) : 1, //default value as per QTI standard\n            steps = (max - min) / step; //number of the steps\n\n        //add the containers\n        $sliderCurrentValue\n            .append(`<span class=\"qti-slider-cur-value-text\">${__('Current value:')}</span>`)\n            .append('<span class=\"qti-slider-cur-value\"></span>');\n\n        //setting the orientation of the slider\n        if (\n            typeof attributes.orientation !== 'undefined' &&\n            $$1.inArray(attributes.orientation, ['horizontal', 'vertical']) > -1\n        ) {\n            orientation = attributes.orientation;\n        }\n\n        let reversedLabels = false;\n        //for vertical only reverse matters\n        if(orientation === 'vertical') {\n            reversedLabels = reverse;\n        }else {\n            reversedLabels = ((!reverse && direction === 'rtl') || (reverse && direction !== 'rtl'));\n        }\n\n        $sliderLabels\n            .append(`<span class=\"slider-min\">${reversedLabels ? max : min }</span>`)\n            .append(`<span class=\"slider-max\">${reversedLabels ? min : max}</span>`);\n\n        interaction\n            .getContainer()\n            .append($el)\n            .append($sliderLabels)\n            .append($sliderCurrentValue)\n            .append($sliderValue);\n\n\n        let sliderSize = 0;\n\n        if (orientation === 'horizontal') {\n            $container.addClass('qti-slider-horizontal');\n        } else {\n            const maxHeight = 300;\n            sliderSize = steps * 20;\n            if (sliderSize > maxHeight) {\n                sliderSize = maxHeight;\n            }\n            $container.addClass('qti-slider-vertical');\n            $el.height(`${sliderSize}px`);\n            $sliderLabels.height(`${sliderSize}px`);\n        }\n\n        //set the middle value if the stepLabel attribute is enabled\n        if (typeof attributes.stepLabel !== 'undefined' && attributes.stepLabel) {\n            const middleStep = parseInt(steps / 2),\n                leftOffset = (100 / steps) * middleStep,\n                middleValue = reverse ? max - middleStep * step : min + middleStep * step;\n\n            if (orientation === 'horizontal') {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"left:'${leftOffset}%\">${middleValue}</span>`);\n            } else {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"top:${leftOffset}%\">${middleValue}</span>`);\n            }\n        }\n\n        //create the slider\n        $el.noUiSlider({\n            start: reverse ? max : min,\n            range: {\n                min: min,\n                max: max\n            },\n            step: step,\n            orientation,\n            direction\n        }).on('slide', function() {\n            let val = parseInt($$1(this).val());\n            if (interaction.attr('reverse')) {\n                val = max + min - val;\n            }\n            val = Math.round(val * 1000) / 1000;\n            _slideTo({\n                value: val,\n                sliderValue: $sliderValue,\n                sliderCurrentValue: $sliderCurrentValue\n            });\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n        });\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function(e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'responseIdentifier' && data.value) {\n                    const attributesNew = interaction.getAttributes();\n                    // data.value and attributesNew.responseIdentifier is the same\n                    $container.find('.qti-slider').attr({ id: `${attributesNew.responseIdentifier}-qti-slider`});\n                    $container.find('.qti-slider-cur-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-cur-value`});\n                    $container.find('.qti-slider-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-value`});\n                }\n            }\n        });\n    };\n\n    var resetResponse = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false,\n            startValue = reverse ? max : min;\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(startValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound);\n        let value;\n\n        value = pciResponse.unserialize(response, interaction)[0];\n\n        _slideTo({\n            value: value,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(interaction.attr('reverse') ? max + min - value : value);\n    };\n\n    var _getRawResponse = function(interaction) {\n        let value;\n        const attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            min = parseInt(attributes.lowerBound),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`);\n\n        if (baseType === 'integer') {\n            value = parseInt($sliderValue.val());\n        } else if (baseType === 'float') {\n            value = parseFloat($sliderValue.val());\n        }\n\n        return isNaN(value) ? min : value;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize([_getRawResponse(interaction)], interaction);\n    };\n\n    const destroy = function(interaction) {\n        const $container = interaction.getContainer();\n\n        $container.empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    var SliderInteraction = {\n        qtiClass: 'sliderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'util/locale', 'ui/tooltip'], function ($$1, _, __, Handlebars, DOMPurify, containerHelper, instructionMgr, pciResponse, patternMaskHelper, locale, tooltip) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<input\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        class=\\\"qti-interaction qti-inlineInteraction qti-textEntryInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n        data-qti-class=\\\"textEntryInteraction\\\"\\n        type=\\\"text\\\"\\n>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Hide the tooltip for the text input\n     * @param {jQuery} $input\n     */\n    const hideTooltip = function hideTooltip($input) {\n        if ($input.data('$tooltip')) {\n            $input.data('$tooltip').hide();\n        }\n    };\n\n    const DELIMETER_SYMBOL = '.';\n    const MINUS_SYMBOL = '-';\n    const cleanupIntegerRegExp = new RegExp('\\\\D', 'g'); // Remove all non-digits except the delimeter\n    const cleanupFloatRegExp = new RegExp(`[^\\\\d|\\\\${DELIMETER_SYMBOL}]`, 'g'); // Remove all non-digits except delimeters\n\n    const formatInteger = function formatInteger($input) {\n        const inputValue = $input.val();\n        const prefix = inputValue.indexOf(MINUS_SYMBOL) === 0 ? MINUS_SYMBOL : '';\n\n        return prefix + inputValue.replace(cleanupIntegerRegExp, '');\n    };\n\n    const formatFloat = function formatFloat($input) {\n        const inputValue = $input.val();\n        const prefix = inputValue.indexOf(MINUS_SYMBOL) === 0 ? MINUS_SYMBOL : '';\n        const firstDelimeterPosition = inputValue.indexOf(DELIMETER_SYMBOL);\n        const lastDelimeterPosition = inputValue.lastIndexOf(DELIMETER_SYMBOL);\n\n        let delimeter = firstDelimeterPosition;\n        let chars = inputValue.replace(cleanupFloatRegExp, '');\n\n        // Delimeter has to shift\n        if(firstDelimeterPosition !== lastDelimeterPosition) {\n            const prevDelimeterPoistion = $input.data('delimeter');\n\n            delimeter = prevDelimeterPoistion === firstDelimeterPosition ? lastDelimeterPosition : firstDelimeterPosition;\n            chars = chars.split('')\n                .filter((char, index) => {\n                    if((char === DELIMETER_SYMBOL && index !== delimeter)) return;\n                    return char;\n                })\n                .join('');\n        }\n\n        $input.data({delimeter});\n\n        return prefix + chars;\n    };\n\n    /**\n     * Create/Show tooltip for the text input\n     * @param {jQuery} $input\n     * @param {String} theme\n     * @param {String} message\n     */\n    var showTooltip = function showTooltip($input, theme, message) {\n        if ($input.data('$tooltip')) {\n            $input.data('$tooltip').updateTitleContent(message);\n        } else {\n            var textEntryTooltip = tooltip.create($input, message, {\n                theme: theme,\n                trigger: 'manual'\n            });\n\n            $input.data('$tooltip', textEntryTooltip);\n        }\n\n        $input.data('$tooltip').show();\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction) {\n        var attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            $input = interaction.getContainer(),\n            expectedLength,\n            updateMaxCharsTooltip,\n            updatePatternMaskTooltip,\n            patternMask = interaction.attr('patternMask'),\n            maxChars = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n\n        // Setting up baseType\n        switch (baseType) {\n            case 'integer':\n                $input\n                    .attr({inputmode: 'numeric'})\n                    .on('input.commonRenderer', function(e) {\n                        $input.val(formatInteger($input));\n                    });\n                break;\n            case 'float':\n                $input\n                    .attr({inputmode: 'decimal'})\n                    .on('input.commonRenderer', function(e) {\n                        $input.val(formatFloat($input));\n                    });\n                break;\n            default:\n                $input.attr('inputmode', 'text');\n        }\n\n        //setting up the width of the input field\n        if (attributes.expectedLength) {\n            //adding 2 chars to include reasonable padding size\n            expectedLength = parseInt(attributes.expectedLength) + 2;\n            $input.css('width', expectedLength + 'ch');\n            $input.css('min-width', expectedLength + 'ch');\n        }\n\n        //checking if there's a placeholder for the input\n        if (attributes.placeholderText) {\n            $input.attr('placeholder', attributes.placeholderText);\n        }\n\n        if (maxChars) {\n            updateMaxCharsTooltip = function updateMaxCharsTooltip() {\n                var count = $input.val().length;\n                var message, messageType;\n\n                if (count) {\n                    message = __('%d/%d', count, maxChars);\n                } else {\n                    message = __('%d characters allowed', maxChars);\n                }\n\n                if (count >= maxChars) {\n                    $input.addClass('maxed');\n                    messageType = 'warning';\n                } else {\n                    $input.removeClass('maxed');\n                    messageType = 'info';\n                }\n\n                showTooltip($input, messageType, message);\n                if (count && messageType === 'warning') {\n                    hideTooltip($input);\n                }\n            };\n\n            $input\n                .attr('maxlength', maxChars)\n                .on('focus.commonRenderer', function() {\n                    updateMaxCharsTooltip();\n                })\n                .on('keyup.commonRenderer', function() {\n                    updateMaxCharsTooltip();\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                })\n                .on('blur.commonRenderer', function() {\n                    hideTooltip($input);\n                });\n        } else if (attributes.patternMask) {\n            updatePatternMaskTooltip = function updatePatternMaskTooltip() {\n                var regex = new RegExp(attributes.patternMask);\n\n                hideTooltip($input);\n\n                if ($input.val()) {\n                    if (regex.test($input.val())) {\n                        $input.removeClass('invalid');\n                    } else {\n                        $input.addClass('invalid');\n                        showTooltip($input, 'error', __('This is not a valid answer'));\n                    }\n                }\n            };\n\n            $input\n                .on('focus.commonRenderer', function() {\n                    updatePatternMaskTooltip();\n                })\n                .on('keyup.commonRenderer', function() {\n                    updatePatternMaskTooltip();\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                })\n                .on('blur.commonRenderer', function() {\n                    hideTooltip($input);\n                });\n        } else {\n            $input.on('keyup.commonRenderer', function() {\n                containerHelper.triggerResponseChangeEvent(interaction);\n            });\n        }\n    };\n\n    var resetResponse = function resetResponse(interaction) {\n        interaction.getContainer().val('');\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        var responseValue;\n\n        try {\n            responseValue = pciResponse.unserialize(response, interaction);\n        } catch (e) {}\n\n        if (responseValue && responseValue.length) {\n            interaction.getContainer().val(responseValue[0]);\n        }\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction) {\n        var ret = { base: {} },\n            value,\n            $input = interaction.getContainer(),\n            attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            numericBase = attributes.base || 10;\n\n        if ($input.hasClass('invalid') || (attributes.placeholderText && $input.val() === attributes.placeholderText)) {\n            //invalid response or response equals to the placeholder text are considered empty\n            value = '';\n        } else {\n            if (baseType === 'integer') {\n                value = locale.parseInt($input.val(), numericBase);\n            } else if (baseType === 'float') {\n                value = locale.parseFloat($input.val());\n            } else if (baseType === 'string') {\n                value = $input.val();\n            }\n        }\n\n        ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n\n        return ret;\n    };\n\n    var destroy = function destroy(interaction) {\n        $$1('input.qti-textEntryInteraction').each(function(index, el) {\n            var $input = $$1(el);\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').dispose();\n                $input.removeData('$tooltip');\n            }\n        });\n\n        //remove event\n        $$1(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    var TextEntryInteraction = {\n        qtiClass: 'textEntryInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',['jquery', 'lodash', 'i18n', 'core/mimetype', 'handlebars', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/uploadMime', 'ui/progressbar', 'ui/previewer', 'ui/modal', 'ui/waitForMedia'], function ($$1, _, __, mimetype, Handlebars, DOMPurify, containerHelper, instructionMgr, uploadHelper, progressbar, previewer, modal, waitForMedia) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimetype = mimetype && Object.prototype.hasOwnProperty.call(mimetype, 'default') ? mimetype['default'] : mimetype;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    uploadHelper = uploadHelper && Object.prototype.hasOwnProperty.call(uploadHelper, 'default') ? uploadHelper['default'] : uploadHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"accept=\\\"\";\n      if (helper = helpers.accept) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.accept); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-blockInteraction qti-uploadInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n\t\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\t<div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"file-upload fixed-grid-row lft\\\">\\n        <div class=\\\"progressbar\\\"></div>\\n        <span class=\\\"btn-info small col-4\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Browse...\", options) : helperMissing.call(depth0, \"__\", \"Browse...\", options)))\n        + \"</span>\\n        <span class=\\\"file-name placeholder col-8 truncate\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No file selected\", options) : helperMissing.call(depth0, \"__\", \"No file selected\", options)))\n        + \"</span>\\n        <input type=\\\"file\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.accept), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"/>\\n    </div>\\n    <div class=\\\"file-upload-preview lft visible-file-upload-preview runtime-visible-file-upload-preview\\\">\\n        <p class=\\\"nopreview\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No preview available\", options) : helperMissing.call(depth0, \"__\", \"No preview available\", options)))\n        + \"</p>\\n    </div>\\n    <div class=\\\"file-upload-preview-popup modal\\\">\\n        <div class=\\\"modal-body\\\">\\n        </div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _initialInstructions = __('Browse your computer and select the appropriate file.');\n\n    var _readyInstructions = __('The selected file is ready to be sent.');\n\n    /**\n     * Validate type of selected file\n     * @param file\n     * @param interaction\n     * @returns {boolean}\n     */\n    var validateFileType = function validateFileType(file, interaction) {\n        var expectedTypes = uploadHelper.getExpectedTypes(interaction, true);\n        var filetype = mimetype.getMimeType(file);\n        if (expectedTypes.length) {\n            return _.indexOf(expectedTypes, filetype) >= 0;\n        }\n        return true;\n    };\n\n    /**\n     * Compute the message to be displayed when an invalid file type has been selected\n     *\n     * @param {Object} interaction\n     * @param {Function} userSelectedType\n     * @param {Function} messageWrongType\n     * @returns {String}\n     */\n    var getMessageWrongType = function getMessageWrongType(interaction, userSelectedType, messageWrongType) {\n        var types = uploadHelper.getExpectedTypes(interaction);\n        var expectedTypeLabels = _.map(_.uniq(types), function (type) {\n            var mime = _.find(uploadHelper.getMimeTypes(), { mime: type });\n            if (mime) {\n                return mime.label;\n            } else {\n                return type;\n            }\n        });\n\n        if (messageWrongType && _.isFunction(messageWrongType)) {\n            return messageWrongType({\n                userSelectedType: userSelectedType,\n                types: expectedTypeLabels\n            });\n        } else {\n            return __(\n                'Wrong type of file. Expected %s. The selected file has the mimetype \"%s\".',\n                expectedTypeLabels.join(__(' or ')),\n                userSelectedType\n            );\n        }\n    };\n\n    var _handleSelectedFiles = function _handleSelectedFiles(interaction, file, messageWrongType) {\n        var reader;\n        var $container = containerHelper.get(interaction);\n\n        // Show information about the processed file to the candidate.\n        var filename = file.name;\n        var filetype = mimetype.getMimeType(file);\n        instructionMgr.removeInstructions(interaction);\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        if (!validateFileType(file, interaction)) {\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(\n                interaction,\n                getMessageWrongType(interaction, filetype, messageWrongType),\n                function () {\n                    this.setLevel('error');\n                    //clear preview\n                }\n            );\n            instructionMgr.validateInstructions(interaction);\n            return;\n        }\n\n        $container\n            .find('.file-name')\n            .empty()\n            .append(filename);\n\n        // Let's read the file to get its base64 encoded content.\n        reader = new FileReader();\n\n        // Update file processing progress.\n\n        reader.onload = function (e) {\n            var base64Data, commaPosition, base64Raw, $previewArea;\n\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(interaction, _readyInstructions, function () {\n                this.setLevel('success');\n            });\n            instructionMgr.validateInstructions(interaction);\n\n            $container.find('.progressbar').progressbar('value', 100);\n\n            base64Data = e.target.result;\n            commaPosition = base64Data.indexOf(',');\n\n            // Store the base64 encoded data for later use.\n            base64Raw = base64Data.substring(commaPosition + 1);\n            interaction.data('_response', { base: { file: { data: base64Raw, mime: filetype, name: filename } } });\n\n            $previewArea = $container.find('.file-upload-preview');\n            $previewArea.previewer({\n                url: base64Data,\n                name: filename,\n                mime: filetype\n            });\n\n            // we wait for the image to be completely loaded\n            $previewArea.waitForMedia(function () {\n                var $originalImg = $previewArea.find('img'),\n                    $largeDisplay = $$1('.file-upload-preview-popup'),\n                    $item = $$1('.qti-item'),\n                    itemWidth = $item.width(),\n                    winWidth = $$1(window).width() - 80,\n                    fullHeight = $$1('body').height(),\n                    imgNaturalWidth,\n                    isOversized,\n                    modalWidth;\n\n                if (!$originalImg.length) {\n                    return;\n                }\n\n                imgNaturalWidth = $originalImg[0].naturalWidth;\n                isOversized = imgNaturalWidth > itemWidth;\n                modalWidth = Math.min(winWidth, imgNaturalWidth);\n\n                $previewArea.toggleClass('clickable', isOversized);\n\n                if (!isOversized) {\n                    return;\n                }\n\n                $previewArea.on('click', function () {\n                    var $modalBody;\n\n                    $$1('.upload-ia-modal-bg').remove();\n\n                    // remove any previous unnecessary content before inserting the preview image\n                    $modalBody = $largeDisplay.find('.modal-body');\n                    $modalBody.empty().append($originalImg.clone());\n\n                    $largeDisplay\n                        .on('opened.modal', function () {\n                            // prevents the rest of the page from scrolling when modal is open\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'hidden');\n\n                            $largeDisplay.css({\n                                width: modalWidth,\n                                height: fullHeight,\n                                left: (modalWidth - itemWidth - 40) / -2\n                            });\n                        })\n                        .on('closed.modal', function () {\n                            // make the page scrollable again\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'auto');\n                        })\n                        .modal({ modalOverlayClass: 'modal-bg upload-ia-modal-bg' });\n                });\n            });\n        };\n\n        reader.onloadstart = function onloadstart() {\n            instructionMgr.removeInstructions(interaction);\n            $container.find('.progressbar').progressbar('value', 0);\n        };\n\n        reader.onprogress = function onprogress(e) {\n            var percentProgress = Math.ceil((Math.round(e.loaded) / Math.round(e.total)) * 100);\n            $container.find('.progressbar').progressbar('value', percentProgress);\n        };\n\n        reader.readAsDataURL(file);\n    };\n\n    /**\n     * Resets the GUI state to the default display.\n     *\n     * @param {Object} interaction\n     */\n    function resetGui(interaction) {\n        var $container = containerHelper.get(interaction);\n        $container.find('.file-name').text(__('No file selected'));\n        $container.find('.btn-info').text(__('Browse...'));\n    }\n    function callResetGui(interaction) {\n        const renderer = interaction.getRenderer();\n        if (_.isFunction(renderer.resetGui)) {\n            renderer.resetGui(interaction);\n        }\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    function render(interaction) {\n        var changeListener,\n            self = this,\n            $input;\n        var $container = containerHelper.get(interaction);\n        callResetGui(interaction);\n\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        //init response\n        interaction.data('_response', { base: null });\n\n        changeListener = function (e) {\n            var file = e.target.files[0];\n\n            // Are you really sure something was selected\n            // by the user... huh? :)\n            if (typeof file !== 'undefined') {\n                _handleSelectedFiles(interaction, file, self.getCustomMessage('upload', 'wrongType'));\n            }\n        };\n\n        $input = $container.find('input');\n\n        $container.find('.progressbar').progressbar();\n\n        if (!window.FileReader) {\n            throw new Error('FileReader API not supported! Please use a compliant browser!');\n        }\n        $input.bind('change', changeListener);\n\n        // IE Specific hack, prevents button to slightly move on click\n        $input.bind('mousedown', function (e) {\n            e.preventDefault();\n            $$1(this).blur();\n            return false;\n        });\n    }\n    var resetResponse = function resetResponse(interaction) {\n        callResetGui(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        var filename,\n            $container = containerHelper.get(interaction);\n\n        if (response.base !== null) {\n            filename =\n                typeof response.base.file.name !== 'undefined' ? response.base.file.name : 'previously-uploaded-file';\n            $container\n                .find('.file-name')\n                .empty()\n                .text(filename);\n        }\n\n        interaction.data('_response', response);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return interaction.data('_response');\n    };\n\n    var destroy = function destroy(interaction) {\n        //remove event\n        $$1(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     * This way we could cover a lot more types. How could this be matched with the preview templates\n     * in tao/views/js/ui/previewer.js\n     */\n    var getCustomData = function getCustomData(interaction, data) {\n        return _.merge(data || {}, {\n            accept: uploadHelper.getExpectedTypes(interaction, true).join(',')\n        });\n    };\n\n    var UploadInteraction = {\n        qtiClass: 'uploadInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        getData: getCustomData,\n\n        // Exposed private methods for qtiCreator\n        resetGui: resetGui\n    };\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Item',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler'], function (Handlebars, __, _, DOMPurify, containerHelper, itemStylesheetHandler) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    itemStylesheetHandler = itemStylesheetHandler && Object.prototype.hasOwnProperty.call(itemStylesheetHandler, 'default') ? itemStylesheetHandler['default'] : itemStylesheetHandler;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-item tao-scope runtime\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-itemBody \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    <div id=\\\"modalFeedbacks\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var Item = {\n        qtiClass: 'assessmentItem',\n        template: tpl,\n        getContainer: containerHelper.get,\n\n        /**\n         * Rendering initializations for the item\n         * @param {Object} item - the item model\n         */\n        render: function render(item) {\n            //target blank for all <a>\n            containerHelper.targetBlank(containerHelper.get(item));\n\n            //add stylesheets\n            itemStylesheetHandler.attach(item.stylesheets);\n        },\n\n        /**\n         * Unrender\n         * @param {Object} item - the item model\n         */\n        destroy: function destroy(item) {\n            //clear the container cache\n            containerHelper.clear();\n\n            //detach stylesheets\n            if (item.stylesheets) {\n                itemStylesheetHandler.detach(item.stylesheets);\n            }\n        }\n    };\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Math',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'mathJax'], function (Handlebars, __, _, DOMPurify, containerHelper, MathJax) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    MathJax = MathJax && Object.prototype.hasOwnProperty.call(MathJax, 'default') ? MathJax['default'] : MathJax;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math display=\\\"block\\\">\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math>\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.block), {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    // Do not wait between rendering each individual math element\n    // http://docs.mathjax.org/en/latest/api/hub.html\n    if (typeof MathJax !== 'undefined' && MathJax) {\n        MathJax.Hub.processSectionDelay = 0;\n    }\n\n    var _Math = {\n        qtiClass: 'math',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(math) {\n            return new Promise(function (resolve) {\n                const $self = containerHelper.get(math);\n                if (typeof MathJax !== 'undefined' && MathJax) {\n                    //MathJax needs to be exported globally to integrate with tools like TTS, it's weird...\n                    if (!window.MathJax) {\n                        window.MathJax = MathJax;\n                    }\n                    //defer execution fix some rendering issue in chrome\n                    if ($self.length) {\n                        MathJax.Hub.Queue(['Typeset', MathJax.Hub, $self[0]]);\n                        MathJax.Hub.Queue(resolve);\n                    } else {\n                        resolve();\n                    }\n                } else {\n                    resolve();\n                }\n            });\n        }\n    };\n\n    return _Math;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n     **/\n\n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n\n    /**\n     * Check if the element is of a qti container type\n     *\n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element) {\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\n            return true;\n        } else {\n            throw 'the element is not of a container type';\n        }\n    }\n\n    /**\n     * Get the body element of the container\n     *\n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element) {\n        if (_checkContainerType(element)) {\n            return $('<div>')\n                .html(element.body())\n                .find('.x-tao-wrapper');\n        }\n    }\n\n    /**\n     * Add a class to the body element of the qti container\n     *\n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass) {\n        if (_checkContainerType(element) && (oldClass || newClass)) {\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n\n    /**\n     * Switch class to the wrapped DOM\n     *\n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass) {\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if (!$bodyDom.length) {\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if (oldClass) {\n            $bodyDom.removeClass(oldClass);\n        }\n        if (newClass) {\n            $bodyDom.addClass(newClass);\n        }\n    }\n\n    /**\n     * Add manually the encoded information to a dom element\n     *\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n\n    /**\n     * Get the full variable name for the data store\n     *\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value) {\n        if (dataName && value) {\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n\n    /**\n     * Set a data string to the element identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue) {\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(\n            element,\n            _getEncodedDataString(dataName, newValue),\n            _getEncodedDataString(dataName, oldValue)\n        );\n    }\n\n    /**\n     * Remove the stored data from the element by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName) {\n        var oldValue = getEncodedData(element, dataName);\n        if (dataName && oldValue) {\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value) {\n        var $body = _getBodyDom(element);\n        if ($body && $body.length && dataName && value) {\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n\n    /**\n     * Get the encoded data identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName) {\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if (dataName && $body && $body.length && $body.attr('class')) {\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\n            matches = $body.attr('class').match(regex);\n            if (matches) {\n                return matches[1];\n            }\n        }\n    }\n\n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    var container = {\n        setEncodedData: setEncodedData,\n        hasEncodedData: hasEncodedData,\n        getEncodedData: getEncodedData,\n        removeEncodedData: removeEncodedData,\n        setEncodedDataToDom: setEncodedDataToDom\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiItem/helper/container', 'ui/waitForMedia', 'ui/modal'], function (_, Handlebars, __, DOMPurify, containerHelper, coreContainerHelper, waitForMedia, modal) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    coreContainerHelper = coreContainerHelper && Object.prototype.hasOwnProperty.call(coreContainerHelper, 'default') ? coreContainerHelper['default'] : coreContainerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"modal \";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"<h2 class=\\\"qti-title modal-title\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</h2>\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.inline), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-modalFeedback \";\n      if (helper = helpers.feedbackStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.feedbackStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"modal-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var modalFeedbackRenderer = {\n        qtiClass: 'modalFeedback',\n        template: tpl,\n        getContainer: containerHelper.get,\n        width: 600,\n        getData: function(fb, data) {\n            data.feedbackStyle = coreContainerHelper.getEncodedData(fb, 'modalFeedback');\n            return data;\n        },\n        render: function(modalFeedback, data) {\n            var $modal = containerHelper.get(modalFeedback);\n\n            $modal.waitForMedia(function() {\n                //when we are sure that media is loaded:\n                $modal\n                    .on('opened.modal', function() {\n                        //set item body height\n                        var $itemBody = containerHelper.get(modalFeedback.getRootElement()).children('.qti-itemBody');\n                        var requiredHeight = $modal.outerHeight() + parseInt($modal.css('top'));\n                        if (requiredHeight > $itemBody.height()) {\n                            $itemBody.height(requiredHeight);\n                        }\n                    })\n                    .on('closed.modal', function() {\n                        data = data || {};\n\n                        if (_.isFunction(data.callback)) {\n                            data.callback.call(this);\n                        }\n                    })\n                    .modal({\n                        startClosed: false,\n                        minHeight: modalFeedbackRenderer.minHeight,\n                        width: modalFeedbackRenderer.width\n                    });\n            });\n        }\n    };\n\n    return modalFeedbackRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Object',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/previewer'], function (Handlebars, __, _, DOMPurify, containerHelper, previewer) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-object-container\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA\n     */\n\n    var _Object = {\n        qtiClass: 'object',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function(obj) {\n            var $container = containerHelper.get(obj);\n            var previewOptions = {\n                url: obj.renderer.resolveUrl(obj.attr('data')),\n                mime: obj.attr('type')\n            };\n            if (obj.attr('height')) {\n                previewOptions.height = obj.attr('height');\n            }\n            if (obj.attr('width')) {\n                previewOptions.width = obj.attr('width');\n            }\n            if (previewOptions.url && previewOptions.mime) {\n                $container.previewer(previewOptions);\n            }\n        }\n    };\n\n    return _Object;\n\n});\n\n","define('qtiInfoControlContext',[],function(){\n\n    //need a global reference to have picHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._picHooks = window._picHooks || {};\n\n    /**\n     * Global object accessible by all PICs\n     *\n     * @type Object\n     */\n    var taoQtiInfoControlContext = {\n        /**\n         * register a info control (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} picHook\n         * @returns {undefined}\n         */\n        register : function(picHook){\n            //@todo check picHook validity\n            window._picHooks[picHook.getTypeIdentifier()] = picHook;\n        },\n        /**\n         * notify when a info control is ready for test taker interaction\n         *\n         * @param {string} picInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(picInstance){\n            //@todo add pciInstance as event data and notify event to delivery engine\n        },\n        /**\n         * Get a cloned object representing the PIC model\n         *\n         * @param {string} typeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(typeIdentifier){\n\n            if(window._picHooks[typeIdentifier]){\n\n                var instance = {},\n                    proto = window._picHooks[typeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable info control hook found with the id ' + typeIdentifier;\n            }\n        }\n    };\n\n\n    return taoQtiInfoControlContext;\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',['lodash', 'handlebars', 'i18n', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'qtiInfoControlContext', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/icRegistry'], function (_, Handlebars, __, DOMPurify, containerHelper, PortableElement, qtiInfoControlContext, util, icRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    qtiInfoControlContext = qtiInfoControlContext && Object.prototype.hasOwnProperty.call(qtiInfoControlContext, 'default') ? qtiInfoControlContext['default'] : qtiInfoControlContext;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-infoControl\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * Get the PIC instance associated to the infoControl object\n     * If none exists, create a new one based on the PIC typeIdentifier\n     *\n     * @param {Object} infoControl - the js object representing the infoControl\n     * @returns {Object} PIC instance\n     */\n    var _getPic = function(infoControl) {\n        var typeIdentifier,\n            pic = infoControl.data('pic') || undefined;\n\n        if (!pic) {\n            typeIdentifier = infoControl.typeIdentifier;\n            pic = qtiInfoControlContext.createPciInstance(typeIdentifier);\n\n            if (pic) {\n                //binds the PIC instance to TAO infoControl object and vice versa\n                infoControl.data('pic', pic);\n                pic._taoInfoControl = infoControl;\n            } else {\n                throw 'no custom infoControl hook found for the type ' + typeIdentifier;\n            }\n        }\n\n        return pic;\n    };\n\n    /**\n     * Execute javascript codes to bring the infoControl to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. ensure the context is configured correctly\n     * 2. require all required libs\n     * 3. create a pic instance based on the infoControl model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable\n     *\n     * @param {Object} infoControl\n     * @param {Object} [options]\n     */\n    var render = function(infoControl, options) {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var state = {}; //@todo pass state and response to renderer here:\n            var id = infoControl.attr('id');\n            var typeIdentifier = infoControl.typeIdentifier;\n            var config = infoControl.properties;\n            var $dom = containerHelper.get(infoControl).children();\n            var assetManager = self.getAssetManager();\n\n            icRegistry\n                .loadRuntimes()\n                .then(function() {\n                    var requireEntries = [];\n                    var runtime = icRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pic cannot be found : ' + typeIdentifier);\n                    }\n\n                    //load the entrypoint, becomes optional per IMS PCI v1\n                    if (runtime.hook) {\n                        requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                    }\n\n                    //load required libraries\n                    _.forEach(runtime.libraries, function(module) {\n                        requireEntries.push(module.replace(/\\.js$/, ''));\n                    });\n\n                    //load stylesheets\n                    _.forEach(runtime.stylesheets, function(stylesheet) {\n                        requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                    });\n\n                    //load the entrypoint\n                    window.require(requireEntries, function() {\n                        var pic = _getPic(infoControl);\n                        var picAssetManager = {\n                            resolve: function resolve(url) {\n                                var resolved = assetManager.resolveBy('portableElementLocation', url);\n                                if (resolved === url) {\n                                    return assetManager.resolveBy('baseUrl', url);\n                                } else {\n                                    return resolved;\n                                }\n                            }\n                        };\n\n                        if (pic) {\n                            //call pic initialize() to render the pic\n                            pic.initialize(id, $dom[0], config, picAssetManager);\n                            //restore context (state + response)\n                            pic.setSerializedState(state);\n\n                            return resolve();\n                        }\n\n                        return reject('Unable to initialize pic : ' + id);\n                    }, reject);\n                })\n                .catch(function(error) {\n                    reject('Error loading runtime : ' + id);\n                });\n        });\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} infoControl\n     */\n    var destroy = function destroy(infoControl) {\n        _getPic(infoControl).destroy();\n    };\n\n    /**\n     * Restore the state of the infoControl from the serializedState.\n     *\n     * @param {Object} infoControl - the element instance\n     * @param {Object} state - the state to set\n     */\n    var setState = function setState(infoControl, state) {\n        _getPic(infoControl).setSerializedState(state);\n    };\n\n    /**\n     * Get the current state of the infoControl as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} infoControl - the element instance\n     * @returns {Object} the state\n     */\n    var getState = function getState(infoControl) {\n        return _getPic(infoControl).getSerializedState();\n    };\n\n    var PortableInfoControl = {\n        qtiClass: 'infoControl',\n        template: tpl,\n        getData: function(infoControl, data) {\n            //remove ns + fix media file path\n            var markup = data.markup;\n            markup = util.removeMarkupNamespaces(markup);\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\n            data.markup = markup;\n            return data;\n        },\n        render: render,\n        getContainer: containerHelper.get,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"printedVariable\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var PrintedVariable = {\n        qtiClass: 'printedVariable',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * Common helper functions\n     */\n    var interactionHelper = {\n        convertChoices: function(choices, outputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                if (Element.isA(c, 'choice')) {\n                    switch (outputType) {\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices: function(interaction, choices, inputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                var choice;\n                if (_.isString(c)) {\n                    if (inputType === 'serial') {\n                        choice = interaction.getChoice(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else if (inputType === 'identifier') {\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else {\n                        ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                } else {\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices: function(choices) {\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for (var i in choices) {\n                if (Element.isA(choices[i], 'choice')) {\n                    var choice = choices[i];\n                    if (choice.attr('fixed')) {\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                } else {\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for (var n = 0; n < r.length - 1; n++) {\n                if (f[n]) {\n                    continue;\n                }\n                var k = -1;\n                do {\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                } while (f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier: function(interaction, choiceSerial) {\n            var choice = interaction.getChoice(choiceSerial);\n            if (choice) {\n                return choice.id();\n            } else {\n                return '';\n            }\n        }\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //webpack trick : handlebar is usale only from cjs.\n    //but anyway we should deprecate the practice to invoke\n    //directly Handlebars at runtimej\n    let hb = Handlebars;\n    if(typeof hb.compile !== 'function'){\n        hb = require('handlebars');\n    }\n\n    const _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'figure',\n        'img',\n        'figcaption',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    const _dependencies = {\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock: ['_container'],\n        associateInteraction: ['simpleAssociableChoice'],\n        choiceInteraction: ['simpleChoice'],\n        gapMatchInteraction: ['gap', 'gapText'],\n        graphicAssociateInteraction: ['associableHotspot'],\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction: ['hotspotChoice'],\n        hotspotInteraction: ['hotspotChoice'],\n        hottextInteraction: ['hottext'],\n        inlineChoiceInteraction: ['inlineChoice'],\n        matchInteraction: ['simpleAssociableChoice'],\n        orderInteraction: ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    const _renderableSubclasses = {\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    const _defaults = {\n        shuffleChoices: true\n    };\n\n    const _isValidRenderer = function(renderer) {\n        let valid = true;\n\n        if (typeof renderer !== 'object') {\n            return false;\n        }\n\n        let classCorrect = false;\n        if (renderer.qtiClass) {\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\n                classCorrect = true;\n            } else {\n                const pos = renderer.qtiClass.indexOf('.');\n                if (pos > 0) {\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\n                    const subClass = renderer.qtiClass.slice(pos + 1);\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if (!classCorrect) {\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if (!renderer.template) {\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl() {\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    const Renderer = function(options) {\n        /**\n         * Store the registered renderer location\n         */\n        const _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        const _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        const _getClassRenderer = function(qtiClass) {\n            let ret = null;\n            if (_renderers[qtiClass]) {\n                ret = _renderers[qtiClass];\n            } else {\n                const pos = qtiClass.indexOf('.');\n                if (pos > 0) {\n                    qtiClass = qtiClass.slice(0, pos);\n                    if (_renderers[qtiClass]) {\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            let success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value) {\n            if (typeof key === 'string') {\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts) {\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key) {\n            if (typeof key === 'string' && options[key]) {\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\n            const messages = this.getOption('messages');\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\n                //currently not translatable but potentially could be if the need raises\n                return hb.compile(messages[elementName][messageKey]);\n            } else {\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager() {\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader() {\n            return this.themeLoader;\n        };\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass) {\n            let res;\n            let ret = '';\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n            const decorators = this.getOption('decorators');\n\n            if (!renderer || !_.isFunction(renderer.template)) {\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n            //post rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass) {\n            let ret = data;\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getData === 'function') {\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data) {\n            return hb.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass) {\n            let ret = null;\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                ret = renderer.getContainer(qtiElement, $scope);\n            } else {\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer && typeof renderer.render === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.setResponse === 'function') {\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\n                    if ($container instanceof $ && $container.length) {\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getResponse === 'function') {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.resetResponse === 'function') {\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState = function(qtiInteraction, state, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function() {\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations) {\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses) {\n            const self = this;\n            let required = [];\n\n            const themeData = themesHelper.getCurrentThemeData();\n            if (themeData) {\n                options.themes = themeData;\n            }\n            if (options.themes) {\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index) {\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\n            }\n\n            if (requiredClasses) {\n                if (_.isArray(requiredClasses)) {\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass) {\n                        const deps = _dependencies[reqClass];\n                        if (deps) {\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass) {\n                        let requiredSubClasses;\n                        if (_renderableSubclasses[qtiClass]) {\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass) {\n                                if (\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\n                                    !registerRendererClass(qtiClass, required)\n                                ) {\n                                    throw new Error(\n                                        self.name +\n                                            ' : missing qti class location declaration: ' +\n                                            qtiClass +\n                                            ', subclass: ' +\n                                            subclass\n                                    );\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            } else {\n                required = _.values(_locations);\n            }\n\n            moduleLoader([], ()=> true)\n                .addList( required.map( module => ({ module, category: 'qti'}) ) )\n                .load()\n                .then( loaded => {\n                    loaded.forEach( clazz => {\n                        if (_isValidRenderer(clazz)) {\n                            _renderers[clazz.qtiClass] = clazz;\n                        }\n\n                    });\n                    if (typeof callback === 'function') {\n                        callback.call(self, _renderers);\n                    }\n                });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload() {\n            if (this.themeLoader) {\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType) {\n            if (Element.isA(interaction, 'interaction')) {\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(\n                    interactionHelper.findChoices(interaction, choices, identificationType),\n                    'serial'\n                );\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType) {\n            let choices = [];\n            let serial, i;\n\n            if (Element.isA(interaction, 'interaction')) {\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if (!this.shuffledChoices[serial] || reshuffle) {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        this.shuffledChoices[serial] = [];\n                        for (i = 0; i < 2; i++) {\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                    //otherwise get the choices from the serials\n                } else {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        _.forEach(choices, function(choice, index) {\n                            if (index < 2) {\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial) {\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial) {\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if (returnedType === 'serial' || returnedType === 'identifier') {\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function() {\n            return _renderers;\n        };\n\n        this.getLocations = function() {\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url) {\n            if (!options.assetManager) {\n                return url;\n            }\n            if (typeof url === 'string' && url.length > 0) {\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl) {\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if (this.getOption('userRelativeUrl')) {\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\n                //already absolute or base64 encoded\n                return relUrl;\n            } else {\n                let absUrl = '';\n                const runtimeLocations = this.getOption('runtimeLocations');\n\n                if (runtimeLocations && _.size(runtimeLocations)) {\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier) {\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false; //break\n                        }\n                    });\n                }\n\n                if (absUrl) {\n                    return absUrl;\n                } else {\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    var Renderer$1 = {\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build: function(renderersLocations, name, defaultOptions) {\n            const NewRenderer = function() {\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n\n    return Renderer$1;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/rendererProvider',['taoQtiItem/qtiCommonRenderer/renderers/Renderer'], function (QtiRenderer) { 'use strict';\n\n    QtiRenderer = QtiRenderer && Object.prototype.hasOwnProperty.call(QtiRenderer, 'default') ? QtiRenderer['default'] : QtiRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for qtiCommonRenderer\n     */\n    var rendererProvider = {\n        name: 'commonRenderer',\n        init: () => {},\n        getRenderer: () => QtiRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<div class=\\\"grid-row qti-rubricBlock\\\" data-use=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.use)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"rubricBlock\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"qti-rubricBlock-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var RubricBlock = {\n        qtiClass: 'rubricBlock',\n        getContainer: containerHelper.get,\n        template: tpl,\n        getData: function getData(rubric, data) {\n            if (rubric.isEmpty()) {\n                data.empty = true;\n            }\n            return data;\n        }\n    };\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"media=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<link \\n    href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    type=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    rel=\\\"stylesheet\\\" \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Stylesheet = {\n        qtiClass: 'stylesheet',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Table',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, __, _, DOMPurify, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"summary=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<table\\n    class=\\\"qti-table\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-qti-class=\\\"table\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    >\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</table>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = {\n        qtiClass: 'table',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Table;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Tooltip',['handlebars', 'i18n', 'lodash', 'lib/dompurify/purify', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/tooltip'], function (Handlebars, __, _, DOMPurify, containerHelper, tooltip) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    DOMPurify = DOMPurify && Object.prototype.hasOwnProperty.call(DOMPurify, 'default') ? DOMPurify['default'] : DOMPurify;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2013-2019 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     *\n     */\n\n    var Helpers0 = hb => {\n        //register a i18n helper\n        hb.registerHelper('__', function(key) {\n            return __(key);\n        });\n\n        /**\n         * Register dompurify helper\n         *\n         * https://github.com/cure53/DOMPurify\n         * with config SAFE_FOR_TEMPLATES: true\n         * to make output safe for template systems\n         */\n        hb.registerHelper('dompurify', function(context) {\n            return DOMPurify.sanitize(context);\n        });\n\n        /**\n         * Register join helper\n         *\n         * Example :\n         * var values = {a:v1, b:v2, c:v3};\n         * Using {{{join attributes '=' ' ' '\"'}}} will return : a=\"v1\" b=\"v2\" c=\"v3\"\n         * Using {{{join values null ' or ' '*'}}} will return : *v1* or *v2* or *v3*\n         */\n        hb.registerHelper('join', function(arr, keyValueGlue, fragmentGlue, wrapper) {\n            var fragments = [];\n\n            keyValueGlue = typeof keyValueGlue === 'string' ? keyValueGlue : undefined;\n            fragmentGlue = typeof fragmentGlue === 'string' ? fragmentGlue : ' ';\n            wrapper = typeof wrapper === 'string' ? wrapper : '\"';\n\n            _.forIn(arr, function(value, key) {\n                var fragment = '';\n                if (value !== null || value !== undefined) {\n                    if (typeof value === 'boolean') {\n                        value = value ? 'true' : 'false';\n                    } else if (typeof value === 'object') {\n                        value = _.values(value).join(' ');\n                    }\n                } else {\n                    value = '';\n                }\n                if (keyValueGlue !== undefined) {\n                    fragment += key + keyValueGlue;\n                }\n                fragment += wrapper + value + wrapper;\n                fragments.push(fragment);\n            });\n\n            return fragments.join(fragmentGlue);\n        });\n\n        //register a classic \"for loop\" helper\n        //it also adds a local variable \"i\" as the index in each iteration loop\n        hb.registerHelper('for', function(startIndex, stopIndex, increment, options) {\n            var ret = '';\n            startIndex = parseInt(startIndex);\n            stopIndex = parseInt(stopIndex);\n            increment = parseInt(increment);\n\n            for (var i = startIndex; i < stopIndex; i += increment) {\n                ret += options.fn(_.extend({}, this, { i: i }));\n            }\n\n            return ret;\n        });\n\n        hb.registerHelper('equal', function(var1, var2, options) {\n            if (var1 == var2) {\n                return options.fn(this);\n            } else {\n                return options.inverse(this);\n            }\n        });\n\n        // register a \"get property\" helper\n        // it gets the named property from the provided context\n        hb.registerHelper('property', function(name, context) {\n            return context[name] || '';\n        });\n\n        // register an 'includes' helper\n        // it checks if value is in array\n        hb.registerHelper('includes', function(haystack, needle, options) {\n            if (_.contains(haystack, needle)) {\n                return options.fn(this);\n            }\n        });\n    };\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"_tooltip\\\"\\n    data-role=\\\"tooltip-target\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Tooltip = {\n        qtiClass: '_tooltip',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(tooltipDOM) {\n            var $container = containerHelper.get(tooltipDOM);\n            var renderedTooltip = tooltip.create($container, tooltipDOM.content(), {\n                theme: 'default',\n                placement: 'top'\n            });\n\n            if ($container.data('$tooltip')) {\n                $container.data('$tooltip').dispose();\n                $container.removeData('$tooltip');\n            }\n            $container.data('$tooltip', renderedTooltip);\n        }\n    };\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/IdentifiedElement',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/util'], function (Element, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * IdentifiedElement model\n     */\n    var IdentifiedElement = Element.extend({\n        /**\n         * Generates and assign an identifier\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {Object} for chaining\n         */\n        buildIdentifier: function buildIdentifier(prefix, useSuffix) {\n            var item = this.getRootElement();\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\n            if (id) {\n                this.attr('identifier', id);\n            }\n            return this;\n        },\n\n        /**\n         * Get/set and identifier. It will be generated if it doesn't exists.\n         * @param {String} [value] - set the value or get it if not set.\n         * @returns {String} the identifier\n         */\n        id: function id(value) {\n            if (!value && !this.attr('identifier')) {\n                this.buildIdentifier(this.qtiClass, true);\n            }\n            return this.attr('identifier', value);\n        }\n    });\n\n    return IdentifiedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Choice',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Choice = IdentifiedElement.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'choice' || this._super(qtiClass);\n        },\n        getInteraction: function() {\n            var found,\n                ret = null,\n                item = this.getRootElement();\n            if (item) {\n                found = item.find(this.serial);\n                if (found) {\n                    ret = found.parent;\n                }\n            }\n            return ret;\n        }\n    });\n\n    return Choice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hotspot',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n\tQtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n\tvar QtiHotspot = QtiChoice.extend({});\n\n\treturn QtiHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/AssociableHotspot',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiAssociableHotspot = QtiHotspot.extend({\n        qtiClass: 'associableHotspot'\n    });\n\n    return QtiAssociableHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function () { 'use strict';\n\n    //@todo : need refactoring of qti item mixin with lodash.mixin()\n    var Mixin = {\n        augment: function(targetClass, methods, options) {\n            if (typeof targetClass === 'function' && typeof methods === 'object') {\n                for (var methodName in methods) {\n                    if (!Object.hasOwnProperty(targetClass.prototype, methodName)) {\n                        targetClass.prototype[methodName] = methods[methodName];\n                    } else {\n                        if (options && options.append) {\n                            var _parent = targetClass.prototype[methodName];\n                            targetClass.prototype[methodName] = function() {\n                                methods[methodName].apply(this, arguments);\n                                return _parent.apply(this, arguments);\n                            };\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    return Mixin;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Container',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, Element, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = Element.extend({\n        qtiClass: '_container',\n        init: function(body) {\n            this._super(); //generate serial, attributes array always empty\n            if (body && typeof body !== 'string') {\n                throw 'the body of a container must be a string';\n            }\n            this.bdy = body || '';\n            this.elements = {};\n        },\n        body: function(body) {\n            if (typeof body === 'undefined') {\n                return this.bdy;\n            } else {\n                if (typeof body === 'string') {\n                    this.bdy = body;\n                    $(document).trigger('containerBodyChange', {\n                        body: body,\n                        container: this,\n                        parent: this.parent()\n                    });\n                } else {\n                    throw 'body must be a string';\n                }\n            }\n        },\n        setElements: function(elements, body) {\n            var returnValue = false;\n\n            for (var i in elements) {\n                var elt = elements[i];\n                if (elt instanceof Element) {\n                    body = body || this.bdy;\n                    if (body.indexOf(elt.placeholder()) === -1) {\n                        body += elt.placeholder(); //append the element if no placeholder found\n                    }\n\n                    elt.setRootElement(this.getRootElement() || null);\n                    this.elements[elt.getSerial()] = elt;\n                    $(document).trigger('containerElementAdded', {\n                        element: elt,\n                        container: this\n                    });\n\n                    returnValue = true;\n                } else {\n                    returnValue = false;\n                    throw 'expected a qti element';\n                }\n            }\n\n            this.body(body);\n\n            return returnValue;\n        },\n        setElement: function(element, body) {\n            return this.setElements([element], body);\n        },\n        removeElement: function(element) {\n            var serial = '';\n            if (typeof element === 'string') {\n                serial = element;\n            } else if (element instanceof Element) {\n                serial = element.getSerial();\n            }\n            delete this.elements[serial];\n            this.body(this.body().replace('{{' + serial + '}}', ''));\n            return this;\n        },\n        getElements: function(qtiClass) {\n            var elts = {};\n            if (typeof qtiClass === 'string') {\n                for (var serial in this.elements) {\n                    if (Element.isA(this.elements[serial], qtiClass)) {\n                        elts[serial] = this.elements[serial];\n                    }\n                }\n            } else {\n                elts = _.clone(this.elements);\n            }\n            return elts;\n        },\n        getElement: function(serial) {\n            return this.elements[serial] ? this.elements[serial] : null;\n        },\n        getComposingElements: function() {\n            var elements = this.getElements();\n            var elts = {};\n            for (var serial in elements) {\n                elts[serial] = elements[serial]; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, elements[serial].getComposingElements());\n            }\n            return elts;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                elementsData = [],\n                tpl = this.body();\n\n            for (var serial in this.elements) {\n                var elt = this.elements[serial];\n                if (typeof elt.render === 'function') {\n                    if (elt.qtiClass === '_container') {\n                        //@todo : container rendering merging, to be tested\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\n                    } else {\n                        tpl = tpl.replace(elt.placeholder(), '{{{' + serial + '}}}');\n                        elementsData[serial] = elt.render(renderer);\n                    }\n                } else {\n                    throw 'render() is not defined for the qti element: ' + serial;\n                }\n            }\n\n            if (renderer.isRenderer) {\n                return this._super(\n                    {\n                        body: renderer.renderDirect(tpl, elementsData),\n                        contentModel: this.contentModel || 'flow'\n                    },\n                    renderer,\n                    args.placeholder\n                );\n            } else {\n                throw 'invalid qti renderer for qti container';\n            }\n        },\n        postRender: function(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n\n            var res = _(this.elements)\n                .filter(function(elt) {\n                    return typeof elt.postRender === 'function';\n                })\n                .map(function(elt) {\n                    return elt.postRender(data, '', renderer);\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n            return res;\n        },\n        toArray: function() {\n            var arr = {\n                serial: this.serial,\n                body: this.bdy,\n                elements: {}\n            };\n\n            for (var serial in this.elements) {\n                arr.elements[serial] = this.elements[serial].toArray();\n            }\n\n            return arr;\n        },\n        find: function(serial, parent) {\n            var found = null;\n\n            if (this.elements[serial]) {\n                found = { parent: parent || this, element: this.elements[serial], location: 'body' };\n            } else {\n                _.each(this.elements, function(elt) {\n                    found = elt.find(serial);\n                    if (found) {\n                        return false; //break loop\n                    }\n                });\n            }\n\n            return found;\n        },\n        isEmpty: function() {\n            return !this.bdy;\n        }\n    });\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function (Mixin, Container$1) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container$1 = Container$1 && Object.prototype.hasOwnProperty.call(Container$1, 'default') ? Container$1['default'] : Container$1;\n\n    var methods = {\n        initContainer: function(body) {\n            this.bdy = new Container$1(body || '');\n            this.bdy.setRootElement(this.getRootElement() || null);\n            this.bdy.contentModel = 'blockStatic';\n        },\n        getBody: function() {\n            return this.bdy;\n        },\n        body: function(body) {\n            var ret = this.bdy.body(body);\n            return body ? this : ret; //for method chaining on get\n        },\n        setElement: function(element, body) {\n            this.bdy.setElement(element, body);\n            return this;\n        },\n        removeElement: function(element) {\n            return this.bdy.removeElement(element);\n        },\n        getElements: function(qtiClass) {\n            return this.bdy.getElements(qtiClass);\n        },\n        getElement: function(serial) {\n            return this.bdy.getElement(serial);\n        }\n    };\n\n    var Container = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/Container'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Gap',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n    var QtiGap = QtiChoice.extend({\n        qtiClass: 'gap'\n    });\n\n    return QtiGap;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Object',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiObject = Element.extend({\n        qtiClass: 'object',\n        getMediaType: function() {\n            var type = 'undefined';\n            var mimetype = this.attr('type');\n            if (mimetype) {\n                if (mimetype.indexOf('video') === 0) {\n                    type = 'video';\n                } else if (mimetype.indexOf('audio') === 0) {\n                    type = 'audio';\n                } else if (mimetype.indexOf('image') === 0) {\n                    type = 'image';\n                } else if (mimetype.indexOf('text/html') === 0) {\n                    type = 'html';\n                } else {\n                    type = 'object';\n                }\n            }\n            return type;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            switch (this.getMediaType()) {\n                case 'video':\n                    defaultData.video = true;\n                    break;\n                case 'audio':\n                    defaultData.audio = true;\n                    break;\n                case 'html':\n                    defaultData.html = true;\n                    break;\n                case 'image':\n                default:\n                    defaultData.object = true;\n            }\n\n            defaultData.attributes = { data: renderer.resolveUrl(this.attr('data')) };\n            defaultData.body = this._alt;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('data');\n        }\n    });\n\n    return QtiObject;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapImg',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/core/Object'], function (QtiChoice, QtiObject) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiGapImg = QtiChoice.extend({\n        qtiClass: 'gapImg',\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiGapImg;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapText',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var QtiGapText = QtiContainerChoice.extend({\n        qtiClass: 'gapText'\n    });\n\n    return QtiGapText;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/HotspotChoice',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiHotspotChoice = QtiHotspot.extend({\n        qtiClass: 'hotspotChoice'\n    });\n\n    return QtiHotspotChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerInline',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'inlineStatic';\n        }\n    });\n\n    var ContainerInline = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hottext',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var Hottext = Choice.extend({\n        qtiClass: 'hottext'\n    });\n\n    Container.augment(Hottext);\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextVariableChoice',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, QtiChoice, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiTextVariableChoice = QtiChoice.extend({\n        init: function(serial, attributes, text) {\n            this._super(serial, attributes);\n            this.val(text || '');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'textVariableChoice' || this._super(qtiClass);\n        },\n        val: function(text) {\n            if (typeof text === 'undefined') {\n                return this.text;\n            } else {\n                if (typeof text === 'string') {\n                    this.text = text;\n                    $(document).trigger('choiceTextChange', {\n                        choice: this,\n                        text: text\n                    });\n                } else {\n                    throw 'text must be a string';\n                }\n            }\n            return this;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    body: this.text\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiTextVariableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/InlineChoice',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiInlineChoice = QtiTextVariableChoice.extend({\n        qtiClass: 'inlineChoice'\n    });\n\n    return QtiInlineChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleAssociableChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleAssociableChoice'\n    });\n\n    return QtiSimpleAssociableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleChoice'\n    });\n\n    return QtiSimpleChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextEntry',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiTextEntry = QtiTextVariableChoice.extend({\r\n        qtiClass: 'textEntry'\r\n    });\n\n    return QtiTextEntry;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/Feedback',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Feedback = IdentifiedElement.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    return Feedback;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackBlock = Feedback.extend({});\n\n\treturn FeedbackBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackInline = Feedback.extend({});\n\n\treturn FeedbackInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function (IdentifiedElement, Container) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ModalFeedback = IdentifiedElement.extend({\n        qtiClass: 'modalFeedback',\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ModalFeedback);\n\n    return ModalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigcaption',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figcaption';\n        }\n    });\n\n    var ContainerFigcaption = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/NamespacedElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    var methods = {\n        getNamespace: function() {\n            var relatedItem;\n            var namespaces;\n            var ns;\n\n            if (this.ns && (this.ns.name || this.ns.uri)) {\n                return _.clone(this.ns);\n            } else {\n                relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    namespaces = relatedItem.getNamespaces();\n                    for (ns in namespaces) {\n                        if (namespaces[ns].indexOf(this.nsUriFragment) > 0) {\n                            return {\n                                name: ns,\n                                uri: namespaces[ns]\n                            };\n                        }\n                    }\n                    //if no ns found in the item, set the default one!\n                    relatedItem.namespaces[this.defaultNsName] = this.defaultNsUri;\n                    return {\n                        name: this.defaultNsName,\n                        uri: this.defaultNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setNamespace: function(name, uri) {\n            this.ns = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var NamespacedElement = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return NamespacedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figcaption',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigcaption', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figcaption = Element.extend({\n        qtiClass: 'figcaption',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figcaption' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(Figcaption);\n    NamespacedElement.augment(Figcaption);\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigure',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figure';\n        }\n    });\n\n    var ContainerFigure = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figure',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigure', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figure = Element.extend({\n        qtiClass: 'figure',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figure' || this._super(qtiClass);\n        },\n        isEmpty: function () {\n            const imgElements = this.getElements('img');\n            if (imgElements && Object.values(imgElements).length) {\n                return Object.values(imgElements)[0].isEmpty();\n            } else {\n                return true;\n            }\n        }\n    });\n    Container.augment(Figure);\n    NamespacedElement.augment(Figure);\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Img',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Img = Element.extend({\n        qtiClass: 'img',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {\n                src: renderer.resolveUrl(this.attr('src'))\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('src');\n        }\n    });\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Include',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Include = Element.extend({\n        qtiClass: 'include',\n        defaultNsName: 'xi',\n        defaultNsUri: 'http://www.w3.org/2001/XInclude',\n        nsUriFragment: 'XInclude',\n        isEmpty: function() {\n            return !this.attr('href') || this.getBody().isEmpty();\n        }\n    });\n    Container.augment(Include);\n    NamespacedElement.augment(Include);\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Interaction',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util'], function (Element, _, rendererConfig, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    var QtiInteraction = Element.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = {};\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'interaction' || this._super(qtiClass);\n        },\n        addChoice: function(choice) {\n            choice.setRootElement(this.getRootElement() || null);\n            this.choices[choice.getSerial()] = choice;\n            return this;\n        },\n        getChoices: function() {\n            var choices = {};\n            for (var i in this.choices) {\n                //prevent passing the whole array by ref\n                choices[i] = this.choices[i];\n            }\n            return choices;\n        },\n        getChoice: function(serial) {\n            var ret = null;\n            if (this.choices[serial]) {\n                ret = this.choices[serial];\n            }\n            return ret;\n        },\n        getChoiceByIdentifier: function(identifier) {\n            for (var i in this.choices) {\n                if (this.choices[i].id() === identifier) {\n                    return this.choices[i];\n                }\n            }\n            return null;\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            //recursive to choices:\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    elts[serial] = this.choices[serial];\n                    elts = _.extend(elts, this.choices[serial].getComposingElements());\n                }\n            }\n            return elts;\n        },\n        find: function(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, 'choices', serial);\n            }\n            return found;\n        },\n        getResponseDeclaration: function() {\n            var response = null;\n            var responseId = this.attr('responseIdentifier');\n            if (responseId) {\n                var item = this.getRootElement();\n                if (item) {\n                    response = item.getResponseDeclaration(responseId);\n                } else {\n                    throw 'cannot get response of an interaction out of its item context';\n                }\n            }\n            return response;\n        },\n        /**\n         * Render the interaction to the view.\n         * The optional argument \"subClass\" allows distinguishing customInteraction: e.g. customInteraction.matrix, customInteraction.likertScale ...\n         */\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    _type: this.qtiClass.replace(/([A-Z])/g, function($1) {\n                        return '_' + $1.toLowerCase();\n                    }),\n                    choices: [],\n                    choiceShuffle: true\n                };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            var choices =\n                this.attr('shuffle') && renderer.getOption('shuffleChoices')\n                    ? renderer.getShuffledChoices(this)\n                    : this.getChoices();\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n            var _this = this;\n            _.each(choices, function(choice) {\n                if (Element.isA(choice, 'choice')) {\n                    try {\n                        var renderedChoice = choice.render(\n                            _.clone(interactionData, true),\n                            null,\n                            choice.qtiClass + '.' + _this.qtiClass,\n                            renderer\n                        ); //use interaction type as choice subclass\n                        defaultData.choices.push(renderedChoice);\n                    } catch (e) {\n                        //leave choices empty in case of error\n                    }\n                }\n            });\n\n            var tplName = args.subclass ? this.qtiClass + '.' + args.subclass : this.qtiClass;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, tplName, renderer);\n        },\n        postRender: function(data, altClassName, renderer) {\n            var self = this;\n            renderer = renderer || this.getRenderer();\n\n            return _(this.getChoices())\n                .filter(function(elt) {\n                    return Element.isA(elt, 'choice');\n                })\n                .map(function(choice) {\n                    return choice.postRender({}, choice.qtiClass + '.' + self.qtiClass, renderer);\n                })\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        setResponse: function(values) {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.setResponse(this, values);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        getResponse: function() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.getResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        resetResponse: function() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.resetResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state is provided by the interaction's renderer.\n         *\n         * @returns {Object} the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        getState: function() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState(this);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state will be given to the interaction's renderer.\n         *\n         * @param {Object} state - the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        setState: function(state) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState(this, state);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n        },\n\n        /**\n         * Clean up an interaction rendering.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n         */\n        clear: function() {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.destroy)) {\n                return renderer.destroy(this);\n            }\n        },\n\n        toArray: function() {\n            var arr = this._super();\n            arr.choices = {};\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    arr.choices[serial] = this.choices[serial].toArray();\n                }\n            }\n            return arr;\n        },\n\n        getNormalMaximum: function getNormalMaximum() {\n            //by default\n            return false;\n        }\n    });\n\n    return QtiInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Prompt',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Element, Container) { 'use strict';\n\n\tElement = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar Prompt = Element.extend({ qtiClass: 'prompt' });\n\tContainer.augment(Prompt);\n\n\treturn Prompt;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/BlockInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/core/interactions/Prompt', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Interaction, Prompt, _, rendererConfig) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    Prompt = Prompt && Object.prototype.hasOwnProperty.call(Prompt, 'default') ? Prompt['default'] : Prompt;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var BlockInteraction = Interaction.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.prompt = new Prompt('');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'blockInteraction' || this._super(qtiClass);\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            elts = _.extend(elts, this.prompt.getComposingElements());\n            elts[this.prompt.getSerial()] = this.prompt;\n            return elts;\n        },\n        find: function(serial) {\n            return this._super(serial) || this.prompt.find(serial);\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    promptId: `prompt-${this.prompt.getSerial()}`,\n                    prompt: this.prompt.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return [].concat(this.prompt.postRender({}, '', renderer)).concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.prompt = this.prompt.toArray();\n            return arr;\n        }\n    });\n\n    return BlockInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    var responseRules = {\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'match',\n                    expressions: [\n                        {\n                            qtiClass: 'variable',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                        {\n                            qtiClass: 'correct',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    },\n                                },\n                                {\n                                    qtiClass: 'baseValue',\n                                    attributes: {\n                                        baseType: 'integer'\n                                    },\n                                    value: '1',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponse',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponsePoint',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const _templateNames = {\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        NONE: 'no_response_processing'\n    };\n\n\n    var response = {\n        isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName(tplName) {\n            return _templateNames[tplName] || '';\n        },\n        getTemplateNameFromUri(tplUri) {\n            let tplName = '';\n\n            _.forIn(_templateNames, (uri, name) => {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n\n            return tplName;\n        },\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\n            if (!responseRules) {\n                return 'NONE';\n            }\n\n            const {\n                responseIf: {\n                    responseRules: [outcomeRules = {}] = [],\n                } = {}\n            } = responseRules;\n            const {\n                attributes: {\n                    identifier: outcomeIdentifier,\n                } = {},\n            } = outcomeRules;\n\n            if (!outcomeIdentifier) {\n                return '';\n            }\n\n            return Object.keys(responseRulesHelper).find(\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\n            );\n        }\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * It is the top abstract class for all variable classes\n     * (so not renderable and qtiClass undefined)\n     */\n    var VariableDeclaration = IdentifiedElement.extend({\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.defaultValue = null;\n        },\n        is: function is(qtiClass) {\n            return qtiClass === 'variableDeclaration' || this._super(qtiClass);\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            arr.defaultValue = this.defaultValue;\n            return arr;\n        },\n        setDefaultValue: function setDefaultValue(value) {\n            this.defaultValue = value;\n        },\n        getDefaultValue: function getDefaultValue() {\n            return this.defaultValue;\n        }\n    });\n\n    return VariableDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function (VariableDeclaration) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n\n    var OutcomeDeclaration = VariableDeclaration.extend({\n        qtiClass: 'outcomeDeclaration'\n    });\n\n    return OutcomeDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/maxScore',['lodash', 'lib/gamp/gamp', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function (_, gamp, responseHelper, OutcomeDeclaration) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    gamp = gamp && Object.prototype.hasOwnProperty.call(gamp, 'default') ? gamp['default'] : gamp;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    OutcomeDeclaration = OutcomeDeclaration && Object.prototype.hasOwnProperty.call(OutcomeDeclaration, 'default') ? OutcomeDeclaration['default'] : OutcomeDeclaration;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var pairExists = function pairExists(collection, pair) {\n        if (pair.length !== 2) {\n            return false;\n        }\n        return collection[pair[0] + ' ' + pair[1]] || collection[pair[1] + ' ' + pair[0]];\n    };\n\n    var maxScore = {\n        /**\n         * Set the normal maximum to the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setNormalMaximum: function setNormalMaximum(item) {\n            var normalMaximum,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                normalMaximum = _.reduce(\n                    item.getInteractions(),\n                    function(acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            return false;\n                        }\n                    },\n                    0\n                );\n\n                if (_.isNumber(normalMaximum)) {\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\n                } else {\n                    scoreOutcome.removeAttr('normalMaximum');\n                }\n            }\n        },\n\n        /**\n         * Set the maximum score of the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setMaxScore: function setMaxScore(item) {\n            var hasInvalidInteraction = false,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\n                customOutcomes,\n                maxScore,\n                maxScoreOutcome;\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                maxScore = _.reduce(\n                    item.getInteractions(),\n                    function(acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            hasInvalidInteraction = true;\n                            return acc;\n                        }\n                    },\n                    0\n                );\n\n                customOutcomes = _(item.getOutcomes()).filter(function(outcome) {\n                    return outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE';\n                });\n\n                if (customOutcomes.size()) {\n                    maxScore = customOutcomes.reduce(function(acc, outcome) {\n                        return gamp.add(acc, parseFloat(outcome.attr('normalMaximum') || 0));\n                    }, maxScore);\n                }\n\n                if (!hasInvalidInteraction || customOutcomes.size()) {\n                    maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\n                    if (!maxScoreOutcome) {\n                        //add new outcome\n                        maxScoreOutcome = new OutcomeDeclaration({\n                            cardinality: 'single',\n                            baseType: 'float'\n                        });\n\n                        //attach the outcome to the item before generating item-level unique id\n                        item.addOutcomeDeclaration(maxScoreOutcome);\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\n                    }\n                    maxScoreOutcome.setDefaultValue(maxScore);\n                } else {\n                    //remove MAXSCORE:\n                    item.removeOutcome('MAXSCORE');\n                }\n            }\n        },\n\n        /**\n         * Sort an array of associable choices by its matchMax attr value\n         * @param {Array} choiceCollection\n         * @returns {Array}\n         */\n        getMatchMaxOrderedChoices: function getMatchMaxOrderedChoices(choiceCollection) {\n            return _(choiceCollection)\n                .map(function(choice) {\n                    var matchMax = parseInt(choice.attr('matchMax'), 10);\n                    if (_.isNaN(matchMax)) {\n                        matchMax = 0;\n                    }\n                    return {\n                        matchMax: matchMax === 0 ? Infinity : matchMax,\n                        id: choice.id()\n                    };\n                })\n                .sortBy('matchMax')\n                .reverse()\n                .valueOf();\n        },\n\n        /**\n         * Compute the maximum score of a \"choice\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        choiceInteractionBased: function choiceInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max,\n                maxChoice,\n                minChoice,\n                scoreMaps,\n                requiredChoiceCount,\n                totalAnswerableResponse,\n                sortedMapEntries,\n                missingMapsCount;\n\n            options = _.defaults(options || {}, { maxChoices: 0, minChoices: 0 });\n            maxChoice = parseInt(interaction.attr('maxChoices') || options.maxChoices, 10);\n            minChoice =  0 ;\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    maxChoice &&\n                    _.isArray(responseDeclaration.correctResponse) &&\n                    (responseDeclaration.correctResponse.length > maxChoice ||\n                        responseDeclaration.correctResponse.length < minChoice)\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //prepare constraint params\n                requiredChoiceCount = minChoice;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                //sort the score map entries by the score\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                sortedMapEntries = _(scoreMaps)\n                    .map(function(v) {\n                        return parseFloat(v);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .first(totalAnswerableResponse);\n\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\n                missingMapsCount = minChoice - sortedMapEntries.size();\n                _.times(missingMapsCount, function() {\n                    sortedMapEntries.push(mapDefault);\n                });\n\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\n                if (mapDefault && mapDefault > 0) {\n                    if (maxChoice) {\n                        missingMapsCount = maxChoice - sortedMapEntries.size();\n                    } else {\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.size();\n                    }\n                    if (missingMapsCount > 0) {\n                        _.times(missingMapsCount, function() {\n                            sortedMapEntries.push(mapDefault);\n                        });\n                    }\n                }\n\n                //calculate the maximum reachable score by choice map\n                max = sortedMapEntries.reduce(function(acc, v) {\n                    var score = v;\n                    if (score < 0 && requiredChoiceCount <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredChoiceCount--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //map point response processing does not work on choice based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"order\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        orderInteractionBased: function orderInteractionBased(interaction) {\n            var minChoice =  0 ;\n            var maxChoice = parseInt(interaction.attr('maxChoices') || 0, 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max;\n\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        (maxChoice && responseDeclaration.correctResponse.length > maxChoice)) ||\n                    (minChoice )\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\n                //map response processing does not work on order based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"associate\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        associateInteractionBased: function associateInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = parseInt(interaction.attr('maxAssociations') || 0, 10);\n            var minAssoc =  0 ;\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                requiredAssoc,\n                totalAnswerableResponse,\n                usedChoices,\n                choicesIdentifiers,\n                sortedMapEntries,\n                i,\n                allPossibleMapEntries,\n                infiniteScoringPair;\n\n            options = _.defaults(options || {}, { possiblePairs: [], checkInfinitePair: false });\n\n            if (maxAssoc && minAssoc && maxAssoc < minAssoc) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        (!responseDeclaration.correctResponse.length ||\n                            (maxAssoc && responseDeclaration.correctResponse.length > maxAssoc) ||\n                            (minAssoc )))\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n\n                    //get the list of choices used in map entries\n                    choicesIdentifiers = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choicesIdentifiers.push(choices[0].trim());\n                            choicesIdentifiers.push(choices[1].trim());\n                        }\n                    });\n\n                    //check if the choices usage are possible within the constraint defined in the interaction\n                    _.forEach(_.countBy(choicesIdentifiers), function(count, identifier) {\n                        var matchMax;\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        if (!choice) {\n                            max = 0;\n                            return false;\n                        }\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                requiredAssoc = minAssoc;\n                totalAnswerableResponse = maxAssoc === 0 ? Infinity : maxAssoc;\n                usedChoices = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(options.possiblePairs, function(pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                //get the sorted list of mapentries ordered by the score\n                sortedMapEntries = _(allPossibleMapEntries)\n                    .map(function(score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function(mapEntry) {\n                        var pair = mapEntry.pair;\n                        var choices, choiceId, choice, _usedChoices;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        //check that the pair is possible in term of matchMax\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            //clone the global used choices array to brings the changes in that object first before storing in the actual object\n                            _usedChoices = _.cloneDeep(usedChoices);\n\n                            for (i = 0; i < 2; i++) {\n                                choiceId = choices[i];\n\n                                //collect choices usage to check if the pair is possible\n                                if (!_usedChoices[choiceId]) {\n                                    choice = interaction.getChoiceByIdentifier(choiceId);\n                                    if (!choice) {\n                                        //unexisting choice, skip\n                                        return false;\n                                    }\n                                    _usedChoices[choiceId] = {\n                                        used: 0,\n                                        max: parseInt(choice.attr('matchMax'), 10)\n                                    };\n                                }\n                                if (\n                                    _usedChoices[choiceId].max &&\n                                    _usedChoices[choiceId].used === _usedChoices[choiceId].max\n                                ) {\n                                    //skip\n                                    return false;\n                                } else {\n                                    _usedChoices[choiceId].used++;\n                                }\n                            }\n\n                            //identify the edge case when we can get infinite association pair that create an infinite score\n                            infiniteScoringPair =\n                                infiniteScoringPair ||\n                                (options.checkInfinitePair &&\n                                    mapEntry.score > 0 &&\n                                    _usedChoices[choices[0]].max === 0 &&\n                                    _usedChoices[choices[1]].max === 0);\n\n                            //update the global used choices array\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .first(totalAnswerableResponse);\n\n                //infinite score => no normalMaximum should be generated for it\n                if (infiniteScoringPair) {\n                    return false;\n                }\n\n                //reduce the ordered list of map entries to calculate the max score\n                max = sortedMapEntries.reduce(function(acc, v) {\n                    var score = v.score;\n                    if (v.score < 0 && requiredAssoc <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredAssoc--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"gap match\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        gapMatchInteractionBased: function gapMatchInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                skippableWrongResponse,\n                totalAnswerableResponse,\n                usedChoices,\n                usedGaps,\n                group1,\n                group2,\n                allPossibleMapEntries;\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection) {\n                return _(choiceCollection)\n                    .map(function(choice) {\n                        return {\n                            matchMax: choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\n                            id: choice.id()\n                        };\n                    })\n                    .sortBy('matchMax')\n                    .reverse()\n                    .valueOf();\n            };\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n                    group1 = [];\n                    group2 = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            group1.push(choices[0].trim());\n                            group2.push(choices[1].trim());\n                        }\n                    });\n\n                    _.forEach(_.countBy(group1), function(count, identifier) {\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n\n                    _.forEach(_.countBy(group2), function(count) {\n                        var matchMax = 1; //match max for a gap is always 1\n                        if ( matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse =  Infinity ;\n                usedChoices = {};\n                usedGaps = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(calculatePossiblePairs(interaction), function(pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                max = _(allPossibleMapEntries)\n                    .map(function(score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function(mapEntry) {\n                        var pair = mapEntry.pair;\n                        var _usedChoices = _.cloneDeep(usedChoices);\n                        var choices, choiceId, gapId, choice;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choiceId = choices[0];\n                            gapId = choices[1];\n                            if (!_usedChoices[choiceId]) {\n                                choice = interaction.getChoiceByIdentifier(choiceId);\n                                if (!choice) {\n                                    //inexisting choice, skip\n                                    return false;\n                                }\n                                _usedChoices[choiceId] = {\n                                    used: 0,\n                                    max: parseInt(choice.attr('matchMax'), 10)\n                                };\n                            }\n                            if (_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max) {\n                                //skip\n                                return false;\n                            }\n                            _usedChoices[choiceId].used++;\n\n                            if (!usedGaps[gapId]) {\n                                usedGaps[gapId] = {\n                                    used: 0,\n                                    max: 1\n                                };\n                            }\n                            if (usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max) {\n                                //skip\n                                return false;\n                            }\n                            usedGaps[gapId].used++;\n\n                            //if an only if it is ok, we merge the temporary used choices array into the global one\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .first(totalAnswerableResponse)\n                    .reduce(function(acc, v) {\n                        var score = v.score;\n                        if (score >= 0) {\n                            return acc + score;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + score;\n                        }\n                    }, 0);\n\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = false;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"select point\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        selectPointInteractionBased: function selectPointInteractionBased(interaction) {\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, skippableWrongResponse, totalAnswerableResponse;\n\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\n                //such templates are not allowed\n                return 0;\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //calculate the maximum reachable score by choice map\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                max = _(responseDeclaration.mapEntries)\n                    .map(function(v) {\n                        return parseFloat(v.mappedValue);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .first(totalAnswerableResponse)\n                    .reduce(function(acc, v) {\n                        if (v >= 0) {\n                            return acc + v;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + v;\n                        }\n                    }, 0);\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"slider\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        sliderInteractionBased: function sliderInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                max = _(scoreMaps)\n                    .map(function(v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"text entry\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        textEntryInteractionBased: function textEntryInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            /**\n             * Check that a response is possible or not according to the defined patternmask\n             * @param {String} value\n             * @returns {Boolean}\n             */\n            var isPossibleResponse = function isPossibleResponse(value) {\n                var patternMask = interaction.attr('patternMask');\n                if (patternMask) {\n                    return !!value.match(new RegExp(patternMask));\n                } else {\n                    //no restriction by pattern so always possible\n                    return true;\n                }\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(\n                    _.filter(responseDeclaration.mapEntries, function(score, key) {\n                        return isPossibleResponse(key);\n                    })\n                );\n                max = _(scoreMaps)\n                    .map(function(v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"custom\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        customInteractionBased(interaction) {\n            const responseDeclaration = interaction.getResponseDeclaration();\n            const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            let max;\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    Array.isArray(responseDeclaration.correctResponse) &&\n                    (responseDeclaration.correctResponse.length)\n                ) {\n                    max = 1;\n                } else {\n                    max = 0;\n                }\n            } else {\n                max = 0;\n            }\n            return max;\n        }\n    };\n\n    return maxScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/AssociateInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var AssociateInteraction = BlockInteraction.extend({\n        qtiClass: 'associateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        pairs.push([choices[i].id, choices[j].id]);\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ChoiceInteraction = BlockInteraction.extend({\n        qtiClass: 'choiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ContainerInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/mixin/Container'], function (BlockInteraction, Container) { 'use strict';\n\n\tBlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar ContainerInteraction = BlockInteraction.extend({});\n\tContainer.augment(ContainerInteraction);\n\n\treturn ContainerInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/CustomElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {\n        prop: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.properties[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.prop(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.properties[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.properties[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeProp: function(propNames) {\n            var _this = this;\n            if (typeof propNames === 'string') {\n                propNames = [propNames];\n            }\n            _.each(propNames, function(propName) {\n                delete _this.attributes[propName];\n            });\n            return this;\n        },\n        getProperties: function() {\n            return _.clone(this.properties);\n        },\n        getMarkupNamespace: function() {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function(name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var CustomElement = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return CustomElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/CustomInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, Interaction, CustomElement, NamespacedElement, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    var CustomInteraction = Interaction.extend({\n        qtiClass: 'customInteraction',\n        defaultNsName: 'pci',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableCustomInteraction',\n        nsUriFragment: 'portableCustomInteraction',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            this.pciReadyCallbacks = [];\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'customInteraction' || this._super(qtiClass);\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pci: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n        getMarkupNamespace: function() {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function(name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        },\n        onPciReady: function(callback) {\n            this.pciReadyCallbacks.push(callback);\n\n            if (this.data('pci')) {\n                //if pci is already ready, call it immediately\n                this.triggerPciReady();\n            }\n        },\n        triggerPciReady: function() {\n            var _this = this,\n                pci = this.data('pci');\n\n            if (pci) {\n                _.each(this.pciReadyCallbacks, function(fn) {\n                    fn.call(_this, pci);\n                });\n\n                //empty the stack of ready callbacks\n                this.pciReadyCallbacks = [];\n\n                //mark the interaction as ready\n                this.data('pciReady', true);\n            } else {\n                throw 'cannot trigger pci ready when no pci is actually attached to the interaction';\n            }\n        },\n        onPci: function(event, callback) {\n            this.onPciReady(function(pci) {\n                if (_.isFunction(pci.on)) {\n                    pci.on(event, callback);\n                } else {\n                    throw 'the pci does not implement on() function';\n                }\n            });\n            return this;\n        },\n        offPci: function(event) {\n            this.onPciReady(function(pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.off(event);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        triggerPci: function(event, args) {\n            this.onPciReady(function(pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.trigger(event, args);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        getNormalMaximum() {\n            return maxScore.customInteractionBased(this);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(CustomInteraction);\n    NamespacedElement.augment(CustomInteraction);\n\n    return CustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction'], function (Interaction) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var InlineInteraction = Interaction.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'inlineInteraction' || this._super(qtiClass);\n        }\n    });\n\n    return InlineInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var EndAttemptInteraction = InlineInteraction.extend({\n        qtiClass: 'endAttemptInteraction'\n    });\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, BlockInteraction, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ExtendedTextInteraction = BlockInteraction.extend({\n        qtiClass: 'extendedTextInteraction',\n        render: function render() {\n            var i,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    multiple: false,\n                    maxStringLoop: []\n                },\n                response = this.getResponseDeclaration();\n\n            if (\n                this.attr('maxStrings') &&\n                (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n            ) {\n                defaultData.multiple = true;\n                for (i = 0; i < this.attr('maxStrings'); i++) {\n                    defaultData.maxStringLoop.push(i + ''); //need to convert to string. The tpl engine fails otherwise\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapMatchInteraction = ContainerInteraction.extend({\n        qtiClass: 'gapMatchInteraction',\n        getGaps: function getGaps() {\n            return this.getBody().getElements('gap');\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.gapMatchInteractionBased(this);\n        }\n    });\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ObjectInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/Object'], function (QtiBlockInteraction, QtiObject) { 'use strict';\n\n    QtiBlockInteraction = QtiBlockInteraction && Object.prototype.hasOwnProperty.call(QtiBlockInteraction, 'default') ? QtiBlockInteraction['default'] : QtiBlockInteraction;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiObjectInteraction = QtiBlockInteraction.extend({\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiObjectInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicInteraction',['taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (QtiObjectInteraction, _, rendererConfig) { 'use strict';\n\n    QtiObjectInteraction = QtiObjectInteraction && Object.prototype.hasOwnProperty.call(QtiObjectInteraction, 'default') ? QtiObjectInteraction['default'] : QtiObjectInteraction;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiGraphicInteraction = QtiObjectInteraction.extend({\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    backgroundImage: this.object.getAttributes(),\n                    object: this.object.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiGraphicInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicAssociateInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicAssociateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        if (i !== j) {\n                            pairs.push([choices[i].id, choices[j].id]);\n                        }\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, Element, _, rendererConfig, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicGapMatchInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicGapMatchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.gapImgs = {};\n        },\n        addGapImg: function addGapImg(gapImg) {\n            if (Element.isA(gapImg, 'gapImg')) {\n                gapImg.setRootElement(this.getRootElement() || null);\n                this.gapImgs[gapImg.getSerial()] = gapImg;\n            }\n        },\n        removeGapImg: function removeGapImg(gapImg) {\n            var serial = '';\n            if (typeof gapImg === 'string') {\n                serial = gapImg;\n            } else if (Element.isA(gapImg, 'gapImg')) {\n                serial = gapImg.getSerial();\n            }\n            delete this.gapImgs[serial];\n            return this;\n        },\n        getGapImgs: function getGapImgs() {\n            return _.clone(this.gapImgs);\n        },\n        getGapImg: function getGapImg(serial) {\n            return this.gapImgs[serial];\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var choice = this._super(identifier);\n            if (!choice) {\n                //if not found among the choices, search the gapImgs\n                choice = _.find(this.gapImgs, function(elt) {\n                    return elt && elt.id() === identifier;\n                });\n            }\n            return choice;\n        },\n        getComposingElements: function getComposingElements() {\n            var serial,\n                elts = this._super();\n            //recursive to choices:\n            for (serial in this.gapImgs) {\n                elts[serial] = this.gapImgs[serial];\n                elts = _.extend(elts, this.gapImgs[serial].getComposingElements());\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                if (this.gapImgs[serial]) {\n                    found = { parent: this, element: this.gapImgs[serial] };\n                }\n            }\n            return found;\n        },\n        render: function render() {\n            var serial,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    gapImgs: []\n                };\n\n            //note: no choice shuffling option available for graphic gap match\n            var gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                if (Element.isA(gapImgs[serial], 'choice')) {\n                    defaultData.gapImgs.push(gapImgs[serial].render({}, null, '', renderer));\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function toArray() {\n            var serial,\n                gapImgs,\n                arr = this._super();\n            arr.gapImgs = {};\n            gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                arr.gapImgs[serial] = gapImgs[serial].toArray();\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(graphicGapInteraction) {\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getGapImgs());\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getChoices());\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {\n                possiblePairs: calculatePossiblePairs(this),\n                checkInfinitePair: true\n            });\n        }\n    });\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicOrderInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicOrderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HotspotInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HotspotInteraction = GraphicInteraction.extend({\n        qtiClass: 'hotspotInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HottextInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, Element, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HottextInteraction = ContainerInteraction.extend({\n        qtiClass: 'hottextInteraction',\n        getChoices: function() {\n            return this.getBody().getElements('hottext');\n        },\n        getChoice: function(serial) {\n            var element = this.getBody().getElement(serial);\n            return Element.isA(element, 'choice') ? element : null;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoiceInteraction = InlineInteraction.extend({\n        qtiClass: 'inlineChoiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this, { maxChoices: 1 });\n        }\n    });\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MatchInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, SimpleAssociableChoice, _, rendererConfig, util, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    SimpleAssociableChoice = SimpleAssociableChoice && Object.prototype.hasOwnProperty.call(SimpleAssociableChoice, 'default') ? SimpleAssociableChoice['default'] : SimpleAssociableChoice;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var MatchInteraction = BlockInteraction.extend({\n        qtiClass: 'matchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = [{}, {}];\n        },\n        addChoice: function addChoice(choice, matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                choice.setRootElement(this.getRootElement() || null);\n                this.choices[matchSet][choice.getSerial()] = choice;\n            }\n        },\n        getChoices: function getChoices(matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                return _.clone(this.choices[matchSet]);\n            } else {\n                return _.clone(this.choices);\n            }\n        },\n        getChoice: function getChoice(serial) {\n            return this.choices[0][serial] || this.choices[1][serial] || null;\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var i, matchSet, serial;\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice && matchSet[serial].id() === identifier) {\n                        return matchSet[serial];\n                    }\n                }\n            }\n            return null;\n        },\n        getComposingElements: function getComposingElements() {\n            var i, matchSet, serial;\n            var elts = this._super();\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        elts[serial] = matchSet[serial];\n                        elts = _.extend(elts, matchSet[serial].getComposingElements());\n                    }\n                }\n            }\n\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, ['choices.0', 'choices.1'], serial);\n            }\n            return found;\n        },\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var renderer = args.renderer || this.getRenderer();\n            var defaultData = {\n                matchSet1: [],\n                matchSet2: []\n            };\n            var choices, i, matchSet, serial;\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            if (this.attr('shuffle') && renderer.getOption('shuffleChoices')) {\n                choices = renderer.getShuffledChoices(this);\n            } else {\n                choices = this.getChoices();\n            }\n\n            for (i = 0; i < 2; i++) {\n                matchSet = choices[i];\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        defaultData['matchSet' + (i + 1)].push(\n                            matchSet[serial].render(\n                                _.clone(interactionData, true),\n                                null,\n                                'simpleAssociableChoice.matchInteraction',\n                                renderer\n                            )\n                        );\n                    }\n                }\n            }\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function postRender(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return _(this.getChoices())\n                .map(function(choices) {\n                    return _(choices)\n                        .filter(function(choice) {\n                            return choice instanceof SimpleAssociableChoice;\n                        })\n                        .map(function(choice) {\n                            return choice.postRender({}, 'simpleAssociableChoice.matchInteraction', renderer);\n                        })\n                        .value();\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function toArray() {\n            var i, matchSet, serial;\n            var arr = this._super();\n            arr.choices = { 0: {}, 1: {} };\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        arr.choices[i][serial] = matchSet[serial].toArray();\n                    }\n                }\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(matchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(0));\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(1));\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MediaInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, ObjectInteraction, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    ObjectInteraction = ObjectInteraction && Object.prototype.hasOwnProperty.call(ObjectInteraction, 'default') ? ObjectInteraction['default'] : ObjectInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    var MediaInteraction = ObjectInteraction.extend({\n        qtiClass: 'mediaInteraction',\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    object: this.object.render({}, null, '', renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/OrderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var OrderInteraction = BlockInteraction.extend({\n        qtiClass: 'orderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return OrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SelectPointInteraction = GraphicInteraction.extend({\n        qtiClass: 'selectPointInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.selectPointInteractionBased(this);\n        }\n    });\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SliderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SliderInteraction = BlockInteraction.extend({\n        qtiClass: 'sliderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.sliderInteractionBased(this);\n        }\n    });\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var TextEntryInteraction = InlineInteraction.extend({\n        qtiClass: 'textEntryInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/UploadInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var UploadInteraction = InlineInteraction.extend({\n        qtiClass: 'uploadInteraction'\n    });\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'itemBody';\n        }\n    });\n\n    var ContainerItemBody = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerItemBody;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Item',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/ContainerItemBody', 'lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util'], function (Element, IdentifiedElement, Container, _, $, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Item = IdentifiedElement.extend({\n        qtiClass: 'assessmentItem',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.rootElement = this;\n            this.stylesheets = {};\n            this.responses = {};\n            this.outcomes = {};\n            this.modalFeedbacks = {};\n            this.namespaces = {};\n            this.schemaLocations = {};\n            this.responseProcessing = null;\n            this.apipAccessibility = null;\n        },\n        getInteractions: function getInteractions() {\n            var interactions = [];\n            var elts = this.getComposingElements();\n            for (var serial in elts) {\n                if (Element.isA(elts[serial], 'interaction')) {\n                    interactions.push(elts[serial]);\n                }\n            }\n            return interactions;\n        },\n        addResponseDeclaration: function addResponseDeclaration(response) {\n            if (Element.isA(response, 'responseDeclaration')) {\n                response.setRootElement(this);\n                this.responses[response.getSerial()] = response;\n            } else {\n                throw 'is not a qti response declaration';\n            }\n            return this;\n        },\n        getResponseDeclaration: function getResponseDeclaration(identifier) {\n            for (var i in this.responses) {\n                if (this.responses[i].attr('identifier') === identifier) {\n                    return this.responses[i];\n                }\n            }\n            return null;\n        },\n        addOutcomeDeclaration: function addOutcomeDeclaration(outcome) {\n            if (Element.isA(outcome, 'outcomeDeclaration')) {\n                outcome.setRootElement(this);\n                this.outcomes[outcome.getSerial()] = outcome;\n            } else {\n                throw 'is not a qti outcome declaration';\n            }\n            return this;\n        },\n        getOutcomeDeclaration: function getOutcomeDeclaration(identifier) {\n            var found;\n            _.forEach(this.outcomes, function(outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        getOutcomes: function getOutcomes() {\n            return _.clone(this.outcomes);\n        },\n        removeOutcome: function removeOutcome(identifier) {\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if (outcome) {\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        addModalFeedback: function addModalFeedback(feedback) {\n            if (Element.isA(feedback, 'modalFeedback')) {\n                feedback.setRootElement(this);\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\n            } else {\n                throw 'is not a qti modal feedback';\n            }\n            return this;\n        },\n        getComposingElements: function getComposingElements() {\n            var elts = this._super(),\n                _this = this;\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection) {\n                for (var i in _this[elementCollection]) {\n                    var elt = _this[elementCollection][i];\n                    elts[i] = elt;\n                    elts = _.extend(elts, elt.getComposingElements());\n                }\n            });\n            if (this.responseProcessing instanceof Element) {\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n\n            if (!found) {\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\n            }\n\n            return found;\n        },\n        getResponses: function getResponses() {\n            return _.clone(this.responses);\n        },\n        getRootElement: function getRootElement() {\n            return this;\n        },\n        addNamespace: function addNamespace(name, uri) {\n            this.namespaces[name] = uri;\n        },\n        setNamespaces: function setNamespaces(namespaces) {\n            this.namespaces = namespaces;\n        },\n        getNamespaces: function getNamespaces() {\n            return _.clone(this.namespaces);\n        },\n        setSchemaLocations: function setSchemaLocations(locations) {\n            this.schemaLocations = locations;\n        },\n        getSchemaLocations: function getSchemaLocations() {\n            return _.clone(this.schemaLocations);\n        },\n        setApipAccessibility: function setApipAccessibility(apip) {\n            this.apipAccessibility = apip || null;\n        },\n        getApipAccessibility: function getApipAccessibility() {\n            return this.apipAccessibility;\n        },\n        addStylesheet: function addStylesheet(stylesheet) {\n            if (Element.isA(stylesheet, 'stylesheet')) {\n                stylesheet.setRootElement(this);\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\n            } else {\n                throw 'is not a qti stylesheet declaration';\n            }\n            return this;\n        },\n        removeStyleSheet: function removeStyleSheet(stylesheet) {\n            delete this.stylesheets[stylesheet.getSerial()];\n            return this;\n        },\n        stylesheetExists: function stylesheetExists(href) {\n            var exists = false;\n            _.forEach(this.stylesheets, function(stylesheet) {\n                if (stylesheet.attr('href') === href) {\n                    exists = true;\n                    return false; //break each loop\n                }\n            });\n            return exists;\n        },\n        setResponseProcessing: function setResponseProcessing(rp) {\n            if (Element.isA(rp, 'responseProcessing')) {\n                rp.setRootElement(this);\n                this.responseProcessing = rp;\n            } else {\n                throw 'is not a response processing';\n            }\n            return this;\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            var toArray = function(elt) {\n                return elt.toArray();\n            };\n            arr.namespaces = this.namespaces;\n            arr.schemaLocations = this.schemaLocations;\n            arr.outcomes = _.map(this.outcomes, toArray);\n            arr.responses = _.map(this.responses, toArray);\n            arr.stylesheets = _.map(this.stylesheets, toArray);\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\n            arr.responseProcessing = this.responseProcessing.toArray();\n            return arr;\n        },\n        isEmpty: function isEmpty() {\n            var body = this.body().trim();\n\n            if (body) {\n                //hack to fix #2652\n                var $dummy = $('<div>').html(body),\n                    $children = $dummy.children();\n\n                if ($children.length === 1 && $children.hasClass('empty')) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        },\n\n        /**\n         * Clean up an item rendering.\n         * Ask the renderer to run destroy if exists.\n         */\n        clear: function clear() {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    renderer.destroy(this);\n                }\n            }\n        }\n    });\n\n    Container.augment(Item);\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\n        _container: 'taoQtiItem/qtiItem/core/Container',\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\n        math: 'taoQtiItem/qtiItem/core/Math',\n        figure: 'taoQtiItem/qtiItem/core/Figure',\n        img: 'taoQtiItem/qtiItem/core/Img',\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\n        object: 'taoQtiItem/qtiItem/core/Object',\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        include: 'taoQtiItem/qtiItem/core/Include',\n        table: 'taoQtiItem/qtiItem/core/Table',\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA\n     */\n\n    /**\n     * XML namespace handling\n     */\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    var prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        var key;\n        for (key in namespaces) {\n            if (namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    var xmlNsHandler = {\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs: function stripNs(body) {\n            var pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            var openRegEx = new RegExp('(<' + pattern + ')', 'gi');\n            var closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs: function restoreNs(xml, namespaces) {\n            var xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            var tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            var xmlMatch = xml.match(xmlRe);\n            var imsXsd = 'http://www.imsglobal.org/xsd';\n            var html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            var prefix = getPrefix(namespaces, html5Ns);\n            var prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            var i = xmlMatch ? xmlMatch.length : 0;\n            var tagMatch;\n\n            if (!xmlMatch) {\n                return xml;\n            }\n\n            while (i--) {\n                tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(\n                    xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Returns iteraction score response rule object\n     *\n     * @param {String} responseIdentifiers interactions reponse indentifiers\n     * @returns {Obeject}\n     */\n    var itemScore = (responseIdentifiers) => {\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\n            qtiClass: 'variable',\n            attributes: {\n                identifier: `SCORE_${outcomeIdentifier}`,\n            },\n        }));\n\n        return {\n            qtiClass: 'setOutcomeValue',\n            attributes: {\n                identifier: 'SCORE',\n            },\n            expression: {\n                qtiClass: 'sum',\n                expressions: outcomeExpressions,\n            },\n        };\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\n        var properties = {};\n\n        _.forOwn(rawProperties, (value, key) => {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    };\n\n    const loadPortableCustomElementData = (portableElement, data) => {\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    };\n\n    var Loader = Class.extend({\n        init(item, classesLocation) {\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n            this.item = item || null; //starts either from scratch or with an existing item object\n\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\n        },\n        setClassesLocation(qtiClassesList) {\n            _.extend(this.classesLocation, qtiClassesList);\n\n            return this;\n        },\n        getRequiredClasses(data) {\n            let ret = [];\n\n            for (let i in data) {\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\n                    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n\n            return ret;\n        },\n        loadRequiredClasses(data, callback, reload) {\n            let requiredClass;\n            const requiredClasses = this.getRequiredClasses(data, reload);\n            const required = [];\n\n            for (let i in requiredClasses) {\n                requiredClass = requiredClasses[i];\n                if (this.classesLocation[requiredClass]) {\n                    required.push({\n                        module: this.classesLocation[requiredClass],\n                        category: 'qti'\n                    });\n                } else {\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\n                }\n            }\n\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\n                loadeded.forEach(QtiClass => {\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(this, this.qti);\n            });\n        },\n        getLoadedClasses() {\n            return _.keys(this.qti);\n        },\n        loadItemData(data, callback) {\n            this.loadRequiredClasses(data, Qti => {\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\n                    //unload an item from it's serial (in case of a reload)\n                    if (data.serial) {\n                        Element.unsetElement(data.serial);\n                    }\n\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    this.loadContainer(this.item.getBody(), data.body);\n\n                    for (let i in data.outcomes) {\n                        const outcome = this.buildOutcome(data.outcomes[i]);\n\n                        if (outcome) {\n                            this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n\n                    for (let i in data.feedbacks) {\n                        const feedback = this.buildElement(data.feedbacks[i]);\n\n                        if (feedback) {\n                            this.item.addModalFeedback(feedback);\n                        }\n                    }\n\n                    for (let i in data.stylesheets) {\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\n\n                        if (stylesheet) {\n                            this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\n                        ? [...data.responseProcessing.responseRules]\n                        : [];\n                    for (let i in data.responses) {\n                        const responseIdentifier = data.responses[i].identifier;\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\n                            expression: {\n                                expressions: [expression = {}] = [],\n                            } = {}\n                        } = {} }) => expression.attributes\n                        && expression.attributes.identifier === responseIdentifier\n                            || (\n                                expression.expressions\n                                && expression.expressions[0]\n                                && expression.expressions[0].attributes\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\n                            )\n                        );\n                        const [responseRule] = responseRuleItemIndex !== -1\n                            ? responseRules.splice(responseRuleItemIndex, 1)\n                            : [];\n\n                        const response = this.buildResponse(\n                            data.responses[i],\n                            responseRule\n                        );\n\n                        if (response) {\n                            this.item.addResponseDeclaration(response);\n\n                            const feedbackRules = data.responses[i].feedbackRules;\n\n                            if (feedbackRules) {\n                                _.forIn(feedbackRules, (fbData, serial) => {\n                                    const {\n                                        attributes: {\n                                            identifier: feedbackOutcomeIdentifier,\n                                        } = {}\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\n\n                                    // remove feedback response rule from response rules array\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\n                                        responseIf: {\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\n                                        } = {}\n                                    }) => {\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\n                                        const outcomeIdentifier = attributes.identifier;\n\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\n                                            && qtiClass === 'setOutcomeValue';\n                                    });\n\n                                    if (feedbackResponseRuleIndex !== -1) {\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\n                                    }\n                                });\n                            }\n                        }\n                    }\n\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\n\n                    if (data.responseProcessing) {\n                        const customResponseProcessing =\n                            (\n                                responseRules.length > 0\n                                && !(\n                                    responseRules.length === 1\n                                    && _.isEqual(\n                                        responseRules[0],\n                                        itemScoreHelper(\n                                            responseIdentifiers\n                                        )\n                                    )\n                                )\n                            )\n                            || (\n                                this.item.responses\n                                && Object.keys(this.item.responses)\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\n                            );\n\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\n                    }\n                    this.item.setNamespaces(data.namespaces);\n                    this.item.setSchemaLocations(data.schemaLocations);\n                    this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        loadAndBuildElement(data, callback) {\n            this.loadRequiredClasses(data, () => {\n                const element = this.buildElement(data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        loadElement(element, data, callback) {\n            this.loadRequiredClasses(data, () => {\n                this.loadElementData(element, data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements(data, callback) {\n            if (!this.item) {\n                throw new Error('QtiLoader : cannot load elements in empty item');\n            }\n\n            this.loadRequiredClasses(data, () => {\n                const allElements = this.item.getComposingElements();\n\n                for (let i in data) {\n                    const elementData = data[i];\n\n                    if (elementData && elementData.qtiClass && elementData.serial) {\n                        //find and update element\n                        if (allElements[elementData.serial]) {\n                            this.loadElementData(allElements[elementData.serial], elementData);\n                        }\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        buildResponse(data, responseRule) {\n            const response = this.buildElement(data);\n\n            response.template = responseHelper.getTemplateUriFromName(\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\n            )\n                || data.howMatch\n                || null;\n\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if (_.size(data.mapping)) {\n                response.mapEntries = data.mapping;\n            } else if (_.size(data.areaMapping)) {\n                response.mapEntries = data.areaMapping;\n            } else {\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule(data, response) {\n            const feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            const comparedOutcome = feedbackRule.comparedOutcome;\n\n            if (feedbackRule.feedbackThen) {\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\n            }\n\n            if (feedbackRule.feedbackElse) {\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome(data) {\n            const outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n\n            return outcome;\n        },\n        buildResponseProcessing(data, customResponseProcessing) {\n            const rp = this.buildElement(data);\n\n            if (customResponseProcessing) {\n                rp.xml = data.data;\n                rp.processingType = 'custom';\n            } else {\n                rp.processingType = 'templateDriven';\n            }\n\n            return rp;\n        },\n        loadContainer(bodyObject, bodyData) {\n            if (!Element.isA(bodyObject, '_container')) {\n                throw new Error('bodyObject must be a QTI Container');\n            }\n\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\n                throw new Error('wrong bodydata format');\n            }\n            //merge attributes when loading element data\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\n            bodyObject.setAttributes(attributes);\n\n            for (let serial in bodyData.elements) {\n                const eltData = bodyData.elements[serial];\n                const element = this.buildElement(eltData);\n\n                //check if class is loaded:\n                if (element) {\n                    bodyObject.setElement(element, bodyData.body);\n                }\n            }\n\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n        },\n        buildElement(elementData) {\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\n                throw new Error('wrong elementData format');\n            }\n\n            const className = elementData.qtiClass;\n\n            if (!this.qti[className]) {\n                throw new Error(`the qti element class does not exist: ${className}`);\n            }\n\n            const elt = new this.qti[className](elementData.serial);\n            this.loadElementData(elt, elementData);\n\n            return elt;\n        },\n        loadElementData(element, data) {\n            //merge attributes when loading element data\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            if (element.body && data.body) {\n                if (element.bdy) {\n                    this.loadContainer(element.getBody(), data.body);\n                }\n            }\n\n            if (element.object && data.object) {\n                if (element.object) {\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if (Element.isA(element, 'interaction')) {\n                this.loadInteractionData(element, data);\n            } else if (Element.isA(element, 'choice')) {\n                this.loadChoiceData(element, data);\n            } else if (Element.isA(element, 'math')) {\n                this.loadMathData(element, data);\n            } else if (Element.isA(element, 'infoControl')) {\n                this.loadPicData(element, data);\n            } else if (Element.isA(element, '_tooltip')) {\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData(interaction, data) {\n            if (Element.isA(interaction, 'blockInteraction')) {\n                if (data.prompt) {\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if (Element.isA(interaction, 'customInteraction')) {\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices(interaction, data) {\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if (data.choices) {\n                if (Element.isA(interaction, 'matchInteraction')) {\n                    for (let set = 0; set < 2; set++) {\n                        if (!data.choices[set]) {\n                            throw new Error(`missing match set #${set}`);\n                        }\n\n                        const matchSet = data.choices[set];\n\n                        for (let serial in matchSet) {\n                            const choice = this.buildElement(matchSet[serial]);\n\n                            if (choice) {\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                } else {\n                    for (let serial in data.choices) {\n                        const choice = this.buildElement(data.choices[serial]);\n\n                        if (choice) {\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\n                    if (data.gapImgs) {\n                        for (let serial in data.gapImgs) {\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\n\n                            if (gapImg) {\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loadChoiceData(choice, data) {\n            if (Element.isA(choice, 'textVariableChoice')) {\n                choice.val(data.text);\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\n                // this ensure compatibility of Qti 2.1 items\n                if (!choice.body()) {\n                    choice.body(data.text);\n                }\n            } else if (Element.isA(choice, 'containerChoice')) ;\n        },\n        loadObjectData(object, data) {\n            object.setAttributes(data.attributes);\n\n            //@todo: manage object like a container\n            if (data._alt) {\n                if (data._alt.qtiClass === 'object') {\n                    object._alt = Loader.buildElement(data._alt);\n                } else {\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData(math, data) {\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, (value, encoding) => {\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData(tooltip, data) {\n            tooltip.content(data.content);\n        },\n        loadPciData(pci, data) {\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData(pic, data) {\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Math',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function ($, _, Element, rendererConfig, NamespacedElement) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Math;\n\n    /**\n     * Remove the closing MathML tags and remove useless line breaks before and after it\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripMathTags(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : '') + 'math[^>]*>', 'g');\n        return mathML\n            .replace(regex, '')\n            .replace(/^\\s*[\\r\\n]/gm, '') //remove first blank line\n            .replace(/\\s*[\\r\\n]$/gm, ''); //last blank line\n    }\n\n    /**\n     * Remove mathML ns name prefix from the mathML\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripNamespace(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : ''), 'g');\n        return mathML.replace(regex, '<$1');\n    }\n\n    /**\n     * Check if the mathML string is to be considered empty\n     *\n     * @param {String} mathStr\n     * @returns {Boolean}\n     */\n    function _isEmptyMathML(mathStr) {\n        var $math,\n            mathText,\n            hasContent = false;\n\n        if (mathStr && mathStr.trim()) {\n            $math = $($.parseHTML(mathStr));\n            mathText = $math.text();\n            hasContent = _.isString(mathText) && !!mathText.trim();\n        }\n\n        return !hasContent;\n    }\n\n    Math = Element.extend({\n        qtiClass: 'math',\n        defaultNsName: 'm',\n        defaultNsUri: 'http://www.w3.org/1998/Math/MathML',\n        nsUriFragment: 'MathML',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.ns = null;\n            this.mathML = '';\n            this.annotations = {};\n        },\n        setAnnotation: function(encoding, value) {\n            this.annotations[encoding] = _.unescape(value);\n        },\n        getAnnotation: function(encoding) {\n            return this.annotations[encoding];\n        },\n        removeAnnotation: function(encoding) {\n            delete this.annotations[encoding];\n        },\n        setMathML: function(mathML) {\n            var ns = this.getNamespace(),\n                nsName = ns.name && ns.uri ? ns.name : '';\n\n            mathML = _stripMathTags(mathML, nsName);\n            if (ns) {\n                mathML = _stripNamespace(mathML, nsName);\n            }\n            this.mathML = mathML;\n        },\n        getMathML: function() {\n            return this.mathML;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                tag = this.qtiClass,\n                raw = this.mathML,\n                body = raw,\n                ns = this.getNamespace(),\n                annotations = '',\n                encoding,\n                defaultData;\n\n            for (encoding in this.annotations) {\n                annotations +=\n                    '<annotation encoding=\"' + encoding + '\">' + _.escape(this.annotations[encoding]) + '</annotation>';\n            }\n\n            if (annotations) {\n                if (raw.indexOf('</semantics>') > 0) {\n                    raw = raw.replace('</semantics>', annotations + '</semantics>');\n                } else {\n                    raw = '<semantics>' + raw + annotations + '</semantics>';\n                }\n            }\n\n            if (ns && ns.name) {\n                body = raw.replace(/<(\\/)?([^!<])/g, '<$1' + ns.name + ':$2');\n                tag = ns.name + ':' + tag;\n            }\n\n            body = body.replace(/<!--.*?-->/g, ''); // remove Mathjax-generated comments\n            body = body.replace(/&lt;!--.*?--&gt;/g, ''); // fix for broken items because of Mathjax comments\n\n            defaultData = {\n                block: this.attr('display') === 'block' ? true : false,\n                body: body,\n                raw: raw,\n                tag: tag,\n                ns: ns\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return _isEmptyMathML(this.mathML) && (!this.annotations.latex || !this.annotations.latex.trim());\n        }\n    });\n\n    NamespacedElement.augment(Math);\n\n    var Math$1 = Math;\n\n    return Math$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PortableInfoControl',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, CustomElement, NamespacedElement, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var PortableInfoControl = Element.extend({\n        qtiClass: 'infoControl',\n        defaultNsName: 'pic',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableInfoControl',\n        nsUriFragment: 'portableInfoControl',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            //stack of callback waiting to be ready\n            this.readyStack = [];\n        },\n\n        is: function(qtiClass) {\n            return qtiClass === 'infoControl' || this._super(qtiClass);\n        },\n\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pic: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n\n        /**\n         * Retrieve the state of the infoControl\n         * The call will be delegated to the infoControl's renderer.\n         *\n         * @returns {Object} the state\n         */\n        getState: function getState() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                ret = renderer.getState(this);\n            }\n            return ret;\n        },\n\n        /**\n         * Set the state of the infoControl\n         * The state will be set to the infoControl's renderer.\n         *\n         * @param {Object} state - the infoControl's state\n         */\n        setState: function setState(state) {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                renderer.setState(this, state);\n            }\n        },\n\n        toArray: function() {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n\n        /**\n         * Execute a callback when the PIC is ready (ie. registered, loaded and rendererd)\n         * @param {Function} cb - the function to execute once ready\n         */\n        onReady: function onReady(cb) {\n            this.readyStack.push(cb);\n\n            //if we are ready this will pop the stack\n            if (this.data('_ready') && this.data('pic')) {\n                this.triggerReady();\n            }\n        },\n\n        /**\n         * Define the PIC as ready and consume the waiting functions in the stack.\n         */\n        triggerReady: function triggerReady() {\n            var self = this;\n            _.forEach(this.readyStack, function(cb) {\n                cb.call(self, self.data('pic'));\n            });\n\n            //empty the stack\n            this.readyStack = [];\n\n            //mark the infoControl as ready\n            this.data('_ready', true);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(PortableInfoControl);\n    NamespacedElement.augment(PortableInfoControl);\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PrintedVariable',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var PrintedVariable = Element.extend({\n        qtiClass: 'printedVariable'\n    });\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',['taoQtiItem/qtiItem/core/Element', 'lodash'], function (Element, _) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var SimpleFeedbackRule = Element.extend({\n        qtiClass: '_simpleFeedbackRule',\n        serial: '',\n        rootElement: null,\n        init: function(serial, feedbackOutcome, feedbackThen, feedbackElse) {\n            this._super(serial, {});\n\n            this.condition = 'correct';\n            this.comparedOutcome = null;\n            this.comparedValue = 0.0;\n\n            this.feedbackOutcome = feedbackOutcome;\n            if (Element.isA(feedbackThen, 'feedback')) {\n                this.feedbackThen = feedbackThen;\n            } else {\n                this.feedbackThen = null;\n            }\n            if (Element.isA(feedbackElse, 'feedback')) {\n                this.feedbackElse = feedbackThen;\n            } else {\n                this.feedbackElse = null;\n            }\n        },\n        setCondition: function(comparedOutcome, condition, comparedValue) {\n            var _comparedValues = [];\n            if (Element.isA(comparedOutcome, 'variableDeclaration')) {\n                switch (condition) {\n                    case 'correct':\n                    case 'incorrect':\n                        if (Element.isA(comparedOutcome, 'responseDeclaration')) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                        } else {\n                            throw 'invalid outcome type: must be a responseDeclaration';\n                        }\n                        break;\n                    case 'lt':\n                    case 'lte':\n                    case 'equal':\n                    case 'gte':\n                    case 'gt':\n                        if (comparedValue !== null && comparedValue !== undefined) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            this.comparedValue = comparedValue;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    case 'choices':\n                        if (\n                            Element.isA(comparedOutcome, 'responseDeclaration') &&\n                            comparedValue !== null &&\n                            _.isArray(comparedValue)\n                        ) {\n                            var choices = _.values(comparedOutcome.getInteraction().getChoices());\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            _.each(comparedValue, function(v) {\n                                if (v instanceof Element) {\n                                    _comparedValues.push(v);\n                                } else if (_.isString(v)) {\n                                    _.each(choices, function(c) {\n                                        if (c.attr('identifier') === v) {\n                                            _comparedValues.push(c);\n                                            return false; //break\n                                        }\n                                    });\n                                }\n                            });\n\n                            this.comparedValue = _comparedValues;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    default:\n                        throw 'unknown condition type : '.condition;\n                }\n            } else {\n                throw 'invalid outcome type: must be a variableDeclaration';\n            }\n\n            return this;\n        },\n        setFeedbackElse: function(feedback) {\n            if (Element.isA(feedback, 'feedback')) {\n                this.feedbackElse = feedback;\n            }\n        },\n        toArray: function() {\n            var val = this.comparedValue;\n            var _toString = function(v) {\n                if (val instanceof Element) {\n                    return val.attr('identifier');\n                } else {\n                    return val + '';\n                }\n            };\n            if (_.isArray(val)) {\n                val = _.map(val, _toString);\n            } else {\n                val = _toString();\n            }\n            return {\n                condition: this.condition,\n                comparedOutcome: this.comparedOutcome.id(),\n                comparedValue: val\n            };\n        }\n    });\n\n    return SimpleFeedbackRule;\n\n});\n\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    var ResponseProcessing = Element.extend({\n        qtiClass: 'responseProcessing',\n        processingType: '',\n        xml: '',\n        toArray: function() {\n            var arr = this._super();\n            arr.processingType = this.processingType;\n            arr.xml = this.xml;\n            return arr;\n        }\n    });\n\n    return ResponseProcessing;\n\n});\n\n","define('taoQtiItem/qtiItem/core/RubricBlock',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/Container'], function (Element, Container) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var RubricBlock = Element.extend({\n        qtiClass: 'rubricBlock',\n        isEmpty: function isEmpty() {\n            return !(this.bdy && this.bdy.body());\n        }\n    });\n\n    Container.augment(RubricBlock);\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Stylesheet = Element.extend({\n        qtiClass: 'stylesheet',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = { href: renderer.resolveUrl(this.attr('href')) };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerTable',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'table';\n        }\n    });\n\n    var ContainerTable = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerTable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Table',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerTable'], function (_, Element, Container) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = Element.extend({\n        qtiClass: 'table'\n    });\n\n    Container.augment(Table);\n\n    Table = Table.extend({\n        // on table creation, we might get a body wrapped in a table element, that we need to get rid of\n        body: function(newBody) {\n            if (_.isString(newBody)) {\n                newBody = newBody.replace('<table>', '').replace('</table>', '');\n            }\n            return this._super(newBody);\n        }\n    });\n\n    var Table$1 = Table;\n\n    return Table$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Tooltip',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, ContainerInline, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ContainerInline = ContainerInline && Object.prototype.hasOwnProperty.call(ContainerInline, 'default') ? ContainerInline['default'] : ContainerInline;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Tooltip = Element.extend({\n        qtiClass: '_tooltip',\n\n        init: function(serial, attributes, newContent) {\n            this._super(serial, attributes);\n            this.content(newContent || '');\n        },\n\n        /**\n         * Set/get the content of the tooltip\n         * @param {String} newContent - as HTML\n         * @returns {Element|String}\n         */\n        content: function content(newContent) {\n            if (typeof newContent === 'undefined') {\n                return this.tooltipContent;\n            } else {\n                if (typeof newContent === 'string') {\n                    this.tooltipContent = newContent;\n                } else {\n                    throw new Error('newContent must be a string');\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Adds the tooltip content to the template data\n         */\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    content: this.tooltipContent\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    ContainerInline.augment(Tooltip);\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/ResponseDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration', 'lodash'], function (VariableDeclaration, _) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var ResponseDeclaration = VariableDeclaration.extend({\n        qtiClass: 'responseDeclaration',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            //MATCH_CORRECT, MAP_RESPONSE, MAP_RESPONSE_POINT\n            this.template = ''; //previously called 'howMatch'\n\n            //when template equals ont of the \"map\" one (MAP_RESPONSE, MAP_RESPONSE_POINT)\n            this.mappingAttributes = {};\n            this.mapEntries = {};\n\n            //correct response [0..*]\n            this.correctResponse = null;\n\n            //tao internal usage:\n            this.feedbackRules = {};\n        },\n        getFeedbackRules: function() {\n            return _.values(this.feedbackRules);\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            elts = _.extend(elts, this.feedbackRules);\n            return elts;\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.howMatch = this.template;\n            arr.correctResponses = this.correctResponse;\n            arr.mapping = this.mapEntries;\n            arr.mappingAttributes = this.mappingAttributes;\n            arr.feedbackRules = _.map(this.feedbackRules, function(rule) {\n                return rule.toArray();\n            });\n            return arr;\n        },\n        getInteraction: function() {\n            var interaction = null;\n            var responseId = this.id();\n            var item = this.getRootElement();\n            var interactions = item.getInteractions();\n            _.each(interactions, function(i) {\n                if (i.attributes.responseIdentifier === responseId) {\n                    interaction = i;\n                    return false; //break\n                }\n            });\n            return interaction;\n        },\n        isCardinality: function(cardinalities) {\n            var comparison;\n            if (_.isArray(cardinalities)) {\n                comparison = cardinalities;\n            } else if (_.isString(cardinalities)) {\n                cardinalities = [cardinalities];\n            } else {\n                return false;\n            }\n            return _.indexOf(comparison, this.attr('cardinality')) >= 0;\n        }\n    });\n\n    return ResponseDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/EventMgr',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    //@todo : complete with namespace managements\n    function EventMgr() {\n        var events = {};\n\n        this.get = function(event) {\n            if (event && events[event]) {\n                return _.clone(events[event]);\n            } else {\n                return [];\n            }\n        };\n\n        this.on = function(event, callback) {\n            var tokens = event.split('.');\n            if (tokens[0]) {\n                var name = tokens.shift();\n                events[name] = events[name] || [];\n                events[name].push({\n                    ns: tokens,\n                    callback: callback\n                });\n            }\n        };\n\n        this.off = function(event) {\n            if (event && events[event]) {\n                events[event] = [];\n            }\n        };\n\n        this.trigger = function(event, data) {\n            if (events[event]) {\n                _.each(events[event], function(e) {\n                    //@todo check ns:\n                    e.callback.apply(\n                        {\n                            type: event,\n                            ns: []\n                        },\n                        data\n                    );\n                });\n            }\n        };\n    }\n\n    return EventMgr;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\n        getRawValues: function(pciVar) {\n            if (_.isPlainObject(pciVar)) {\n                if (pciVar.base !== undefined) {\n                    return _.values(pciVar.base);\n                } else if (pciVar.list) {\n                    return _.values(pciVar.list);\n                }\n            }\n            throw 'unsupported type ';\n        }\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/modalFeedback',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container'], function ($, _, pci, containerHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    var getFeedbackMessageSignature = function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    };\n\n    /**\n     * Extract the display information for an interaction-related feedback\n     *\n     * @private\n     * @param {Object} interaction - a qti interaction object\n     * @returns {Object} Object containing useful display information\n     */\n    var extractDisplayInfo = function extractDisplayInfo(interaction) {\n        var $interactionContainer = interaction.getContainer();\n        var responseIdentifier = interaction.attr('responseIdentifier');\n        var messageGroupId, $displayContainer;\n\n        if (interaction.is('inlineInteraction')) {\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\n            if (!messageGroupId) {\n                //generate a messageFromId\n                messageGroupId = _.uniqueId('inline_message_group_');\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\n            }\n        } else {\n            messageGroupId = responseIdentifier;\n            $displayContainer = $interactionContainer;\n        }\n\n        return {\n            responseIdentifier: responseIdentifier,\n            interactionContainer: $interactionContainer,\n            displayContainer: $displayContainer,\n            messageGroupId: messageGroupId,\n            order: -1\n        };\n    };\n\n    /**\n     * Get interaction display information sorted in the order of appearance within the item\n     *\n     * @param {Object} item\n     * @returns {Array}\n     */\n    var getInteractionsDisplayInfo = function getInteractionsDisplayInfo(item) {\n        var interactionsDisplayInfo = [];\n        var $itemContainer = item.getContainer();\n        var interactionOrder = 0;\n\n        //extract all interaction related information needed to display their\n        _.forEach(item.getComposingElements(), function(element) {\n            if (element.is('interaction')) {\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\n            }\n        });\n\n        //sort interactionsDisplayInfo on the item level\n        $itemContainer.find('.qti-interaction').each(function() {\n            var self = this;\n            _.forEach(interactionsDisplayInfo, function(_interactionInfo) {\n                if (_interactionInfo.interactionContainer[0] === self) {\n                    _interactionInfo.order = interactionOrder;\n                    return false;\n                }\n            });\n            interactionOrder++;\n        });\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\n\n        return interactionsDisplayInfo;\n    };\n\n    /**\n     * Returns feedbacks according to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @returns {Array} renderingFeedbacks - feedbacks to be displayed\n     */\n    var getFeedbacks = function getFeedbacks(item, itemSession) {\n        var messages = {};\n        var $itemContainer = item.getContainer();\n        var $itemBody = $('.qti-itemBody', $itemContainer);\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\n        var renderingQueue = [];\n\n        _.forEach(item.modalFeedbacks, function(feedback) {\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n            var order = -1;\n\n            //verify if the feedback should be displayed\n            if (itemSession[outcomeIdentifier]) {\n                //is the feedback in the list of feedbacks to be displayed ?\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                if (!_.contains(feedbackIds, feedback.id())) {\n                    return true; //continue with next feedback\n                }\n\n                //which group of feedbacks (interaction related) the feedback belongs to ?\n                message = getFeedbackMessageSignature(feedback);\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\n                if (comparedOutcome && interactionInfo) {\n                    $container = interactionInfo.displayContainer;\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\n                    order = interactionInfo.order;\n                } else {\n                    $container = $itemBody;\n                    _currentMessageGroupId = '__item__';\n                }\n                //is this message already displayed ?\n                if (!messages[_currentMessageGroupId]) {\n                    messages[_currentMessageGroupId] = [];\n                }\n\n                if (_.contains(messages[_currentMessageGroupId], message)) {\n                    return true; //continue\n                } else {\n                    messages[_currentMessageGroupId].push(message);\n                }\n\n                //ok, display feedback\n                renderingQueue.push({\n                    feedback: feedback,\n                    $container: $container,\n                    order: order\n                });\n            }\n        });\n\n        renderingQueue = _.sortBy(renderingQueue, 'order');\n\n        return renderingQueue;\n    };\n\n    /**\n     * Provide helper function for collecting feedbacks\n     */\n    var modalFeedback = {\n        getFeedbacks: getFeedbacks\n    };\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/Parser',['jquery'], function ($) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /**\n     * Experimental parser\n     *\n     */\n\n    var Parser = function() {\n        var _$xml = null;\n        this.loadXML = function(xml) {\n            _$xml = $.parseXML(xml);\n        };\n        this.getDOM = function() {\n            return _$xml;\n        };\n    };\n\n    return Parser;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/simpleParser',['lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/core/Loader'], function (_, $, util, Loader) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2021 (original work) Open Assessment Technologies SA\n     **/\n\n    const _parsableElements = ['img', 'object', 'printedVariable'];\n    const _qtiClassNames = {\n        rubricblock: 'rubricBlock',\n        printedvariable: 'printedVariable'\n    };\n    const _qtiAttributesNames = {\n        powerform: 'powerForm',\n        mappingindicator: 'mappingIndicator'\n    };\n\n    const _defaultOptions = {\n        ns: {\n            math: '',\n            include: 'xi',\n            table: 'table',\n            image: 'img',\n            object: '',\n            figure: 'qh5',\n            figcaption: 'qh5'\n        },\n        loaded: null,\n        model: null\n    };\n\n    let parser;\n\n    function _getElementSelector(qtiClass, ns) {\n        return ns ? ns + '\\\\:' + qtiClass + ',' + qtiClass : qtiClass;\n    }\n\n    function getQtiClassFromXmlDom($node) {\n        let qtiClass = $node.prop('tagName').toLowerCase();\n\n        //remove ns :\n        qtiClass = qtiClass.replace(/.*:/, '');\n\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\n    }\n\n    function buildElement($elt) {\n        const qtiClass = getQtiClassFromXmlDom($elt);\n\n        const elt = {\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {}\n        };\n\n        $.each($elt[0].attributes, function () {\n            let attrName;\n            if (this.specified) {\n                attrName = _qtiAttributesNames[this.name] || this.name;\n                elt.attributes[attrName] = this.value;\n            }\n        });\n\n        return elt;\n    }\n\n    function buildMath($elt, options) {\n        const elt = buildElement($elt);\n\n        //set annotations:\n        elt.annotations = {};\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function () {\n            const $annotation = $(this);\n            const encoding = $annotation.attr('encoding');\n            if (encoding) {\n                elt.annotations[encoding] = _.unescape($annotation.html());\n            }\n            $annotation.remove();\n        });\n\n        //set math xml\n        elt.mathML = $elt.html();\n\n        //set ns:\n        elt.ns = {\n            name: 'm',\n            uri: 'http://www.w3.org/1998/Math/MathML' //@todo : remove hardcoding there\n        };\n\n        return elt;\n    }\n\n    function buildTooltip(targetHtml, contentId, contentHtml) {\n        const qtiClass = '_tooltip';\n\n        return {\n            elements: {},\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {\n                'aria-describedby': contentId\n            },\n            content: contentHtml,\n            body: {\n                elements: {},\n                serial: util.buildSerial('container'),\n                body: targetHtml\n            }\n        };\n    }\n\n    function parseTable($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedTable = parseContainer($elt, options);\n        elt.body.body = $parsedTable.body;\n        elt.body.elements = $parsedTable.elements;\n        return elt;\n    }\n\n    function parseFigure($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedFigure= parseContainer($elt, options);\n        elt.body.body = $parsedFigure.body;\n        elt.body.elements = $parsedFigure.elements;\n        const $figcaption = $elt.find(_getElementSelector('figcaption', options.ns.figcaption));\n        if ($figcaption.length) {\n            const element = buildElement($figcaption);\n            element.body = {\n                body: $figcaption.html(),\n                elements: {}\n            };\n            elt.body.elements[element.serial] = element;\n            $figcaption.replaceWith(_placeholder(element));\n        }\n        elt.body.body = $elt.html();\n        return elt;\n    }\n\n    function parseContainer($container, options) {\n        const ret = {\n            serial: util.buildSerial('_container_'),\n            body: '',\n            elements: {}\n        };\n        // table should be in top as it needs to be parsed first\n        $container.find('table').each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseTable($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        // figure should be in top as it needs to be parsed first\n        $container.find(_getElementSelector('figure', options.ns.figure)).each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseFigure($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('math', options.ns.math)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildMath($qtiElement, options);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('include', options.ns.include)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildElement($qtiElement);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find('[data-role=\"tooltip-target\"]').each(function () {\n            let element,\n                $target = $(this),\n                $content,\n                contentId = $target.attr('aria-describedBy'),\n                contentHtml;\n\n            if (contentId) {\n                $content = $container.find('#' + contentId);\n                if ($content.length) {\n                    contentHtml = $content.html();\n\n                    element = buildTooltip($target.html(), contentId, contentHtml);\n\n                    ret.elements[element.serial] = element;\n                    $target.replaceWith(_placeholder(element));\n                    $content.remove();\n                }\n            }\n        });\n\n        _.each(_parsableElements, function (qtiClass) {\n            $container.find(qtiClass).each(function () {\n                const $qtiElement = $(this);\n                const element = buildElement($qtiElement);\n                ret.elements[element.serial] = element;\n                $qtiElement.replaceWith(_placeholder(element));\n            });\n        });\n\n        ret.body = $container.html();\n        return ret;\n    }\n\n    function _placeholder(element) {\n        return '{{' + element.serial + '}}';\n    }\n\n    parser = {\n        parse: function (xmlStr, opts) {\n            const options = _.merge(_.clone(_defaultOptions), opts || {});\n\n            const $container = $(xmlStr);\n\n            const element = buildElement($container);\n\n            const data = parseContainer($container, options);\n\n            let loader;\n\n            if (!_.isUndefined(data.body)) {\n                element.body = data;\n            }\n\n            if (_.isFunction(options.loaded) && options.model) {\n                loader = new Loader().setClassesLocation(options.model);\n                loader.loadAndBuildElement(element, options.loaded);\n            }\n\n            return element;\n        }\n    };\n\n    var parser$1 = parser;\n\n    return parser$1;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xincludeLoader',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/simpleParser', 'taoQtiItem/qtiItem/core/Loader'], function ($, _, simpleParser, Loader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    simpleParser = simpleParser && Object.prototype.hasOwnProperty.call(simpleParser, 'default') ? simpleParser['default'] : simpleParser;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    function load(xinclude, baseUrl, callback) {\n        const href = xinclude.attr('href');\n        if (href && baseUrl) {\n            const fileUrl = `text!${baseUrl}${href}`;\n            // reset the previous definition of the XML, to receive updated passage\n            require.undef(fileUrl);\n            // require xml\n            require([fileUrl], function (stimulusXml) {\n                const $wrapper = $.parseXML(stimulusXml);\n                const $sampleXMLrootNode = $wrapper.children;\n                const $stimulus = $('<include>').append($sampleXMLrootNode);\n                const mathNs = 'm'; //for 'http://www.w3.org/1998/Math/MathML'\n                const data = simpleParser.parse($stimulus, {\n                    ns: {\n                        math: mathNs\n                    }\n                });\n\n                new Loader().loadElement(xinclude, data, function () {\n                    if (_.isFunction(callback)) {\n                        const loadedClasses = this.getLoadedClasses();\n                        loadedClasses.push('_container'); //the _container class is always required\n                        callback(xinclude, data, loadedClasses);\n                    }\n                });\n            }, function () {\n                //in case the file does not exist\n                callback(xinclude, false, []);\n            });\n        }\n    }\n\n    var xincludeLoader = {\n        load\n    };\n\n    return xincludeLoader;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/picManager',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element'], function ($, _, Element) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The template of a PicManager instance\n     * @type {picManager}\n     */\n    var picManager = {\n        /**\n         * Creates a manager for a particular PIC\n         *\n         * @param {Object} pic\n         * @param {QtiItem} item\n         * @returns {picManager}\n         */\n        init: function init(pic, item) {\n            if (Element.isA(pic, 'infoControl')) {\n                this._pic = pic;\n            }\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the managed PIC\n         *\n         * @returns {Object} the descriptor of the PIC\n         */\n        getPic: function getPic() {\n            return this._pic;\n        },\n\n        /**\n         * Gets the related Item\n         *\n         * @returns {QtiItem} the Item\n         */\n        getItem: function getItem() {\n            return this._item;\n        },\n\n        /**\n         * Gets the PIC serial\n         * @returns {String}\n         */\n        getSerial: function getSerial() {\n            return this._pic && this._pic.serial;\n        },\n\n        /**\n         * Gets the PIC type identifier\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return this._pic && this._pic.typeIdentifier;\n        },\n\n        /**\n         * Gets the underlying DOM element of the managed PIC\n         * @returns {{pic: (jQuery), tool: (jQuery), button: (jQuery), broken: (Boolean))}|*} An object providing the underlying DOM elements of the PIC and its tool\n         */\n        getDom: function getDom() {\n            if (!this._dom) {\n                var serial = this.getSerial();\n                var pic, tool;\n\n                if (serial) {\n                    pic = $('[data-serial=\"' + serial + '\"]');\n                    if (pic.length) {\n                        tool = $('[data-pic-serial=\"' + serial + '\"]');\n\n                        if (!tool.length) {\n                            tool = pic.children().first();\n                        }\n\n                        this._dom = {\n                            pic: pic,\n                            tool: tool,\n                            button: tool.find('.sts-button'),\n                            broken: pic.is(':empty') // tells if the tool has been moved outside of the PIC\n                        };\n                    }\n                }\n            }\n\n            return this._dom;\n        },\n\n        /**\n         * Enables the PIC.\n         * @fires enable\n         * @returns {picManager}\n         */\n        enable: function enable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            if (dom) {\n                // just remove the disabled state and destroy the disable mask\n                dom.button.removeClass('disabled');\n                dom.tool.find('.sts-button-disable-mask').remove();\n\n                this.disabled = false;\n                this.trigger('enable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Disables the PIC\n         * @fires disable\n         * @returns {picManager}\n         */\n        disable: function disable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            var button;\n            if (dom) {\n                // set a disabled state by adding a CSS class, then mask the button with a top-level element\n                button = dom.button.addClass('disabled');\n\n                $('<div class=\"sts-button-disable-mask\" style=\"position:absolute;z-index:10000000000000\"></div>')\n                    .appendTo(dom.tool)\n                    .offset(button.offset())\n                    .width(button.outerWidth())\n                    .height(button.outerHeight());\n\n                // also hide any sub component\n                dom.tool.find('.sts-container, .sts-menu-container').addClass('sts-hidden-container');\n\n                this.disabled = true;\n                this.trigger('disable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Shows the PIC\n         * @fires show\n         * @returns {picManager}\n         */\n        show: function show() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.show();\n\n                this.trigger('show');\n            }\n\n            return this;\n        },\n\n        /**\n         * Hides the PIC\n         * @fires hide\n         * @returns {picManager}\n         */\n        hide: function hide() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.hide();\n\n                this.trigger('hide');\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @returns {picManager}\n         */\n        trigger: function trigger(eventName) {\n            var dom = this.getDom();\n            var args = _.rest(arguments, 1);\n\n            args.unshift(this);\n\n            if (dom) {\n                // trigger the event, if the tool has been moved outside of the PIC, trigger also the event on the PIC\n                dom.tool.trigger(eventName, args);\n                if (dom.broken) {\n                    dom.pic.trigger(eventName, args);\n                }\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * The template of a PicManagerCollection instance\n     * @type {picManagerCollection}\n     */\n    var picManagerCollection = {\n        /**\n         * Creates the collection of PIC from an Item\n         *\n         * @param {QtiItem} item\n         * @returns {picManagerCollection}\n         */\n        init: function init(item) {\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the list of PIC managers for the PIC provided by the running item.\n         *\n         * @param {Boolean} [force] Force a list rebuild\n         * @returns {Array} Returns the list of managers for the provided PIC\n         */\n        getList: function getList(force) {\n            var self = this;\n\n            // build the list if empty\n            if (force || !self._list) {\n                self._map = {};\n                self._list = [];\n                if (self._item) {\n                    _.forEach(self._item.getElements(), function(element) {\n                        var manager;\n\n                        if (Element.isA(element, 'infoControl')) {\n                            manager = managerFactory(element, self._item);\n                            self._list.push(manager);\n                            self._map[element.serial] = manager;\n                            self._map[element.typeIdentifier] = manager;\n                        }\n                    });\n                }\n            }\n\n            return this._list;\n        },\n\n        /**\n         * Gets the manager of the first PIC matching the identifier from the list provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {Object} The manager of the PIC\n         */\n        getPic: function getPic(picId) {\n            this.getList();\n            return this._map[picId];\n        },\n\n        /**\n         * Executes an action on a particular PIC from the running item.\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @param {String} action The name of the action to call\n         * @returns {*} Returns the action result\n         */\n        execute: function execute(picId, action) {\n            var pic = this.getPic(picId);\n            if (pic && pic[action]) {\n                return pic[action].apply(pic, _.rest(arguments, 2));\n            }\n        },\n\n        /**\n         * Executes an action on each PIC provided by the running item.\n         * @param {String} action The name of the action to call\n         * @param {Function} [filter] An optional filter to reduce the list\n         * @returns {picManagerCollection}\n         */\n        executeAll: function executeAll(action, filter) {\n            var args = _.rest(arguments, 2);\n            var cb;\n\n            if (typeof filter === 'function') {\n                cb = function(pic) {\n                    if (filter.call(pic, pic) && pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            } else {\n                cb = function(pic) {\n                    if (pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            }\n\n            return this.each(cb);\n        },\n\n        /**\n         * Calls a callback function on each listed PIC from the running item.\n         * @param {Function} cb The callback function to apply on each listed PIC\n         * @returns {picManagerCollection}\n         */\n        each: function each(cb) {\n            _.forEach(this.getList(), cb);\n            return this;\n        },\n\n        /**\n         * Enables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        enablePic: function enablePic(picId) {\n            this.execute(picId, 'enable');\n            return this;\n        },\n\n        /**\n         * Disables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        disablePic: function disablePic(picId) {\n            this.execute(picId, 'disable');\n            return this;\n        },\n\n        /**\n         * Shows a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        showPic: function showPic(picId) {\n            this.execute(picId, 'show');\n            return this;\n        },\n\n        /**\n         * Hides a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        hidePic: function hidePic(picId) {\n            this.execute(picId, 'hide');\n            return this;\n        },\n\n        /**\n         * Enables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to enable\n         * @returns {picManagerCollection}\n         */\n        enableAll: function enableAll(filter) {\n            this.executeAll('enable', filter);\n            return this;\n        },\n\n        /**\n         * Disables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to disable\n         * @returns {picManagerCollection}\n         */\n        disableAll: function disableAll(filter) {\n            this.executeAll('disable', filter);\n            return this;\n        },\n\n        /**\n         * Shows all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to show\n         * @returns {picManagerCollection}\n         */\n        showAll: function showAll(filter) {\n            this.executeAll('show', filter);\n            return this;\n        },\n\n        /**\n         * Hides all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to hide\n         * @returns {picManagerCollection}\n         */\n        hideAll: function hideAll(filter) {\n            this.executeAll('hide', filter);\n            return this;\n        }\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {Object} pic\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var managerFactory = function managerFactory(pic, item) {\n        var manager = _.clone(picManager, true);\n        return manager.init(pic, item);\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var collectionFactory = function collectionFactory(item) {\n        var collection = _.clone(picManagerCollection, true);\n        return collection.init(item);\n    };\n\n    var picManager$1 = {\n        collection: collectionFactory,\n        manager: managerFactory\n    };\n\n    return picManager$1;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var userModules = {\n        /**\n         * Load user modules defined in the module config\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\n         * @returns {Promise}\n         */\n        load: function load(userModules) {\n            var config = module.config();\n\n            if (!userModules || !_.isArray(userModules)) {\n                if (config && config.userModules && _.isArray(config.userModules)) {\n                    userModules = config.userModules;\n                } else {\n                    userModules = [];\n                }\n            }\n            if(!userModules.length){\n                return Promise.resolve();\n            }\n            return new Promise(function(resolve, reject) {\n                window.require(userModules, function() {\n                    _.forEach(arguments, function(dependency) {\n                        if (dependency && _.isFunction(dependency.exec)) {\n                            dependency.exec();\n                        }\n                    });\n                    resolve();\n                }, function(err) {\n                    reject(err.message);\n                });\n            });\n        }\n    };\n\n    return userModules;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory',[],function(){\n    'use strict';\n\n    /**\n     * Generic portable element provider than loads portable elements directly on the client side\n     *\n     * Sample usage :\n     * var pciProvider = sideLoadingProviderFactory(pciManifestArray);\n     * pciProvider.add('anotherPciXYZ', anotherPciXYZObject);\n     *\n     */\n    return function sideLoadingProviderFactory(portableElements){\n\n        var _registry = portableElements;\n\n        return {\n            /**\n             * Side load the portable element here\n             * @param id\n             * @param pathToManifest\n             */\n            add : function add(id, portableElement){\n                _registry[id] = portableElement;\n                return this;\n            },\n            /**\n             * Implementation of the mandatory method load() of a portable element provider\n             *\n             * @returns {Promise} resolved when the added pci registered through their manifest are loaded\n             */\n            load : function load(){\n                return _registry;\n            }\n        };\n    };\n});\n","define('taoQtiItem/reviewRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const itemThemes = themes.get('items');\n    const moduleConfig = module.config();\n\n    //Create asset manager stack\n    const assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: url => {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    const locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n\n        // Interactions/Choices customised for reviewRenderer\n\n        choiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/reviewRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        hottext: 'taoQtiItem/reviewRenderer/renderers/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        associableHotspot: false,\n        gapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicOrderInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        uploadInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/UploadInteraction',\n        customInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/PortableCustomInteraction',\n        mediaInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MediaInteraction',\n\n        // Interactions/Choices inherited from qtiCommonRenderer\n\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',\n    };\n\n    var config = {\n        name: 'reviewRenderer',\n        locations,\n        options: {\n            assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/reviewRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/rendererProvider',['taoQtiItem/reviewRenderer/renderers/Renderer'], function (ReviewRenderer) { 'use strict';\n\n    ReviewRenderer = ReviewRenderer && Object.prototype.hasOwnProperty.call(ReviewRenderer, 'default') ? ReviewRenderer['default'] : ReviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for reviewRenderer\n     */\n    var rendererProvider = {\n        name: 'reviewRenderer',\n        init: () => {},\n        getRenderer: () => ReviewRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/runner/rendererStrategies',['core/logger', 'core/providerRegistry', 'taoQtiItem/qtiCommonRenderer/renderers/rendererProvider', 'taoQtiItem/reviewRenderer/renderers/rendererProvider'], function (loggerFactory, providerRegistry, qtiRenderer, reviewRenderer) { 'use strict';\n\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n    qtiRenderer = qtiRenderer && Object.prototype.hasOwnProperty.call(qtiRenderer, 'default') ? qtiRenderer['default'] : qtiRenderer;\n    reviewRenderer = reviewRenderer && Object.prototype.hasOwnProperty.call(reviewRenderer, 'default') ? reviewRenderer['default'] : reviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/runner/rendererStrategies');\n\n    /**\n     * The default renderer provider. It should be the QTI common renderer.\n     * @type string\n     */\n    const defaultRenderer = qtiRenderer.name;\n\n    /**\n     * Alias mapping for particular names.\n     * Gives the appropriate renderer based on the IMS view property.\n     * Read more about IMS view here:\n     * https://www.imsglobal.org/question/qtiv2p2p2/QTIv2p2p2-ASI-InformationModelv1p0/imsqtiv2p2p2_asi_v1p0_InfoModelv1p0.html#FigEnumeratedListClass_DataModel_View\n     *\n     * @type {Object}\n     */\n    const alias = {\n        author: qtiRenderer.name,\n        candidate: qtiRenderer.name,\n        proctor: reviewRenderer.name,\n        scorer: reviewRenderer.name,\n        testConstructor: qtiRenderer.name,\n        tutor: reviewRenderer.name\n    };\n\n    /**\n     * Gets the name of an existing renderer.\n     * If the wanted renderer does not exist, it will fallback to the default one.\n     * A warning will be issue for unknown names.\n     * @param {String} name\n     * @returns {String}\n     */\n    function getProviderName(name) {\n        const providers = rendererStrategies.getAvailableProviders();\n\n        if (providers.includes(name)) {\n            return name;\n        }\n\n        if (alias[name]) {\n            return alias[name];\n        }\n\n        if (name) {\n            logger.warn(`Unknown QTI Item Runner renderer ${name}!`);\n        }\n\n        return defaultRenderer;\n    }\n\n    /**\n     * This renderer manager registers two different renderers at the moment:\n     * - qtiCommonRenderer: Standard renderer used for test taker view\n     * - reviewRenderer: This renderer is meant to render items in review mode (which is ready-only with some enhancement)\n     *\n     * @param {string} rendererName\n     * @returns {*|{init(): *, getRenderer(): *}|init}\n     */\n    function rendererStrategies(rendererName) {\n        const providerName = getProviderName(rendererName);\n        const provider = rendererStrategies.getProvider(providerName);\n        const renderer = {\n            /**\n             * Initializes the renderer.\n             * @returns {renderer}\n             */\n            init() {\n                provider.init.call(this);\n                return this;\n            },\n\n            /**\n             * Gets the renderer's name\n             * @returns {String}\n             */\n            getName() {\n                return provider.name;\n            },\n\n            /**\n             * Gets the renderer\n             * @returns {renderer}\n             */\n            getRenderer() {\n                return provider.getRenderer();\n            }\n        };\n\n        return renderer.init();\n    }\n\n    providerRegistry(rendererStrategies);\n\n    rendererStrategies.registerProvider(qtiRenderer.name, qtiRenderer);\n    rendererStrategies.registerProvider(reviewRenderer.name, reviewRenderer);\n\n    return rendererStrategies;\n\n});\n\n","define('taoQtiItem/runner/provider/qti',['jquery', 'lodash', 'i18n', 'context', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/portableElementRegistry/ciRegistry', 'taoQtiItem/portableElementRegistry/icRegistry', 'taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory', 'taoQtiItem/runner/rendererStrategies', 'taoQtiItem/runner/provider/manager/picManager', 'taoQtiItem/runner/provider/manager/userModules', 'taoQtiItem/qtiItem/helper/modalFeedback', 'taoItems/assets/manager', 'util/locale'], function ($, _, __, context, QtiLoader, Element, ciRegistry, icRegistry, sideLoadingProviderFactory, rendererStrategies, picManager, userModules, modalFeedbackHelper, manager, locale) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    QtiLoader = QtiLoader && Object.prototype.hasOwnProperty.call(QtiLoader, 'default') ? QtiLoader['default'] : QtiLoader;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n    sideLoadingProviderFactory = sideLoadingProviderFactory && Object.prototype.hasOwnProperty.call(sideLoadingProviderFactory, 'default') ? sideLoadingProviderFactory['default'] : sideLoadingProviderFactory;\n    rendererStrategies = rendererStrategies && Object.prototype.hasOwnProperty.call(rendererStrategies, 'default') ? rendererStrategies['default'] : rendererStrategies;\n    picManager = picManager && Object.prototype.hasOwnProperty.call(picManager, 'default') ? picManager['default'] : picManager;\n    userModules = userModules && Object.prototype.hasOwnProperty.call(userModules, 'default') ? userModules['default'] : userModules;\n    modalFeedbackHelper = modalFeedbackHelper && Object.prototype.hasOwnProperty.call(modalFeedbackHelper, 'default') ? modalFeedbackHelper['default'] : modalFeedbackHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    /**\n     * @exports taoQtiItem/runner/provider/qti\n     */\n    var qtiItemRuntimeProvider = {\n        init: function (itemData, done) {\n            var self = this;\n\n            var rendererOptions = _.merge(\n                {\n                    assetManager: this.assetManager\n                },\n                _.pick(this.options, ['themes', 'preload', 'view'])\n            );\n\n            const Renderer = rendererStrategies(rendererOptions.view).getRenderer();\n\n            this._renderer = new Renderer(rendererOptions);\n\n            this._loader = new QtiLoader();\n\n            this._loader.loadItemData(itemData, function (item) {\n                if (!item) {\n                    return self.trigger('error', __('Unable to load item from the given data.'));\n                }\n\n                self._item = item;\n                self._renderer.load(function () {\n                    self._item.setRenderer(this);\n\n                    done();\n                }, this.getLoadedClasses());\n            });\n        },\n\n        render: function (elt, done, options) {\n            var self = this;\n\n            options = _.defaults(options || {}, { state: {} });\n\n            if (this._item) {\n                try {\n                    //render item html\n                    elt.innerHTML = this._item.render({});\n\n                    // apply RTL layout according to item language\n                    const $item = $(elt).find('.qti-item');\n                    const $itemBody = $item.find('.qti-itemBody');\n                    const itemDir = $itemBody.attr('dir');\n                    if (!itemDir) {\n                        const itemLang = $item.attr('lang');\n                        $itemBody.attr('dir', locale.getLanguageDirection(itemLang));\n                    }\n                } catch (e) {\n                    self.trigger('error', __('Error in template rendering: %s', e.message));\n                }\n                try {\n                    if (options.portableElements) {\n                        //if the option to directly load portable elements is provided, use only this one\n                        if (options.portableElements.pci) {\n                            ciRegistry.resetProviders();\n                            ciRegistry.registerProvider(\n                                'pciDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pci)\n                            );\n                        }\n                        if (options.portableElements.pic) {\n                            icRegistry.resetProviders();\n                            icRegistry.registerProvider(\n                                'picDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pic)\n                            );\n                        }\n                    }\n\n                    // Race between postRendering and timeout\n                    // postRendering waits for everything to be resolved or one reject\n                    Promise.race([\n                        Promise.all(this._item.postRender(options)),\n                        new Promise(function (resolve, reject) {\n                            _.delay(\n                                reject,\n                                timeout,\n                                new Error(__('It seems that there is an error during item loading. The error has been reported. The test will be paused.'))\n                            );\n                        })\n                    ])\n                        .then(function () {\n                            $(elt)\n                                .off('responseChange')\n                                .on('responseChange', function () {\n                                    self.trigger('statechange', self.getState());\n                                    self.trigger('responsechange', self.getResponses());\n                                })\n                                .off('endattempt')\n                                .on('endattempt', function (e, responseIdentifier) {\n                                    self.trigger('endattempt', responseIdentifier || e.originalEvent.detail);\n                                })\n                                .off('themechange')\n                                .on('themechange', function (e, themeName) {\n                                    var themeLoader = self._renderer.getThemeLoader();\n                                    themeName = themeName || e.originalEvent.detail;\n                                    if (themeLoader) {\n                                        themeLoader.change(themeName);\n                                    }\n                                });\n\n                            /**\n                             * Lists the PIC provided by this item.\n                             * @event qti#listpic\n                             */\n                            self.trigger('listpic', picManager.collection(self._item));\n\n                            return userModules.load().then(done);\n                        })\n                        .catch(function (renderingError) {\n                            done(); // in case of postRendering issue, we are also done\n                            const errorMsg = renderingError instanceof Error\n                                ? renderingError.message\n                                : renderingError;\n                            const error = new Error(__('Error in post rendering: %s', errorMsg));\n                            error.unrecoverable = true;\n                            self.trigger('error', error);\n                        });\n                } catch (err) {\n                    self.trigger('error', __('Error in post rendering: %s', err.message));\n                }\n            }\n        },\n\n        /**\n         * Clean up stuffs\n         */\n        clear: function (elt, done) {\n            var self = this;\n\n            if (self._item) {\n                Promise.all(\n                    this._item.getInteractions().map(function (interaction) {\n                        return interaction.clear();\n                    })\n                )\n                    .then(function () {\n                        self._item.clear();\n\n                        $(elt).off('responseChange').off('endattempt').off('themechange').off('feedback').empty();\n\n                        if (self._renderer) {\n                            self._renderer.unload();\n                        }\n\n                        self._item = null;\n                    })\n                    .then(done)\n                    .catch(function (err) {\n                        self.trigger('error', __('Something went wrong while destroying an interaction: %s', err.message));\n                    });\n            } else {\n                done();\n            }\n        },\n\n        /**\n         * Get state implementation.\n         * @returns {Object} that represents the state\n         */\n        getState: function getState() {\n            var state = {};\n            if (this._item) {\n                //get the state from interactions\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    state[interaction.attr('responseIdentifier')] = interaction.getState();\n                });\n\n                //get the state from infoControls\n                _.forEach(this._item.getElements(), function (element) {\n                    if (Element.isA(element, 'infoControl') && element.attr('id')) {\n                        state.pic = state.pic || {};\n                        state.pic[element.attr('id')] = element.getState();\n                    }\n                });\n            }\n            return state;\n        },\n\n        /**\n         * Set state implementation.\n         * @param {Object} state - the state\n         */\n        setState: function setState(state) {\n            if (this._item && state) {\n                //set interaction state\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    var id = interaction.attr('responseIdentifier');\n                    if (id && state[id]) {\n                        interaction.setState(state[id]);\n                    }\n                });\n\n                //set info control state\n                if (state.pic) {\n                    _.forEach(this._item.getElements(), function (element) {\n                        if (Element.isA(element, 'infoControl') && state.pic[element.attr('id')]) {\n                            element.setState(state.pic[element.attr('id')]);\n                        }\n                    });\n                }\n            }\n        },\n\n        getResponses: function () {\n            var responses = {};\n            if (this._item) {\n                _.reduce(\n                    this._item.getInteractions(),\n                    function (res, interaction) {\n                        responses[interaction.attr('responseIdentifier')] = interaction.getResponse();\n                        return responses;\n                    },\n                    responses\n                );\n            }\n            return responses;\n        },\n\n        renderFeedbacks: function (feedbacks, itemSession, done) {\n            var self = this;\n\n            var _renderer = self._item.getRenderer();\n            var _loader = new QtiLoader(self._item);\n\n            // loading feedbacks from response into the current item\n            _loader.loadElements(feedbacks, function (item) {\n                _renderer.load(function () {\n                    var renderingQueue = modalFeedbackHelper.getFeedbacks(item, itemSession);\n\n                    done(renderingQueue);\n                }, this.getLoadedClasses());\n            });\n        }\n    };\n\n    return qtiItemRuntimeProvider;\n\n});\n\n","define('taoQtiItem/runner/qtiItemRunner',['taoItems/runner/api/itemRunner', 'taoQtiItem/runner/provider/qti'], function (itemRunner, qtiRuntimeProvider) { 'use strict';\n\n\titemRunner = itemRunner && Object.prototype.hasOwnProperty.call(itemRunner, 'default') ? itemRunner['default'] : itemRunner;\n\tqtiRuntimeProvider = qtiRuntimeProvider && Object.prototype.hasOwnProperty.call(qtiRuntimeProvider, 'default') ? qtiRuntimeProvider['default'] : qtiRuntimeProvider;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\t//register the QTI Provider\n\titemRunner.register('qti', qtiRuntimeProvider);\n\n\treturn itemRunner;\n\n});\n\n","\ndefine(\"taoQtiItem/loader/taoQtiItemRunner.bundle\", function(){});\n","define(\"taoQtiItem/loader/taoQtiItemRunner.min\", [\"taoItems/loader/taoItemsRunner.min\"], function(){});\n"]}