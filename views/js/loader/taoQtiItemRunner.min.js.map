{"version":3,"names":["define","ckConfigurator$1","Object","prototype","hasOwnProperty","call","getConfig","editor","toolbarType","options","underline","ckConfigurator","_","util","buildSerial","prefix","id","chars","i","charAt","Math","floor","random","length","buildId","item","suffix","exists","usedIds","TypeError","getUsedIds","contains","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","each","collectionName","collection","split","nameToken","elt","parent","isFunction","find","Error","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","indexOf","removeMarkupNamespaces","removeMarkupNamespace","getMarkupUsedNamespaces","namespaces","original","slash","node","push","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","_class","loggerFactory","rendererConfig","_instances","logger","Element","Class","extend","qtiClass","serial","rootElement","init","attributes","metaData","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","forEach","name","value","prop","document","trigger","key","removeData","removeAttr","removeAttributes","warn","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","object","body","location","getRootElement","setRelatedItem","setRootElement","getRelatedItem","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","rendering","resolveUrl","merge","getData","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","_containers","_$containerContext","_getSelector","selector","containerHelper","setContext","getContext","get","reset","omit","clear","eventType","triggerResponseChangeEvent","interaction","extraData","response","getResponse","targetBlank","$container","on","e","preventDefault","href","window","open","raphael","scaleRaphael","_Mathround","round","_Mathfloor","basic","stroke","\"stroke-width\"","\"stroke-dasharray\"","\"stroke-linejoin\"","fill","\"fill-opacity\"","cursor","hover","selectable","active","error","success","layer","opacity","creator","target","path","width","assoc","\"stroke-linecap\"","close","gstyle","\"imageset-rect-stroke\"","\"imageset-rect-no-stroke\"","\"imageset-img\"","\"order-text\"","\"font-family\"","\"font-weight\"","\"font-size\"","\"score-text-default\"","\"score-text\"","\"small-text\"","\"layer-pos-text\"","\"target-hover\"","\"target-success\"","\"assoc-layer\"","\"stroke-opacity\"","\"assoc-bullet\"","\"close-bg\"","\"touch-circle\"","shapeMap","default","poly","coordsValidator","rect","ellipse","circle","qti2raphCoordsMapper","coords","paper","height","a","size","join","raph2qtiCoordsMapper","x","y","cx","cy","r","rx","ry","GraphicHelper","_style","setStyle","responsivePaper","resizePaper","givenWidth","containerWidth","stopPropagation","diff","$editor","outerWidth","maxWidth","$body","responsive","innerWidth","factor","imgWidth","containerHeight","imgHeight","changeSize","resize","container","closest","resizer","throttle","innerHeight","image","img","imgId","setViewBox","createElement","self","shaper","shapeCoords","qtiCoords","raphaelCoords","apply","title","style","toFront","flashing","updateElementState","touchEffect","touchstart","createTouchCircle","getBBox","createTarget","point","w","baseSize","half","targetSize","transform","count","tBBox","click","p","select","remove","create","map","coord","parseInt","JSON","stringify","mapper","result","bbox","radius","tCircle","defer","animate","createText","top","left","content","disableEvents","text","hide","setAttribute","fontSize","scaledFontSize","updateTitle","createShapeText","shape","shapeClick","createBorderedImage","padding","halfPad","rw","rh","ix","iy","iw","ih","set","border","url","shadow","glow","offsetx","offsety","move","duration","animation","animateWith","children","child","nodeName","toLowerCase","removeChild","highlightError","restoredState","delay","event","evt","where","events","f","Array","slice","getPoint","clickPoint","getBoundingClientRect","position","pw","cw","ph","ch","offset","pageX","pageY","clientX","clientY","scrollLeft","documentElement","scrollTop","Handlebars","Helpers0","instructionTpl","asString","html","Template","__initialized","template","depth0","helpers","partials","program1","buffer","stack1","escapeExpression","compilerInfo","functionType","helper","hash","inverse","noop","fn","program","message","_notificationLevels","Instruction","callback","defaultMessage","currentMessage","level","$dom","isValidLevel","setState","checkState","getId","update","timeout","start","stop","_this","timer","setTimeout","setLevel","getLevel","setMessage","validate","$$1","__","notifTpl","helperMissing","_instructions","instructionManager","validateInstructions","instruction","appendInstruction","validateCallback","removeInstructions","empty","resetInstructions","minMaxChoiceInstructions","min","max","onError","choiceCount","getChoices","minInstructionSet","msg","appendNotification","prepend","$notif","_remove","fadeOut","removeNotifications","informLoaded","leading","attach","stylesheets","$head","stylesheet","$link","onload","onerror","one","appendTo","detach","itemStylesheetHandler","regexChar","regexWords","patternMaskHelper","parsePattern","pattern","createMaxWordPattern","toString","createMaxCharPattern","printBase","withType","print","base","forIn","_formatters","formatter","baseType","printList","list","substring","printRecord","record","boolean","integer","float","string","pair","directedPair","file","uri","intOrIdentifier","identifier","PciPrettyPrint","pciPrettyPrint","_qtiModelPciResponseCardinalities","single","multiple","ordered","PciResponse","unserialize","responseDeclaration","getResponseDeclaration","cardinality","mappedCardinality","responseValues","isObject","serialize","prettyPrint","fixMarkupMediaSources","imgSrcPattern","substr","resolved","PortableElement","adaptSize","waitForMedia","itemSelector","sizeAdapter","$elements","first","addEventListener","rel","resetSize","resetHeight","mimeTypes","delimetr","uploadMime","getMimeTypes","getList","setExpectedTypes","types","classes","reduce","acc","selectedType","getExpectedTypes","includeEquivalents","equivalents","mimes","mime","mimeData","equivalent","union","tpl","Gap","program3","objetLabel","objectLabel","GapImg","GapText","Hottext","InlineChoice","SimpleAssociableChoice_AssociateInteraction","SimpleAssociableChoice_MatchInteraction","features","program5","program7","unique","allowElimination","SimpleChoice_ChoiceInteraction","choice","maxChoices","isVisible","SimpleChoice_OrderInteraction","Promise","eventifier","_requirejs","require","_defaultLoadingOptions","reload","loadModuleConfig","manifest","resolve","reject","requireConfigAliases","reqConfigs","modules","baseUrl","runtime","config","pciConfig","defaults","paths","runtimeModules","typeIdentifier","model","conf","isPortableElementProvider","provider","load","portableElementRegistry","methods","_loaded","__providers","_registry","version","last","registerProvider","moduleName","resetProviders","loadProviders","loadPromise","providerLoadingStack","shift","getAllVersions","all","versions","getRuntime","portableElement","assign","label","getCreator","xmlns","getLatestCreators","lastVersion","hook","enabled","getBaseUrl","loadRuntimes","then","providers","loadStack","results","configLoadingStack","_pcis","include","moduleConfigs","catch","err","loadCreators","requiredCreatorHooks","portableElementModel","creators","creatorHook","getTypeIdentifier","findIndex","module","enable","disable","isEnabled","featuresService","QtiElements","itemBody","parents","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","div","dl","dt","dd","hr","math","li","ol","ul","param","table","tbody","tfoot","thead","td","th","tr","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","pre","br","infoControl","qti","textRun","feedbackInline","feedbackBlock","rubricBlock","blockInteraction","inlineInteraction","gap","hottext","printedVariable","prompt","templateElement","templateBlock","templateInline","choiceInteraction","associateInteraction","orderInteraction","matchInteraction","hottextInteraction","gapMatchInteraction","mediaInteraction","sliderInteraction","uploadInteraction","drawingInteraction","graphicInteraction","hotspotInteraction","graphicAssociateInteraction","graphicOrderInteraction","graphicGapMatchInteraction","selectPointInteraction","textEntryInteraction","extendedTextInteraction","inlineChoiceInteraction","endAttemptInteraction","customInteraction","_container","cache","containable","getAllowedContainersElements","getAllowedContainers","jqSelector","filter","getParentClasses","aClass","intersect","intersection","getChildClasses","getAllowedContents","recursive","checked","contain","j","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","elementId","entries","qtiElements","customInteractionRegistry","getAuthoringData","enabledOnly","pciModel","ciRegistry","registry","infoControlRegistry","icRegistry","getBaseUrlByIdentifier","handle","handlePortableElementLocation","source","relative","fullmatch","relPath","runtimeLocation","context","themes","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","assetManager","handleTheme","pluck","available","root_url","taomedia","external","base64","itemCssNoCache","locations","assessmentItem","_simpleFeedbackRule","_tooltip","outcomeDeclaration","responseProcessing","figure","figcaption","modalFeedback","\"simpleChoice.choiceInteraction\"","\"simpleChoice.orderInteraction\"","gapText","\"simpleAssociableChoice.matchInteraction\"","\"simpleAssociableChoice.associateInteraction\"","inlineChoice","hotspotChoice","gapImg","associableHotspot","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","order","orderDragAndDrop","messages","program2","program4","equal","contentModel","Container","Figcaption","program6","showFigure","Figure","elem","class","includes","some","bdy","elements","childElement","$figure","$img","css","program9","program11","program13","program15","program17","program19","program21","role","src","alt","Img","Include","hider","instructionMgr","pciResponse","interact","interactUtils","pairTpl","Template$1","blockHelperMissing","choices","setChoice","$choice","$target","choiceSerial","getChoice","usage","_setChoice","responseMappingMode","siblings","$resultArea","$pair","thisPairSerial","$otherRepeatedPair","not","$otherPair","otherPairSerial","fadeIn","show","color","unsetChoice","$filledChoice","triggerChange","$parent","$sibling","isNumberOfMaxAssociationsZero","swapping","getChoiceByIdentifier","renderEmptyPairs","scrollObserverFactory","$scrollContainer","resetScrollObserver","currentDraggable","beforeY","beforeX","afterY","afterX","onScrollCb","getAttribute","webkitTransform","findScrollContainer","$el","ovf","dynamicDrop","getScrollContainer","draggedElement","off","_getRawResponse","_setInstructions","_iFrameDragFix","draggableSelector","iFrameDragFixOn","$activeDrop","resultSelector","fire","eq","relatedTarget","choiceSelector","$choiceArea","$activeChoice","scrollObserver","$bin","binSelector","_getChoice","isDragAndDropEnabled","dragOptions","dropOptions","scaleX","scaleY","_resetSelection","_unsetChoice","_isInsertionMode","_isModeEditing","_activateChoice","_handleChoiceActivate","_activateResult","targetSerial","_handleResultActivate","currentTarget","getOption","inertia","autoScroll","restrict","restriction","endOnly","elementRect","bottom","right","draggable","onstart","scale","calculateScale","onmove","moveElement","dx","dy","onend","restoreOriginalPosition","iFrameDragFixOff","styleCursor","overlap","ondragenter","ondragleave","dropzone","ondrop","resetResponse","tapOn","_setPairs","pairs","addedPairs","$emptyPair","$divs","next","setResponse","destroy","sort","aIndex","bIndex","getState","AssociateInteraction","listStyle","allowEliminationVisible","horizontal","promptId","KEY_CODE_SPACE","KEY_CODE_ENTER","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","_triggerInput","$choiceBox","$input","$choiceBoxes","add","isBoolean","_pseudoLabel","inputSelector","$qtiChoice","keyCode","charCode","prev","focus","eliminator","dataset","eliminable","input","querySelector","originalEvent","classList","toggle","removeAttribute","values","val","highlightInvalidInput","$icon","choiceStyle","iconStyle","clearTimeout","isEliminable","getCustomData","listStyleVisible","listStyles","pop","eliminated","ChoiceInteraction","_setVal","change","EndAttemptInteraction","strLimiter","ckEditor","tooltip","converter","countTpl","expectedLength","minStrings","patternMask","placeholderType","_styleUpdater","themeLoaded","_getNumStrings","_isMultiple","limiter","inputLimiter","placeholderText","getItemLanguage","itemLang","itemLocale","ckOptions","resize_enabled","secure","protocol","forceCustomDomain","language","$element","num","_setPattern","_getFormat","hideXhtmlConstraints","hideXhtmlRecommendations","qtiItemStyle","$editorBody","qtiItem","currentStyle","getComputedStyle","\"background-color\"","_setUpCKEditor","status","listenTextInput","_getCKEditor","setData","_setMultipleVal","keys","setText","numericBase","maxStrings","editorValue","convertedValue","convert","isNaN","parseFloat","_getTextareaValue","expectedLines","isCke","patternRegEx","$textarea","$charsCounter","$wordsCounter","maxWords","maxLength","$maxLengthCounter","$maxWordsCounter","ignoreKeyCodes","spaceKeyCodes","isComposing","hasCompositionJustEnded","acceptKeyCode","emptyOrSpace","txt","hasSpace","getCharBefore","str","pos","getCharAfter","noSpaceNode","NODE_TEXT","isBlockBoundary","getName","getPreviousNotEmptyNode","range","getPreviousNode","getText","previousSourceNode","getPreviousSourceNode","nodeElement","parentNode","ownerDocument","getNextNotEmptyNode","getNextNode","nextSourceNode","getNextSourceNode","cancelEvent","cancel","stopImmediatePropagation","invalidToolip","patternHandler","newValue","debounce","dispose","keyLimitHandler","which","wordsCount","getWordsCount","charsCount","getCharsCount","middle","sel","getSelection","getRanges","startContainer","startOffset","endContainer","endOffset","getSelectedText","selectionStart","selectionEnd","textarea","updateCounter","nonKeyLimitHandler","dataValue","clipboardData","dataTransfer","limitByWordCount","limitByCharCount","insertHtml","el","end","handleCompositionStart","handleCompositionEnd","currentValue","handleBeforeInput","previousSnapshot","getSnapshot","createRange","editable","moveToElementEditablePosition","selectRanges","raw","_ckEditorData","patt","_destroyCkEditor","instances","_stripTags","tempNode","innerHTML","textContent","format","setReadOnly","readOnly","clearText","countChars","countWords","countExpectedLength","countMaxLength","countMaxWords","constraintHints","program14","program10","maxStringLoop","program12","program16","program18","program23","dompurify","program25","unless","program26","ExtendedTextInteraction","_choiceUsages","getGap","gapSelector","_handleChoiceSelect","_handleFilledGapSelect","_handleGapSelect","$flowContainer","filledGapSelector","$dragged","GapMatchInteraction","graphic","_getActiveElement","getById","_createPath","srcElement","destElement","onRemove","showCloser","closerBg","removeSet","closer","hideCloser","toBack","unclick","invoke","vset","_vsets","without","sx","sy","dest","srcBullet","destBullet","midPath","getPointAtLength","getTotalLength","selectLigne","attrs","_isMatchable","matchable","matchMax","matching","_shapesSelectable","assocs","activeChoice","assocsElement","_shapesUnSelectable","responses","concat","_paperUnSelect","_renderChoice","maxAssociations","pull","background","partial","res","responseValue","el1","el2","toRemove","GraphicAssociateInteraction","mouseEvent","gapImgs","activeDrop","isDirectedPairFlipped","flipDirectedPair","gapFillers","gapFiller","$gapImages","bgImage","getGapImg","usages","_selectShape","trackResponse","$clone","shapeOffset","activeOffset","currentCount","$gapList","$active","$imageBox","boxOffset","display","\"z-index\"","animationEnd","gapFillerImage","rElement","raphaelid","handleShapeSelect","onClickShape","_renderGapList","toggleActiveGapState","_setInactiveGapState","_setActiveGapState","gapFillersSelector","onClickGapImg","index","newSize","sortBy","responseChoice","responseGap","items","GraphicGapMatchInteraction","_createTexts","texts","times","number","_renderOrderList","$orderList","$orderer","$orderers","_showText","transf","_hideText","_unselectShape","unsetNumbers","activeNumber","GraphicOrderInteraction","HotspotInteraction","pseudoLabel","$inupt","currentChoices","HottextInteraction","select2","_emptyValue","_defaultOptions","allowEmpty","optionSelector","opts","required","choiceTooltip","getItemDir","itemDir","dirClass","opt","outerHTML","formatResult","formatSelection","minimumResultsForSearch","containerCssClass","dropdownCssClass","warning","$selectedIndex","selectedIndex","ev","choiceIdentifier","InlineChoiceInteraction","depth1","matchSet1","programWithDepth","matchSet2","inWarning","_onCheckboxSelected","_filterResponse","_inferValue","firstId","secondId","currentResponse","minAssociations","_countChoices","_maxMatchReached","association","overflow","_getChoiceDefinitionByIdentifier","matchMin","_countAssociations","rawResponse","rawChoices","_getRawChoices","matchset","superClosure","onMaxChoicesReached","report","onMatchMaxReached","originalBackgroundColor","originalColor","backgroundColor","responseCount","prependTo","MatchInteraction","inferValue","mediaplayer","canPreviewMedia","firefox","reFirefoxVersion","exec","navigator","userAgent","webm","reWebM","media","$item","maxPlays","canBePlayed","currentWidth","mediaElement","initMediaPlayer","mediaUrl","preview","canPause","canSeek","volume","autoStart","loop","renderTo","timesPlayed","restorePlayerState","playerState","isNumber","setVolume","muted","mute","startMuted","seek","pause","player","getPosition","getVolume","MediaInteraction","orientationSelectionEnabled","_freezeSize","$orderArea","instructionMax","initialOrder","$choices","deactivateChoice","choice1","choice2","_isDropzoneVisible","$dropzoneElement","_insertDropzone","draggedMiddle","_getMiddleOf","previousMiddle","insertPosition","currentMiddle","orientation","before","_adjustDropzonePosition","draggedBox","$prevResult","$nextResult","prevMiddle","nextMiddle","after","elementBox","$iconAdd","$iconRemove","$iconBefore","$iconAfter","$dragContainer","_activeControls","_resetControls","_setSelection","_addChoiceToSelection","$results","_toggleResultSelection","_removeChoice","_moveResultBefore","$prev","_moveResultAfter","$next","hasBeenDroppedInResultArea","dropzoneIndex","selectors","unbindInteractEvents","OrderInteraction","_pciHooks","register","pciHook","notifyReady","pciInstance","notifyDone","onready","ondone","createPciInstance","pciTypeIdentifier","registeredPCI","cloneDeep","qtiCustomInteractionContext","instanciator","getPci","pci","_taoCustomInteraction","setPci","instance","commonPciRenderer","getRequiredModules","requireEntries","libraries","lib","createInstance","properties","pciAssetManager","pciAssetResolve","resolveBy","initialize","setSerializedState","getSerializedState","sharedContext","defaultPciRenderer","setPCIConstructor","pciConstructor","pciConstructorDataKey","getPCIConstructor","contentLanguage","itemLanguage","userLanguage","locale","forOwn","propVal","propKey","pciReadyCallback","readyPromise","templateVariables","boundTo","pciDoneCallback","getInstance","oncompleted","setReviewState","RESPONSE","info","imsPciRenderer","_setPciModel","pciRenderer","_getPciRenderer","getAssetManager","onPci","serializedState","PortableCustomInteraction","Prompt","getRawResponse","points","addPoint","pointChange","isTouch","enableSelection","isResponsive","untouchstart","imageClicked","SelectPointInteraction","nouislider","_slideTo","sliderCurrentValue","sliderValue","direction","getPropertyValue","responseIdentifier","$sliderLabels","$sliderCurrentValue","$sliderValue","reverse","lowerBound","upperBound","step","steps","inArray","reversedLabels","sliderSize","maxHeight","stepLabel","middleStep","leftOffset","middleValue","noUiSlider","attributesNew","startValue","SliderInteraction","hideTooltip","showTooltip","theme","updateTitleContent","textEntryTooltip","maxChars","updateMaxCharsTooltip","messageType","updatePatternMaskTooltip","inputValue","TextEntryInteraction","mimetype","uploadHelper","progressbar","previewer","modal","_Mathmin","_Mathround2","resetGui","callResetGui","changeListener","_initialInstructions","files","_handleSelectedFiles","getCustomMessage","FileReader","bind","blur","accept","_readyInstructions","validateFileType","expectedTypes","filetype","getMimeType","getMessageWrongType","userSelectedType","messageWrongType","expectedTypeLabels","filename","reader","base64Data","commaPosition","base64Raw","$previewArea","$originalImg","$largeDisplay","itemWidth","winWidth","fullHeight","imgNaturalWidth","isOversized","modalWidth","naturalWidth","$modalBody","modalOverlayClass","onloadstart","onprogress","_Mathceil","ceil","percentProgress","loaded","total","readAsDataURL","UploadInteraction","Item","MathJax","block","Hub","processSectionDelay","_Math","reference","$self","Queue","_checkContainerType","_getBodyDom","_setBodyDomClass","newClass","oldClass","$wrapper","_setDomClass","$bodyDom","wrapInner","setEncodedDataToDom","dataName","oldValue","_getEncodedDataString","setEncodedData","getEncodedData","removeEncodedData","hasEncodedData","matches","_prefix","coreContainerHelper","inline","feedbackStyle","modalFeedbackRenderer","fb","$modal","$itemBody","requiredHeight","outerHeight","startClosed","minHeight","_Object","obj","previewOptions","_picHooks","taoQtiInfoControlContext","picHook","picInstance","proto","constructor","qtiInfoControlContext","_getPic","pic","_taoInfoControl","picAssetManager","PortableInfoControl","PrintedVariable","_Mathfloor2","interactionHelper","convertChoices","outputType","c","findChoices","inputType","shuffleChoices","n","k","tmp","serialToIdentifier","themeLoader","themesHelper","moduleLoader","getDocumentBaseUrl","host","pathname","hb","compile","_renderableClasses","_dependencies","_renderableSubclasses","simpleAssociableChoice","simpleChoice","_defaults","_isValidRenderer","valid","classCorrect","subClass","Renderer","registerRendererClass","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","elementName","messageKey","getThemeLoader","qtiSubclass","decorators","renderDirect","qtiInteraction","getLoadedRenderers","renderersLocations","requiredClasses","themeData","getCurrentThemeData","preload","reqClass","deps","requiredSubClasses","addList","category","unload","setShuffledChoices","identificationType","getShuffledChoices","reshuffle","returnedType","getRenderers","getLocations","getAbsoluteUrl","relUrl","absUrl","runtimeLocations","setAreaBroker","areaBroker","_areaBroker","getAreaBroker","getItemCreator","Renderer$1","build","defaultOptions","NewRenderer","QtiRenderer","rendererProvider","use","RubricBlock","rubric","Stylesheet","summary","Table","Tooltip","tooltipDOM","renderedTooltip","placement","IdentifiedElement","Choice","_super","getInteraction","QtiChoice","QtiHotspot","QtiAssociableHotspot","Mixin","augment","targetClass","methodName","_parent","setElements","returnValue","setElement","removeElement","getElements","getElement","elementsData","flatten","Container$1","ContainerChoice","ContainerInline","QtiGap","QtiObject","getMediaType","video","audio","_alt","QtiGapImg","QtiContainerChoice","QtiGapText","QtiHotspotChoice","QtiInlineChoice","QtiSimpleAssociableChoice","QtiSimpleChoice","QtiTextVariableChoice","QtiTextEntry","Feedback","FeedbackBlock","FeedbackInline","ModalFeedback","ContainerFigcaption","getNamespace","relatedItem","getNamespaces","nsUriFragment","defaultNsName","defaultNsUri","setNamespace","NamespacedElement","ContainerFigure","imgElements","QtiInteraction","addChoice","responseId","_type","choiceShuffle","interactionData","renderedChoice","tplName","getNormalMaximum","Interaction","BlockInteraction","responseRules","MATCH_CORRECT","outcomeIdentifier","responseIf","expression","expressions","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","isUsingTemplate","isValidTemplateName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","getTemplateNameFromResponseRules","outcomeRules","isEqual","VariableDeclaration","defaultValue","setDefaultValue","getDefaultValue","OutcomeDeclaration","gamp","responseHelper","_Mathmin2","pairExists","maxScore","setNormalMaximum","scoreOutcome","getOutcomeDeclaration","normalMaximum","processingType","getInteractions","interactionMaxScore","setMaxScore","hasInvalidInteraction","customOutcomes","maxScoreOutcome","getOutcomes","outcome","addOutcomeDeclaration","externalScored","removeOutcome","getMatchMaxOrderedChoices","choiceCollection","valueOf","choiceInteractionBased","mapDefault","mappingAttributes","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","minChoices","correctResponse","mapEntries","score","orderInteractionBased","associateInteractionBased","maxAssoc","minAssoc","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","possiblePairs","checkInfinitePair","countBy","forEachRight","mapEntry","choiceId","_usedChoices","used","gapMatchInteractionBased","calculatePossiblePairs","getGaps","skippableWrongResponse","usedGaps","group1","group2","gapId","selectPointInteractionBased","mappedValue","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","customInteractionBased","ContainerInteraction","removeProp","propNames","propName","getProperties","getMarkupNamespace","markupNs","defaultMarkupNsName","defaultMarkupNsUri","setMarkupNamespace","CustomElement","CustomInteraction","entryPoint","pciReadyCallbacks","onPciReady","triggerPciReady","offPci","triggerPci","InlineInteraction","QtiBlockInteraction","QtiObjectInteraction","QtiGraphicInteraction","backgroundImage","GraphicInteraction","addGapImg","removeGapImg","getGapImgs","graphicGapInteraction","SimpleAssociableChoice","matchSet","ObjectInteraction","ContainerItemBody","outcomes","modalFeedbacks","schemaLocations","apipAccessibility","interactions","addResponseDeclaration","addModalFeedback","feedback","elementCollection","getResponses","addNamespace","setNamespaces","setSchemaLocations","getSchemaLocations","setApipAccessibility","apip","getApipAccessibility","addStylesheet","removeStyleSheet","stylesheetExists","setResponseProcessing","rp","$dummy","$children","qtiClasses","getPrefix","html5Ns","prefixed","xmlNsHandler","stripNs","openRegEx","closeRegEx","restoreNs","xml","ignoreMarkup","xmlCopy","xmlRe","tagRe","xmlMatch","imsXsd","prefixAtt","tagMatch","itemScore","responseIdentifiers","outcomeExpressions","itemScoreHelper","loadPortableCustomElementProperties","rawProperties","parse","loadPortableCustomElementData","Loader","classesLocation","setClassesLocation","qtiClassesList","getRequiredClasses","loadRequiredClasses","requiredClass","loadeded","QtiClass","getLoadedClasses","loadItemData","Qti","loadContainer","buildOutcome","feedbacks","buildElement","responseRuleItemIndex","_ref","responseRule","splice","buildResponse","feedbackRules","fbData","feedbackOutcomeIdentifier","feedbackOutcome","buildSimpleFeedbackRule","feedbackResponseRuleIndex","_ref2","setOutcomeResponseRule","responseKey","customResponseProcessing","buildResponseProcessing","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","howMatch","correctResponses","mapping","areaMapping","feedbackRule","setCondition","condition","comparedValue","feedbackThen","feedbackElse","comparedOutcome","bodyObject","bodyData","eltData","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","loadTooltipData","buildInteractionChoices","loadPciData","setMathML","mathML","annotations","encoding","setAnnotation","_stripMathTags","nsName","_stripNamespace","_isEmptyMathML","mathStr","hasContent","$math","mathText","parseHTML","unescape","getAnnotation","removeAnnotation","getMathML","escape","latex","Math$1","readyStack","onReady","cb","triggerReady","SimpleFeedbackRule","_comparedValues","setFeedbackElse","_toString","ResponseProcessing","ContainerTable","newBody","Table$1","newContent","tooltipContent","ResponseDeclaration","getFeedbackRules","rule","isCardinality","cardinalities","comparison","EventMgr","tokens","getRawValues","pciVar","getFeedbackMessageSignature","extractDisplayInfo","$interactionContainer","messageGroupId","$displayContainer","uniqueId","interactionContainer","displayContainer","getInteractionsDisplayInfo","interactionsDisplayInfo","$itemContainer","interactionOrder","_interactionInfo","getFeedbacks","itemSession","renderingQueue","feedbackIds","_currentMessageGroupId","interactionInfo","Parser","_$xml","loadXML","parseXML","getDOM","_getElementSelector","getQtiClassFromXmlDom","$node","_qtiClassNames","$elt","attrName","specified","_qtiAttributesNames","buildMath","$annotation","buildTooltip","targetHtml","contentId","contentHtml","\"aria-describedby\"","parseTable","$parsedTable","parseContainer","parseFigure","$parsedFigure","$figcaption","_placeholder","$qtiElement","$content","_parsableElements","rubricblock","printedvariable","powerform","mappingindicator","parser","xmlStr","loader","parser$1","simpleParser","xinclude","fileUrl","undef","stimulusXml","$sampleXMLrootNode","$stimulus","mathNs","loadedClasses","xincludeLoader","picManager","_pic","_item","getPic","getItem","getDom","_dom","tool","button","broken","dom","disabled","eventName","rest","unshift","picManagerCollection","force","_list","_map","manager","managerFactory","picId","execute","action","executeAll","enablePic","disablePic","showPic","hidePic","enableAll","disableAll","showAll","hideAll","collectionFactory","picManager$1","userModules","dependency","sideLoadingProviderFactory","portableElements","ReviewRenderer","providerRegistry","qtiRenderer","reviewRenderer","getProviderName","rendererStrategies","getAvailableProviders","alias","defaultRenderer","rendererName","providerName","getProvider","author","candidate","proctor","scorer","testConstructor","tutor","QtiLoader","modalFeedbackHelper","qtiItemRuntimeProvider","itemData","done","rendererOptions","pick","view","_loader","getLanguageDirection","race","detail","themeName","renderingError","errorMsg","unrecoverable","renderFeedbacks","itemRunner","qtiRuntimeProvider"],"sources":["/home/yaroslav/Projects/tao-neo4j/tao/views/build/config-wrap-start-default.js","../qtiCommonRenderer/helpers/ckConfigurator.js","../qtiItem/helper/util.js","../qtiItem/helper/rendererConfig.js","../qtiItem/core/Element.js","../qtiCommonRenderer/helpers/container.js","../qtiCommonRenderer/helpers/Graphic.js","../qtiCommonRenderer/helpers/instructions/Instruction.js","../qtiCommonRenderer/helpers/instructions/instructionManager.js","../qtiCommonRenderer/helpers/itemStylesheetHandler.js","../qtiCommonRenderer/helpers/patternMask.js","../qtiCommonRenderer/helpers/PciPrettyPrint.js","../qtiCommonRenderer/helpers/PciResponse.js","../qtiCommonRenderer/helpers/PortableElement.js","../qtiCommonRenderer/helpers/sizeAdapter.js","../qtiCommonRenderer/helpers/uploadMime.js","../qtiCommonRenderer/renderers/choices/Gap.js","../qtiCommonRenderer/renderers/choices/GapImg.js","../qtiCommonRenderer/renderers/choices/GapText.js","../qtiCommonRenderer/renderers/choices/Hottext.js","../qtiCommonRenderer/renderers/choices/InlineChoice.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction.js","../portableElementRegistry/factory/factory.js","../qtiCreator/helper/qtiElements.js","../portableElementRegistry/factory/ciRegistry.js","../portableElementRegistry/ciRegistry.js","../portableElementRegistry/factory/icRegistry.js","../portableElementRegistry/icRegistry.js","../portableElementRegistry/assetManager/portableAssetStrategy.js","../qtiCommonRenderer/renderers/config.js","../qtiCommonRenderer/renderers/Container.js","../qtiCommonRenderer/renderers/Figcaption.js","../qtiCommonRenderer/renderers/Figure.js","../qtiCommonRenderer/renderers/Img.js","../qtiCommonRenderer/renderers/Include.js","../qtiCommonRenderer/renderers/interactions/AssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/ChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/EndAttemptInteraction.js","../qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js","../qtiCommonRenderer/renderers/interactions/GapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction.js","../qtiCommonRenderer/renderers/interactions/HotspotInteraction.js","../qtiCommonRenderer/renderers/interactions/HottextInteraction.js","../qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/MatchInteraction.js","../qtiCommonRenderer/renderers/interactions/MediaInteraction.js","../qtiCommonRenderer/renderers/interactions/OrderInteraction.js","../../qtiCustomInteractionContext.js","../qtiCommonRenderer/renderers/interactions/pci/instanciator.js","../qtiCommonRenderer/renderers/interactions/pci/common.js","../qtiCommonRenderer/renderers/interactions/pci/ims.js","../qtiCommonRenderer/renderers/interactions/PortableCustomInteraction.js","../qtiCommonRenderer/renderers/interactions/Prompt.js","../qtiCommonRenderer/renderers/interactions/SelectPointInteraction.js","../qtiCommonRenderer/renderers/interactions/SliderInteraction.js","../qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js","../qtiCommonRenderer/renderers/interactions/UploadInteraction.js","../qtiCommonRenderer/renderers/Item.js","../qtiCommonRenderer/renderers/Math.js","../qtiItem/helper/container.js","../qtiCommonRenderer/renderers/ModalFeedback.js","../qtiCommonRenderer/renderers/Object.js","../../qtiInfoControlContext.js","../qtiCommonRenderer/renderers/PortableInfoControl.js","../qtiCommonRenderer/renderers/PrintedVariable.js","../qtiItem/helper/interactionHelper.js","../qtiRunner/core/Renderer.js","../qtiCommonRenderer/renderers/Renderer.js","../qtiCommonRenderer/renderers/rendererProvider.js","../qtiCommonRenderer/renderers/RubricBlock.js","../qtiCommonRenderer/renderers/Stylesheet.js","../qtiCommonRenderer/renderers/Table.js","../qtiCommonRenderer/renderers/Tooltip.js","../qtiItem/core/IdentifiedElement.js","../qtiItem/core/choices/Choice.js","../qtiItem/core/choices/Hotspot.js","../qtiItem/core/choices/AssociableHotspot.js","../qtiItem/mixin/Mixin.js","../qtiItem/core/Container.js","../qtiItem/mixin/Container.js","../qtiItem/core/choices/ContainerChoice.js","../qtiItem/mixin/ContainerInline.js","../qtiItem/core/choices/ContainerInlineChoice.js","../qtiItem/core/choices/Gap.js","../qtiItem/core/Object.js","../qtiItem/core/choices/GapImg.js","../qtiItem/core/choices/GapText.js","../qtiItem/core/choices/HotspotChoice.js","../qtiItem/core/choices/Hottext.js","../qtiItem/core/choices/InlineChoice.js","../qtiItem/core/choices/SimpleAssociableChoice.js","../qtiItem/core/choices/SimpleChoice.js","../qtiItem/core/choices/TextVariableChoice.js","../qtiItem/core/choices/TextEntry.js","../qtiItem/core/feedbacks/Feedback.js","../qtiItem/core/feedbacks/FeedbackBlock.js","../qtiItem/core/feedbacks/FeedbackInline.js","../qtiItem/core/feedbacks/ModalFeedback.js","../qtiItem/mixin/ContainerFigcaption.js","../qtiItem/mixin/NamespacedElement.js","../qtiItem/core/Figcaption.js","../qtiItem/mixin/ContainerFigure.js","../qtiItem/core/Figure.js","../qtiItem/core/Img.js","../qtiItem/core/Include.js","../qtiItem/core/interactions/Interaction.js","../qtiItem/core/interactions/Prompt.js","../qtiItem/core/interactions/BlockInteraction.js","../qtiItem/helper/responseRules.js","../qtiItem/helper/response.js","../qtiItem/core/variables/VariableDeclaration.js","../qtiItem/core/variables/OutcomeDeclaration.js","../qtiItem/helper/maxScore.js","../qtiItem/core/interactions/AssociateInteraction.js","../qtiItem/core/interactions/ChoiceInteraction.js","../qtiItem/core/interactions/ContainerInteraction.js","../qtiItem/mixin/CustomElement.js","../qtiItem/core/interactions/CustomInteraction.js","../qtiItem/core/interactions/InlineInteraction.js","../qtiItem/core/interactions/EndAttemptInteraction.js","../qtiItem/core/interactions/ExtendedTextInteraction.js","../qtiItem/core/interactions/GapMatchInteraction.js","../qtiItem/core/interactions/ObjectInteraction.js","../qtiItem/core/interactions/GraphicInteraction.js","../qtiItem/core/interactions/GraphicAssociateInteraction.js","../qtiItem/core/interactions/GraphicGapMatchInteraction.js","../qtiItem/core/interactions/GraphicOrderInteraction.js","../qtiItem/core/interactions/HotspotInteraction.js","../qtiItem/core/interactions/HottextInteraction.js","../qtiItem/core/interactions/InlineChoiceInteraction.js","../qtiItem/core/interactions/MatchInteraction.js","../qtiItem/core/interactions/MediaInteraction.js","../qtiItem/core/interactions/OrderInteraction.js","../qtiItem/core/interactions/SelectPointInteraction.js","../qtiItem/core/interactions/SliderInteraction.js","../qtiItem/core/interactions/TextEntryInteraction.js","../qtiItem/core/interactions/UploadInteraction.js","../qtiItem/mixin/ContainerItemBody.js","../qtiItem/core/Item.js","../qtiItem/core/qtiClasses.js","../qtiItem/helper/xmlNsHandler.js","../qtiItem/helper/itemScore.js","../qtiItem/core/Loader.js","../qtiItem/core/Math.js","../qtiItem/core/PortableInfoControl.js","../qtiItem/core/PrintedVariable.js","../qtiItem/core/response/SimpleFeedbackRule.js","../qtiItem/core/ResponseProcessing.js","../qtiItem/core/RubricBlock.js","../qtiItem/core/Stylesheet.js","../qtiItem/mixin/ContainerTable.js","../qtiItem/core/Table.js","../qtiItem/core/Tooltip.js","../qtiItem/core/variables/ResponseDeclaration.js","../qtiItem/helper/EventMgr.js","../qtiItem/helper/pci.js","../qtiItem/helper/modalFeedback.js","../qtiItem/helper/Parser.js","../qtiItem/helper/simpleParser.js","../qtiItem/helper/xincludeLoader.js","../runner/provider/manager/picManager.js","../runner/provider/manager/userModules.js","../portableElementRegistry/provider/sideLoadingProviderFactory.js","../reviewRenderer/renderers/config.js","../reviewRenderer/renderers/Renderer.js","../reviewRenderer/renderers/rendererProvider.js","../runner/rendererStrategies.js","../runner/provider/qti.js","../runner/qtiItemRunner.js","module-create.js","/home/yaroslav/Projects/tao-neo4j/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","define('taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator'], function (ckConfigurator$1) { 'use strict';\n\n    ckConfigurator$1 = ckConfigurator$1 && Object.prototype.hasOwnProperty.call(ckConfigurator$1, 'default') ? ckConfigurator$1['default'] : ckConfigurator$1;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options) {\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator$1.getConfig(editor, toolbarType, options);\n    };\n\n    var ckConfigurator = {\n        getConfig: getConfig\n    };\n\n    return ckConfigurator;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var util = {\n        buildSerial: function buildSerial(prefix) {\n            var id = prefix || '';\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < 22; i++) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId: function buildId(item, prefix) {\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds = item.getUsedIds();\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (_.contains(usedIds, id)) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if (!prefix) {\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if (prefix) {\n                prefix = prefix\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\n                    .replace(/(_)+/gi, '_');\n                if (useSuffix) {\n                    suffix = '_' + i;\n                }\n            }\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds[id]) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\n            var found = null;\n\n            if (_.isString(collectionNames)) {\n                collectionNames = [collectionNames];\n            }\n\n            if (_.isArray(collectionNames)) {\n                _.each(collectionNames, function(collectionName) {\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken) {\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if (elt) {\n                        found = { parent: element, element: elt };\n                        return false; //break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt) {\n                        if (_.isFunction(elt.find)) {\n                            found = elt.find(searchedSerial);\n                            if (found) {\n                                return false; //break the each loop\n                            }\n                        }\n                    });\n\n                    if (found) {\n                        return false; //break the each loop\n                    }\n                });\n            } else {\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\n            if (ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4) {\n                    if ($2.indexOf(':') > 0) {\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\n                });\n                return markup;\n            }\n            return markup;\n        },\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node) {\n                namespaces.push(ns);\n                return '<' + slash + node + '>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args) {\n        var options = {\n            data: {},\n            placeholder: null,\n            subclass: '',\n            renderer: null\n        };\n\n        _.each(args, function(arg) {\n            if (arg) {\n                if (arg.isRenderer) {\n                    options.renderer = arg;\n                } else if (arg instanceof $ && arg.length) {\n                    options.placeholder = arg;\n                } else if (_.isString(arg)) {\n                    options.subclass = arg;\n                } else if (_.isPlainObject(arg)) {\n                    options.data = arg;\n                } else {\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n\n        return options;\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass: '',\n        serial: '',\n        rootElement: null,\n        init: function(serial, attributes) {\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if (typeof serial === 'object') {\n                attributes = serial;\n                serial = '';\n            }\n\n            if (!serial) {\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\n            }\n\n            if (!_instances[serial]) {\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            } else {\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if (typeof this.initContainer === 'function') {\n                this.initContainer(arguments[2] || '');\n            }\n            if (typeof this.initObject === 'function') {\n                this.initObject();\n            }\n        },\n        is: function(qtiClass) {\n            return qtiClass === this.qtiClass;\n        },\n        placeholder: function() {\n            return '{{' + this.serial + '}}';\n        },\n        getSerial: function() {\n            return this.serial;\n        },\n        getUsedIdentifiers: function() {\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for (var i in elts) {\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if (id) {\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds: function getUsedIds() {\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt) {\n                var id = elt.attr('id');\n                if (id && !_.contains(usedIds, id)) {\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.attributes[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.attr(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.attributes[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.data(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.metaData[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData: function(name) {\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr: function(name) {\n            return this.removeAttributes(name);\n        },\n        setAttributes: function(attributes) {\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes: function() {\n            return _.clone(this.attributes);\n        },\n        removeAttributes: function(attrNames) {\n            if (typeof attrNames === 'string') {\n                attrNames = [attrNames];\n            }\n            for (var i in attrNames) {\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements: function() {\n            var elts = {};\n            function append(element) {\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if (typeof this.initContainer === 'function') {\n                append(this.getBody());\n            }\n            if (typeof this.initObject === 'function') {\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v) {\n                if (Element.isA(v, '_container')) {\n                    append(v);\n                } else if (_.isArray(v)) {\n                    _.each(v, function(v) {\n                        if (Element.isA(v, '_container')) {\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses: function() {\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt) {\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find: function(serial) {\n            var found = null;\n            var object, body;\n\n            if (typeof this.initObject === 'function') {\n                object = this.getObject();\n                if (object.serial === serial) {\n                    found = { parent: this, element: object, location: 'object' };\n                }\n            }\n\n            if (!found && typeof this.initContainer === 'function') {\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = { parent: this, element: body, location: 'body' };\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent: function() {\n            var item = this.getRootElement();\n            if (item) {\n                var found = item.find(this.getSerial());\n                if (found) {\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem: function(item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement: function(item) {\n            var composingElts, i;\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for (i in composingElts) {\n                    composingElts[i].setRootElement(item);\n                }\n            }\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem: function() {\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement: function() {\n            var ret = null;\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer: function(renderer) {\n            if (renderer && renderer.isRenderer) {\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for (var serial in elts) {\n                    elts[serial].setRenderer(renderer);\n                }\n            } else {\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer: function() {\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    tag: this.qtiClass,\n                    serial: this.serial,\n                    attributes: this.getAttributes()\n                };\n\n            if (!_renderer) {\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if (typeof this.initObject === 'function') {\n                defaultData.object = {\n                    attributes: this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if (args.placeholder) {\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender: function(data, altClassName, renderer) {\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if (_renderer) {\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            } else {\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer: function($scope, subclass) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                return renderer.getContainer(this, $scope, subclass);\n            } else {\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray: function() {\n            var arr = {\n                serial: this.serial,\n                type: this.qtiClass,\n                attributes: this.getAttributes()\n            };\n\n            if (typeof this.initContainer === 'function') {\n                arr.body = this.getBody().toArray();\n            }\n            if (typeof this.initObject === 'function') {\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty: function() {\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (!_containClass(clazz, className)) {\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass: function(className) {\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass: function(className) {\n            var clazz = this.attr('class') || '';\n            if (clazz) {\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if (clazz) {\n                    this.attr('class', clazz);\n                } else {\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass: function(className, state) {\n            if (typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if (this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset: function() {\n            return Element.issetElement(this.serial);\n        },\n        unset: function() {\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass) {\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\n    };\n\n    Element.getElementBySerial = function(serial) {\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial) {\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial) {\n        var element = Element.getElementBySerial(serial);\n\n        if (element) {\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt) {\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/container',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element'], function (_, $, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    //containers are cached, so do not forget to remove them.\n    let _containers = {};\n    let _$containerContext = $();\n\n    /**\n     * Build the selector for your element (from the element serial)\n     * @private\n     * @param {QtiElement} element\n     * @returns {String} the selector\n     */\n    const _getSelector = function(element) {\n        const serial = element.getSerial();\n        let selector = `[data-serial=${  serial  }]`;\n\n        if (Element.isA(element, 'choice')) {\n            selector = `.qti-choice${  selector}`;\n        } else if (Element.isA(element, 'interaction')) {\n            selector = `.qti-interaction${  selector}`;\n        }\n\n        return selector;\n    };\n\n    /**\n     * Helps you to retrieve the DOM element (as a jquery element)\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\n     */\n    const containerHelper = {\n        /**\n         * Set a global scope to look for element container\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         */\n        setContext($scope) {\n            _$containerContext = $scope;\n        },\n\n        /**\n         * Returns current scope\n         * @returns {jQueryElement}\n         */\n        getContext() {\n            return  _$containerContext;\n        },\n\n        /**\n         * Get the container of the given element\n         * @param {QtiElement} element - the QTI Element to find the container for\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         * @returns {jQueryElement} the container\n         */\n        get(element, $scope) {\n            const serial = element.getSerial();\n\n            if ($scope instanceof $ && $scope.length) {\n                //find in the given context\n                return $scope.find(_getSelector(element));\n            } else if (_$containerContext instanceof $ && _$containerContext.length) {\n                //find in the globally set context\n                return _$containerContext.find(_getSelector(element));\n            } else if (!_containers[serial] || !_containers[serial].length) {\n                //find in the global context\n                _containers[serial] = $(_getSelector(element));\n            }\n\n            return _containers[serial];\n        },\n\n        /**\n         * getContainer use a cache to store elements. This methods helps you to purge it.\n         * @param {Element} element - find the container of this element\n         */\n        reset(element) {\n            if (element instanceof Element && _containers[element.getSerial()]) {\n                _containers = _.omit(_containers, element.getSerial());\n            }\n        },\n\n        /**\n         * Clear the containers cache\n         */\n        clear() {\n            _containers = {};\n            _$containerContext = $();\n        },\n\n        /**\n         * Trigger an event on the element's container\n         * @param {String} eventType - the name of the event\n         * @param {QtiElement} element - find the container of this element\n         * @param {Array} [data] - data to give to the event\n         */\n        trigger(eventType, element, data) {\n            if (eventType) {\n                if (data && !_.isArray(data)) {\n                    data = [data];\n                }\n                this.get(element).trigger(eventType, data);\n            }\n        },\n\n        /**\n         * Alias to trigger a responseChange Event from an interaction\n         * @param {QtiElement} interaction - the interaction that had a response changed\n         * @param {Object} [extraData] - additionnal data to give to the event\n         */\n        triggerResponseChangeEvent(interaction, extraData) {\n            this.trigger('responseChange', interaction, [\n                {\n                    interaction: interaction,\n                    response: interaction.getResponse()\n                },\n                extraData\n            ]);\n        },\n\n        /**\n         * Make all links to opens in another tab/window\n         * @param {jQueryElement} $container\n         */\n        targetBlank($container) {\n            $container.on('click', 'a', function(e) {\n                e.preventDefault();\n                const href = $(this).attr('href');\n                if (href && href.match(/^http/i)) {\n                    window.open(href, '_blank');\n                }\n            });\n        }\n    };\n\n    return containerHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/Graphic',['jquery', 'lodash', 'raphael', 'scale.raphael'], function ($, _, raphael, scaleRaphael) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    raphael = raphael && Object.prototype.hasOwnProperty.call(raphael, 'default') ? raphael['default'] : raphael;\n    scaleRaphael = scaleRaphael && Object.prototype.hasOwnProperty.call(scaleRaphael, 'default') ? scaleRaphael['default'] : scaleRaphael;\n\n    var basic = {\n    \tstroke: \"#8D949E\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-dasharray\": \"\",\n    \t\"stroke-linejoin\": \"round\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5,\n    \tcursor: \"pointer\"\n    };\n    var hover = {\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.3\n    };\n    var selectable = {\n    \t\"stroke-dasharray\": \"-\",\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5\n    };\n    var active = {\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.5\n    };\n    var error = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \t\"fill-opacity\": 0.5,\n    \tfill: \"#661728\"\n    };\n    var success = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 0.5\n    };\n    var layer = {\n    \tfill: \"#ffffff\",\n    \topacity: 0,\n    \tcursor: \"pointer\"\n    };\n    var creator = {\n    \t\"fill-opacity\": 0.5,\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \tcursor: \"pointer\"\n    };\n    var target = {\n    \tpath: \"m 18,8.4143672 -1.882582,0 C 15.801891,4.9747852 13.071059,2.2344961 9.63508,1.9026738 L 9.63508,0 8.2305176,0 l 0,1.9026387 C 4.7947148,2.2343027 2.0637246,4.9746621 1.7481973,8.4143672 l -1.7481973,0 0,1.4045625 1.754877,0 c 0.3460429,3.4066753 3.0632871,6.1119843 6.4756406,6.4413813 l 0,1.739689 1.4045624,0 0,-1.739725 c 3.412547,-0.329537 6.129633,-3.034793 6.475641,-6.4413453 l 1.889279,0 z m -8.36492,6.5188648 0,-4.064673 -1.4045624,0 0,4.063882 C 5.5511016,14.612555 3.4232695,12.494619 3.0864551,9.8189297 l 4.0449512,0 0,-1.4045625 -4.0546368,0 C 3.3788672,5.6984941 5.5228887,3.5393379 8.2305176,3.2161113 l 0,3.9153125 1.4045624,0 0,-3.9160859 c 2.711162,0.3203965 4.858576,2.4808887 5.160955,5.1990293 l -3.927441,0 0,1.4045625 3.917773,0 C 14.449289,12.496957 12.318363,14.616158 9.63508,14.933232 z\",\n    \tfill: \"#0E914B\",\n    \twidth: 1,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var assoc = {\n    \t\"stroke-width\": 2,\n    \t\"stroke-linecap\": \"round\",\n    \tcursor: \"pointer\"\n    };\n    var close = {\n    \tpath: \"m 8.9997236,18.000001 c -4.9703918,0 -8.99972284217367,-4.02901 -8.99972284217367,-9 C 7.5782633e-7,4.029011 4.0293108,9.8531742e-7 8.9997236,9.8531742e-7 13.970691,9.8531742e-7 18.000001,4.029011 18.000001,9.000001 c 0,4.97099 -4.02931,9 -9.0002774,9 z m 0.0045,-16.37151 c -4.06191,0 -7.35492,3.29635 -7.35492,7.36251 0,4.06562 3.292989,7.36255 7.35492,7.36255 4.0630384,0 7.3554334,-3.29693 7.3554334,-7.36255 0,-4.06614 -3.292969,-7.36251 -7.3554334,-7.36251 v 0 z m 3.1314894,9.31167 -1.953823,-1.94014 1.953843,-1.94018 c 0.08964,-0.089 0.134622,-0.19099 0.135073,-0.30584 4.31e-4,-0.11488 -0.04383,-0.21712 -0.132838,-0.30681 l -0.54267,-0.54685 c -0.08898,-0.0897 -0.190903,-0.13473 -0.305719,-0.13514 -0.114837,-4.4e-4 -0.217064,0.0439 -0.306703,0.1329 l -1.9623724,1.94865 -1.962395,-1.94865 c -0.08964,-0.089 -0.191845,-0.13336 -0.306702,-0.1329 -0.114837,4.3e-4 -0.216736,0.0455 -0.305719,0.13514 l -0.54265,0.54685 c -0.08902,0.0897 -0.133269,0.19193 -0.132838,0.30681 4.3e-4,0.11485 0.04543,0.21681 0.135073,0.30584 l 1.953823,1.94018 -1.953782,1.94014 c -0.0896,0.089 -0.134684,0.19094 -0.135114,0.3058 -4.31e-4,0.11486 0.04386,0.21716 0.132838,0.30681 l 0.542671,0.54687 c 0.08896,0.0897 0.190923,0.13467 0.305718,0.13516 0.114857,3.9e-4 0.217105,-0.0439 0.306724,-0.13288 l 1.962332,-1.94863 1.9623324,1.94863 c 0.08962,0.089 0.191886,0.13323 0.306744,0.13288 0.114836,-4.5e-4 0.216736,-0.0455 0.305698,-0.13516 l 0.542691,-0.54687 c 0.089,-0.0897 0.133227,-0.19193 0.132838,-0.30681 -3.9e-4,-0.1149 -0.0455,-0.21683 -0.135073,-0.3058 z\",\n    \tfill: \"#0E5D91\",\n    \twidth: 1,\n    \topacity: 0,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var gstyle = {\n    \tbasic: basic,\n    \thover: hover,\n    \tselectable: selectable,\n    \tactive: active,\n    \terror: error,\n    \tsuccess: success,\n    \tlayer: layer,\n    \tcreator: creator,\n    \t\"imageset-rect-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#666666\",\n    \t\"stroke-width\": 1,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-rect-no-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#ffffff\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-img\": {\n    \tcursor: \"pointer\"\n    },\n    \t\"order-text\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.7,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"bold\",\n    \t\"font-size\": 22,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text-default\": {\n    \tstroke: \"#444444\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"small-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 16,\n    \tcursor: \"pointer\"\n    },\n    \t\"layer-pos-text\": {\n    \tstroke: \"#333\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 14\n    },\n    \ttarget: target,\n    \t\"target-hover\": {\n    \tfill: \"#3E7DA7\",\n    \t\"fill-opacity\": 1\n    },\n    \t\"target-success\": {\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 1\n    },\n    \tassoc: assoc,\n    \t\"assoc-layer\": {\n    \t\"stroke-width\": 12,\n    \tcursor: \"pointer\",\n    \t\"stroke-opacity\": 0\n    },\n    \t\"assoc-bullet\": {\n    \tfill: \"#000000\"\n    },\n    \tclose: close,\n    \t\"close-bg\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"none\",\n    \tcursor: \"pointer\",\n    \topacity: 0\n    },\n    \t\"touch-circle\": {\n    \tfill: \"none\",\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-width\": 2\n    }\n    };\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2023 (original work) Open Assessment Technologies SA ;\n     */\n\n    //maps the QTI shapes to Raphael shapes\n    const shapeMap = {\n        default: 'rect',\n        poly: 'path'\n    };\n\n    //length constraints to validate coords\n    const coordsValidator = {\n        rect: 4,\n        ellipse: 4,\n        circle: 3,\n        poly: 6,\n        default: 0\n    };\n\n    //transform the coords from the QTI system to Raphael system\n    const qti2raphCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper:  from left-x,top-y,right-x-bottom-y to x,y,w,h\n         * @param {Array} coords - QTI coords\n         * @returns {Array} raphael coords\n         */\n        rect: function(coords) {\n            return [coords[0], coords[1], coords[2] - coords[0], coords[3] - coords[1]];\n        },\n\n        /**\n         * Creates the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        default: function(paper) {\n            return [0, 0, paper.width, paper.height];\n        },\n\n        /**\n         * polygone coordinate mapper:  from x1,y1,...,xn,yn to SVG path format\n         * @param {Array} coords - QTI coords\n         * @returns {Array} path desc\n         */\n        poly: function(coords) {\n            let a;\n            const size = coords.length;\n\n            // autoClose if needed\n            if (coords[0] !== coords[size - 2] && coords[1] !== coords[size - 1]) {\n                coords.push(coords[0]);\n                coords.push(coords[1]);\n            }\n\n            // move to first point\n            coords[0] = 'M' + coords[0];\n\n            for (a = 1; a < size; a++) {\n                if (a % 2 === 0) {\n                    coords[a] = 'L' + coords[a];\n                }\n            }\n\n            return [coords.join(' ')];\n        }\n    };\n\n    //transform the coords from a raphael shape to the QTI system\n    const raph2qtiCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper: from x,y,w,h to left-x,top-y,right-x-bottom-y\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        rect: function(attr) {\n            return [attr.x, attr.y, attr.x + attr.width, attr.y + attr.height];\n        },\n\n        /**\n         * Circle coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        circle: function(attr) {\n            return [attr.cx, attr.cy, attr.r];\n        },\n\n        /**\n         * Ellispe coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        ellipse: function(attr) {\n            return [attr.cx, attr.cy, attr.rx, attr.ry];\n        },\n\n        /**\n         * Get the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        default: function(attr) {\n            return this.rect(attr);\n        },\n\n        /**\n         * polygone coordinate mapper:  from SVG path (available as segments) to x1,y1,...,xn,yn format\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        path: function(attr) {\n            const poly = [];\n            let i;\n\n            if (_.isArray(attr.path)) {\n                for (i = 1; i < attr.path.length; i++) {\n                    if (attr.path[i].length === 3) {\n                        poly.push(attr.path[i][1]);\n                        poly.push(attr.path[i][2]);\n                    }\n                }\n            }\n\n            return poly;\n        }\n    };\n\n    /**\n     * Graphic interaction helper\n     * @exports qtiCommonRenderer/helpers/Graphic\n     */\n    const GraphicHelper = {\n        /**\n         * Raw access to the styles\n         * @type {Object}\n         */\n        _style: gstyle,\n\n        /**\n         * Apply the style defined by name to the element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         */\n        setStyle: function(element, name) {\n            if (element && gstyle[name]) {\n                element.attr(gstyle[name]);\n            }\n        },\n\n        /**\n         * Create a Raphael paper with a bg image, that is width responsive\n         * @param {String} id - the id of the DOM element that will contain the paper\n         * @param {String} serial - the interaction unique indentifier\n         * @param {Object} options - the paper parameters\n         * @param {String} options.img - the url of the background image\n         * @param {jQueryElement} [options.container] - the parent of the paper element (got the closest parent by default)\n         * @param {Boolean} [options.responsive] - scale to container\n         * @param {Number} [options.width] - the paper width\n         * @param {Number} [options.height] - the paper height\n         * @param {String} [options.imgId] - an identifier for the image element\n         * @param {Function} [options.done] - executed once the image is loaded\n         * @returns {Raphael.Paper} the paper\n         */\n        responsivePaper: function(id, serial, options) {\n            const $container = options.container || $('#' + id).parent();\n            const $editor = $('.image-editor', $container);\n            const $body = $container.closest('.qti-itemBody');\n            const resizer = _.throttle(resizePaper, 10);\n\n            const imgWidth = options.width || $container.innerWidth();\n            const imgHeight = options.height || $container.innerHeight();\n\n\n            const paper = scaleRaphael(id, imgWidth, imgHeight);\n            const image = paper.image(options.img, 0, 0, imgWidth, imgHeight);\n            image.id = options.imgId || image.id;\n            paper.setViewBox(0, 0, imgWidth, imgHeight);\n\n            resizer();\n\n            //retry to resize once the SVG is loaded\n            $(image.node)\n                .attr('externalResourcesRequired', 'true')\n                .on('load', resizer);\n\n            if (raphael.type === 'SVG') {\n                // TODO: move listeners somewhere they can be easily turned off\n                $(window).on('resize.qti-widget.' + serial, resizer);\n                // TODO: favor window resize event and deprecate $container resive event (or don't allow $container to be destroyed and rebuilt\n                $container.on('resize.qti-widget.' + serial, resizer);\n                $(document).on('customcssloaded.styleeditor', resizer);\n            } else {\n                $container.find('.main-image-box').width(imgWidth);\n                if (typeof options.resize === 'function') {\n                    options.resize(imgWidth, 1);\n                }\n            }\n\n            /**\n             * scale the raphael paper\n             * @private\n             */\n            function resizePaper(e, givenWidth) {\n                let containerWidth;\n\n                if (e) {\n                    e.stopPropagation();\n                }\n\n                const diff = $editor.outerWidth() - $editor.width() + ($container.outerWidth() - $container.width()) + 1;\n                const maxWidth = $body.width();\n                if (options.responsive) {\n                    containerWidth = $container.innerWidth();\n                } else {\n                    containerWidth = $editor.innerWidth();\n                }\n\n                if (options.responsive && containerWidth > 0 || givenWidth > 0 || containerWidth > maxWidth) {\n                    if (options.responsive) {\n                        if (givenWidth < containerWidth && givenWidth < maxWidth) {\n                            containerWidth = givenWidth - diff;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth - diff;\n                        } else {\n                            containerWidth -= diff;\n                        }\n                    } else {\n                        if (givenWidth > 0 && givenWidth < maxWidth) {\n                            containerWidth = givenWidth;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth;\n                        }\n                    }\n\n                    const factor = containerWidth / imgWidth;\n                    const containerHeight = imgHeight * factor;\n\n                    if (containerWidth > 0) {\n                        paper.changeSize(containerWidth, containerHeight, false, false);\n                    }\n\n                    if (typeof options.resize === 'function') {\n                        options.resize(containerWidth, factor);\n                    }\n                }\n                $container.trigger('resized.qti-widget');\n            }\n\n            return paper;\n        },\n\n        /**\n         * Create a new Element into a raphael paper\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @param {Object} [options] - additional creation options\n         * @param {String} [options.id] - to set the new element id\n         * @param {String} [options.title] - to set the new element title\n         * @param {String} [options.style = basic] - to default style\n         * @param {Boolean} [options.hover = true] - to disable the default hover state\n         * @param {Boolean} [options.touchEffect = true] - a circle appears on touch\n         * @param {Boolean} [options.qtiCoords = true] - if the coords are in QTI format\n         * @returns {Raphael.Element} the created element\n         */\n        createElement: function(paper, type, coords, options) {\n            const self = this;\n            let element;\n            const shaper = shapeMap[type] ? paper[shapeMap[type]] : paper[type];\n            const shapeCoords = options.qtiCoords !== false ? self.raphaelCoords(paper, type, coords) : coords;\n\n            if (typeof shaper === 'function') {\n                element = shaper.apply(paper, shapeCoords);\n                if (element) {\n                    if (options.id) {\n                        element.id = options.id;\n                    }\n\n                    if (options.title) {\n                        element.attr('title', options.title);\n                    }\n\n                    element.attr(gstyle[options.style || 'basic']).toFront();\n\n                    //prevent issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n\n                    if (options.hover !== false) {\n                        element.hover(\n                            function() {\n                                if (!element.flashing) {\n                                    self.updateElementState(this, 'hover');\n                                }\n                            },\n                            function() {\n                                if (!element.flashing) {\n                                    self.updateElementState(\n                                        this,\n                                        this.active ? 'active' : this.selectable ? 'selectable' : 'basic'\n                                    );\n                                }\n                            }\n                        );\n                    }\n\n                    if (options.touchEffect !== false) {\n                        element.touchstart(function() {\n                            self.createTouchCircle(paper, element.getBBox());\n                        });\n                    }\n                }\n            } else {\n                throw new Error('Unable to find method ' + type + ' on paper');\n            }\n\n            return element;\n        },\n\n        /**\n         * Create target point\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} [options]\n         * @param {Object} [options.id] - and id to identify the target\n         * @param {Object} [options.point] - the point to add to the paper\n         * @param {Number} [options.point.x = 0] - point's x coord\n         * @param {Number} [options.point.y = 0] - point's y coord\n         * @param {Boolean} [options.hover] = true - the target has an hover effect\n         * @param {Function} [options.create] - call once created\n         * @param {Function} [options.remove] - call once removed\n         */\n        createTarget: function createTarget(paper, options) {\n            options = options || {};\n\n            const point = options.point || { x: 0, y: 0 };\n            const factor = paper.w !== 0 ? paper.width / paper.w : 1;\n            const hover = typeof options.hover === 'undefined' ? true : !!options.hover;\n\n            const baseSize = 18; // this is the base size of the path element to be placed on svg (i.e. the path element crosshair is created to have a size of 18)\n            const half = baseSize / 2;\n            const x = point.x - half;\n            const y = point.y - half;\n            const targetSize = factor !== 0 ? 2 / factor : 2;\n\n            //create the target from a path\n            const target = paper\n                .path(gstyle.target.path)\n                .transform('t' + x + ',' + y + 's' + targetSize)\n                .attr(gstyle.target)\n                .attr('title', _('Click again to remove'));\n\n            //generate an id if not set in options\n            if (options.id) {\n                target.id = options.id;\n            } else {\n                let count = 0;\n                paper.forEach(function(element) {\n                    if (element.data('target')) {\n                        count++;\n                    }\n                });\n                target.id = 'target-' + count;\n            }\n\n            const tBBox = target.getBBox();\n\n            //create an invisible rect over the target to ensure path selection\n            const layer = paper\n                .rect(tBBox.x, tBBox.y, tBBox.width, tBBox.height)\n                .attr(gstyle.layer)\n                .click(function() {\n                    const id = target.id;\n                    const p = this.data('point');\n\n                    if (_.isFunction(options.select)) {\n                        options.select(target, p, this);\n                    }\n\n                    if (_.isFunction(options.remove)) {\n                        this.remove();\n                        target.remove();\n                        options.remove(id, p);\n                    }\n                });\n\n            if (hover) {\n                layer.hover(\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-hover');\n                        }\n                    },\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-success');\n                        }\n                    }\n                );\n            }\n\n            layer.id = 'layer-' + target.id;\n            layer.data('point', point);\n            target.data('target', point);\n\n            if (_.isFunction(options.create)) {\n                options.create(target);\n            }\n\n            return target;\n        },\n\n        /**\n         * Get the Raphael coordinate from QTI coordinate\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @returns {Array} the arguments array of coordinate to give to the approriate raphael shapre creator\n         */\n        raphaelCoords: function raphaelCoords(paper, type, coords) {\n            let shapeCoords;\n\n            if (_.isString(coords)) {\n                coords = _.map(coords.split(','), function(coord) {\n                    return parseInt(coord, 10);\n                });\n            }\n\n            if (!_.isArray(coords) || coords.length < coordsValidator[type]) {\n                throw new Error('Invalid coords ' + JSON.stringify(coords) + '  for type ' + type);\n            }\n\n            switch (type) {\n                case 'rect':\n                    shapeCoords = qti2raphCoordsMapper.rect(coords);\n                    break;\n                case 'default':\n                    shapeCoords = qti2raphCoordsMapper['default'].call(null, paper);\n                    break;\n                case 'poly':\n                    shapeCoords = qti2raphCoordsMapper.poly(coords);\n                    break;\n                default:\n                    shapeCoords = coords;\n                    break;\n            }\n\n            return shapeCoords;\n        },\n\n        /**\n         * Get the QTI coordinates from a Raphael Element\n         * @param {Raphael.Element} element - the shape to get the coords from\n         * @param {Raphael.Element} paper - the interaction paper\n         * @param {number} width - width of background image\n         * @returns {String} the QTI coords\n         */\n        qtiCoords: function qtiCoords(element, paper, width) {\n            const mapper = raph2qtiCoordsMapper[element.type];\n            let result = '';\n            const factor = paper && width ? width / paper.w : 1;\n\n            if (_.isFunction(mapper)) {\n                result = _.map(mapper.call(raph2qtiCoordsMapper, element.attr()), function(coord) {\n                    return Math.round(coord * factor);\n                }).join(',');\n            }\n\n            return result;\n        },\n\n        /**\n         * Create a circle that animate and disapear from a shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} element - used to get the bbox from\n         */\n        createTouchCircle: function(paper, bbox) {\n            const radius = bbox.width > bbox.height ? bbox.width : bbox.height;\n            const tCircle = paper.circle(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2, radius);\n\n            tCircle.attr(gstyle['touch-circle']);\n\n            _.defer(function() {\n                tCircle.animate({ r: radius + 5, opacity: 0.7 }, 300, function() {\n                    tCircle.remove();\n                });\n            });\n        },\n\n        /**\n         * Create a text, that scales.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - the text options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {String} [options.disableEvents] - ignore events for the node\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @returns {Raphael.Element} the created text\n         */\n        createText: function(paper, options) {\n            const top = options.top || 0;\n            const left = options.left || 0;\n            const content = options.content || '';\n            const style = options.style || 'small-text';\n            const title = options.title || '';\n            const disableEvents = options.disableEvents || false;\n            let factor = 1;\n\n            if (paper.width && paper.w) {\n                factor = paper.width / paper.w;\n            }\n\n            const text = paper.text(left, top, content).toFront();\n            if (options.id) {\n                text.id = options.id;\n            }\n\n            if (options.hide) {\n                text.hide();\n            }\n\n            text.attr(gstyle[style]);\n\n            if(disableEvents) {\n                text.node.setAttribute('pointer-events', 'none');\n            }\n\n            if (typeof factor !== 'undefined' && factor !== 1) {\n                const fontSize = parseInt(text.attr('font-size'), 10);\n                const scaledFontSize = Math.floor(fontSize / factor) + 1;\n\n                text.attr('font-size', scaledFontSize);\n            }\n\n            if (title) {\n                this.updateTitle(text, title);\n            }\n\n            return text;\n        },\n\n        /**\n         * Create a text in the middle of the related shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} shape - the shape to add the text to\n         * @param {Object} options - the text options\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @param {Boolean} [options.shapeClick = false] - clicking the text delegates to the shape\n         * @returns {Raphael.Element} the created text\n         */\n        createShapeText: function(paper, shape, options) {\n            const bbox = shape.getBBox();\n\n            const text = this.createText(\n                paper,\n                _.merge(\n                    {\n                        left: bbox.x + bbox.width / 2,\n                        top: bbox.y + bbox.height / 2\n                    },\n                    options\n                )\n            );\n\n            if (options.shapeClick) {\n                text.click(() => {\n                    this.trigger(shape, 'click');\n                });\n            }\n\n            return text;\n        },\n\n        /**\n         * Create an image with a padding and a border, using a set.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - image options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {Number} options.width - image width\n         * @param {Number} options.height - image height\n         * @param {Number} options.url - image ulr\n         * @param {Number} [options.padding = 6] - a multiple of 2 is welcomed\n         * @param {Boolean} [options.border = false] - add a border around the image\n         * @param {Boolean} [options.shadow = false] - add a shadow back the image\n         * @returns {Raphael.Element} the created set, augmented of a move(x,y) method\n         */\n        createBorderedImage: function(paper, options) {\n            const padding = options.padding >= 0 ? options.padding : 6;\n            const halfPad = padding / 2;\n\n            const rx = options.left,\n                ry = options.top,\n                rw = options.width + padding,\n                rh = options.height + padding;\n\n            const ix = options.left + halfPad,\n                iy = options.top + halfPad,\n                iw = options.width,\n                ih = options.height;\n\n            const set = paper.set();\n\n            //create a rectangle with a padding and a border.\n            const rect = paper\n                .rect(rx, ry, rw, rh)\n                .attr(options.border ? gstyle['imageset-rect-stroke'] : gstyle['imageset-rect-no-stroke']);\n\n            //and an image centered into the rectangle.\n            const image = paper.image(options.url, ix, iy, iw, ih).attr(gstyle['imageset-img']);\n\n            if (options.shadow) {\n                set.push(\n                    rect.glow({\n                        width: 2,\n                        offsetx: 1,\n                        offsety: 1\n                    })\n                );\n            }\n\n            set.push(rect, image);\n\n            /**\n             * Add a move method to set that keep the given coords during an animation\n             * @private\n             * @param {Number} x - destination\n             * @param {Number} y - destination\n             * @param {Number} [duration = 400] - the animation duration\n             * @returns {Raphael.Element} the set for chaining\n             */\n            set.move = function move(x, y, duration) {\n                const animation = raphael.animation({ x: x, y: y }, duration || 400);\n                const elt = rect.animate(animation);\n                image.animateWith(elt, animation, { x: x + halfPad, y: y + halfPad }, duration || 400);\n                return set;\n            };\n\n            return set;\n        },\n\n        /**\n         * Update the visual state of an Element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         * @param {String} [title] - a title linked to this step\n         */\n        updateElementState: function(element, state, title) {\n            if (element && element.animate) {\n                element.animate(gstyle[state], 200, 'linear', function() {\n                    element.attr(gstyle[state]); //for attr that don't animate\n\n                    //preven issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n                });\n\n                if (title) {\n                    this.updateTitle(element, title);\n                }\n            }\n        },\n\n        /**\n         * Update the title of an element (the attr method of Raphael adds only new node instead of updating exisitings).\n         * @param {Raphael.Element} element - the element to update the title\n         * @param {String} [title] - the new title\n         */\n        updateTitle: function(element, title) {\n            if (element && element.node) {\n                //removes all remaining titles nodes\n                _.forEach(element.node.children, function(child) {\n                    if (child.nodeName.toLowerCase() === 'title') {\n                        element.node.removeChild(child);\n                    }\n                });\n\n                //then set the new title\n                element.attr('title', title);\n            }\n        },\n\n        /**\n         * Highlight an element with the error style\n         * @param {Raphael.Element} element - the element to hightlight\n         * @param {String} [restorState = 'basic'] - the state to restore the elt into after flash\n         */\n        highlightError: function(element, restoredState) {\n            if (element) {\n                element.flashing = true;\n                this.updateElementState(element, 'error');\n                _.delay(() => {\n                    this.updateElementState(element, restoredState || 'basic');\n                    element.flashing = false;\n                }, 800);\n            }\n        },\n\n        /**\n         * Trigger an event already bound to a raphael element\n         * @param {Raphael.Element} element\n         * @param {String} event - the event name\n         *\n         */\n        trigger: function(element, event) {\n            const evt = _.where(element.events, { name: event });\n            if (evt.length && evt[0] && typeof evt[0].f === 'function') {\n                evt[0].f.apply(element, Array.prototype.slice.call(arguments, 2));\n            }\n        },\n\n        /**\n         * Get an x/y point from a MouseEvent\n         * @param {MouseEvent} event - the source event\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {jQueryElement} $container - the paper container\n         * @param {Boolean} isResponsive - if the paper is scaling\n         * @returns {Object} x,y point\n         */\n        getPoint: function getPoint(event, paper, $container) {\n            const point = this.clickPoint($container, event);\n            const rect = $container.get(0).getBoundingClientRect();\n            const factor = paper.w / rect.width;\n\n            point.x = Math.round(point.x * factor);\n            point.y = Math.round(point.y * factor);\n\n            return point;\n        },\n\n        /**\n         * Get paper position relative to the container\n         * @param {jQueryElement} $container - the paper container\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @returns {Object} position with top and left\n         */\n        position: function($container, paper) {\n            const pw = parseInt(paper.w || paper.width, 10);\n            const cw = parseInt($container.width(), 10);\n            const ph = parseInt(paper.w || paper.width, 10);\n            const ch = parseInt($container.height(), 10);\n\n            return {\n                left: (cw - pw) / 2,\n                top: (ch - ph) / 2\n            };\n        },\n\n        /**\n         * Get a point from a click event\n         * @param {jQueryElement} $container - the element that contains the paper\n         * @param {MouseEvent} event - the event triggered by the click\n         * @returns {Object} the x,y point\n         */\n        clickPoint: function($container, event) {\n            let x, y;\n            const offset = $container.offset();\n\n            if (event.pageX || event.pageY) {\n                x = event.pageX - offset.left;\n                y = event.pageY - offset.top;\n            } else if (event.clientX || event.clientY) {\n                x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - offset.left;\n                y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop - offset.top;\n            }\n\n            return { x, y };\n        }\n    };\n\n    return GraphicHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',['lodash', 'taoQtiItem/qtiItem/helper/util', 'handlebars', 'lib/handlebars/helpers'], function (_, util, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"small feedback-info item-instruction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-info icon\\\"></span><span class=\\\"instruction-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n</div>\";\n      return buffer;\n      });\n    function instructionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var _notificationLevels = ['info', 'warning', 'error', 'success'];\n\n    var Instruction = function(interaction, message, callback) {\n        this.interaction = interaction;\n        this.defaultMessage = message || '';\n        this.currentMessage = '';\n        this.level = 'info';\n        this.serial = util.buildSerial('instruction_');\n        this.callback = callback;\n        this.$dom = null;\n        this.state = false;\n    };\n\n    Instruction.isValidLevel = function(level) {\n        return _.indexOf(_notificationLevels, level) >= 0;\n    };\n\n    Instruction.prototype.setState = function(state) {\n        this.state = state;\n    };\n\n    Instruction.prototype.checkState = function(state) {\n        return this.state === state;\n    };\n\n    Instruction.prototype.getId = function() {\n        return this.serial;\n    };\n\n    Instruction.prototype.create = function($container) {\n        $container.append(\n            instructionTpl({\n                message: this.defaultMessage,\n                serial: this.serial\n            })\n        );\n\n        this.$dom = $container.find('#' + this.serial);\n    };\n\n    Instruction.prototype.update = function(options) {\n        var level = options && options.level ? options.level : '',\n            message = options && options.message ? options.message : '',\n            timeout = options && options.timeout ? options.timeout : 0,\n            start = options && typeof options.start === 'function' ? options.start : null,\n            stop = options && typeof options.stop === 'function' ? options.stop : null;\n\n        if (level && Instruction.isValidLevel(level)) {\n            this.$dom.removeClass('feedback-' + this.level).addClass('feedback-' + level);\n            this.$dom\n                .find('.icon')\n                .removeClass('icon-' + this.level)\n                .addClass('icon-' + level);\n            this.level = level;\n        }\n\n        if (message) {\n            this.$dom.find('.instruction-message').html(message);\n            this.currentMessage = message;\n        }\n\n        if (timeout) {\n            var _this = this;\n            if (start) {\n                start.call(_this);\n            }\n            _this.timer = setTimeout(function() {\n                if (stop) {\n                    stop.call(_this);\n                }\n                _this.timer = null;\n            }, timeout);\n        }\n    };\n\n    Instruction.prototype.setLevel = function(level, timeout) {\n        var options = {\n            level: level\n        };\n\n        if (timeout) {\n            options.timeout = parseInt(timeout);\n            options.stop = function() {\n                this.setLevel('info');\n            };\n        }\n\n        this.update(options);\n    };\n\n    Instruction.prototype.getLevel = function() {\n        return this.level;\n    };\n\n    Instruction.prototype.setMessage = function(message, timeout) {\n        this.update({ message: message, timeout: timeout });\n    };\n\n    Instruction.prototype.reset = function() {\n        this.update({ level: 'info', message: this.defaultMessage });\n        this.state = false;\n    };\n\n    Instruction.prototype.validate = function(data) {\n        if (typeof this.callback === 'function') {\n            this.callback.call(this, data);\n        }\n    };\n\n    return Instruction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',['lodash', 'jquery', 'i18n', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction', 'handlebars', 'lib/handlebars/helpers'], function (_, $$1, __, containerHelper, Instruction, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Instruction = Instruction && Object.prototype.hasOwnProperty.call(Instruction, 'default') ? Instruction['default'] : Instruction;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"small feedback-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" item-notification\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span><span class=\\\"feedback-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n    <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n        + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\n</div>\\n\";\n      return buffer;\n      });\n    function notifTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //stores the instructions\n    var _instructions = {};\n\n    /**\n     * The instruction manager helps you in managing instructions and\n     * constraints on a QTI Element, usually an interaction or a choice.\n     *\n     * @exports qtiCommonRenderer/helpers/Instructions/instructionManager\n     */\n    var instructionManager = {\n        /**\n         * Validate the instructions of an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {Object} [data] - any data to give to the instructions\n         */\n        validateInstructions: function(element, data) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.each(_instructions[serial], function(instruction) {\n                    instruction.validate(data || {});\n                });\n            }\n        },\n\n        /**\n         * Add a new instructions to an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display to the user when the instruction is validated\n         * @param {Function} validateCallback - how to validate the instruction\n         * @returns {Instruction} the created instruction\n         */\n        appendInstruction: function(element, message, validateCallback) {\n            var serial = element.getSerial(),\n                instruction = new Instruction(element, message, validateCallback);\n\n            if (!_instructions[serial]) {\n                _instructions[serial] = {};\n            }\n            _instructions[serial][instruction.getId()] = instruction;\n\n            instruction.create($$1('.instruction-container', containerHelper.get(element)));\n\n            return instruction;\n        },\n\n        /**\n         * Remove instructions from an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         */\n        removeInstructions: function(element) {\n            _instructions[element.getSerial()] = {};\n            containerHelper\n                .get(element)\n                .find('.instruction-container')\n                .empty();\n        },\n\n        /**\n         * Reset the instructions states for an element (but keeps configuration)\n         * @param {Object} element - the qti object, ie. interaction, choice, etc.\n         */\n        resetInstructions: function(element) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.each(_instructions[serial], function(instruction) {\n                    instruction.reset();\n                });\n            }\n        },\n\n        /**\n         * Default instuction set with a min/max constraints.\n         * @param {Object} interaction\n         * @param {jQueryElement} $container\n         * @param {Object} options\n         * @param {Number} [options.min = 0] -\n         * @param {Number} [options.max = 0] -\n         * @param {Function} options.getResponse - a ref to a function that get the raw response (array) from the interaction in parameter\n         * @param {Function} [options.onError] - called by once an error occurs with validateInstruction data in parameters\n         */\n        minMaxChoiceInstructions: function(interaction, options) {\n            var self = this,\n                min = options.min || 0,\n                max = options.max || 0,\n                getResponse = options.getResponse,\n                onError = options.onError || _.noop(),\n                choiceCount = options.choiceCount === false ? false : _.size(interaction.getChoices()),\n                minInstructionSet = false,\n                msg;\n\n            if (!_.isFunction(getResponse)) {\n                throw 'invalid parameter getResponse';\n            }\n\n            //if maxChoice = 0, inifinite choice possible\n            if (max > 0 && (choiceCount === false || max < choiceCount)) {\n                if (max === min) {\n                    minInstructionSet = true;\n                    msg =\n                        max <= 1\n                            ? __('You must select exactly %d choice', max)\n                            : __('You must select exactly %d choices', max);\n\n                    self.appendInstruction(interaction, msg, function(data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    message: __('Maximum choices reached'),\n                                    timeout: 2000,\n                                    start: function() {\n                                        onError(data);\n                                    },\n                                    stop: function() {\n                                        this.update({ level: 'success', message: msg });\n                                    }\n                                });\n                            }\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                } else if (max > min) {\n                    msg =\n                        max <= 1\n                            ? __('You can select maximum %d choice', max)\n                            : __('You can select maximum %d choices', max);\n                    self.appendInstruction(interaction, msg, function(data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            this.setMessage(__('Maximum choices reached'));\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    timeout: 2000,\n                                    start: function() {\n                                        onError(data);\n                                    },\n                                    stop: function() {\n                                        this.setLevel('info');\n                                    }\n                                });\n                            }\n\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                }\n            }\n\n            if (!minInstructionSet && min > 0 && (choiceCount === false || min < choiceCount)) {\n                msg =\n                    min <= 1\n                        ? __('You must select at least %d choice', min)\n                        : __('You must select at least %d choices', min);\n                self.appendInstruction(interaction, msg, function() {\n                    if (getResponse(interaction).length >= min) {\n                        this.setLevel('success');\n                    } else {\n                        this.reset();\n                    }\n                });\n            }\n        },\n\n        /**\n         * Appends a instruction  notification message\n         * @deprecated in favor of instructions\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display\n         * @param {String} [level = 'info'] - the notification level in info, success, error or warning\n         */\n        appendNotification: function(element, message, level) {\n            level = level || 'info';\n\n            if (Instruction.isValidLevel(level)) {\n                var $container = containerHelper.get(element);\n\n                $container.find('.notification-container').prepend(\n                    notifTpl({\n                        level: level,\n                        message: message\n                    })\n                );\n\n                var $notif = $container.find('.item-notification:first');\n                var _remove = function() {\n                    $notif.fadeOut();\n                };\n\n                $notif.find('.close-trigger').on('click', _remove);\n                setTimeout(_remove, 2000);\n\n                return $notif;\n            }\n        },\n\n        /**\n         * Removes all the displayed notifications\n         * @deprecated in favor of instructions\n         */\n        removeNotifications: function(element) {\n            containerHelper\n                .get(element)\n                .find('.item-notification')\n                .remove();\n        }\n    };\n\n    return instructionManager;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    //throttle events because of the loop\n    var informLoaded = _.throttle(\n        function() {\n            $(document).trigger('customcssloaded.styleeditor',[{}]);\n        },\n        10,\n        { leading: false }\n    );\n\n    /**\n     * Attach QTI Stylesheets to the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     * @fires customcssloaded.styleeditor on document 10ms after stylesheets are loaded\n     */\n    var attach = function attach(stylesheets) {\n        var $head = $('head');\n\n        //fallback\n        if (!$head.length) {\n            $head = $('body');\n        }\n\n        // relative links with cache buster\n        _(stylesheets).forEach(function(stylesheet) {\n            var $link, href;\n\n            //if the href is something\n            if (stylesheet.attr('href')) {\n                $link = $(stylesheet.render());\n\n                //get the resolved href once rendererd\n                href = $link.attr('href');\n\n                //we need to set the href after the link is appended to the head (for our dear IE)\n                $link.removeAttr('href').attr('href', href);\n\n                if (stylesheet.attr('onload')) {\n                    $link[0].onload = stylesheet.attr('onload');\n                }\n\n                if (stylesheet.attr('onerror')) {\n                    $link[0].onerror = stylesheet.attr('onerror');\n                }\n\n                $link.one('load', informLoaded).appendTo($head);\n            }\n        });\n    };\n\n    /**\n     * Remove QTI Stylesheets from the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     */\n    var detach = function detach(stylesheets) {\n        _(stylesheets).forEach(function(stylesheet) {\n            if (stylesheet.serial) {\n                $('link[data-serial=\"' + stylesheet.serial + '\"]').remove();\n            }\n        });\n    };\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler\n     */\n    var itemStylesheetHandler = {\n        attach: attach,\n        detach: detach\n    };\n\n    return itemStylesheetHandler;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/patternMask',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var regexChar = /\\^\\[\\\\s\\\\S\\]\\{\\d+\\,(\\d+)\\}\\$/,\n        regexWords = /\\^\\(\\?\\:\\(\\?\\:\\[\\^\\\\s\\\\:\\\\!\\\\\\?\\\\\\;\\\\\\…\\\\\\€\\]\\+\\)\\[\\\\s\\\\:\\\\!\\\\\\?\\\\;\\\\\\…\\\\\\€\\]\\*\\)\\{\\d+\\,(\\d+)\\}\\$/;\n\n    var patternMaskHelper = {\n        /**\n         * Parse the pattern string and according to the given type, try to extract the associate number\n         *\n         * @param {String} pattern - the pattern string to be parsed\n         * @param {String} type - words or chars\n         * @returns {*}\n         */\n        parsePattern: function parsePattern(pattern, type) {\n            if (pattern === undefined || pattern === null) {\n                return null;\n            }\n            if (type === 'words') {\n                //expre = /^(?:(?:[^\\s\\:\\!\\?\\;\\…\\€]+)[\\s\\:\\!\\?\\;\\…\\€]*){0,3}$/;\n                var result = pattern.match(regexWords);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else if (type === 'chars') {\n                // This is the original regExp generated by our code\n                // expre = /^[\\s\\S]{0,10}$/;\n                // and we will try to extract the top limit from it with this regexp\n                // which is mostly just escaped version of the first one.\n                var result = pattern.match(regexChar);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        },\n        /**\n         * Reverse function of parsePattern for word type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxWordPattern: function createMaxWordPattern(max) {\n            return '^(?:(?:[^\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]+)[\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]*){0,' + max.toString() + '}$';\n        },\n        /**\n         * Reverse function of parsePattern for char type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxCharPattern: function createMaxCharPattern(max) {\n            return '^[\\\\s\\\\S]{0,' + max.toString() + '}$';\n        }\n    };\n\n    return patternMaskHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _formatters = {\n        boolean: function(value) {\n            return value ? 'true' : 'false';\n        },\n        integer: function(value) {\n            return value;\n        },\n        float: function(value) {\n            return value;\n        },\n        string: function(value) {\n            return value === '' ? 'NULL' : '\"' + value + '\"';\n        },\n        point: function(value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        pair: function(value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        directedPair: function(value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        duration: function(value) {\n            return value;\n        },\n        file: function(value) {\n            return 'binary data';\n        },\n        uri: function(value) {\n            return value;\n        },\n        intOrIdentifier: function(value) {\n            return value;\n        },\n        identifier: function(value) {\n            return value;\n        }\n    };\n\n    /**\n     * Return the pretty print string for a qti base variable\n     *\n     * @param {type} value\n     * @param {type} withType - the qti baseType\n     * @returns {String}\n     */\n    function printBase(value, withType) {\n        var print = '',\n            base = value.base;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (base) {\n            _.forIn(_formatters, function(formatter, baseType) {\n                if (base[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n                    print += formatter(base[baseType]);\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti list variable\n     *\n     * @param {object} value\n     * @param {string} withType - the qti basetype of the list\n     * @returns {string}\n     */\n    function printList(value, withType) {\n        var print = '',\n            list = value.list;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (list) {\n            _.forIn(_formatters, function(formatter, baseType) {\n                if (list[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n\n                    print += '[';\n\n                    _.each(list[baseType], function(value) {\n                        print += formatter(value) + ', ';\n                    });\n\n                    if (_.size(list[baseType])) {\n                        print = print.substring(0, print.length - 2);\n                    }\n\n                    print += ']';\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti record variable\n     *\n     * @param {object} value\n     * @returns {String}\n     */\n    function printRecord(value) {\n        if (value && value.record) {\n            return '(record) ' + JSON.stringify(value.record);\n        }\n        return '';\n    }\n\n    var PciPrettyPrint = {\n        printBase: printBase,\n        printList: printList,\n        printRecord: printRecord\n    };\n\n    return PciPrettyPrint;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciResponse',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint'], function (_, pciPrettyPrint) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pciPrettyPrint = pciPrettyPrint && Object.prototype.hasOwnProperty.call(pciPrettyPrint, 'default') ? pciPrettyPrint['default'] : pciPrettyPrint;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _qtiModelPciResponseCardinalities = {\n        single: 'base',\n        multiple: 'list',\n        ordered: 'list',\n        record: 'record'\n    };\n\n    var PciResponse = {\n        /**\n         * Parse a response variable formatted according to IMS PCI: http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * @see serialize\n         * @param {Object} response\n         * @param {Object} interaction\n         * @returns {Array}\n         */\n        unserialize: function(response, interaction) {\n            var ret = [],\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                var responseValues = response[mappedCardinality];\n\n                if (responseValues === null) {\n                    ret = [];\n                } else if (_.isObject(responseValues)) {\n                    if (responseValues[baseType] !== undefined) {\n                        ret = responseValues[baseType];\n                        ret = _.isArray(ret) ? ret : [ret];\n                    } else {\n                        throw 'invalid response baseType';\n                    }\n                } else {\n                    throw 'invalid response cardinality, expected ' + cardinality + ' (' + mappedCardinality + ')';\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return ret;\n        },\n        /**\n         * Serialize the input response array into the format to be send to result server according to IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * With the only exception for empty response, which is represented by a javascript \"null\" value\n         *\n         * @see http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * @param {Array} responseValues\n         * @param {Object} interaction\n         * @returns {Object|null}\n         */\n        serialize: function(responseValues, interaction) {\n            if (!_.isArray(responseValues)) {\n                throw 'invalid argument : responseValues must be an Array';\n            }\n\n            var response = {},\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            responseValues = _.map(responseValues || [], function(v) {\n                return baseType === 'boolean' ? v === true || v === 'true' : v;\n            });\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                if (mappedCardinality === 'base') {\n                    if (responseValues.length === 0) {\n                        //return empty response:\n                        response.base = null;\n                    } else {\n                        response.base = {};\n                        response.base[baseType] = responseValues[0];\n                    }\n                } else {\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = responseValues;\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return response;\n        },\n        isEmpty: function(response) {\n            return (\n                response === null ||\n                _.isEmpty(response) ||\n                response.base === null ||\n                (_.isArray(response.list) && _.isEmpty(response.list)) ||\n                (_.isArray(response.record) && _.isEmpty(response.record))\n            );\n        },\n\n        /**\n         * Print a PCI JSON response into a human-readable string.\n         *\n         * @param {Object} response A response in PCI JSON representation.\n         * @returns {String} A human-readable version of the PCI JSON representation.\n         */\n        prettyPrint: function(response) {\n            var print = '';\n\n            if (typeof response.base !== 'undefined') {\n                // -- BaseType.\n                print += pciPrettyPrint.printBase(response, true);\n            } else if (typeof response.list !== 'undefined') {\n                // -- ListType\n                print += pciPrettyPrint.printList(response, true);\n            } else if (typeof response.record !== 'undefined') {\n                // -- RecordType\n                print += pciPrettyPrint.printRecord(response, true);\n            } else {\n                throw 'Not a valid PCI JSON Response';\n            }\n\n            return print;\n        }\n    };\n\n    return PciResponse;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PortableElement',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Portable element helper\n     */\n\n    var imgSrcPattern = /(<img[^>]*\\ssrc=[\"'])([^\"']+)([\"'])/gi;\n\n    /**\n     * Replace all identified relative media urls by the absolute one.\n     * For now only images are supported.\n     *\n     * @param {String} html - the html to parse\n     * @param {Object} the renderer\n     * @returns {String} the html without updated URLs\n     */\n    function fixMarkupMediaSources(html, renderer) {\n        html = html || '';\n\n        return html.replace(imgSrcPattern, function(substr, $1, $2, $3) {\n            var resolved = renderer.resolveUrl($2) || $2;\n            return $1 + resolved + $3;\n        });\n    }\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/PortableElement\n     */\n    var PortableElement = {\n        fixMarkupMediaSources: fixMarkupMediaSources\n    };\n\n    return PortableElement;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',['jquery', 'util/adaptSize', 'ui/waitForMedia'], function ($, adaptSize, waitForMedia) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    const itemSelector = '.add-option, .result-area .target, .choice-area .qti-choice';\n\n    var sizeAdapter = {\n        /**\n         * Resize jQueryElement that have changed their dimensions due to a change of the content\n         *\n         * @param {jQueryElement|widget} target\n         */\n        adaptSize(target) {\n            let $elements;\n            let $container;\n\n            switch (true) {\n                // widget\n                case typeof target.$container !== 'undefined':\n                    $elements = target.$container.find(itemSelector);\n                    $container = target.$container;\n                    break;\n\n                // jquery elements\n                default:\n                    $elements = target;\n                    $container = $($elements).first().parent();\n            }\n\n            $container.waitForMedia(function () {\n                // Occasionally in caching scenarios, after waitForMedia(), image.height is reporting its naturalHeight instead of its CSS height\n                // The timeout allows adaptSize.height() to work with the true rendered heights of elements, instead of naturalHeights\n                setTimeout(() => {\n                    adaptSize.height($elements);\n\n                    // detect any CSS load, and adapt heights again after\n                    document.addEventListener(\n                        'load',\n                        e => {\n                            if (e.target && e.target.rel === 'stylesheet') {\n                                adaptSize.height($elements);\n                            }\n                        },\n                        true\n                    );\n                }, 1);\n            });\n        },\n\n        /**\n         * Reset height to jQueryElement(s) to auto\n         *\n         * @param {jQueryElement|widget} target\n         */\n        resetSize(target) {\n            adaptSize.resetHeight(target.$container.find(itemSelector));\n        }\n    };\n\n    return sizeAdapter;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/uploadMime',['lodash', 'i18n', 'core/mimetype/definitions'], function (_, __, mimeTypes) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimeTypes = mimeTypes && Object.prototype.hasOwnProperty.call(mimeTypes, 'default') ? mimeTypes['default'] : mimeTypes;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-21 (original work) Open Assessment Technologies SA ;\n     */\n\n    const delimetr = ' ';\n\n    const uploadMime = {\n        /**\n         * Fetch mime type definitions\n         * (translation function for labels must be injected from here)\n         * @returns {Array}\n         */\n        getMimeTypes: function getMimeTypes() {\n            return mimeTypes.getList(__);\n        },\n\n        /**\n         * Set the expected types in the format according to the number of types\n         *\n         * @param {Object} interaction\n         * @param {Array} types\n         */\n        setExpectedTypes: function setExpectedTypes(interaction, types) {\n            let classes = interaction.attr('class') || '';\n            classes = classes.replace(/x-tao-upload-type-[-_a-zA-Z+.0-9]*/g, '').trim();\n            interaction.attr('class', classes);\n            interaction.removeAttr('type');\n\n            if (!types) {\n                return;\n            }\n\n            if (types.length === 1) {\n                //if there is only one value set into the qti standard type attribute\n                if (types[0] !== 'any/kind') {\n                    interaction.attr('type', types[0]);\n                }\n            } else {\n                //For backward compatibility:\n                //if there is more than one value, set into into TAO specific css classes\n                interaction.attr(\n                    'class',\n                    _.reduce(\n                        types,\n                        function (acc, selectedType) {\n                            return acc + ' x-tao-upload-type-' + selectedType.replace('/', '_');\n                        },\n                        classes\n                    ).trim()\n                );\n\n                interaction.attr('type', types.join(delimetr));\n            }\n        },\n\n        /**\n         * Return the array of authorized mime types\n         * Get the standard \"type\" attribute value with mime types separated by space.\n         * @param {Object} interaction - standard QTI interaction model object\n         * @param {Boolean} [includeEquivalents] - enable including all recognized as equivalent types\n         * @returns {Array}\n         */\n        getExpectedTypes: function getExpectedTypes(interaction, includeEquivalents) {\n            let equivalents = [];\n            let types = [];\n            let mimes;\n\n            if (interaction.attr('type')) {\n                types = interaction.attr('type').split(delimetr);\n            }\n\n            // add in equivalent mimetypes to the list of expected types\n            if (includeEquivalents === true) {\n                mimes = uploadMime.getMimeTypes();\n                _.forEach(types, function (mime) {\n                    const mimeData = _.find(mimes, { mime: mime });\n                    if (mimeData && _.isArray(mimeData.equivalent)) {\n                        equivalents = _.union(equivalents, mimeData.equivalent);\n                    }\n                });\n            }\n\n            return _.union(types, equivalents);\n        }\n    };\n\n    return uploadMime;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-gap\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"gapmatch-content\\\">&nbsp;</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Gap = {\n        qtiClass: 'gap',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Gap;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objetLabel)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-gapImg selectable\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <img src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.data)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n         width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objectLabel), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapImg = {\n        qtiClass: 'gapImg',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapImg;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapText = {\n        qtiClass: 'gapText',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapText;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-hottext hottext\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <label class=\\\"hottext-checkmark\\\">\\r\\n        <input type=\\\"checkbox\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n        <span class=\\\"icon-checkbox small\\\"></span>\\r\\n    </label>\\r\\n    <span class=\\\"hottext-content\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Hottext = {\n        qtiClass: 'hottext',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span role=\\\"option\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoice = {\n        qtiClass: 'inlineChoice',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return InlineChoice;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_AssociateInteraction = {\n        qtiClass: 'simpleAssociableChoice.associateInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<th class=\\\"qti-choice qti-associableChoice qti-simpleAssociableChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</th>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_MatchInteraction = {\n        qtiClass: 'simpleAssociableChoice.matchInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'services/features'], function (Handlebars, Helpers0, containerHelper, features) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"radio\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-radio\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-checkbox\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <label data-eliminable=\\\"container\\\" data-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Eliminate\", options) : helperMissing.call(depth0, \"__\", \"Eliminate\", options)))\n        + \"\\\">\\n        <span data-eliminable=\\\"trigger\\\" class=\\\"icon-checkbox\\\"></span>\\n    </label>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-simpleChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"pseudo-label-box\\\">\\n        <label class=\\\"real-label\\\">\\n            \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.unique), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </label>\\n        <div class=\\\"label-box\\\">\\n            <div class=\\\"label-content clear\\\" contenteditable=\\\"false\\\" id=\\\"choice-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n                \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                <svg class=\\\"overlay-answer-eliminator\\\">\\n                    <line x1=\\\"0\\\" y1=\\\"100%\\\" x2=\\\"100%\\\" y2=\\\"0\\\"/>\\n                    <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"/>\\n                </svg>\\n            </div>\\n        </div>\\n    </div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowElimination), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_ChoiceInteraction = {\n        qtiClass: 'simpleChoice.choiceInteraction',\n        getContainer: containerHelper.get,\n        getData: function(choice, data) {\n            data.unique = parseInt(data.interaction.attributes.maxChoices) === 1;\n            data.allowElimination = features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination');\n            return data;\n        },\n        template: tpl\n    };\n\n    return SimpleChoice_ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_OrderInteraction = {\n        qtiClass: 'simpleChoice.orderInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleChoice_OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    /**\n     * Evaluate if the given object is a proper portable element provider\n     * @param {Object} provider\n     * @returns {Boolean}\n     */\n    var isPortableElementProvider = function isPortableElementProvider(provider){\n        return (provider && _.isFunction(provider.load));\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        /**\n         * The portable element registry instance\n         * @typedef {portableElementRegistry}\n         */\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n\n            /**\n             * Get a register portable element\n             * @param {String} typeIdentifier\n             * @param {String} version\n             * @returns {Object}\n             */\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], {version : version});\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n\n            /**\n             * Register a portable element provider\n             * @param moduleName\n             * @param {String|Object }provider - the portable provider object or module name\n             * @returns {portableElementRegistry}\n             */\n            registerProvider : function registerProvider(moduleName, provider){\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Clear all previously registered providers\n             * @returns {portableElementRegistry}\n             */\n            resetProviders : function resetProviders(){\n                __providers = {};\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Load the providers\n             * @param {Object} [options]\n             * @param {Boolean} [options.reload] - force to reload the registered providers\n             * @returns {Promise}\n             */\n            loadProviders : function loadProviders(options){\n                var self = this;\n                var loadPromise;\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve([]);\n                } else {\n                    loadPromise = new Promise(function(resolve, reject) {\n                        var providerLoadingStack = [];\n                        _.forIn(__providers, function(provider, id){\n                            if(provider === null){\n                                providerLoadingStack.push(id);\n                            }\n                        });\n                        _requirejs(providerLoadingStack, function(){\n                            _.each([].slice.call(arguments), function(provider){\n                                if(isPortableElementProvider(provider)){\n                                    __providers[providerLoadingStack.shift()] = provider;\n                                }\n                            });\n                            resolve(__providers);\n                            _loaded = true;\n                            self.trigger('providersloaded', __providers);\n                        }, reject);\n                    });\n                }\n\n                return loadPromise;\n            },\n\n            /**\n             * Get all versions of all portable elements registered\n             * @returns {Object} - all portable elements and their versions\n             */\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n\n            /**\n             * Get the runtime for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the runtime model\n             */\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    return _.assign(portableElement.runtime, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        model : portableElement.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Get the creator model for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the creator model\n             */\n            getCreator : function getCreator(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement && portableElement.creator){\n                    return _.assign(portableElement.creator, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        response : portableElement.response,\n                        model : portableElement.model,\n                        xmlns : portableElement.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Returned all enabled created from the registry\n             * @returns {Object} the collection of creators\n             */\n            getLatestCreators : function getLatestCreators(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    var lastVersion = _.last(versions);\n\n                    //check if the portable element is creatable:\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\n                        all[id] = lastVersion;\n                    }\n                });\n                return all;\n            },\n\n            /**\n             * Get the baseUrl for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {String} the base url\n             */\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n\n            /**\n             * Load the runtimes from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                    loadPromise = self.loadProviders(options).then(function(providers){\n\n                        var loadStack = [];\n\n                        _.forEach(providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, self._registry || {});//incremental loading\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                        return true;\n                                    }\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n                                });\n                            });\n\n                    });\n\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * Load the creators from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\n                            if(portableElementModel.enabled){\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }else{\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.each(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var portableElementModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * enable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            enable: function enable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = true;\n                }\n                return this;\n            },\n\n            /**\n             * disable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            disable: function disable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = false;\n                }\n                return this;\n            },\n\n            /**\n             * check is a portable element is enabled\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                return (portableElement && portableElement.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Utility to retrieve and manipualte QTI Elements\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\n    'use strict';\n\n    const QtiElements = {\n        classes: {\n            //abstract classes:\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\n            atomicBlock: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            atomicInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\n            simpleInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            flowStatic: { parents: ['flow'], abstract: true },\n            blockStatic: { parents: ['block'], abstract: true },\n            inlineStatic: { parents: ['inline'], abstract: true },\n            flow: { parents: ['objectFlow'], abstract: true },\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\n            //html-derived qti elements:\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\n            col: { parents: ['bodyElement'], xhtml: true },\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\n            param: { parents: ['objectFlow'], xhtml: true },\n            table: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\n                xhtml: true\n            },\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            td: { parents: ['tableCell'], xhtml: true },\n            th: { parents: ['tableCell'], xhtml: true },\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\n            a: { parents: ['simpleInline'], xhtml: true },\n            abbr: { parents: ['simpleInline'], xhtml: true },\n            acronym: { parents: ['simpleInline'], xhtml: true },\n            b: { parents: ['simpleInline'], xhtml: true },\n            big: { parents: ['simpleInline'], xhtml: true },\n            cite: { parents: ['simpleInline'], xhtml: true },\n            code: { parents: ['simpleInline'], xhtml: true },\n            dfn: { parents: ['simpleInline'], xhtml: true },\n            em: { parents: ['simpleInline'], xhtml: true },\n            i: { parents: ['simpleInline'], xhtml: true },\n            kbd: { parents: ['simpleInline'], xhtml: true },\n            q: { parents: ['simpleInline'], xhtml: true },\n            samp: { parents: ['simpleInline'], xhtml: true },\n            small: { parents: ['simpleInline'], xhtml: true },\n            span: { parents: ['simpleInline'], xhtml: true },\n            strong: { parents: ['simpleInline'], xhtml: true },\n            sub: { parents: ['simpleInline'], xhtml: true },\n            sup: { parents: ['simpleInline'], xhtml: true },\n            tt: { parents: ['simpleInline'], xhtml: true },\n            var: { parents: ['simpleInline'], xhtml: true },\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\n            address: { parents: ['atomicBlock'], xhtml: true },\n            h1: { parents: ['atomicBlock'], xhtml: true },\n            h2: { parents: ['atomicBlock'], xhtml: true },\n            h3: { parents: ['atomicBlock'], xhtml: true },\n            h4: { parents: ['atomicBlock'], xhtml: true },\n            h5: { parents: ['atomicBlock'], xhtml: true },\n            h6: { parents: ['atomicBlock'], xhtml: true },\n            p: { parents: ['atomicBlock'], xhtml: true },\n            pre: { parents: ['atomicBlock'], xhtml: true },\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\n            br: { parents: ['atomicInline'], xhtml: true },\n            //qti elements:\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\n            gap: { parents: ['inlineStatic'], qti: true },\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\n            templateElement: { parents: ['bodyElement'], qti: true },\n            templateBlock: {\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\n                contains: ['blockStatic'],\n                qti: true\n            },\n            templateInline: {\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\n                contains: ['inlineStatic'],\n                qti: true\n            },\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\n        },\n\n        cache: { containable: {}, children: {}, parents: {} },\n\n        getAllowedContainersElements(qtiClass, $container) {\n            const classes = QtiElements.getAllowedContainers(qtiClass);\n            let jqSelector = '';\n            for (let i in classes) {\n                if (!classes[i].qti) {\n                    //html element:\n                    jqSelector += `${classes[i]}, `;\n                }\n            }\n\n            if (jqSelector) {\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n            }\n\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n        },\n\n        getAllowedContainers(qtiClass) {\n            let ret;\n            if (QtiElements.cache.containable[qtiClass]) {\n                ret = QtiElements.cache.containable[qtiClass];\n            } else {\n                ret = [];\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (model.contains) {\n                        const intersect = _.intersection(model.contains, parents);\n                        if (intersect.length) {\n                            if (!model.abstract) {\n                                ret.push(aClass);\n                            }\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                        }\n                    }\n                }\n                QtiElements.cache.containable[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getAllowedContents(qtiClass, recursive, checked) {\n            let ret = [];\n            checked = checked || {};\n\n            const model = QtiElements.classes[qtiClass];\n            if (model && model.contains) {\n                for (let i in model.contains) {\n                    const contain = model.contains[i];\n                    if (!checked[contain]) {\n                        checked[contain] = true;\n\n                        //qtiClass can contain everything defined as its contents\n                        ret.push(contain);\n\n                        //qtiClass can also contain subclass of its contents\n                        const children = QtiElements.getChildClasses(contain, true);\n                        for (let j in children) {\n                            const child = children[j];\n                            if (!checked[child]) {\n                                checked[child] = true;\n\n                                ret.push(child);\n\n                                //adding children allowed contents depends on the option \"recursive\"\n                                if (recursive) {\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                                }\n                            }\n                        }\n\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                        }\n                    }\n                }\n            }\n\n            //qtiClass can contain all allowed contents of its parents:\n            const parents = QtiElements.getParentClasses(qtiClass, true);\n            for (let i in parents) {\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n            }\n\n            return _.uniq(ret, false);\n        },\n\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\n        },\n\n        getParentClasses(qtiClass, recursive) {\n            let ret;\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\n                ret = QtiElements.cache.parents[qtiClass];\n            } else {\n                ret = [];\n                if (QtiElements.classes[qtiClass]) {\n                    ret = QtiElements.classes[qtiClass].parents;\n                    if (recursive) {\n                        for (let i in ret) {\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                        }\n                        ret = _.uniq(ret, false);\n                    }\n                }\n                QtiElements.cache.parents[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getChildClasses(qtiClass, recursive, type) {\n            let ret;\n            const cacheType = type ? type : 'all';\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\n                ret = QtiElements.cache.children[qtiClass][cacheType];\n            } else {\n                ret = [];\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\n                        if (type) {\n                            if (model[type]) {\n                                ret.push(aClass);\n                            }\n                        } else {\n                            ret.push(aClass);\n                        }\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                        }\n                    }\n                }\n                if (!QtiElements.cache.children[qtiClass]) {\n                    QtiElements.cache.children[qtiClass] = {};\n                }\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\n            }\n\n            return ret;\n        },\n\n        isBlock(qtiClass) {\n            return QtiElements.is(qtiClass, 'block');\n        },\n\n        isInline(qtiClass) {\n            return QtiElements.is(qtiClass, 'inline');\n        },\n\n        is(qtiClass, topClass) {\n            if (qtiClass === topClass) {\n                return true;\n            } else {\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                return _.indexOf(parents, topClass) >= 0;\n            }\n        },\n\n        /**\n         * Check wether an element is visible, using the feature viibility service\n         * @param {string} qtiClass - see the list of available classes\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\n         */\n        isVisible(qtiClass) {\n            if (this.is(qtiClass, 'customInteraction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\n            }\n            if (this.is(qtiClass, 'interaction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\n            }\n            return true;\n        },\n\n        /**\n         * Get the list of available elements for the authoring side\n         * The list of those element is statically defined, but we filter out elements that should be visible\n         * @returns {Object} the available elements\n         */\n        getAvailableAuthoringElements() {\n            const tagTitles = {\n                commonInteractions: __('Common Interactions'),\n                inlineInteractions: __('Inline Interactions'),\n                graphicInteractions: __('Graphic Interactions')\n            };\n\n            const authoringElements = {\n                choiceInteraction: {\n                    label: __('Choice Interaction'),\n                    description: __(\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\n                    ),\n                    icon: 'icon-choice',\n                    short: __('Choice'),\n                    qtiClass: 'choiceInteraction',\n                    tags: [tagTitles.commonInteractions, 'mcq'],\n                    group: 'common-interactions'\n                },\n                orderInteraction: {\n                    label: __('Order Interaction'),\n                    icon: 'icon-order',\n                    description: __('Arrange a list of choices in the correct order.'),\n                    short: __('Order'),\n                    qtiClass: 'orderInteraction',\n                    tags: [tagTitles.commonInteractions, 'ordering'],\n                    group: 'common-interactions'\n                },\n                associateInteraction: {\n                    label: __('Associate Interaction'),\n                    icon: 'icon-associate',\n                    description: __('Create pair(s) from a series of choices.'),\n                    short: __('Associate'),\n                    qtiClass: 'associateInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                matchInteraction: {\n                    label: __('Match Interaction'),\n                    icon: 'icon-match',\n                    description: __(\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\n                    ),\n                    short: __('Match'),\n                    qtiClass: 'matchInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                hottextInteraction: {\n                    label: __('Hottext Interaction'),\n                    icon: 'icon-hottext',\n                    description: __('Select one or more text parts (hottext) within a text.'),\n                    short: __('Hottext'),\n                    qtiClass: 'hottextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                gapMatchInteraction: {\n                    label: __('Gap Match Interaction'),\n                    icon: 'icon-gap-match',\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'gapMatchInteraction',\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\n                    group: 'common-interactions'\n                },\n                sliderInteraction: {\n                    label: __('Slider Interaction'),\n                    icon: 'icon-slider',\n                    description: __('Select a value within a numerical range.'),\n                    short: __('Slider'),\n                    qtiClass: 'sliderInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                extendedTextInteraction: {\n                    label: __('Extended Text Interaction'),\n                    icon: 'icon-extended-text',\n                    description: __(\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\n                    ),\n                    short: __('Extended Text'),\n                    qtiClass: 'extendedTextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                uploadInteraction: {\n                    label: __('File Upload Interaction'),\n                    icon: 'icon-upload',\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\n                    short: __('File Upload'),\n                    qtiClass: 'uploadInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                mediaInteraction: {\n                    label: __('Media Interaction'),\n                    icon: 'icon-media',\n                    description: __(\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\n                    ),\n                    short: __('Media'),\n                    qtiClass: 'mediaInteraction',\n                    tags: [tagTitles.commonInteractions, 'media'],\n                    group: 'common-interactions'\n                },\n                _container: {\n                    label: __('Text Block'),\n                    icon: 'icon-font',\n                    description: __(\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\n                    ),\n                    short: __('Block'),\n                    qtiClass: '_container',\n                    tags: [tagTitles.inlineInteractions, 'text'],\n                    group: 'inline-interactions'\n                },\n                inlineChoiceInteraction: {\n                    label: __('Inline Choice Interaction'),\n                    icon: 'icon-inline-choice',\n                    description: __('Select a choice from a drop-down list.'),\n                    short: __('Inline Choice'),\n                    qtiClass: 'inlineChoiceInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\n                    group: 'inline-interactions'\n                },\n                textEntryInteraction: {\n                    label: __('Text Entry Interaction'),\n                    icon: 'icon-text-entry',\n                    description: __(\n                        'Collect open-ended information in a short text input (strings or numeric values).'\n                    ),\n                    short: __('Text Entry'),\n                    qtiClass: 'textEntryInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\n                    group: 'inline-interactions'\n                },\n                endAttemptInteraction: {\n                    label: __('End Attempt Interaction'),\n                    icon: 'icon-end-attempt',\n                    description: __('Trigger the end of the item attempt.'),\n                    short: __('End Attempt'),\n                    qtiClass: 'endAttemptInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\n                    group: 'inline-interactions'\n                },\n                hotspotInteraction: {\n                    label: __('Hotspot Interaction'),\n                    icon: 'icon-hotspot',\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\n                    short: __('Hotspot'),\n                    qtiClass: 'hotspotInteraction',\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\n                    group: 'graphic-interactions'\n                },\n                graphicOrderInteraction: {\n                    label: __('Graphic Order Interaction'),\n                    icon: 'icon-graphic-order',\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\n                    short: __('Order'),\n                    qtiClass: 'graphicOrderInteraction',\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\n                    group: 'graphic-interactions'\n                },\n                graphicAssociateInteraction: {\n                    label: __('Graphic Associate Interaction'),\n                    icon: 'icon-graphic-associate',\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                    short: __('Associate'),\n                    qtiClass: 'graphicAssociateInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                graphicGapMatchInteraction: {\n                    label: __('Graphic Gap Match Interaction'),\n                    icon: 'icon-graphic-gap',\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'graphicGapMatchInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                selectPointInteraction: {\n                    label: __('Select Point Interaction'),\n                    icon: 'icon-select-point',\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\n                    short: __('Select Point'),\n                    qtiClass: 'selectPointInteraction',\n                    tags: [tagTitles.graphicInteractions],\n                    group: 'graphic-interactions'\n                }\n            };\n\n            //filter out hidden elements\n            const availableElements = {};\n            for (const [elementId, element] of Object.entries(authoringElements)) {\n                if (this.isVisible(elementId)) {\n                    availableElements[elementId] = element;\n                }\n            }\n            return availableElements;\n        }\n    };\n\n    return QtiElements;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'i18n',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, __, portableElementRegistry, qtiElements) {\n    'use strict';\n\n    /**\n     * Create a ney interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry() {\n        return portableElementRegistry({\n            /**\n             * Get the authoring information for a given custom interaction\n             * @param {string} typeIdentifier - the interaction type identifier\n             * @param {Object} [options]\n             * @param {string|number} [options.version] - the interaction version\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\n             * @returns {Object} the authoring info\n             */\n            getAuthoringData(typeIdentifier, options = {}) {\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\n                const pciModel = this.get(typeIdentifier, options.version);\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\n                if (\n                    pciModel &&\n                    pciModel.creator &&\n                    pciModel.creator.hook &&\n                    pciModel.creator.icon &&\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\n                ) {\n                    return {\n                        label: pciModel.label, //currently no translation available\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\n                        short: pciModel.short,\n                        description: pciModel.description,\n                        qtiClass, //custom interaction is block type\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\n                        group: 'custom-interactions'\n                    };\n                }\n            }\n        }).on('creatorsloaded', function () {\n            const creators = this.getLatestCreators();\n            _.forEach(creators, function (creator, typeIdentifier) {\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\n                    parents: ['customInteraction'],\n                    qti: true\n                };\n            });\n        });\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: function handleTheme(url) {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        associableHotspot: false,\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'commonRenderer',\n        locations: locations,\n        options: {\n            assetManager: assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Container',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<div class=\\\"qti-block\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      return buffer;\n      }\n\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.contentModel), \"blockStatic\", options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.contentModel), \"blockStatic\", options));\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = {\n        qtiClass: '_container',\n        template: tpl\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figcaption',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figcaption\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figcaption>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Figcaption = {\n        qtiClass: 'figcaption',\n        template: tpl\n    };\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figure',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (_, Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<figure \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-figure=\\\"true\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.showFigure), {hash:{},inverse:self.program(6, program6, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Figure = {\n        qtiClass: 'figure',\n        getContainer: containerHelper.get,\n        template: tpl,\n        getData: function (elem, data) {\n            let showFigure = false;\n            if (data.attributes.class && ['wrap-left', 'wrap-right'].includes(data.attributes.class)) {\n                showFigure = true;\n            } else {\n                _.some(elem.bdy['elements'], childElement => {\n                    if (childElement.serial.includes('figcaption')) {\n                        showFigure = true;\n                        data.attributes.class = 'wrap-left';\n                        elem.attributes.class = 'wrap-left';\n                    }\n                });\n            }\n            data.attributes.showFigure = showFigure;\n            elem.attributes.showFigure = showFigure;\n            return data;\n        },\n        render: function(figure) {\n            const $figure = containerHelper.get(figure);\n            const $img = $figure.find('img');\n            if ($img.length && $figure.prop('tagName') === 'FIGURE') {\n                // move width from image to figure\n                $figure.css({ width: $img.attr('width') });\n                $img.attr('width', '100%');\n            }\n        }\n    };\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Img',['ui/waitForMedia', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (waitForMedia, Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-describedby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-hidden=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-label=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-labelledby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-live=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" role=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<img\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"img\\\"\\n    src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.alt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby']), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby']), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live']), {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role), {hash:{},inverse:self.noop,fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Img = {\n        qtiClass: 'img',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(img, data) {\n            return new Promise(function(resolve, reject) {\n                containerHelper.get(img).waitForMedia(resolve);\n            });\n        }\n    };\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Include',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-include\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Include = {\n        qtiClass: 'include',\n        template: tpl\n    };\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',['jquery', 'lodash', 'i18n', 'ui/hider', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'interact', 'ui/interactUtils'], function ($$1, _, __, hider, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    class=\\\"qti-interaction qti-blockInteraction qti-associateInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"associateInteraction\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <ul class=\\\"choice-area clearfix  none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <ul class=\\\"result-area none target clearfix\\\">\\n    </ul>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden incomplete-pair\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"target lft\\\"></div>\\n    <div class=\\\"target rgt\\\"></div>\\n</li>\\n\";\n      return buffer;\n      });\n    function pairTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const setChoice = function(interaction, $choice, $target) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getChoice(choiceSerial);\n        let usage = $choice.data('usage') || 0;\n\n        if (!choiceSerial) {\n            throw new Error('empty choice serial');\n        }\n\n        //to track number of times a choice is used in a pair\n        usage++;\n        $choice.data('usage', usage);\n\n        const _setChoice = function() {\n            $target\n                .data('serial', choiceSerial)\n                .html($choice.html())\n                .addClass('filled');\n\n            if (!interaction.responseMappingMode && choice.attr('matchMax') && usage >= choice.attr('matchMax')) {\n                $choice.addClass('deactivated');\n            }\n        };\n\n        if ($target.siblings('div').hasClass('filled')) {\n            const $resultArea = $$1('.result-area', $container);\n            const $pair = $target.parent();\n            const thisPairSerial = [$target.siblings('div').data('serial'), choiceSerial];\n            let $otherRepeatedPair = $$1();\n\n            //check if it is not a repeating association!\n            $resultArea\n                .children()\n                .not($pair)\n                .each(function() {\n                    let $otherPair = $$1(this).children('.filled');\n                    if ($otherPair.length === 2) {\n                        let otherPairSerial = [$$1($otherPair[0]).data('serial'), $$1($otherPair[1]).data('serial')];\n                        if (_.intersection(thisPairSerial, otherPairSerial).length === 2) {\n                            $otherRepeatedPair = $otherPair;\n                            return false;\n                        }\n                    }\n                });\n\n            if ($otherRepeatedPair.length === 0) {\n                //no repeated pair, so allow the choice to be set:\n                _setChoice();\n\n                //trigger pair made event\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'added',\n                    $pair: $pair,\n                    choices: thisPairSerial\n                });\n\n                instructionMgr.validateInstructions(interaction, { choice: $choice, target: $target });\n\n                if (interaction.responseMappingMode || parseInt(interaction.attr('maxAssociations')) === 0) {\n                    $pair.removeClass('incomplete-pair');\n\n                    //append new pair option?\n                    if (!$resultArea.children('.incomplete-pair').length) {\n                        $resultArea.append(pairTpl({ empty: true }));\n                        $resultArea.children('.incomplete-pair').fadeIn(600, function() {\n                            hider.show(this);\n                        });\n                    }\n                }\n            } else {\n                //repeating pair: show it:\n\n                //@todo add a notification message here in warning\n                $otherRepeatedPair.css('border', '1px solid orange');\n                $target.html(__('identical pair already exists')).css({\n                    color: 'orange',\n                    border: '1px solid orange'\n                });\n                setTimeout(function() {\n                    $otherRepeatedPair.removeAttr('style');\n                    $target.empty().css({ color: '', border: '' });\n                }, 2000);\n            }\n        } else {\n            _setChoice();\n        }\n    };\n\n    const unsetChoice = function(interaction, $filledChoice, animate, triggerChange) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $filledChoice.data('serial');\n        const $choice = $container.find('.choice-area [data-serial=' + choiceSerial + ']');\n        const $parent = $filledChoice.parent();\n        const $sibling = $container.find(\n            '.choice-area [data-serial=' + $filledChoice.siblings('.target').data('serial') + ']'\n        );\n        const isNumberOfMaxAssociationsZero = parseInt(interaction.attr('maxAssociations')) === 0;\n        let usage = $choice.data('usage') || 0;\n\n        //decrease the  use for this choice\n        usage--;\n\n        $choice.data('usage', usage).removeClass('deactivated');\n\n        $filledChoice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if (!interaction.swapping) {\n            if (triggerChange !== false) {\n                //a pair with one single element is not valid, so consider the response to be modified:\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'removed',\n                    $pair: $filledChoice.parent()\n                });\n                instructionMgr.validateInstructions(interaction, { choice: $choice });\n            }\n\n            // if we are removing the sibling too, update its usage\n            // but only if number of maximum assotiations is zero\n            if (isNumberOfMaxAssociationsZero) {\n                $sibling.data('usage', $sibling.data('usage') - 1).removeClass('deactivated');\n            }\n\n            //completely empty pair:\n            if (!$choice.siblings('div').hasClass('filled') && (isNumberOfMaxAssociationsZero || interaction.responseMappingMode)) {\n                //shall we remove it?\n                if (!$parent.hasClass('incomplete-pair')) {\n                    if (animate) {\n                        $parent.addClass('removing').fadeOut(500, function() {\n                            $$1(this).remove();\n                        });\n                    } else {\n                        $parent.remove();\n                    }\n                }\n            }\n        }\n    };\n\n    const getChoice = function(interaction, identifier) {\n        const $container = containerHelper.get(interaction);\n\n        //warning: do not use selector data-identifier=identifier because data-identifier may change dynamically\n        const choice = interaction.getChoiceByIdentifier(identifier);\n        if (!choice) {\n            throw new Error('cannot find a choice with the identifier : ' + identifier);\n        }\n        return $$1('.choice-area [data-serial=' + choice.getSerial() + ']', $container);\n    };\n\n    const renderEmptyPairs = function(interaction) {\n        const $container = containerHelper.get(interaction);\n        const max = parseInt(interaction.attr('maxAssociations'));\n        const $resultArea = $$1('.result-area', $container);\n\n        if (interaction.responseMappingMode || max === 0) {\n            $resultArea.append(pairTpl({ empty: true }));\n            hider.show($resultArea.children('.incomplete-pair'));\n        } else {\n            for (let i = 0; i < max; i++) {\n                $resultArea.append(pairTpl());\n            }\n        }\n    };\n\n    /**\n     * Builds a scroll observer that will make sure the dragged element keeps an accurate positioning\n     * @param {jQuery} $scrollContainer\n     * @returns {scrollObserver}\n     */\n    const scrollObserverFactory = function scrollObserverFactory($scrollContainer) {\n        let currentDraggable = null;\n        let beforeY = 0;\n        let beforeX = 0;\n        let afterY = 0;\n        let afterX = 0;\n\n        // reset the scroll observer context\n        function resetScrollObserver() {\n            currentDraggable = null;\n            beforeY = 0;\n            beforeX = 0;\n            afterY = 0;\n            afterX = 0;\n        }\n\n        // keep the position of the dragged element accurate with the scroll position\n        function onScrollCb() {\n            let x;\n            let y;\n            if (currentDraggable) {\n                beforeY = afterY;\n                beforeX = afterX;\n\n                if (afterY === 0 && beforeY === 0)\n                    beforeY = this.scrollTop;\n                if (afterX === 0 && beforeX === 0)\n                    beforeX = this.scrollLeft;\n\n                afterY = this.scrollTop;\n                afterX = this.scrollLeft;\n\n                y = (parseInt(currentDraggable.getAttribute('data-y'), 10) || 0) + (afterY - beforeY);\n                x = (parseInt(currentDraggable.getAttribute('data-x'), 10) || 0) + (afterX - beforeX);\n\n                // translate the element\n                currentDraggable.style.webkitTransform = currentDraggable.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\n\n                // update the position attributes\n                currentDraggable.setAttribute('data-x', x);\n                currentDraggable.setAttribute('data-y', y);\n            }\n        }\n\n        // find the scroll container within the parents if any\n        $scrollContainer.parents().each(function findScrollContainer() {\n            const $el = $$1(this);\n            const ovf = $el.css('overflow');\n            if (ovf !== 'hidden' && ovf !== 'visible') {\n                $scrollContainer = $el;\n                return false;\n            }\n        });\n\n        // make sure the drop zones will follow the scroll\n        interact.dynamicDrop(true);\n\n        /**\n         * @typedef {Object} scrollObserver\n         */\n        return {\n            /**\n             * Gets the scroll container\n             * @returns {jQuery}\n             */\n            getScrollContainer: function getScrollContainer() {\n                return $scrollContainer;\n            },\n\n            /**\n             * Initializes the scroll observer while dragging a choice\n             * @param {HTMLElement|jQuery} draggedElement\n             */\n            start: function start(draggedElement) {\n                resetScrollObserver();\n                currentDraggable = draggedElement instanceof $$1 ? draggedElement.get(0) : draggedElement;\n                $scrollContainer.on('scroll.scrollObserver', _.throttle(onScrollCb, 50));\n            },\n\n            /**\n             * Tears down the the scroll observer once the dragging is done\n             */\n            stop: function stop() {\n                $scrollContainer.off('.scrollObserver');\n                resetScrollObserver();\n            }\n        };\n    };\n    const _getRawResponse = function(interaction) {\n        const response = [];\n        const $container = containerHelper.get(interaction);\n        $$1('.result-area>li', $container).each(function() {\n            const pair = [];\n            $$1(this)\n                .find('div')\n                .each(function() {\n                    const serial = $$1(this).data('serial');\n                    if (serial) {\n                        const choice = interaction.getChoice(serial);\n                        if (choice) {\n                            pair.push(choice.id());\n                        }\n                    }\n                });\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n    const _setInstructions = function(interaction) {\n        const min = parseInt(interaction.attr('minAssociations'), 10);\n        const max = parseInt(interaction.attr('maxAssociations'), 10);\n\n        //infinite association:\n        if (min === 0) {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('You may make as many association pairs as you want.'));\n            }\n        } else {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('The maximum number of association is unlimited.'));\n            }\n            //the max value is implicit since the appropriate number of empty pairs have already been created\n            let msg = __('You need to make') + ' ';\n            msg += min > 1 ? __('at least') + ' ' + min + ' ' + __('association pairs') : __('one association pair');\n            instructionMgr.appendInstruction(interaction, msg, function() {\n                if (_getRawResponse(interaction).length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    const render = function(interaction) {\n        const self = this;\n\n        return new Promise(function(resolve) {\n            const $container = containerHelper.get(interaction);\n            const $choiceArea = $container.find('.choice-area');\n            const $resultArea = $container.find('.result-area');\n\n            let $activeChoice = null;\n            let scrollObserver = null;\n\n            let isDragAndDropEnabled;\n            let dragOptions;\n            let dropOptions;\n            let scaleX, scaleY;\n\n            let $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n            let choiceSelector = $choiceArea.selector + ' >li';\n            let resultSelector = $resultArea.selector + ' >li>div';\n            let binSelector = $container.selector + ' .remove-choice';\n\n            let _getChoice = function(serial) {\n                return $choiceArea.find('[data-serial=' + serial + ']');\n            };\n\n            /**\n             * @todo Tried to store $resultArea.find[...] in a variable but this fails\n             * @param $choice\n             * @param $target\n             * @private\n             */\n            const _setChoice = function($choice, $target) {\n                setChoice(interaction, $choice, $target);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _resetSelection = function() {\n                if ($activeChoice) {\n                    $resultArea.find('.remove-choice').remove();\n                    $activeChoice.removeClass('active');\n                    $container.find('.empty').removeClass('empty');\n                    $activeChoice = null;\n                }\n            };\n\n            const _unsetChoice = function($choice) {\n                unsetChoice(interaction, $choice, true);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _isInsertionMode = function() {\n                return $activeChoice && $activeChoice.data('identifier');\n            };\n\n            const _isModeEditing = function() {\n                return $activeChoice && !$activeChoice.data('identifier');\n            };\n            const _activateChoice = function($choice) {\n                _resetSelection();\n                $activeChoice = $choice;\n                $choice.addClass('active');\n                $resultArea.find('>li>.target').addClass('empty');\n            };\n\n            const _handleChoiceActivate = function($target) {\n                if ($target.hasClass('deactivated')) {\n                    return;\n                }\n\n                if (_isModeEditing()) {\n                    //swapping:\n                    interaction.swapping = true;\n                    _unsetChoice($activeChoice);\n                    _setChoice($target, $activeChoice);\n                    _resetSelection();\n                    interaction.swapping = false;\n                } else {\n                    if ($target.hasClass('active')) {\n                        _resetSelection();\n                    } else {\n                        _activateChoice($target);\n                    }\n                }\n            };\n            const _activateResult = function($target) {\n                const targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $resultArea\n                    .find('>li>.target')\n                    .filter(function() {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function() {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n            };\n\n            const _handleResultActivate = function($target) {\n                let choiceSerial,\n                    targetSerial = $target.data('serial');\n\n                if (_isInsertionMode()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled')) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n                        //set choices:\n                        if (targetSerial) {\n                            _unsetChoice($target);\n                        }\n                        _setChoice($activeChoice, $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (_isModeEditing()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled') || $activeChoice.siblings('div')[0] === $target[0]) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n\n                        _unsetChoice($activeChoice);\n                        if (targetSerial) {\n                            //swapping:\n                            _unsetChoice($target);\n                            _setChoice(_getChoice(targetSerial), $activeChoice);\n                        }\n                        _setChoice(_getChoice(choiceSerial), $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (targetSerial) {\n                    _activateResult($target);\n                    $target.append($bin);\n                }\n            };\n\n            // Point & click handlers\n\n            interact($container.selector).on('tap', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $$1(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n\n                _resetSelection();\n            });\n\n            interact($choiceArea.selector + ' >li').on('tap', function(e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleChoiceActivate($target);\n                e.preventDefault();\n            });\n\n            interact($resultArea.selector + ' >li>div').on('tap', function(e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleResultActivate($target);\n                e.preventDefault();\n            });\n\n            interact(binSelector).on('tap', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $$1(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _unsetChoice($activeChoice);\n                _resetSelection();\n                e.preventDefault();\n            });\n\n            if (!interaction.responseMappingMode) {\n                _setInstructions(interaction);\n            }\n\n            // Drag & drop handlers\n\n            if (self.getOption && self.getOption('enableDragAndDrop') && self.getOption('enableDragAndDrop').associate) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').associate;\n            }\n\n            function _iFrameDragFix(draggableSelector, target) {\n                interactUtils.iFrameDragFixOn(function() {\n                    let $activeDrop = $$1(resultSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(resultSelector).fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    $activeDrop = $$1(choiceSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(choiceSelector + '.empty').fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    interact(draggableSelector).fire({\n                        type: 'dragend',\n                        target: target\n                    });\n                });\n            }\n\n            if (isDragAndDropEnabled) {\n                scrollObserver = scrollObserverFactory($container);\n                dragOptions = {\n                    inertia: false,\n                    autoScroll: {\n                        container: scrollObserver.getScrollContainer().get(0)\n                    },\n                    restrict: {\n                        restriction: '.qti-interaction',\n                        endOnly: false,\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                    }\n                };\n\n                // makes choices draggables\n                interact(choiceSelector + ':not(.deactivated)')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function(e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _activateChoice($target);\n                                    _iFrameDragFix(choiceSelector + ':not(.deactivated)', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function(e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function(e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n                                    // The reason of placing delay here is that there was timing conflict between \"draggable\" and \"drag-zone\" elements.\n                                    _.delay(function(){\n                                        _resetSelection();\n                                    });\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                // makes results draggables\n                interact(resultSelector + '.filled')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function(e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _resetSelection();\n                                    _activateResult($target);\n                                    _iFrameDragFix(resultSelector + '.filled', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function(e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function(e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n\n                                    interactUtils.restoreOriginalPosition($target);\n\n                                    if ($activeChoice) {\n                                        _unsetChoice($activeChoice);\n                                    }\n                                    _resetSelection();\n\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                dropOptions = {\n                    overlap: 'pointer',\n                    ondragenter: function(e) {\n                        $$1(e.target).addClass('dropzone');\n                        $$1(e.relatedTarget).addClass('droppable');\n                    },\n                    ondragleave: function(e) {\n                        $$1(e.target).removeClass('dropzone');\n                        $$1(e.relatedTarget).removeClass('droppable');\n                    }\n                };\n\n                // makes hotspots droppables\n                interact(resultSelector).dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function(e) {\n                                this.ondragleave(e);\n                                _handleResultActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n\n                // makes available choices droppables\n                interact(choiceSelector + '.empty').dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function(e) {\n                                this.ondragleave(e);\n                                _handleChoiceActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n            }\n\n            // interaction init\n\n            renderEmptyPairs(interaction);\n\n            sizeAdapter.adaptSize($$1('.result-area .target, .choice-area .qti-choice', $container));\n            resolve();\n        });\n    };\n\n    const resetResponse = function(interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //destroy selected choice:\n        $container.find('.result-area .active').each(function() {\n            interactUtils.tapOn(this);\n        });\n\n        $$1('.result-area>li>div', $container).each(function() {\n            unsetChoice(interaction, $$1(this), false, false);\n        });\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _setPairs = function(interaction, pairs) {\n        const $container = containerHelper.get(interaction);\n        let addedPairs = 0;\n        let $emptyPair = $$1('.result-area>li:first', $container);\n        if (pairs && interaction.getResponseDeclaration().attr('cardinality') === 'single' && pairs.length) {\n            pairs = [pairs];\n        }\n        _.each(pairs, function(pair) {\n            if ($emptyPair.length) {\n                let $divs = $emptyPair.children('div');\n                setChoice(interaction, getChoice(interaction, pair[0]), $$1($divs[0]));\n                setChoice(interaction, getChoice(interaction, pair[1]), $$1($divs[1]));\n                addedPairs++;\n                $emptyPair = $emptyPair.next('li');\n            } else {\n                //the number of pairs exceeds the maximum allowed pairs: break;\n                return false;\n            }\n        });\n\n        return addedPairs;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function(interaction, response) {\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function(interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' >li').unset();\n        interact($container.find('.result-area').selector + ' >li>div').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        $$1('.result-area', $container).empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function(a, b) {\n                        let aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        let bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        let state = {};\n        let response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the associate interaction\n     * @exports qtiCommonRenderer/renderers/interactions/AssociateInteraction\n     */\n    var AssociateInteraction = {\n        qtiClass: 'associateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n\n        renderEmptyPairs: renderEmptyPairs\n    };\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',['lodash', 'jquery', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'util/adaptSize', 'services/features'], function (_, $$1, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, adaptSize, features) { 'use strict';\n\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n  sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n  adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n  features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    \n    return \" allow-elimination-visible\";\n    }\n\n  function program7(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data) {\n    \n    \n    return \" horizontal\";\n    }\n\n  function program13(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.listStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.listStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program15(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  class=\\\"qti-interaction qti-blockInteraction qti-choiceInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowEliminationVisible), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n  data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  data-qti-class=\\\"choiceInteraction\\\"\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n>\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <ol\\n    class=\\\"plain block-listing solid choice-area\";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.listStyle), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n    aria-labelledby=\\\"\";\n    if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  >\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data};\n    if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  </ol>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  const KEY_CODE_SPACE = 32;\n  const KEY_CODE_ENTER = 13;\n  const KEY_CODE_LEFT = 37;\n  const KEY_CODE_UP = 38;\n  const KEY_CODE_RIGHT = 39;\n  const KEY_CODE_DOWN = 40;\n\n  /**\n   * Propagate the checked state to the actual input.\n   * @type {Function}\n   * @param {jQuery} $choiceBox - list element with the class `.qti-choice`\n   * @param {Boolean} state\n   * @private\n   */\n  const _triggerInput = function _triggerInput($choiceBox, state) {\n      const $input = $choiceBox.find('input:radio,input:checkbox').not('[disabled]').not('.disabled');\n      const $choiceBoxes = $choiceBox.add($choiceBox.siblings());\n\n      if (!$input.length) {\n          return;\n      }\n\n      if (!_.isBoolean(state)) {\n          state = !$input.prop('checked');\n      }\n\n      $input.prop('checked', state);\n      $input.trigger('change');\n\n      $choiceBoxes.removeClass('user-selected');\n      $choiceBoxes\n          .find('input:checked')\n          .not('[disabled]')\n          .not('.disabled')\n          .parents('.qti-choice')\n          .addClass('user-selected');\n  };\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   *\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @param {jQueryElement} $container\n   */\n  const _pseudoLabel = function _pseudoLabel(interaction, $container) {\n      const inputSelector =\n          '.qti-choice input:radio:not([disabled]):not(.disabled), .qti-choice input:checkbox:not([disabled]):not(.disabled)';\n      $container.off('.commonRenderer');\n\n      $container\n          .on('keydown.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const $qtiChoice = $$1(this).closest('.qti-choice');\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_UP || keyCode === KEY_CODE_LEFT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .prev('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              } else if (keyCode === KEY_CODE_DOWN || keyCode === KEY_CODE_RIGHT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .next('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              }\n          })\n          .on('keyup.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_SPACE || keyCode === KEY_CODE_ENTER) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  _triggerInput($$1(this).closest('.qti-choice'));\n              }\n          });\n\n      $container.on('click.commonRenderer', '.qti-choice', function (e) {\n          const $choiceBox = $$1(this);\n          let state;\n          const eliminator = e.target.dataset && e.target.dataset.eliminable;\n          const input = this.querySelector('.real-label > input');\n\n          // if the click has been triggered by a keyboard check, prevent this listener to cancel this check\n          if (e.originalEvent && $$1(e.originalEvent.target).is('input')) {\n              return;\n          }\n\n          //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n          if ($choiceBox.closest('.qti-item').hasClass('prevent-click-handler')) {\n              return;\n          }\n\n          e.preventDefault();\n          e.stopPropagation(); //required otherwise any tao scoped, form initialization might prevent it from working\n\n          if (!_.isUndefined(eliminator)) {\n              state = false;\n              if (eliminator === 'trigger') {\n                  this.classList.toggle('eliminated');\n              }\n          }\n\n          _triggerInput($choiceBox, state);\n\n          if (this.classList.contains('eliminated')) {\n              input.setAttribute('disabled', 'disabled');\n          } else {\n              input.removeAttribute('disabled');\n          }\n\n          instructionMgr.validateInstructions(interaction, { choice: $choiceBox });\n          containerHelper.triggerResponseChangeEvent(interaction);\n          $$1(input).focus();\n      });\n  };\n\n  /**\n   * Get the responses from the DOM.\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @returns {Array} the list of choices identifiers\n   */\n  const _getRawResponse = function _getRawResponse(interaction) {\n      const values = [];\n      const $container = containerHelper.get(interaction);\n      $$1('.real-label > input[name=response-' + interaction.getSerial() + ']:checked', $container).each(function () {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Define the instructions for the interaction\n   * @private\n   * @param {Object} interaction - the interaction instance\n   */\n  const _setInstructions = function _setInstructions(interaction) {\n      const min = interaction.attr('minChoices');\n      const max = interaction.attr('maxChoices');\n      let msg;\n      const choiceCount = _.size(interaction.getChoices());\n\n      const highlightInvalidInput = function highlightInvalidInput($choice) {\n          const $input = $choice.find('.real-label > input');\n          const $icon = $choice.find('.real-label > span');\n\n          const choiceStyle = $choice.attr('style');\n          const iconStyle = $icon.attr('style');\n          $choice.css('color', '#BA122B');\n          $icon.css('color', '#BA122B').addClass('cross error');\n\n          let timeout = interaction.data('__instructionTimeout');\n\n          if (timeout) {\n              clearTimeout(timeout);\n          }\n          timeout = setTimeout(function () {\n              $input.prop('checked', false);\n              $choice.attr('style', choiceStyle);\n              $icon.attr('style', iconStyle).removeClass('cross');\n              $choice.toggleClass('user-selected', false);\n              containerHelper.triggerResponseChangeEvent(interaction);\n          }, 150);\n          interaction.data('__instructionTimeout', timeout);\n      };\n\n      // if maxChoice = 1, use the radio group behaviour\n      // if maxChoice = 0, infinite choice possible\n      // there are 5 cases according AUT-345 Choice interaction: reduce edge cases constraints\n      if (min === 1 && (max === 0 || max === choiceCount || typeof max === 'undefined')) {\n          // Multiple Choice: 4.Constraint: Answer required -> minChoices = 1 / maxChoices = 0 -> “You need to select at least 1 choice”\n          // Multiple Choice: 5.Constraint: Other constraints -> minChoices = 1 / maxChoices = (N or Disabled)\n          msg = __('You need to select at least 1 choice.');\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= 1) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min >= 1 && max >= 2 && min !== max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> “You must select from minChoices to maxChoices choices. for the correct answer“\n          msg = __('You need to select from %s to %s choices.', min, max);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= min && _getRawResponse(interaction).length < max) {\n                  this.reset();\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && min === max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices ≠ Disabled -> “You need to select {minChoices = maxChoices value} choices.“\n          msg = __('You need to select %s choices', min);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length === min) {\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  this.update({\n                      level: 'warning',\n                      timeout: 2000,\n                      start: function () {\n                          if (data && data.choice) {\n                              highlightInvalidInput(data.choice);\n                          }\n                      },\n                      stop: function () {\n                          this.setLevel('info');\n                      }\n                  });\n                  this.setState('fulfilled');\n              }  else {\n                  this.reset();\n              }\n          });\n      } else if (max > 1 && max < choiceCount && (typeof min === 'undefined' || min === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices = Disabled / maxChoices ≠ Disabled  -> \"You can select up to {maxChoices value} choices.\"\n          msg = __('You can select up to %s choices.', max);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && (typeof max === 'undefined' || max === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices = Disabled or 0   -> \"You need to select at least {minChoices value} choices.\"\"\n          msg = __('You need to select at least %s choices.', min);\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= min) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      }\n      // Single choice: 1.Constraint: None -> minChoices = 0 / maxChoices = 1 -> No messages\n      // Single choice: 2.Constraint: Answer required  -> minChoices = 1, maxChoices = 1 -> No messages\n      // Multiple Choice: 3.Constraint: None  -> minChoices = 0, maxChoices = 0 -> No messages\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const render = function render(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      _pseudoLabel(interaction, $container);\n\n      _setInstructions(interaction);\n\n      if (interaction.attr('orientation') === 'horizontal') {\n          const $elements = $$1('.add-option, .result-area .target, .choice-area .qti-choice', $container);\n          sizeAdapter.adaptSize($elements);\n\n          $$1(document).on('themeapplied.choiceInteraction', () => adaptSize.height($elements));\n      }\n  };\n\n  /**\n   * Reset the responses previously set\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const resetResponse = function resetResponse(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      $$1('.real-label > input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set a new response to the rendered interaction.\n   * Please note that it does not reset previous responses.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} response - the PCI formatted response\n   */\n  const setResponse = function setResponse(interaction, response) {\n      const $container = containerHelper.get(interaction);\n\n      try {\n          _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n              const $input = $container.find('.real-label > input[value=\"' + identifier + '\"]').prop('checked', true);\n              $input.closest('.qti-choice').toggleClass('user-selected', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the response formatted in PCI\n   */\n  const getResponse = function getResponse(interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Check if a choice interaction is choice-eliminable\n   *\n   * @param {Object} interaction\n   * @returns {boolean}\n   */\n  const isEliminable = function isEliminable(interaction) {\n      return /\\beliminable\\b/.test(interaction.attr('class'));\n  };\n\n  /**\n   * Set additional data to the template (data that are not really part of the model).\n   * @param {Object} interaction - the interaction\n   * @param {Object} [data] - interaction custom data\n   * @returns {Object} custom data\n   */\n  const getCustomData = function getCustomData(interaction, data) {\n      const listStyleVisible = features.isVisible('taoQtiItem/creator/interaction/choice/property/listStyle');\n      const listStyles = (interaction.attr('class') || '').match(/\\blist-style-[\\w-]+/) || [];\n      return _.merge(data || {}, {\n          horizontal: interaction.attr('orientation') === 'horizontal',\n          listStyle: listStyleVisible ? listStyles.pop() : void 0,\n          eliminable: isEliminable(interaction),\n          allowEliminationVisible: features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination')\n      });\n  };\n\n  /**\n   * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n   * @param {Object} interaction - the interaction\n   */\n  const destroy = function destroy(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      const timeout = interaction.data('__instructionTimeout');\n\n      if (timeout) {\n          clearTimeout(timeout);\n      }\n\n      //remove event\n      $container.off('.commonRenderer');\n      $$1(document).off('.commonRenderer').off('.choiceInteraction');\n\n      //remove instructions\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  const setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n\n          const $container = containerHelper.get(interaction);\n\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n              $$1('.qti-simpleChoice', $container)\n                  .sort(function (a, b) {\n                      const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                      const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('.choice-area', $container));\n          }\n\n          //restore eliminated choices\n          if (isEliminable(interaction) && _.isArray(state.eliminated) && state.eliminated.length) {\n              _.forEach(state.eliminated, function (identifier) {\n                  $container.find('.qti-simpleChoice[data-identifier=\"' + identifier + '\"]').addClass('eliminated');\n              });\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  const getState = function getState(interaction) {\n      const $container = containerHelper.get(interaction);\n      const state = {};\n      const response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          state.order = [];\n          $$1('.qti-simpleChoice', $container).each(function () {\n              state.order.push($$1(this).data('identifier'));\n          });\n      }\n\n      //store the eliminated choices\n      if (isEliminable(interaction)) {\n          state.eliminated = [];\n          $container.find('.qti-simpleChoice.eliminated').each(function () {\n              state.eliminated.push($$1(this).data('identifier'));\n          });\n      }\n\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the choice interaction\n   * @exports qtiCommonRenderer/renderers/interactions/ChoiceInteraction\n   */\n  var ChoiceInteraction = {\n      qtiClass: 'choiceInteraction',\n      template: tpl,\n      getData: getCustomData,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'i18n'], function (_, Handlebars, Helpers0, containerHelper, pciResponse, __) { 'use strict';\n\n        _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n        Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n        Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n        containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n        pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n        __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n        if (!Helpers0.__initialized) {\n          Helpers0(Handlebars);\n          Helpers0.__initialized = true;\n        }\n        var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n          this.compilerInfo = [4,'>= 1.0.0'];\n        helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n          var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n        function program1(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \" lang=\\\"\"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\\"\";\n          return buffer;\n          }\n\n          buffer += \"<a class=\\\"qti-interaction qti-inlineInteraction qti-endAttemptInteraction btn small btn-info\\\"\\n        data-serial=\\\"\";\n          if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n          else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n          buffer += escapeExpression(stack1)\n            + \"\\\" \\n        data-qti-class=\\\"endAttemptInteraction\\\"\\n        value=\\\"false\\\"\\n        tabindex=\\\"0\\\"\\n        \";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \">\\n        \"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\n</a>\\n\";\n          return buffer;\n          });\n        function tpl(data, options, asString) {\n          var html = Template(data, options);\n          return (asString || true) ? html : $(html);\n        }\n\n        /**\n         * This program is free software; you can redistribute it and/or\n         * modify it under the terms of the GNU General Public License\n         * as published by the Free Software Foundation; under version 2\n         * of the License (non-upgradable).\n         *\n         * This program is distributed in the hope that it will be useful,\n         * but WITHOUT ANY WARRANTY; without even the implied warranty of\n         * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n         * GNU General Public License for more details.\n         *\n         * You should have received a copy of the GNU General Public License\n         * along with this program; if not, write to the Free Software\n         * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n         *\n         * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n         */\n\n        /**\n         * Init rendering, called after template injected into the DOM\n         * All options are listed in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @fires endattempt with the response identifier\n         */\n        function render(interaction, options) {\n            var $container = containerHelper.get(interaction);\n\n            //on click,\n            $container.on('click.commonRenderer', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n                $container.val(true);\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                $container.trigger('endattempt', [interaction.attr('responseIdentifier')]);\n            });\n        }\n\n        /**\n         * Set the response to the rendered interaction.\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @param {object} response\n         */\n        function setResponse(interaction, response) {\n            _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n        }\n\n        /**\n         * Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n        function getResponse(interaction) {\n            var val = containerHelper.get(interaction).val();\n            val = val && val !== 'false' && val !== '0';\n            return pciResponse.serialize([val], interaction);\n        }\n\n        /**\n             * Reset the response ... wondering if it is useful ...\n\n             * @param {type} interaction\n             */\n        function resetResponse(interaction) {\n            _setVal(interaction, false);\n        }\n\n        /**\n         * Set the interaction state. It could be done anytime with any state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @param {Object} state - the interaction state\n         */\n        function setState(interaction, state) {\n            if (_.isObject(state)) {\n                if (state.response) {\n                    interaction.resetResponse();\n                    interaction.setResponse(state.response);\n                }\n            }\n        }\n\n        /**\n         * Get the interaction state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @returns {Object} the interaction current state\n         */\n        function getState(interaction) {\n            var state = {};\n            var response = interaction.getResponse();\n\n            if (response) {\n                state.response = response;\n            }\n            return state;\n        }\n\n        /**\n         *\n         * @param {Object} interaction\n         * @param {Boolean} val\n         */\n        function _setVal(interaction, val) {\n            containerHelper\n                .get(interaction)\n                .val(val)\n                .change();\n        }\n\n        /**\n         * Destroy the interaction to restore the dom as it is before render() is called\n         *\n         * @param {Object} interaction\n         */\n        function destroy(interaction) {\n            //remove event\n            containerHelper.get(interaction).off('.commonRenderer');\n        }\n\n        /**\n         * Define default template data\n         *\n         * @param {Object} interaction\n         * @param {Object} data\n         * @returns {Object}\n         */\n        function getCustomData(interaction, data) {\n            if (!data.attributes.title) {\n                data.attributes.title = __('End Attempt');\n            }\n            return data;\n        }\n\n        var EndAttemptInteraction = {\n            qtiClass: 'endAttemptInteraction',\n            template: tpl,\n            getData: getCustomData,\n            render: render,\n            getContainer: containerHelper.get,\n            setResponse: setResponse,\n            getResponse: getResponse,\n            resetResponse: resetResponse,\n            destroy: destroy,\n            setState: setState,\n            getState: getState\n        };\n\n        return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',['jquery', 'lodash', 'i18n', 'services/features', 'util/strLimiter', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'ckeditor', 'taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'ui/tooltip', 'util/converter', 'core/logger'], function ($$1, _, __, features, strLimiter, Handlebars, Helpers0, containerHelper, instructionMgr, ckEditor, ckConfigurator, patternMaskHelper, tooltip, converter, loggerFactory) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    strLimiter = strLimiter && Object.prototype.hasOwnProperty.call(strLimiter, 'default') ? strLimiter['default'] : strLimiter;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n    ckConfigurator = ckConfigurator && Object.prototype.hasOwnProperty.call(ckConfigurator, 'default') ? ckConfigurator['default'] : ckConfigurator;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(14, program14, data),fn:self.program(10, program10, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n                <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\" contenteditable></div>\\n            \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \" attributes.class\";\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                <textarea\\n                    class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                    name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n                    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n                ></textarea>\\n            \";\n      return buffer;\n      }\n    function program16(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"pattern=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" contenteditable></div>\\n        \";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <textarea\\n                class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n            ></textarea>\\n        \";\n      return buffer;\n      }\n\n    function program23(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            \";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n\n    function program25(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            <span class=\\\"text-counter-chars\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n            <span class=\\\"text-counter-words\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n        \";\n      return buffer;\n      }\n    function program26(depth0,data) {\n      \n      \n      return \" style=\\\"display: none\\\"\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-extendedTextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"extendedTextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.multiple), {hash:{},inverse:self.program(18, program18, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"text-counter\\\">\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<span class=\\\"\";\n      if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n\";\n      return buffer;\n      });\n    function countTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Create a logger\n     */\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js');\n\n    const hideXhtmlConstraints = !features.isVisible('taoQtiItem/creator/interaction/extendedText/property/xhtmlConstraints');\n    const hideXhtmlRecommendations = !features.isVisible('taoQtiItem/creator/interaction/extendedText/property/xhtmlRecommendations');\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Promise} rendering is async\n     */\n    function render(interaction) {\n        return new Promise(function (resolve, reject) {\n            let $el, expectedLength, minStrings, patternMask, placeholderType, editor;\n            let _styleUpdater, themeLoaded, _getNumStrings;\n            let $container = containerHelper.get(interaction);\n\n            const multiple = _isMultiple(interaction);\n            const limiter = inputLimiter(interaction);\n\n            const placeholderText = interaction.attr('placeholderText');\n\n            const getItemLanguage = () => {\n                let itemLang = $container.closest('.qti-item').attr('lang');\n                let itemLocale = itemLang && itemLang.split('-')[0];\n                if (!itemLocale) {\n                    itemLang = window.document.documentElement.getAttribute('lang');\n                    itemLocale = itemLang && itemLang.split('-')[0];\n                }\n                return itemLocale;\n            };\n\n            const toolbarType = 'extendedText';\n            const ckOptions = {\n                resize_enabled: true,\n                secure: location.protocol === 'https:',\n                forceCustomDomain: true,\n                language: getItemLanguage()\n            };\n\n            if (!multiple) {\n                $el = $container.find('textarea');\n                if (placeholderText) {\n                    $el.attr('placeholder', placeholderText);\n                }\n                if (_getFormat(interaction) === 'xhtml') {\n\n                    if(hideXhtmlConstraints && hideXhtmlRecommendations) {\n                        $container.find('.text-counter').hide();\n                    }\n\n                    if(hideXhtmlConstraints) {\n                        limiter.enabled = false;\n                    }\n\n                    _styleUpdater = function () {\n                        let qtiItemStyle, $editorBody, qtiItem;\n\n                        if (editor.document) {\n                            qtiItem = $$1('.qti-item').get(0);\n                            qtiItemStyle = qtiItem.currentStyle || window.getComputedStyle(qtiItem);\n\n                            if (editor.document.$ && editor.document.$.body) {\n                                $editorBody = $$1(editor.document.$.body);\n                            } else {\n                                $editorBody = $$1(editor.document.getBody().$);\n                            }\n\n                            $editorBody.css({\n                                'background-color': 'transparent',\n                                color: qtiItemStyle.color\n                            });\n                        }\n                    };\n                    themeLoaded = function () {\n                        _styleUpdater();\n                    };\n\n                    editor = _setUpCKEditor(interaction, ckOptions);\n                    if (!editor) {\n                        reject('Unable to instantiate ckEditor');\n                    }\n\n                    editor.on('instanceReady', function () {\n                        _styleUpdater();\n\n                        //TAO-6409, disable navigation from cke toolbar\n                        if (editor.container && editor.container.$) {\n                            $$1(editor.container.$).addClass('no-key-navigation');\n                        }\n\n                        //it seems there's still something done after loaded, so resolved must be defered\n                        _.delay(resolve, 300);\n                    });\n                    if (editor.status === 'ready' || editor.status === 'loaded') {\n                        _.defer(resolve);\n                    }\n                    editor.on('configLoaded', function () {\n                        editor.config = ckConfigurator.getConfig(editor, toolbarType, ckOptions);\n\n                        if (limiter.enabled) {\n                            limiter.listenTextInput();\n                        }\n                    });\n                    editor.on('change', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    $$1(document).on('themechange.themeloader', themeLoaded);\n                } else {\n                    $el.on('keyup.commonRenderer change.commonRenderer', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    if (limiter.enabled) {\n                        limiter.listenTextInput();\n                    }\n\n                    resolve();\n                }\n\n                //multiple inputs\n            } else {\n                $el = $container.find('input');\n                minStrings = interaction.attr('minStrings');\n                expectedLength = interaction.attr('expectedLength');\n                patternMask = interaction.attr('patternMask');\n\n                //setting the checking for minimum number of answers\n                if (minStrings) {\n                    //get the number of filled inputs\n                    _getNumStrings = function ($element) {\n                        let num = 0;\n                        $element.each(function () {\n                            if ($$1(this).val() !== '') {\n                                num++;\n                            }\n                        });\n\n                        return num;\n                    };\n\n                    minStrings = parseInt(minStrings, 10);\n                    if (minStrings > 0) {\n                        $el.on('blur.commonRenderer', function () {\n                            setTimeout(function () {\n                                //checking if the user was clicked outside of the input fields\n\n                                //TODO remove notifications in favor of instructions\n\n                                if (!$el.is(':focus') && _getNumStrings($el) < minStrings) {\n                                    instructionMgr.appendNotification(\n                                        interaction,\n                                        `${__('The minimum number of answers is ')} : ${minStrings}`,\n                                        'warning'\n                                    );\n                                }\n                            }, 100);\n                        });\n                    }\n                }\n\n                //set the fields width\n                if (expectedLength) {\n                    expectedLength = parseInt(expectedLength, 10);\n\n                    if (expectedLength > 0) {\n                        $el.each(function () {\n                            $$1(this).css('width', `${expectedLength}em`);\n                        });\n                    }\n                }\n\n                //set the fields pattern mask\n                if (patternMask) {\n                    $el.each(function () {\n                        _setPattern($$1(this), patternMask);\n                    });\n                }\n\n                //set the fields placeholder\n                if (placeholderText) {\n                    /**\n                     * The type of the fileds placeholder:\n                     * multiple - set placeholder for each field\n                     * first - set placeholder only for first field\n                     * none - dont set placeholder\n                     */\n                    placeholderType = 'first';\n\n                    if (placeholderType === 'multiple') {\n                        $el.each(function () {\n                            $$1(this).attr('placeholder', placeholderText);\n                        });\n                    } else if (placeholderType === 'first') {\n                        $el.first().attr('placeholder', placeholderText);\n                    }\n                }\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Reset the textarea / ckEditor\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function resetResponse(interaction) {\n        if (_getFormat(interaction) === 'xhtml') {\n            _getCKEditor(interaction).setData('');\n        } else {\n            containerHelper.get(interaction).find('input, textarea').val('');\n        }\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {object} response\n     */\n    function setResponse(interaction, response) {\n        const _setMultipleVal = (identifier, value) => {\n            interaction.getContainer().find(`#${identifier}`).val(value);\n        };\n\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\n\n        if (response.base === null && Object.keys(response).length === 1) {\n            response = { base: { string: '' } };\n        }\n\n        if (response.base && typeof response.base[baseType] !== 'undefined') {\n            setText(interaction, response.base[baseType]);\n        } else if (response.list && response.list[baseType]) {\n            for (let i in response.list[baseType]) {\n                const serial = typeof response.list.serial === 'undefined' ? '' : response.list.serial[i];\n                _setMultipleVal(`${serial}_${i}`, response.list[baseType][i]);\n            }\n        } else {\n            throw new Error('wrong response format in argument.');\n        }\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {object}\n     */\n    function getResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const attributes = interaction.getAttributes();\n        const responseDeclaration = interaction.getResponseDeclaration();\n        const baseType = responseDeclaration.attr('baseType');\n        const numericBase = attributes.base || 10;\n        const multiple = !!(\n            attributes.maxStrings &&\n            (responseDeclaration.attr('cardinality') === 'multiple' ||\n                responseDeclaration.attr('cardinality') === 'ordered')\n        );\n        const ret = multiple ? { list: {} } : { base: {} };\n        let values;\n        let value = '';\n\n        if (multiple) {\n            values = [];\n\n            $container.find('input').each(function (i) {\n                const editorValue = $$1(this).val();\n\n                if (attributes.placeholderText && value === attributes.placeholderText) {\n                    values[i] = '';\n                } else {\n                    const convertedValue = converter.convert(editorValue);\n                    if (baseType === 'integer') {\n                        values[i] = parseInt(convertedValue, numericBase);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'float') {\n                        values[i] = parseFloat(convertedValue);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'string') {\n                        values[i] = convertedValue;\n                    }\n                }\n            });\n\n            ret.list[baseType] = values;\n        } else {\n            if (attributes.placeholderText && _getTextareaValue(interaction) === attributes.placeholderText) {\n                value = '';\n            } else {\n                if (baseType === 'integer') {\n                    value = parseInt(converter.convert(_getTextareaValue(interaction)), numericBase);\n                } else if (baseType === 'float') {\n                    value = converter.convert(_getTextareaValue(interaction));\n                } else if (baseType === 'string') {\n                    value = converter.convert(_getTextareaValue(interaction, true));\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n        }\n\n        return ret;\n    }\n\n    /**\n     * Creates an input limiter object\n     * @param {Object} interaction - the extended text interaction\n     * @returns {Object} the limiter\n     */\n    function inputLimiter(interaction) {\n        const $container = containerHelper.get(interaction);\n        const expectedLength = interaction.attr('expectedLength');\n        const expectedLines = interaction.attr('expectedLines');\n        const patternMask = interaction.attr('patternMask');\n        const isCke = _getFormat(interaction) === 'xhtml';\n        let patternRegEx;\n        let $textarea, $charsCounter, $wordsCounter, maxWords, maxLength, $maxLengthCounter, $maxWordsCounter;\n        let enabled = false;\n\n        if (expectedLength || expectedLines || patternMask) {\n            enabled = true;\n            $textarea = $$1('.text-container', $container);\n            $charsCounter = $$1('.count-chars', $container);\n            $wordsCounter = $$1('.count-words', $container);\n            $maxLengthCounter = $$1('.count-max-length', $container);\n            $maxWordsCounter = $$1('.count-max-words', $container);\n\n            if (patternMask !== '') {\n                maxWords = parseInt(patternMaskHelper.parsePattern(patternMask, 'words'), 10);\n                maxLength = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n                maxWords = _.isNaN(maxWords) ? 0 : maxWords;\n                maxLength = _.isNaN(maxLength) ? 0 : maxLength;\n                if (!maxLength && !maxWords) {\n                    patternRegEx = new RegExp(patternMask);\n                }\n                $maxLengthCounter.text(maxLength);\n                $maxWordsCounter.text(maxWords);\n            }\n        }\n\n        /**\n         * The limiter instance\n         */\n        const limiter = {\n            /**\n             * Is the limiter enabled regarding the interaction configuration\n             */\n            enabled,\n\n            /**\n             * Listen for text input into the interaction and limit it if necessary\n             */\n            listenTextInput() {\n                const ignoreKeyCodes = [\n                    8, // backspace\n                    13, // enter\n                    16, // shift\n                    17, // control\n                    46, // delete\n                    37, // arrow left\n                    38, // arrow up\n                    39, // arrow right\n                    40, // arrow down\n                    35, // home\n                    36, // end\n\n                    // ckeditor specific:\n                    1114177, // home\n                    3342401, // Shift + home\n                    1114181, // end\n                    3342405, // Shift + end\n\n                    2228232, // Shift + backspace\n                    2228261, // Shift + arrow left\n                    4456485, // Alt   + arrow left\n                    2228262, // Shift + arrow up\n                    2228263, // Shift + arrow right\n                    4456487, // Alt   + arrow right\n                    2228264, // Shift + arrow down\n                    2228237, // Shift + enter\n\n                    1114120, // Ctrl + backspace\n                    1114177, // Ctrl + a\n                    1114202, // Ctrl + z\n                    1114200 // Ctrl + x\n                ];\n                const spaceKeyCodes = [\n                    32, // space\n                    13, // enter\n                    2228237 // shift + enter in ckEditor\n                ];\n                let isComposing = false;\n                let hasCompositionJustEnded = false;\n\n                const acceptKeyCode = keyCode => _.contains(ignoreKeyCodes, keyCode);\n                const emptyOrSpace = txt => txt && txt.trim() === '' || /\\^s*$/.test(txt);\n                const hasSpace = txt => /\\s+/.test(txt);\n                const getCharBefore = (str, pos) => str && str.substring(Math.max(0, pos - 1), pos);\n                const getCharAfter = (str, pos) => str && str.substring(pos, pos + 1);\n                const noSpaceNode = node => node.type === ckEditor.NODE_TEXT || (!node.isBlockBoundary() && node.getName() !== 'br');\n                const getPreviousNotEmptyNode = range => {\n                    let node = range.getPreviousNode();\n                    /**\n                     * The previous node isn't always the right one, because it can be an empty <b> tag for example.\n                     * So we need to get the previous node until we find a non empty one, but we should not go above body.\n                     */\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let previousSourceNode = node.getPreviousSourceNode();\n                        let nodeElement = previousSourceNode;\n                        if (previousSourceNode && previousSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = previousSourceNode.parentNode || previousSourceNode.$.parentNode;\n                        }\n                        if (!nodeElement || !nodeElement.ownerDocument || !nodeElement.ownerDocument.body.contains(nodeElement)) {\n                            return null;\n                        }\n                        node = previousSourceNode;\n                    }\n                    return node;\n                };\n                const getNextNotEmptyNode = range => {\n                    let node = range.getNextNode();\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let nextSourceNode = node.getNextSourceNode();\n                        let nodeElement = nextSourceNode;\n                        if (nextSourceNode && nextSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = nextSourceNode.parentNode || nextSourceNode.$.parentNode;\n                        }\n                        if (!nodeElement || !nodeElement.ownerDocument || !nodeElement.ownerDocument.body.contains(nodeElement)) {\n                            return null;\n                        }\n                        node = nextSourceNode;\n                    }\n                    return node;\n                };\n                const cancelEvent = e => {\n                    if (e.cancel) {\n                        e.cancel();\n                    } else {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                    return false;\n                };\n                const invalidToolip = tooltip.error($container, __('This is not a valid answer'), {\n                    position: 'bottom',\n                    trigger: 'manual'\n                });\n                const patternHandler = function patternHandler(e) {\n                    if (isComposing || hasCompositionJustEnded) {\n                        // IME composing fires keydown/keyup events\n                        hasCompositionJustEnded = false;\n                        return;\n                    }\n\n                    if (patternRegEx) {\n                        let newValue;\n                        if (isCke) {\n                            // cke has its own object structure\n                            newValue = this.getData();\n                        } else {\n                            // covers input\n                            newValue = e.currentTarget.value;\n                        }\n\n                        if (!newValue) {\n                            return false;\n                        }\n                        _.debounce(function () {\n                            if (!patternRegEx.test(newValue)) {\n                                $container.addClass('invalid');\n                                $container.show();\n                                invalidToolip.show();\n                                containerHelper.triggerResponseChangeEvent(interaction);\n                            } else {\n                                $container.removeClass('invalid');\n                                invalidToolip.dispose();\n                            }\n                        }, 400)();\n                    }\n                };\n\n                /**\n                 * This part works on keyboard input\n                 *\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const keyLimitHandler = e => {\n                    if (isComposing) {\n                        return;\n                    }\n                    // Safari on OS X may send a keydown of 229 after compositionend\n                    if (e.which !== 229) {\n                        hasCompositionJustEnded = false;\n                    }\n\n                    const keyCode = e.data ? e.data.keyCode : e.which;\n                    const wordsCount = maxWords && this.getWordsCount();\n                    const charsCount = maxLength && this.getCharsCount();\n\n                    if (maxWords && wordsCount >= maxWords) {\n                        let left, right, middle;\n\n                        if (isCke) {\n                            const editor = _getCKEditor(interaction);\n                            const sel = editor.getSelection();\n                            const range = sel.getRanges()[0];\n\n                            if (range.startContainer && range.startContainer.type === ckEditor.NODE_TEXT) {\n                                left = getCharBefore(range.startContainer.getText(), range.startOffset);\n                            }\n                            if (!left) {\n                                const node = getPreviousNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    const text = node.getText();\n                                    left = getCharBefore(text, text && text.length);\n                                } else {\n                                    left = ' ';\n                                }\n                            }\n\n                            if (range.endContainer && range.endContainer.type === ckEditor.NODE_TEXT) {\n                                right = getCharAfter(range.endContainer.getText(), range.endOffset);\n                            }\n                            if (!right) {\n                                const node = getNextNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    right = getCharAfter(node.getText(), 0);\n                                } else {\n                                    right = ' ';\n                                }\n                            }\n\n                            middle = sel.getSelectedText();\n                        } else {\n                            const { selectionStart, selectionEnd, value } = $textarea[0];\n                            left = getCharBefore(value, selectionStart);\n                            right = getCharAfter(value, selectionEnd);\n                            middle = value.substring(selectionStart, selectionEnd);\n                        }\n\n                        // Will prevent the keystroke:\n                        // - IF there is a word part before and after the selection,\n                        //   AND the selection does not contain spaces,\n                        //   AND the keystroke is either a space or enter\n                        // - IF there is no word part before and after the selection,\n                        //   AND the selection is empty,\n                        //   AND the keystroke is not from the list of accepted codes,\n                        //   AND the keystroke is not a space\n                        if ((!emptyOrSpace(left) && !emptyOrSpace(right) && !hasSpace(middle) && _.contains(spaceKeyCodes, keyCode)) ||\n                            (emptyOrSpace(left) && emptyOrSpace(right) && !middle && !acceptKeyCode(keyCode) && keyCode !== 32)) {\n                            return cancelEvent(e);\n                        }\n                    }\n\n                    if (maxLength && charsCount >= maxLength && !acceptKeyCode(keyCode)) {\n                        if (!isCke && charsCount > maxLength) {\n                            const textarea = $textarea[0];\n                            textarea.value = textarea.value.substring(0, maxLength);\n                            textarea.focus();\n                        }\n                        return cancelEvent(e);\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                /**\n                 * This part works on drop or paste\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const nonKeyLimitHandler = e => {\n                    let newValue;\n\n                    if (typeof $$1(e.target).attr('data-clipboard') === 'string') {\n                        newValue = $$1(e.target).attr('data-clipboard');\n                    } else if (isCke) {\n                        // cke has its own object structure\n                        newValue = e.data.dataValue;\n                    } else {\n                        // covers input via paste or drop\n                        newValue = e.originalEvent.clipboardData\n                            ? e.originalEvent.clipboardData.getData('text')\n                            : e.originalEvent.dataTransfer.getData('text') ||\n                              e.originalEvent.dataTransfer.getData('text/plain') ||\n                              '';\n                    }\n\n                    // prevent insertion of non-limited data\n                    cancelEvent(e);\n\n                    if (!newValue) {\n                        return false;\n                    }\n\n                    // limit by word or character count if required\n                    if (maxWords) {\n                        newValue = strLimiter.limitByWordCount(newValue, maxWords - this.getWordsCount());\n                    } else if (maxLength) {\n                        newValue = strLimiter.limitByCharCount(newValue, maxLength - this.getCharsCount());\n                    }\n\n                    // insert the cut-off text\n                    if (isCke) {\n                        _getCKEditor(interaction).insertHtml(newValue);\n                    } else {\n                        let elements = containerHelper.get(interaction).find('textarea');\n                        let el = elements[0];\n                        let { selectionStart: start, selectionEnd: end, value: text } = el;\n                        elements.val(text.substring(0, start) + newValue + text.substring(end, text.length));\n                        el.focus();\n                        el.selectionStart = start + newValue.length;\n                        el.selectionEnd = el.selectionStart;\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                const handleCompositionStart = e => {\n                    isComposing = true;\n                    return e;\n                };\n\n                const handleCompositionEnd = e => {\n                    isComposing = false;\n                    hasCompositionJustEnded = true;\n                    // if plain text - then limit input right after composition end event\n                    if (_getFormat(interaction) !== 'xhtml' && maxLength !== null) {\n                        const currentValue = $textarea[0].value;\n                        $textarea[0].value = currentValue.substring(0, maxLength);\n                    }\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                const handleBeforeInput = e => {\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                if (_getFormat(interaction) === 'xhtml') {\n                    const editor = _getCKEditor(interaction);\n\n                    if (maxLength) {\n                        let previousSnapshot = editor.getSnapshot();\n\n                        editor.on('key', function () {\n                            const range = this.createRange();\n                            if (limiter.getCharsCount() > limiter.maxLength) {\n                                const editable = this.editable();\n                                editable.setData(previousSnapshot, true);\n                                range.moveToElementEditablePosition(editable, true);\n                                editor.getSelection().selectRanges([range]);\n                                return;\n                            }\n                            previousSnapshot = editor.getSnapshot();\n                        });\n                    }\n                    editor.on('key', keyLimitHandler);\n                    editor.on('change', evt => {\n                        patternHandler(evt);\n                        _.defer(() => this.updateCounter());\n                    });\n                    editor.on('paste', nonKeyLimitHandler);\n                    // @todo: drop requires cke 4.5\n                    // cke.on('drop', nonKeyLimitHandler);\n                } else {\n                    $textarea\n                        .on('beforeinput.commonRenderer', handleBeforeInput)\n                        .on('input.commonRenderer', () => {\n                            _.defer(() => this.updateCounter());\n                        })\n                        .on('compositionstart.commonRenderer', handleCompositionStart)\n                        .on('compositionend.commonRenderer', handleCompositionEnd)\n                        .on('keyup.commonRenderer', patternHandler)\n                        .on('keydown.commonRenderer', keyLimitHandler)\n                        .on('paste.commonRenderer drop.commonRenderer', nonKeyLimitHandler);\n                }\n            },\n\n            /**\n             * Get the number of words that are actually written in the response field\n             * @returns {Number} number of words\n             */\n            getWordsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                if (_.isEmpty(value)) {\n                    return 0;\n                }\n                // leading and trailing white space don't qualify as words\n                return value.trim().replace(/\\s+/gi, ' ').split(' ').length;\n            },\n\n            /**\n             * Get the number of characters that are actually written in the response field\n             * @returns {Number} number of characters\n             */\n            getCharsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                // remove NO-BREAK SPACE in empty lines added and all new line symbols\n                return value.replace(/[\\r\\n]{1}\\xA0[\\r\\n]{1}/gm, '\\r').replace(/[\\r\\n]+/gm, '').length;\n            },\n\n            /**\n             * Update the counter element\n             */\n            updateCounter() {\n                $charsCounter.text(this.getCharsCount());\n                $wordsCounter.text(this.getWordsCount());\n            },\n\n            maxLength\n        };\n\n        return limiter;\n    }\n\n    /**\n     * return the value of the textarea or ckeditor data\n     * @param  {Object} interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {String} the value\n     */\n    function _getTextareaValue(interaction, raw) {\n        if (_getFormat(interaction) === 'xhtml') {\n            return _ckEditorData(interaction, raw);\n        } else {\n            return containerHelper.get(interaction).find('textarea').val();\n        }\n    }\n\n    /**\n     * Setting the pattern mask for the input, for browsers which doesn't support this feature\n     * @param {jQuery} $element\n     * @param {string} pattern\n     */\n    function _setPattern($element, pattern) {\n        const patt = new RegExp(pattern);\n\n        //test when some data is entering in the input field\n        //@todo plug the validator + tooltip\n        $element.on('keyup.commonRenderer', function () {\n            $element.removeClass('field-error');\n            if (!patt.test($element.val())) {\n                $element.addClass('field-error');\n            }\n        });\n    }\n\n    /**\n     * Whether or not multiple strings are expected from the candidate to\n     * compose a valid response.\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Boolean} true if a multiple\n     */\n    function _isMultiple(interaction) {\n        const attributes = interaction.getAttributes();\n        const response = interaction.getResponseDeclaration();\n        return !!(\n            attributes.maxStrings &&\n            (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n        );\n    }\n\n    /**\n     * Instantiate CkEditor for the interaction\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {Object} [options= {}] - the CKEditor configuration options\n     * @returns {Object} the ckEditor instance (or you'll be in trouble\n     */\n    function _setUpCKEditor(interaction, options) {\n        const $container = containerHelper.get(interaction);\n        const editor = ckEditor.replace($container.find('.text-container')[0], options || {});\n        if (editor) {\n            $container.data('editor', editor.name);\n            return editor;\n        }\n    }\n\n    /**\n     * Destroy CKEditor\n     *\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function _destroyCkEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n        let editor;\n        if (name) {\n            editor = ckEditor.instances[name];\n        }\n        if (editor) {\n            editor.destroy();\n            $container.removeData('editor');\n        }\n    }\n\n    /**\n     * Gets the CKEditor instance\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Object}  CKEditor instance\n     */\n    function _getCKEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n\n        return ckEditor.instances[name];\n    }\n\n    /**\n     * get the text content of the ckEditor ( not the entire html )\n     * @param  {object} interaction the interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {string}             text content of the ckEditor\n     */\n    function _ckEditorData(interaction, raw) {\n        const editor = _getCKEditor(interaction);\n        let data = (editor && editor.getData()) || '';\n\n        if (!raw) {\n            data = _stripTags(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Remove HTML tags from a string\n     * @param {String} str\n     * @returns {String}\n     */\n    function _stripTags(str) {\n        const tempNode = document.createElement('div');\n        tempNode.innerHTML = str;\n        return tempNode.textContent;\n    }\n\n    /**\n     * Get the interaction format\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {String} format in 'plain', 'xhtml', 'preformatted'\n     */\n    function _getFormat(interaction) {\n        const format = interaction.attr('format');\n        if (_.contains(['plain', 'xhtml', 'preformatted'], format)) {\n            return format;\n        }\n        return 'plain';\n    }\n\n    function enable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').removeAttr('disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(false);\n                } else {\n                    editor.readOnly = false;\n                }\n            }\n        }\n    }\n\n    function disable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').attr('disabled', 'disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(true);\n                } else {\n                    editor.readOnly = true;\n                }\n            }\n        }\n    }\n\n    function clearText(interaction) {\n        setText(interaction, '');\n    }\n\n    function setText(interaction, text) {\n        const limiter = inputLimiter(interaction);\n        if (_getFormat(interaction) === 'xhtml') {\n            try {\n                _getCKEditor(interaction).setData(text, function () {\n                    if (limiter.enabled) {\n                        limiter.updateCounter();\n                    }\n                });\n            } catch (e) {\n                logger.warn(`setText error ${e}!`);\n            }\n        } else {\n            containerHelper.get(interaction).find('textarea').val(text);\n            if (limiter.enabled) {\n                limiter.updateCounter();\n            }\n        }\n    }\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $el = $container.find('input, textarea');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            _destroyCkEditor(interaction);\n        }\n\n        //remove event\n        $el.off('.commonRenderer');\n        $$1(document).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                try {\n                    interaction.setResponse(state.response);\n                } catch (e) {\n                    interaction.resetResponse();\n                    throw e;\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    }\n\n    /**\n     * Hydrates the dataset for the interaction with respect to its attributes.\n     *\n     * @param {object} interaction - the interaction instance\n     * @param {object} data - the default data object\n     * @returns {object} the hydrated data set\n     */\n    function getData(interaction, data) {\n        const pattern = interaction.attr('patternMask');\n        const maxWords = parseInt(patternMaskHelper.parsePattern(pattern, 'words'), 10);\n        const maxLength = parseInt(patternMaskHelper.parsePattern(pattern, 'chars'), 10);\n        const expectedLines = parseInt(interaction.attr('expectedLines'), 10);\n        const expectedLength = !isNaN(expectedLines)\n            ? expectedLines * 72\n            : parseInt(interaction.attr('expectedLength'), 10);\n\n        // Build DOM placeholders, this is needed to properly assemble the constraint hints\n        // The interaction will later rely on this to bind the values\n        const countChars = countTpl({ name: 'count-chars', value: 0 });\n        const countWords = countTpl({ name: 'count-words', value: 0 });\n        const countExpectedLength = countTpl({ name: 'count-expected-length', value: expectedLength });\n        const countMaxLength = countTpl({ name: 'count-max-length', value: maxLength });\n        const countMaxWords = countTpl({ name: 'count-max-words', value: maxWords });\n\n        return _.merge(data || {}, {\n            maxWords: !isNaN(maxWords) ? maxWords : 0,\n            maxLength: !isNaN(maxLength) ? maxLength : 0,\n            attributes: !isNaN(expectedLines) ? { expectedLength } : void 0,\n            // Build the constraint hints from translated text and DOM placeholders\n            // The template will render them as it, then the interaction will update the value from the binding\n            constraintHints: {\n                expectedLength: __('%s of %s characters recommended.', countChars, countExpectedLength),\n                maxLength: __('%s of %s characters maximum.', countChars, countMaxLength),\n                maxWords: __('%s of %s words maximum.', countWords, countMaxWords)\n            }\n        });\n    }\n\n    /**\n     * Expose the common renderer for the extended text interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction\n     */\n    var ExtendedTextInteraction = {\n        qtiClass: 'extendedTextInteraction',\n        getContainer: containerHelper.get,\n        template,\n        render,\n        setResponse,\n        getResponse,\n        getData,\n        resetResponse,\n        destroy,\n        getState,\n        setState,\n        enable,\n        disable,\n        clearText,\n        setText,\n        inputLimiter\n    };\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',['lodash', 'i18n', 'jquery', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, __, $$1, Handlebars, Helpers0, containerHelper, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-gapMatchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"gapMatchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <ul class=\\\"choice-area none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    var setChoice = function(interaction, $choice, $target) {\n        var choiceSerial = $choice.data('serial'),\n            choice = interaction.getChoice(choiceSerial);\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n        _choiceUsages[choiceSerial]++;\n\n        $target\n            .data('serial', choiceSerial)\n            .html($choice.html())\n            .addClass('filled');\n\n        if (\n            !interaction.responseMappingMode &&\n            choice.attr('matchMax') &&\n            _choiceUsages[choiceSerial] >= choice.attr('matchMax')\n        ) {\n            $choice.attr('class', 'deactivated');\n        }\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n    };\n\n    var unsetChoice = function(interaction, $choice) {\n        var serial = $choice.data('serial');\n        var $container = containerHelper.get(interaction);\n\n        $container\n            .find('.choice-area [data-serial=' + serial + ']')\n            .removeClass()\n            .addClass('qti-choice');\n\n        _choiceUsages[serial]--;\n\n        $choice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if (!interaction.swapping) {\n            //set correct response\n            containerHelper.triggerResponseChangeEvent(interaction);\n        }\n    };\n\n    var getChoice = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.choice-area [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    var getGap = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.qti-flow-container [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $container.find('.choice-area');\n        var $flowContainer = $container.find('.qti-flow-container');\n\n        var $activeChoice = null;\n        var $activeDrop = null;\n\n        var isDragAndDropEnabled;\n        var dragOptions;\n        var scaleX, scaleY;\n\n        var $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n        var choiceSelector = $choiceArea.selector + ' .qti-choice';\n        var gapSelector = $flowContainer.selector + ' .gapmatch-content';\n        var filledGapSelector = gapSelector + '.filled';\n        var binSelector = $container.selector + ' .remove-choice';\n\n        var _getChoice = function(serial) {\n            return $choiceArea.find('[data-serial=' + serial + ']');\n        };\n\n        var _setChoice = function($choice, $target) {\n            return setChoice(interaction, $choice, $target);\n        };\n\n        var _resetSelection = function() {\n            if ($activeChoice) {\n                $flowContainer.find('.remove-choice').remove();\n                $activeChoice.removeClass('deactivated active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            }\n        };\n\n        var _unsetChoice = function($choice) {\n            return unsetChoice(interaction, $choice);\n        };\n\n        var _isInsertionMode = function() {\n            return $activeChoice && !$activeChoice.hasClass('filled');\n        };\n\n        var _isModeEditing = function() {\n            return $activeChoice && $activeChoice.hasClass('filled');\n        };\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').gapMatch) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').gapMatch;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function() {\n                if ($activeDrop) {\n                    interact(gapSelector).fire({\n                        type: 'drop',\n                        target: $activeDrop.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 1, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleChoiceSelect($target);\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes filled gaps draggables\n            interact(filledGapSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleFilledGapSelect($target);\n\n                            _iFrameDragFix(filledGapSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n\n                            if ($activeChoice) {\n                                _unsetChoice($activeChoice);\n                                _resetSelection();\n                            }\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes gaps droppables\n            interact(gapSelector).dropzone({\n                overlap: 0.05,\n                ondragenter: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $activeDrop = $target;\n                    $target.addClass('dropzone');\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function(e) {\n                    _handleGapSelect($$1(e.target));\n\n                    this.ondragleave(e);\n                },\n                ondragleave: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $target.removeClass('dropzone');\n                    $dragged.removeClass('droppable');\n\n                    $activeDrop = null;\n                }\n            });\n        }\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function(e) {\n            e.stopPropagation();\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleChoiceSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(gapSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleGapSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(binSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _unsetChoice($activeChoice);\n            _resetSelection();\n            e.preventDefault();\n        });\n\n        // Common handlers\n\n        function _handleChoiceSelect($target) {\n            if (($activeChoice && $target.hasClass('active')) || $target.hasClass('deactivated')) {\n                return;\n            }\n            _resetSelection();\n\n            $activeChoice = $target.addClass('active');\n            $$1(gapSelector).addClass('empty');\n        }\n\n        function _handleFilledGapSelect($target) {\n            $activeChoice = $target;\n            $$1(gapSelector).addClass('active');\n        }\n\n        function _handleGapSelect($target) {\n            var choiceSerial, targetSerial;\n\n            if (_isInsertionMode()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    //set choices:\n                    if (targetSerial) {\n                        _unsetChoice($target);\n                    }\n\n                    _setChoice($activeChoice, $target);\n                }\n\n                $activeChoice.removeClass('active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            } else if (_isModeEditing()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    _unsetChoice($activeChoice);\n                    if (targetSerial) {\n                        //swapping:\n                        _unsetChoice($target);\n                        _setChoice(_getChoice(targetSerial), $activeChoice);\n                    }\n                    _setChoice(_getChoice(choiceSerial), $target);\n                }\n\n                _resetSelection();\n            } else if ($target.data('serial') && $target.hasClass('filled')) {\n                targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $flowContainer\n                    .find('>li>div')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                //append trash bin:\n                $target.append($bin);\n            }\n        }\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        $$1('.gapmatch-content.active', $container).removeClass('active');\n        $$1('.gapmatch-content', $container).each(function() {\n            unsetChoice(interaction, $$1(this));\n        });\n    };\n\n    var _setPairs = function(interaction, pair) {\n        if (pair && pair.length) {\n            setChoice(interaction, getChoice(interaction, pair[0]), getGap(interaction, pair[1]).find('.gapmatch-content'));\n        }\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        resetResponse(interaction);\n        let pairs = pciResponse.unserialize(response, interaction);\n        if ( _.isArray(pairs) && _.isArray(pairs[0])) {\n            _.forEach(pairs, pair => _setPairs(interaction, pair));\n        } else {\n            _setPairs(interaction, pairs);\n        }\n    };\n\n    var _getRawResponse = function(interaction) {\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $$1('.gapmatch-content', $container).each(function() {\n            var choiceSerial = $$1(this).data('serial'),\n                pair = [];\n\n            if (choiceSerial) {\n                pair.push(interaction.getChoice(choiceSerial).attr('identifier'));\n            }\n            pair.push($$1(this).data('identifier'));\n\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10307\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' .qti-choice').unset();\n        interact($container.find('.qti-flow-container').selector + ' .gapmatch-content').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //restore selection\n        $container.find('.gapmatch-content').empty();\n        $container.find('.active').removeClass('active');\n        $container.find('.remove-choice').remove();\n        $container.find('.empty').removeClass('empty');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the gapmatch interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GapMatchInteraction\n     */\n    var GapMatchInteraction = {\n        qtiClass: 'gapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicAssociateInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the element that has the active state\n     * @private\n     * @param {Object} interaction\n     * @returns {Raphael.Element} the active element\n     */\n    const _getActiveElement = function _getActiveElement(interaction) {\n        let active;\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && element.active === true) {\n                active = element;\n                return false;\n            }\n        });\n        return active;\n    };\n\n    /**\n     * Create a path from a src element to a destination.\n     * The path is selectable and can be removed by itself\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} srcElement - the path starts from this shape\n     * @param {Raphael.Element} destElement - the path ends to this shape\n     * @param {Function} onRemove - called back on path remove\n     */\n    const _createPath = function _createPath(interaction, srcElement, destElement, onRemove) {\n        const $container = containerHelper.get(interaction);\n\n        //virtual set, not a raphael one, just to group the elements\n        let vset = [];\n\n        //get the middle point of the source shape\n        const src = srcElement.getBBox();\n        const sx = src.x + src.width / 2;\n        const sy = src.y + src.height / 2;\n\n        //get the middle point of the source shape\n        const dest = destElement.getBBox();\n        const dx = dest.x + dest.width / 2;\n        const dy = dest.y + dest.height / 2;\n\n        //create a path with bullets at the beginning and the end\n        const srcBullet = interaction.paper.circle(sx, sy, 3).attr(graphic._style['assoc-bullet']);\n\n        const destBullet = interaction.paper.circle(dx, dy, 3).attr(graphic._style['assoc-bullet']);\n\n        const path = interaction.paper\n            .path('M' + sx + ',' + sy + 'L' + sx + ',' + sy)\n            .attr(graphic._style.assoc)\n            .animate({ path: 'M' + sx + ',' + sy + 'L' + dx + ',' + dy }, 300);\n\n        //create an overall layer that make easier the path selection\n        const layer = interaction.paper.path('M' + sx + ',' + sy + 'L' + dx + ',' + dy).attr(graphic._style['assoc-layer']);\n\n        //get the middle of the path\n        const midPath = layer.getPointAtLength(layer.getTotalLength() / 2);\n\n        //create an hidden background for the closer\n        const closerBg = interaction.paper.circle(midPath.x, midPath.y, 9).attr(graphic._style['close-bg']).toBack();\n\n        //create an hidden closer\n        const closer = interaction.paper\n            .path(graphic._style.close.path)\n            .attr(graphic._style.close)\n            .transform('T' + (midPath.x - 9) + ',' + (midPath.y - 9))\n            .attr('title', _('Click again to remove'))\n            .toBack();\n\n        //the path is below the shapes\n        srcElement.toFront();\n        destElement.toFront();\n\n        //add the path into a set\n        vset = [srcBullet, path, destBullet, layer, closerBg, closer];\n        interaction._vsets.push(vset);\n\n        //to identify the element of the set outside the context\n        _.invoke(vset, 'data', 'assoc-path', true);\n\n        //enable to select the path by clicking the invisible layer\n        layer.click(function selectLigne() {\n            if (closer.attrs.opacity === 0) {\n                showCloser();\n            } else {\n                hideCloser();\n            }\n        });\n\n        $container.on('unselect.graphicassociate', function () {\n            hideCloser();\n        });\n\n        function showCloser() {\n            closerBg.toFront().animate({ opacity: 0.8 }, 300).click(removeSet);\n            closer.toFront().animate({ opacity: 1 }, 300).click(removeSet);\n        }\n\n        function hideCloser() {\n            if (closerBg && closerBg.type) {\n                closerBg\n                    .animate({ opacity: 0 }, 300, function () {\n                        closerBg.toBack();\n                    })\n                    .unclick();\n                closer\n                    .animate({ opacity: 0 }, 300, function () {\n                        closer.toBack();\n                    })\n                    .unclick();\n            }\n        }\n\n        //remove set handler\n        function removeSet() {\n            _.invoke(vset, 'remove');\n            interaction._vsets = _.without(interaction._vsets, vset);\n            if (typeof onRemove === 'function') {\n                onRemove();\n            }\n        }\n    };\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || 0;\n            matchable = matchMax === 0 || matchMax > matching;\n        }\n        return matchable;\n    };\n    /**\n     * Makes the shapes selectable\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} active - the active shape\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction, active) {\n        const assocs = active.data('assocs') || [];\n        const choices = interaction.getChoices();\n        const activeChoice = choices[active.id];\n\n        //update the shape state\n        _.forEach(choices, function (choice) {\n            if (!_.contains(assocs, choice.id())) {\n                const element = interaction.paper.getById(choice.serial);\n                const assocsElement = element.data('assocs') || [];\n                if (\n                    !element.active &&\n                    element.id !== active.id &&\n                    _isMatchable(element) &&\n                    !_.contains(assocsElement, activeChoice.id())\n                ) {\n                    element.selectable = true;\n                    graphic.updateElementState(element, 'selectable');\n                }\n            }\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        let responses = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            const assocs = element.data('assocs');\n            if (element && assocs) {\n                responses = responses.concat(\n                    _.map(assocs, function (id) {\n                        return [choice.id(), id];\n                    })\n                );\n            }\n        });\n        return responses;\n    };\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (image) {\n            image.click(function () {\n                _shapesUnSelectable(interaction);\n                $container.trigger('unselect.graphicassociate');\n            });\n        }\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const shape = choice.attr('shape');\n        const coords = choice.attr('coords');\n        const maxAssociations = interaction.attr('maxAssociations');\n\n        graphic\n            .createElement(interaction.paper, shape, coords, {\n                id: choice.serial,\n                title: __('Select this area to start an association')\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', 0)\n            .removeData('assocs')\n            .click(function () {\n                //can't create more associations than the maxAssociations attr\n                if (maxAssociations > 0 && _getRawResponse(interaction).length >= maxAssociations) {\n                    _shapesUnSelectable(interaction);\n                    instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                    return;\n                }\n                const active = _getActiveElement(interaction);\n                if (this.selectable) {\n                    if (active) {\n                        //increment the matching counter\n                        active.data('matching', active.data('matching') + 1);\n                        this.data('matching', this.data('matching') + 1);\n\n                        //attach the response to the active (not the dest)\n                        const assocs = active.data('assocs') || [];\n                        assocs.push(choice.id());\n                        active.data('assocs', assocs);\n\n                        //and create the path\n                        _createPath(interaction, active, this, () => {\n                            //decrement the matching counter\n                            active.data('matching', active.data('matching') - 1);\n                            this.data('matching', this.data('matching') - 1);\n\n                            //detach the response from the active\n                            active.data('assocs', _.pull(active.data('assocs') || [], choice.id()));\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                        });\n                    }\n                    _shapesUnSelectable(interaction);\n                } else if (this.active) {\n                    _shapesUnSelectable(interaction);\n                } else if (_isMatchable(this)) {\n                    if (active) {\n                        _shapesUnSelectable(interaction);\n                    }\n                    graphic.updateElementState(this, 'active', __('Select this area to start an association'));\n                    this.active = true;\n                    _shapesSelectable(interaction, this);\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n            interaction._vsets = [];\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //make the paper clear the selection by clicking it\n            _paperUnSelect(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minAssociations'),\n                max: interaction.attr('maxAssociations'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data && data.target) {\n                        graphic.highlightError(data.target);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n                if (responseValues.length === 2 && !Array.isArray(responseValues[0]) && !Array.isArray(responseValues[1])) {\n                    responseValues = [responseValues];\n                }\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                //create an object with choiceId => shapeElement\n                const map = _.transform(interaction.getChoices(), function (res, choice) {\n                    res[choice.id()] = interaction.paper.getById(choice.serial);\n                });\n                _.forEach(responseValues, function (responseValue) {\n                    if (_.isArray(responseValue) && responseValue.length === 2) {\n                        const el1 = map[responseValue[0]];\n                        const el2 = map[responseValue[1]];\n                        if (el1 && el2) {\n                            graphic.trigger(el1, 'click');\n                            graphic.trigger(el2, 'click');\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const toRemove = [];\n\n        //reset response and state bound to shapes\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.data({\n                    max: choice.attr('matchMax'),\n                    matching: 0,\n                    assocs: []\n                });\n            }\n        });\n\n        if (interaction && interaction.paper) {\n            //remove the paths, but outside the forEach as it is implemented as a linked list\n            interaction.paper.forEach(function (elt) {\n                if (elt.data('assoc-path')) {\n                    toRemove.push(elt);\n                }\n            });\n        }\n        _.invoke(toRemove, 'remove');\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $container.off('.graphicassociate');\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction\n     */\n    var GraphicAssociateInteraction = {\n        qtiClass: 'graphicAssociateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',['jquery', 'lodash', 'i18n', 'module', 'core/mouseEvent', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'interact', 'ui/interactUtils'], function ($$1, _, __, module, mouseEvent, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicGapMatchInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal source\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.gapImgs) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.gapImgs); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.gapImgs) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    let isDragAndDropEnabled;\n\n    // this represents the state for the active droppable zone\n    // we need it only to access the active dropzone in the iFrameFix\n    // should be removed when the old test runner is discarded\n    let activeDrop = null;\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    const _choiceUsages = {};\n\n    /**\n     * This options enables to support old items created with the wrong\n     * direction in the directedpairs.\n     *\n     * @deprecated\n     */\n    const isDirectedPairFlipped = module.config().flipDirectedPair;\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || [];\n            matchable = matchMax === 0 || matchMax > matching.length;\n        }\n        return matchable;\n    };\n\n    /**\n     * Makes the shapes selectable (at least those who can still accept matches)\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction) {\n        const tooltip = __('Select the area to add an image');\n\n        //update the shape state\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (_isMatchable(element)) {\n                element.selectable = true;\n                graphic.setStyle(element, 'selectable');\n                graphic.updateTitle(element, tooltip);\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, tooltip);\n            });\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                graphic.setStyle(element, 'basic');\n                graphic.updateTitle(element, __('Select an image first'));\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, __('Remove'));\n            });\n        });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $gapImages = $$1('ul > li', $container);\n        const bgImage = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (bgImage) {\n            interact(bgImage.node).on('tap', function () {\n                _shapesUnSelectable(interaction);\n                $gapImages.removeClass('active');\n            });\n        }\n    };\n\n    /**\n     * Sets a choice and marks as disabled if at max\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _setChoice = function _setChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getGapImg(choiceSerial);\n        let matchMax;\n        let usages;\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n\n        _choiceUsages[choiceSerial]++;\n\n        // disable choice if maxium usage reached\n        if (!interaction.responseMappingMode && choice.attr('matchMax')) {\n            matchMax = +choice.attr('matchMax');\n            usages = +_choiceUsages[choiceSerial];\n\n            // note: if matchMax is 0, then test taker is allowed unlimited usage of that choice\n            if (matchMax !== 0 && matchMax <= usages) {\n                interact($choice.get(0)).draggable(false);\n                $choice.addClass('disabled');\n                $choice.removeClass('selectable');\n            }\n        }\n    };\n\n    /**\n     * Unset a choice and unmark as disabled\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _unsetChoice = function _unsetChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n\n        _choiceUsages[choiceSerial]--;\n\n        $choice.removeClass('disabled');\n        $choice.addClass('selectable');\n        interact($choice.get(0)).draggable(true);\n    };\n\n    /**\n     * Select a shape (= hotspot) (a gap image must be active)\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} element - the selected shape\n     * @param {Boolean} [trackResponse = true] - if the selection trigger a response chane\n     */\n    const _selectShape = function _selectShape(interaction, element, trackResponse) {\n        let $img, $clone, id, bbox, shapeOffset, activeOffset, matching, currentCount;\n\n        //lookup for the active element\n        const $container = containerHelper.get(interaction);\n        const $gapList = $$1('ul', $container);\n        const $active = $gapList.find('.active:first');\n        const $imageBox = $$1('.main-image-box', $container);\n        const boxOffset = $imageBox.offset();\n\n        if ($active.length) {\n            //the macthing elements are linked to the shape\n            id = $active.data('identifier');\n            matching = element.data('matching') || [];\n            matching.push(id);\n            element.data('matching', matching);\n            currentCount = matching.length;\n\n            //the image to clone\n            $img = $active.find('img');\n\n            //then reset the state of the shapes and the gap images\n            _shapesUnSelectable(interaction);\n            $gapList.children().removeClass('active');\n\n            _setChoice(interaction, $active);\n\n            $clone = $img.clone();\n            shapeOffset = $$1(element.node).offset();\n            activeOffset = $active.offset();\n\n            $clone.css({\n                position: 'absolute',\n                display: 'block',\n                'z-index': 10000,\n                opacity: 0.8,\n                top: activeOffset.top - boxOffset.top,\n                left: activeOffset.left - boxOffset.left\n            });\n\n            $clone.appendTo($imageBox);\n            $clone.animate(\n                {\n                    top: shapeOffset.top - boxOffset.top,\n                    left: shapeOffset.left - boxOffset.left\n                },\n                200,\n                function animationEnd() {\n                    $clone.remove();\n\n                    //extract some coords for positioning\n                    bbox = element.getBBox();\n\n                    //create an image into the paper and move it to the selected shape\n                    const gapFiller = graphic\n                        .createBorderedImage(interaction.paper, {\n                            url: $img.attr('src'),\n                            left: bbox.x + 8 * (currentCount - 1),\n                            top: bbox.y + 8 * (currentCount - 1),\n                            width: parseInt($img.attr('width'), 10),\n                            height: parseInt($img.attr('height'), 10),\n                            padding: 0,\n                            border: false,\n                            shadow: true\n                        })\n                        .data('identifier', id)\n                        .toFront();\n\n                    const gapFillerImage = gapFiller[2].node;\n                    interact(gapFillerImage).on('tap', function (e) {\n                        const target = e.currentTarget;\n                        const rElement = interaction.paper.getById(target.raphaelid);\n\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // adding a new gapfiller on the hotspot by simulating a click on the underlying shape...\n                        if ($gapList.find('.active').length > 0) {\n                            interactUtils.tapOn(element.node);\n\n                            // ... or removing the existing gapfiller\n                        } else {\n                            //update the element matching array\n                            element.data(\n                                'matching',\n                                _.without(element.data('matching') || [], rElement.data('identifier'))\n                            );\n\n                            //delete interaction.gapFillers[interaction.gapFillers.indexOf(gapFiller)];\n                            interaction.gapFillers = _.without(interaction.gapFillers, gapFiller);\n\n                            gapFiller.remove();\n\n                            _unsetChoice(interaction, $active);\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                        }\n                    });\n\n                    interaction.gapFillers.push(gapFiller);\n\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                }\n            );\n        }\n    };\n\n    /**\n     * Render a choice (= hotspot) inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     *\n     * @private\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        //create the shape\n        const rElement = graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select an image first'),\n                hover: false\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', []);\n\n        interact(rElement.node).on('tap', function onClickShape() {\n            handleShapeSelect();\n        });\n\n        if (isDragAndDropEnabled) {\n            interact(rElement.node).dropzone({\n                overlap: 0.15,\n                ondragenter: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'hover');\n                        activeDrop = rElement.node;\n                    }\n                },\n                ondrop: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        handleShapeSelect();\n                        activeDrop = null;\n                    }\n                },\n                ondragleave: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        activeDrop = null;\n                    }\n                }\n            });\n        }\n\n        function handleShapeSelect() {\n            // check if can make the shape selectable on click\n            if (_isMatchable(rElement) && rElement.selectable === true) {\n                _selectShape(interaction, rElement);\n            }\n        }\n    };\n\n    const _iFrameDragFix = function _iFrameDragFix(draggableSelector, target) {\n        interactUtils.iFrameDragFixOn(function () {\n            if (activeDrop) {\n                interact(activeDrop).fire({\n                    type: 'drop',\n                    target: activeDrop,\n                    relatedTarget: target\n                });\n            }\n            interact(draggableSelector).fire({\n                type: 'dragend',\n                target: target\n            });\n        });\n    };\n\n    /**\n     * Render the list of gap fillers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $gapList - the list than contains the orderers\n     */\n    const _renderGapList = function _renderGapList(interaction, $gapList) {\n        const gapFillersSelector = $gapList.selector + ' li';\n        let dragOptions;\n        let scaleX, scaleY;\n\n        interact(gapFillersSelector).on('tap', function onClickGapImg(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            toggleActiveGapState($$1(e.currentTarget));\n        });\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            $$1(gapFillersSelector).each(function (index, gap) {\n                interact(gap)\n                    .draggable(\n                        _.assign({}, dragOptions, {\n                            onstart: function (e) {\n                                const $target = $$1(e.target);\n                                _setActiveGapState($target);\n                                $target.addClass('dragged');\n\n                                _iFrameDragFix(gapFillersSelector, e.target);\n                                const scale = interactUtils.calculateScale(e.target);\n                                scaleX = scale[0];\n                                scaleY = scale[1];\n                            },\n                            onmove: function (e) {\n                                interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            },\n                            onend: function (e) {\n                                _.defer(() => {\n                                    const $target = $$1(e.target);\n                                    _setInactiveGapState($target);\n                                    $target.removeClass('dragged');\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n                                });\n                            }\n                        })\n                    )\n                    .styleCursor(false);\n            });\n        }\n\n        function toggleActiveGapState($target) {\n            if (!$target.hasClass('disabled')) {\n                if ($target.hasClass('active')) {\n                    _setInactiveGapState($target);\n                } else {\n                    _setActiveGapState($target);\n                }\n            }\n        }\n\n        function _setActiveGapState($target) {\n            $gapList.children('li').removeClass('active');\n            $target.addClass('active');\n            _shapesSelectable(interaction);\n        }\n\n        function _setInactiveGapState($target) {\n            $target.removeClass('active');\n            _shapesUnSelectable(interaction);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @return {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const $gapList = $$1('ul.source', $container);\n            const background = interaction.object.attributes;\n\n            interaction.gapFillers = [];\n\n            if (\n                self.getOption &&\n                self.getOption('enableDragAndDrop') &&\n                self.getOption('enableDragAndDrop').graphicGapMatch\n            ) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').graphicGapMatch;\n            }\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                resize: function (newSize, factor) {\n                    $gapList.css('max-width', newSize + 'px');\n                    if (factor !== 1) {\n                        $gapList.find('img').each(function () {\n                            const $img = $$1(this);\n                            $img.width($img.attr('width') * factor);\n                            $img.height($img.attr('height') * factor);\n                        });\n                    }\n                },\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //create the list of gap images\n            _renderGapList(interaction, $gapList);\n\n            //clicking the paper to reset selection\n            _paperUnSelect(interaction);\n        });\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of matches\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const pairs = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && _.isArray(element.data('matching'))) {\n                _.forEach(element.data('matching'), function (gapImg) {\n                    //backward support of previous order\n                    if (isDirectedPairFlipped) {\n                        pairs.push([choice.id(), gapImg]);\n                    } else {\n                        pairs.push([gapImg, choice.id()]);\n                    }\n                });\n            }\n        });\n        return _.sortBy(pairs, [0, 1]);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                responseValues = null;\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    const element = interaction.paper.getById(choice.serial);\n                    if (element) {\n                        _.forEach(responseValues, function (pair) {\n                            if (pair.length === 2) {\n                                //backward support of previous order\n                                const responseChoice = isDirectedPairFlipped ? pair[0] : pair[1];\n                                const responseGap = isDirectedPairFlipped ? pair[1] : pair[0];\n                                if (responseChoice === choice.id()) {\n                                    $$1('[data-identifier=\"' + responseGap + '\"]', $container).addClass('active');\n                                    _selectShape(interaction, element);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _shapesUnSelectable(interaction);\n\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            interactUtils.tapOn(gapFiller.items[2][0]); // this refers to the gapFiller image\n        });\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        return pciResponse.serialize(raw, interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n\n            interact($container.find('ul.source li').selector).unset(); // gapfillers\n            interact($container.find('.main-image-box rect').selector).unset(); // choices/hotspot\n        }\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var GraphicGapMatchInteraction = {\n        qtiClass: 'graphicGapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        isDirectedPairFlipped: isDirectedPairFlipped\n    };\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicOrderInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal ordinals\\\"></ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Creates ALL the texts (the numbers to display in the shapes). They are created styled but hidden.\n     *\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Number} size - the number of numbers to create...\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @return {Array} the creates text element\n     */\n    const _createTexts = function _createTexts(paper, size) {\n        const texts = [];\n        _.times(size, function (index) {\n            const number = index + 1;\n            const text = graphic.createText(paper, {\n                id: 'text-' + number,\n                content: number,\n                title: __('Remove'),\n                style: 'order-text',\n                hide: true,\n                disableEvents: true\n            });\n\n            texts.push(text);\n        });\n        return texts;\n    };\n    /**\n     * Render the list of numbers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _renderOrderList = function _renderOrderList(interaction, $orderList) {\n        let size = _.size(interaction.getChoices());\n        const min = interaction.attr('minChoices');\n        const max = interaction.attr('maxChoices');\n\n        //calculate the number of orderer to display\n        if (max > 0 && max <= size) {\n            size = max;\n        } else if (min > 0 && min <= size) {\n            size = min;\n        }\n\n        //add them to the list\n        _.times(size, function (index) {\n            const position = index + 1;\n            const $orderer = $$1('<li class=\"selectable\" data-number=\"' + position + '\">' + position + '</li>');\n            if (index === 0) {\n                $orderer.addClass('active');\n            }\n            $orderList.append($orderer);\n        });\n\n        //create related svg texts\n        _createTexts(interaction.paper, size);\n\n        //bind the activation event\n        const $orderers = $orderList.children('li');\n        $orderers.click(function (e) {\n            e.preventDefault();\n            const $orderer = $$1(this);\n\n            if (!$orderer.hasClass('active') && !$orderer.hasClass('disabled')) {\n                $orderers.removeClass('active');\n                $orderer.addClass('active');\n            }\n        });\n    };\n    /**\n     * Show the text that match the element's number.\n     * We need to display it at the center of the shape.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to show the text for\n     */\n    const _showText = function _showText(paper, element) {\n        const bbox = element.getBBox();\n\n        //we retrieve the good text from it's id\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            //move it to the center of the shape (using absolute transform), and than display it\n            const transf = 'T' + (bbox.x + bbox.width / 2) + ',' + (bbox.y + bbox.height / 2);\n            text.transform(transf).show().toFront();\n        }\n    };\n    /**\n     * Select a shape to position an order\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the selected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _selectShape = function _selectShape(paper, element, $orderList) {\n        //lookup for the active number\n        const $active = $orderList.find('.active:first');\n        if ($active.length && $active.data('number') > 0) {\n            //associate the current number directly to the element\n            element.data('number', $active.data('number'));\n            element.active = true;\n            _showText(paper, element);\n            graphic.updateElementState(element, 'active');\n\n            //update the state of the order list\n            $active.toggleClass('active disabled').siblings(':not(.disabled)').first().toggleClass('active');\n        }\n    };\n    /**\n     * Hide an element text.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to hide the text for\n     */\n    const _hideText = function _hideText(paper, element) {\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            text.hide();\n        }\n    };\n    /**\n     * Unselect a shape to free the position\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the unselected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _unselectShape = function _unselectShape(paper, element, $orderList) {\n        const number = element.data('number');\n        const unsetNumbers = [number];\n\n        $orderList.children(':not(.disabled)').each(function () {\n            unsetNumbers.push($$1(this).data('number'));\n        });\n\n        const activeNumber = Math.min.apply(Math, unsetNumbers) || number;\n\n        //update element state\n        element.active = false;\n        _hideText(paper, element);\n        element.removeData('number');\n        graphic.updateElementState(element, 'basic');\n\n        //reset order list state and activate the removed number\n        $orderList\n            .children()\n            .removeClass('active')\n            .filter('[data-number=' + number + ']')\n            .removeClass('disabled');\n\n        // Set (min) active number\n        $orderList.find('li[data-number=\"' + activeNumber + '\"]').addClass('active');\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, $orderList, choice) {\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n                if (this.active) {\n                    _unselectShape(interaction.paper, this, $orderList);\n                } else {\n                    _selectShape(interaction.paper, this, $orderList);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice });\n            });\n    };\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const response = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const elt = interaction.paper.getById(choice.serial);\n            if (elt && elt.data('number')) {\n                response.push({\n                    index: elt.data('number'),\n                    id: choice.id()\n                });\n            }\n        });\n        return _(response).sortBy('index').map('id').value();\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const $orderList = $$1('ul', $container);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //create the list of number to order\n            _renderOrderList(interaction, $orderList);\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction, $orderList));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    graphic.highlightError(data.target);\n                }\n            });\n        });\n    };\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n        if (response && interaction.paper) {\n            try {\n                //try to unserualize tthe pci response\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(responseValues, function (responseValue, index) {\n                    const number = index + 1;\n\n                    //get the choice that match the response\n                    const choice = _(interaction.getChoices())\n                        .where({ attributes: { identifier: responseValue } })\n                        .first();\n                    if (choice) {\n                        const element = interaction.paper.getById(choice.serial);\n                        if (element) {\n                            //activate the orderer to be consistant\n                            $orderList.children('[data-number=' + number + ']').addClass('active');\n\n                            //select the related shape\n                            _selectShape(interaction.paper, element, $orderList);\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                _unselectShape(interaction.paper, element, $orderList);\n            }\n        });\n\n        $orderList.children('li').removeClass('active disabled').first().addClass('active');\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var GraphicOrderInteraction = {\n        qtiClass: 'graphicOrderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-hotspotInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const $container = containerHelper.get(interaction);\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function () {\n                if (this.active) {\n                    graphic.updateElementState(this, 'basic', __('Select this area'));\n                    this.active = false;\n                    $container.trigger('inactiveChoice.qti-widget', [choice, this]);\n                } else {\n                    graphic.updateElementState(this, 'active', __('Click again to remove'));\n                    this.active = true;\n                    $container.trigger('activeChoice.qti-widget', [choice, this]);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        return _(interaction.getChoices())\n            .map(function (choice) {\n                const rElement = interaction.paper.getById(choice.serial);\n                return rElement && rElement.active === true ? choice.id() : false;\n            })\n            .filter(_.isString)\n            .value();\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data.target.active) {\n                        data.target.active = false;\n                        graphic.updateElementState(this, 'basic', __('Select this area'));\n                        graphic.highlightError(data.target);\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                        $container.trigger('inactiveChoice.qti-widget', [data.choice, data.target]);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    if (_.contains(responseValues, choice.attributes.identifier)) {\n                        const rElement = interaction.paper.getById(choice.serial);\n                        if (rElement) {\n                            rElement.active = true;\n                            graphic.updateElementState(rElement, 'active', __('Click again to remove'));\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: rElement });\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n        instructionMgr.resetInstructions(interaction);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var HotspotInteraction = {\n        qtiClass: 'hotspotInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-hottextInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"hottextInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"qti-flow-container\\\">\";\n    if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"</div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   */\n  var pseudoLabel = function(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      var setChoice = function($choice, interaction) {\n          var $inupt = $choice.find('input');\n\n          if ($inupt.prop('checked') || $inupt.hasClass('disabled')) {\n              $inupt.prop('checked', false);\n          } else {\n              var maxChoices = parseInt(interaction.attr('maxChoices'));\n              var currentChoices = _.values(_getRawResponse(interaction)).length;\n\n              if (currentChoices < maxChoices || maxChoices === 0) {\n                  $inupt.prop('checked', true);\n              }\n          }\n          containerHelper.triggerResponseChangeEvent(interaction);\n          instructionMgr.validateInstructions(interaction, { choice: $choice });\n      };\n\n      $$1('.hottext', $container).on('click', function(e) {\n          e.preventDefault();\n          setChoice($$1(this), interaction);\n      });\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {object} interaction\n   */\n  var render = function(interaction) {\n      pseudoLabel(interaction);\n\n      //set up the constraints instructions\n      instructionMgr.minMaxChoiceInstructions(interaction, {\n          min: interaction.attr('minChoices'),\n          max: interaction.attr('maxChoices'),\n          getResponse: _getRawResponse,\n          onError: function(data) {\n              var $input, $choice, $icon;\n              if (data.choice && data.choice.length) {\n                  $choice = data.choice.addClass('error');\n                  $input = $choice.find('input');\n                  $icon = $choice.find(' > label > span').addClass('error cross');\n\n                  setTimeout(function() {\n                      $input.prop('checked', false);\n                      $choice.removeClass('error');\n                      $icon.removeClass('error cross');\n                  }, 350);\n              }\n          }\n      });\n  };\n\n  var resetResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function(interaction, response) {\n      var $container = containerHelper.get(interaction);\n\n      try {\n          _.each(pciResponse.unserialize(response, interaction), function(identifier) {\n              $container.find('input[value=\"' + identifier + '\"]').prop('checked', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  var _getRawResponse = function(interaction) {\n      var values = [];\n      var $container = containerHelper.get(interaction);\n      $$1('input:checked', $container).each(function() {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function(interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Clean interaction destroy\n   * @param {Object} interaction\n   */\n  var destroy = function destroy(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      //restore selected choices:\n      $container.find('.hottext').off('click');\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n      return state;\n  };\n\n  var HottextInteraction = {\n      qtiClass: 'hottextInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'ui/tooltip', 'select2'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, tooltip, select2) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<span role=\\\"listbox\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-inlineChoiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n        data-qti-class=\\\"inlineChoiceInteraction\\\"\\n        data-has-search=\\\"false\\\"\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <span role=\\\"option\\\" data-identifier=\\\"empty\\\"></span>\\n    \";\n      options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * The value of the \"empty\" option\n     * @type String\n     */\n    const _emptyValue = 'empty';\n\n    const _defaultOptions = {\n        allowEmpty: true,\n        placeholderText: __('select a choice')\n    };\n\n    const optionSelector = 'span[role=\"option\"]';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} options - object containing available options\n     */\n    const render = function (interaction, options) {\n        const opts = _.clone(_defaultOptions);\n        const required = !!interaction.attr('required');\n        let choiceTooltip;\n        const $container = containerHelper.get(interaction);\n\n        _.extend(opts, options);\n\n        if (opts.allowEmpty && !required) {\n            $container.find(`span[data-identifier=${_emptyValue}]`).text(`--- ${__(`leave empty`)}---`);\n        } else {\n            $container.find(`span[data-identifier=${_emptyValue}]`).remove();\n        }\n\n        const getItemDir = () => {\n            const itemBody = $$1('.qti-itemBody');\n            const itemDir = itemBody.attr('dir') || 'ltr';\n            return itemDir;\n        };\n\n        const dirClass = getItemDir();\n        $container.select2({\n            data: $container\n                .find(optionSelector)\n                .map((i, opt) => ({\n                    id: $$1(opt).data('identifier'),\n                    markup: opt.outerHTML\n                }))\n                .get(),\n            formatResult: function (result) {\n                return result.markup;\n            },\n            formatSelection: function (data) {\n                return data.markup;\n            },\n            width: 'fit-content',\n            placeholder: opts.placeholderText,\n            minimumResultsForSearch: -1,\n            containerCssClass: `${dirClass}`,\n            dropdownCssClass: `qti-inlineChoiceInteraction-dropdown ${dirClass}`\n        });\n\n        const $el = $container.select2('container');\n\n        if (required) {\n            //set up the tooltip plugin for the input\n            choiceTooltip = tooltip.warning($el, __('A choice must be selected'));\n\n            if ($container.val() === '') {\n                choiceTooltip.show();\n            }\n        }\n\n        $container\n            .on('change', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we must fix the situation when select2 prevents tts from working\n                //for this a \"one-moment\" handler of option click is added and removed after event fired\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    const $selectedIndex = $$1(e.currentTarget)[0].options.selectedIndex\n                        ? $$1(e.currentTarget)[0].options.selectedIndex\n                        : null;\n                    $container.find(optionSelector).one('click', function (ev) {\n                        ev.stopPropagation();\n                    });\n                    $container.find(optionSelector).eq($selectedIndex).trigger('click');\n                }\n\n                if (required && $container.val() !== '') {\n                    choiceTooltip.hide();\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n            })\n            .on('select2-open', function () {\n                if (required) {\n                    choiceTooltip.hide();\n                }\n            })\n            .on('select2-close', function () {\n                if (required && $container.val() === '') {\n                    choiceTooltip.show();\n                }\n            });\n    };\n\n    const _setVal = function (interaction, choiceIdentifier) {\n        containerHelper.get(interaction).val(choiceIdentifier).select2('val', choiceIdentifier);\n    };\n\n    const resetResponse = function (interaction) {\n        _setVal(interaction, _emptyValue);\n    };\n\n\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const value = containerHelper.get(interaction).val();\n        return value && value !== _emptyValue ? [value] : [];\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //remove event\n        $$1(document).off('.commonRenderer');\n\n        $container.select2('destroy');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                //just in case the dropdown is opened\n                $container.select2('disable').select2('close');\n\n                $$1(optionSelector, $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($container);\n\n                $container.select2('enable');\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1(optionSelector, $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the inline choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction\n     */\n    var InlineChoiceInteraction = {\n        qtiClass: 'inlineChoiceInteraction',\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data,depth1) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"\\n      <tr>\\n        \";\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n        \";\n    stack1 = helpers.each.call(depth0, (depth1 && depth1.matchSet1), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      \";\n    return buffer;\n    }\n  function program12(depth0,data) {\n    \n    \n    return \"\\n        <td>\\n          <label>\\n            <input type=\\\"checkbox\\\" >\\n            <span class=\\\"icon-checkbox cross\\\"></span>\\n          </label>\\n        </td>\\n        \";\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-matchInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"matchInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"match-interaction-area\\\">\\n    <table class=\\\"matrix\\\">\\n      <thead>\\n      <tr>\\n        <th> </th>\\n        \";\n    options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n    if (helper = helpers.matchSet1) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet1); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet1) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      </thead>\\n      <tbody>\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data};\n    if (helper = helpers.matchSet2) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet2); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet2) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * TODO do not use global context var, it's value is shared between interaction instances\n   *\n   * Flag to not throw warning instruction if already\n   * displaying the warning. If such a flag is not used,\n   * disturbances can be seen by the candidate if he clicks\n   * like hell on choices.\n   */\n  var inWarning = false;\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   */\n  var render = function(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      // Initialize instructions system.\n      _setInstructions(interaction);\n\n      $container.on('click.commonRenderer', 'input[type=checkbox]', function(e) {\n          _onCheckboxSelected(interaction, e);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function(interaction, response) {\n      var $container = containerHelper.get(interaction);\n      response = _filterResponse(response);\n\n      if (typeof response.list !== 'undefined' && typeof response.list.directedPair !== 'undefined') {\n          _(response.list.directedPair).forEach(function(directedPair) {\n              var x = $$1('th[data-identifier=\"' + directedPair[0] + '\"]', $container).index() - 1;\n              var y = $$1('th[data-identifier=\"' + directedPair[1] + '\"]', $container)\n                  .parent()\n                  .index();\n\n              $$1('.matrix > tbody tr', $container)\n                  .eq(y)\n                  .find('input[type=checkbox]')\n                  .eq(x)\n                  .prop('checked', true);\n          });\n      }\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function(interaction) {\n      var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\n      return response;\n  };\n\n  var resetResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input[type=checkbox]:checked', $container).each(function() {\n          $$1(this).prop('checked', false);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  var _filterResponse = function(response) {\n      if (typeof response.list === 'undefined') {\n          // Maybe it's a base?\n          if (typeof response.base === 'undefined') {\n              // Oops, it is even not a base.\n              throw 'The given response is not compliant with PCI JSON representation.';\n          } else {\n              // It's a base, Is it a directedPair? Null?\n              if (response.base === null) {\n                  return { list: { directedPair: [] } };\n              } else if (typeof response.base.directedPair === 'undefined') {\n                  // Oops again, it is not a directedPair.\n                  throw 'The matchInteraction only accepts directedPair values as responses.';\n              } else {\n                  return { list: { directedPair: [response.base.directedPair] } };\n              }\n          }\n      } else if (typeof response.list.directedPair === 'undefined') {\n          // Oops, not a directedPair.\n          throw 'The matchInteraction only accept directedPair values as responses.';\n      } else {\n          return response;\n      }\n  };\n\n  var _getRawResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      var values = [];\n\n      $container.find('input[type=checkbox]:checked').each(function() {\n          values.push(_inferValue(this));\n      });\n\n      return values;\n  };\n\n  var _inferValue = function(element) {\n      var $element = $$1(element);\n      var $container = $element.closest('.match-interaction-area');\n      var y = $element.closest('tr').index();\n      var x = $element.closest('td').index();\n      var firstId = $$1('.matrix > thead th', $container)\n          .eq(x)\n          .data('identifier');\n      var secondId = $$1('.matrix > tbody th', $container)\n          .eq(y)\n          .data('identifier');\n      return [firstId, secondId];\n  };\n\n  var _onCheckboxSelected = function(interaction, e) {\n      var choice;\n      var currentResponse = _getRawResponse(interaction);\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n\n      if (maxAssociations === 0) {\n          maxAssociations = _countChoices(interaction);\n      }\n\n      if (_.size(currentResponse) > maxAssociations) {\n          // No more associations possible.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction);\n      } else if ((choice = _maxMatchReached(interaction, e.target)) !== false) {\n          // Check if matchmax is respected for both choices\n          // involved in the selection.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction, choice);\n      } else {\n          containerHelper.triggerResponseChangeEvent(interaction, {});\n          instructionMgr.validateInstructions(interaction);\n      }\n  };\n\n  var _maxMatchReached = function(interaction, input) {\n      var association = _inferValue(input);\n      var overflow = false;\n\n      _(association).forEach(function(identifier) {\n          var choice = _getChoiceDefinitionByIdentifier(interaction, identifier);\n          var matchMin = choice.attributes.matchMin;\n          var matchMax = choice.attributes.matchMax;\n          var assoc = _countAssociations(interaction, choice);\n\n          if (matchMax > 0 && assoc > matchMax) {\n              overflow = choice;\n          }\n      });\n\n      return overflow;\n  };\n\n  var _countAssociations = function(interaction, choice) {\n      var rawResponse = _getRawResponse(interaction);\n      var count = 0;\n\n      // How much time can we find rawChoice in rawResponses?\n      _(rawResponse).forEach(function(response) {\n          if (response[0] === choice.attributes.identifier || response[1] === choice.attributes.identifier) {\n              count++;\n          }\n      });\n\n      return count;\n  };\n\n  var _countChoices = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      return $container.find('input[type=checkbox]').length;\n  };\n\n  var _getChoiceDefinitionByIdentifier = function(interaction, identifier) {\n      var rawChoices = _getRawChoices(interaction);\n      return rawChoices[identifier];\n  };\n\n  var _getRawChoices = function(interaction) {\n      var rawChoices = {};\n\n      _(interaction.choices).forEach(function(matchset) {\n          _(matchset).forEach(function(choice) {\n              rawChoices[choice.attributes.identifier] = choice;\n          });\n      });\n\n      return rawChoices;\n  };\n\n  var _setInstructions = function(interaction) {\n      var msg;\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n      var choiceCount = _countChoices(interaction);\n\n      // Super closure is here again to save our souls! Houray!\n      // ~~~~~~~ |==||||0__\n\n      var superClosure = function() {\n          var onMaxChoicesReached = function(report, msg) {\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  report.update({\n                      level: 'warning',\n                      message: __('Maximum number of choices reached.'),\n                      timeout: 2000,\n                      stop: function() {\n                          report.update({ level: 'success', message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          var onMatchMaxReached = function(interaction, choice, report, msg, level) {\n              var $container = containerHelper.get(interaction);\n\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  var $choice = $container.find(\n                      '.qti-simpleAssociableChoice[data-identifier=\"' + choice.attributes.identifier + '\"]'\n                  );\n                  var originalBackgroundColor = $choice.css('background-color');\n                  var originalColor = $choice.css('color');\n\n                  report.update({\n                      level: 'warning',\n                      message: __('The highlighted choice cannot be associated more than %d time(s).').replace(\n                          '%d',\n                          choice.attributes.matchMax\n                      ),\n                      timeout: 3000,\n                      start: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: '#fff',\n                                  color: '#ba122b'\n                              },\n                              250,\n                              function() {\n                                  $choice.animate(\n                                      {\n                                          backgroundColor: '#ba122b',\n                                          color: '#fff'\n                                      },\n                                      250\n                                  );\n                              }\n                          );\n                      },\n                      stop: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: originalBackgroundColor,\n                                  color: originalColor\n                              },\n                              500\n                          );\n                          report.update({ level: level, message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          if (minAssociations === 0 && maxAssociations > 0) {\n              // No minimum but maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', maxAssociations);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.reset();\n                  }\n              });\n          } else if (minAssociations === 0 && maxAssociations === 0) {\n              // No minimum, no maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations === 0) {\n              // minimum but no maximum.\n              msg = __('You must select %1$d to %2$d choices.');\n              msg = msg.replace('%1$d', minAssociations);\n              msg = msg.replace('%2$d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > choiceCount) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations > 0) {\n              // minimum and maximum.\n              if (minAssociations !== maxAssociations) {\n                  msg = __('You must select %1$d to %2$d choices.');\n                  msg = msg.replace('%1$d', minAssociations);\n                  msg = msg.replace('%2$d', maxAssociations);\n              } else {\n                  msg = __('You must select exactly %d choice(s).');\n                  msg = msg.replace('%d', minAssociations);\n              }\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else if (responseCount >= minAssociations && responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  }\n              });\n          }\n      };\n\n      superClosure();\n  };\n\n  var destroy = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $container.off('.commonRenderer');\n\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      var $container;\n\n      if (_.isObject(state)) {\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === 2) {\n              $container = containerHelper.get(interaction);\n\n              $$1('thead .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[0], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[0], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('thead tr', $container));\n\n              $$1('tbody .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[1], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[1], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .each(function(index, elt) {\n                      $$1(elt).prependTo($$1('tbody tr', $container).eq(index));\n                  });\n          }\n\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var $container;\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          $container = containerHelper.get(interaction);\n\n          state.order = [[], []];\n          $$1('thead .qti-choice', $container).each(function() {\n              state.order[0].push($$1(this).data('identifier'));\n          });\n          $$1('tbody .qti-choice', $container).each(function() {\n              state.order[1].push($$1(this).data('identifier'));\n          });\n      }\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the match interaction\n   * @exports qtiCommonRenderer/renderers/interactions/MatchInteraction\n   */\n  var MatchInteraction = {\n      qtiClass: 'matchInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState,\n      inferValue: _inferValue\n  };\n\n  return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/mediaplayer'], function ($$1, _, Handlebars, Helpers0, pciResponse, containerHelper, mediaplayer) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    mediaplayer = mediaplayer && Object.prototype.hasOwnProperty.call(mediaplayer, 'default') ? mediaplayer['default'] : mediaplayer;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-mediaInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"media-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2018 (original work) Open Assessment Technlogies SA\n     *\n     */\n\n    const qtiClass = 'mediaInteraction';\n    const getContainer = containerHelper.get;\n\n    //some default values\n    const defaults = {\n        type: 'video/mp4'\n    };\n\n    //some patterns to match context in which disable the media preview\n    const reWebM = /.*\\.webm/i;\n    const reFirefoxVersion = /firefox\\/([0-9]+\\.*[0-9]*)/i;\n\n    /**\n     * Checks if a media can be previewed safely\n     * @param {String} type - The type of media\n     * @param {String} url - The URL to the media\n     * @returns {Boolean}\n     */\n    function canPreviewMedia(type, url) {\n        const firefox = reFirefoxVersion.exec(navigator.userAgent);\n        const webm = reWebM.test(url);\n        return !(webm && firefox && parseFloat(firefox[1]) >= 87);\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10391\n     *\n     * @param {Object} interaction\n     * @fires playerrendered when the player is at least rendered\n     * @fires playerready when the player is sucessfully loaded and configured\n     * @returns {Promise}\n     */\n    function render(interaction) {\n        return new Promise(resolve => {\n            const $container = getContainer(interaction);\n            const media = interaction.object;\n            const $item = $container.parents('.qti-item');\n            const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n\n            //check if the media can be played (using timesPlayed and maxPlays)\n            const canBePlayed = () => maxPlays === 0 || maxPlays > parseInt($container.data('timesPlayed'), 10);\n\n            /**\n             * Resize video player elements to fit container size\n             * @param {Object} mediaElement - player instance\n             * @param {jQueryElement} $container   - container element to adapt\n             */\n            const resize = _.debounce(() => {\n                // only resize when width in px\n                // new version has width in %\n                const  currentWidth = media.attr('width');\n                if (interaction.mediaElement && currentWidth && !currentWidth.includes('%')) {\n                    const height = $container.find('.media-container').height();\n                    const width = $container.find('.media-container').width();\n\n                    interaction.mediaElement.resize(width, height);\n                }\n            }, 200);\n\n            //intialize the player if not yet done\n            const initMediaPlayer = () => {\n                if (!interaction.mediaElement) {\n                    const type = media.attr('type') || defaults.type;\n                    const mediaUrl = media.attr('data') || '';\n                    const url = mediaUrl && this.resolveUrl(mediaUrl);\n                    const preview = canPreviewMedia(type, url);\n\n                    interaction.mediaElement = mediaplayer({\n                        url,\n                        type,\n                        preview,\n                        canPause: $container.hasClass('pause'),\n                        maxPlays: maxPlays,\n                        canSeek: !maxPlays,\n                        width: media.attr('width'),\n                        height: media.attr('height'),\n                        volume: 100,\n                        autoStart: !!interaction.attr('autostart') && canBePlayed(),\n                        loop: !!interaction.attr('loop'),\n                        renderTo: $$1('.media-container', $container)\n                    })\n                        .on('render', () => {\n                            resize();\n\n                            $$1(window)\n                                .off('resize.mediaInteraction')\n                                .on('resize.mediaInteraction', resize);\n\n                            $item.off('resize.gridEdit').on('resize.gridEdit', resize);\n                            /**\n                             * @event playerrendered\n                             */\n                            $container.trigger('playerrendered');\n                        })\n                        .on('ready', function () {\n                            /**\n                             * @event playerready\n                             */\n                            $container.trigger('playerready');\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n\n                            // on slow network the resize runs before ready, so it should be called again\n                            resize();\n\n                            // declare the item ready when player is ready to play.\n                            resolve();\n                        })\n                        .on('update', _.throttle(() => containerHelper.triggerResponseChangeEvent(interaction), 1000))\n                        .on('ended', function () {\n                            $container.data('timesPlayed', $container.data('timesPlayed') + 1);\n                            containerHelper.triggerResponseChangeEvent(interaction);\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n                        });\n                }\n            };\n\n\n            //set up the number of times played\n            if (!$container.data('timesPlayed')) {\n                $container.data('timesPlayed', 0);\n            }\n\n            //initialize the component\n            $container.on('responseSet', initMediaPlayer);\n\n            //gives a small chance to the responseSet event before initializing the player\n            initMediaPlayer();\n        });\n    }\n\n    /**\n     * Destroy the current interaction\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = getContainer(interaction);\n\n        if (interaction.mediaElement) {\n            interaction.mediaElement.destroy();\n            interaction.mediaElement = null;\n        }\n\n        $$1('.instruction-container', $container).empty();\n        $$1('.media-container', $container).empty();\n\n        $container.removeData('timesPlayed');\n\n        $$1(window).off('resize.video');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    function _getRawResponse(interaction) {\n        return [getContainer(interaction).data('timesPlayed') || 0];\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    function setResponse(interaction, response) {\n        if (response) {\n            try {\n                const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n                const responseValues = pciResponse.unserialize(response, interaction);\n                const timesPlayed = parseInt(responseValues[0], 10) || 0;\n                getContainer(interaction).data('timesPlayed', timesPlayed);\n\n                if (interaction.mediaElement) {\n                    if (maxPlays !== 0 && maxPlays <= timesPlayed) {\n                        interaction.mediaElement.disable();\n                    } else if (interaction.mediaElement.is('disabled')) {\n                        interaction.mediaElement.enable();\n                    }\n                }\n            } catch (e) {\n                // something went wrong\n            }\n        }\n    }\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    function resetResponse(interaction) {\n        getContainer(interaction).data('timesPlayed', 0);\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    function getResponse(interaction) {\n        if (!getContainer(interaction).data('timesPlayed')) {\n            return { base: null };\n        }\n\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        /**\n         * Restore the media player state\n         * @private\n         * @param {Object} [playerState]\n         * @param {Boolean} [playerState.muted] - is the player muted\n         * @param {Number} [playerState.volume] - the current volume\n         * @param {Number} [playerState.position] - the position to seek to\n         */\n        const restorePlayerState = playerState => {\n            if (playerState && interaction.mediaElement) {\n                //Volume\n                if (_.isNumber(playerState.volume)) {\n                    interaction.mediaElement.setVolume(playerState.volume);\n                }\n\n                //Muted state (always after the volume)\n                if (_.isBoolean(playerState.muted)) {\n                    interaction.mediaElement.mute(playerState.muted);\n                    interaction.mediaElement.startMuted = playerState.muted;\n                }\n\n                //Position\n                if (playerState.position && playerState.position > 0) {\n                    interaction.mediaElement.seek(playerState.position);\n                    if (!interaction.attr('autostart')) {\n                        interaction.mediaElement.pause();\n                    }\n                }\n            }\n        };\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            if (_.isPlainObject(state.player) && interaction.mediaElement) {\n                if (interaction.mediaElement.is('ready')) {\n                    restorePlayerState(state.player);\n                } else {\n                    interaction.mediaElement.on('ready.state', () => {\n                        interaction.mediaElement.off('ready.state');\n                        restorePlayerState(state.player);\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //collect player's state\n        if (interaction.mediaElement) {\n            state.player = {\n                position: interaction.mediaElement.getPosition(),\n                muted: interaction.mediaElement.is('muted'),\n                volume: interaction.mediaElement.getVolume()\n            };\n        }\n        return state;\n    }\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MediaInteraction\n     */\n    var MediaInteraction = {\n        qtiClass,\n        template,\n        render,\n        getContainer,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',['lodash', 'jquery', 'i18n', 'core/mouseEvent', 'services/features', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, $$1, __, mouseEvent, features, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      return \" qti-horizontal\";\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" qti-vertical\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      \n      return \"horizontal\";\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"vertical\";\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program17(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program19(depth0,data) {\n      \n      \n      return \"icon-down\";\n      }\n\n    function program21(depth0,data) {\n      \n      \n      return \"icon-right\";\n      }\n\n    function program23(depth0,data) {\n      \n      \n      return \"icon-up\";\n      }\n\n    function program25(depth0,data) {\n      \n      \n      return \"icon-left\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-orderInteraction\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n     data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n     data-qti-class=\\\"orderInteraction\\\"\\n     data-orientation=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"order-interaction-area\\\">\\n        <ul class=\\\"choice-area square source solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n        <div class=\\\"arrow-bar middle\\\">\\n            <span class=\\\"icon-add-to-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\\n            <span class=\\\"icon-remove-from-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n        <ul class=\\\"drag-container block-listing\\\"></ul>\\n        <ul class=\\\"result-area decimal target solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n        </ul>\\n        <div class=\\\"arrow-bar\\\">\\n            <span class=\\\"icon-move-before \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(23, program23, data),fn:self.program(25, program25, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n            <span class=\\\"icon-move-after \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(19, program19, data),fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const orientationSelectionEnabled = features.isVisible('taoQtiItem/creator/interaction/order/property/orientation');\n\n    const _freezeSize = function ($container) {\n        const $orderArea = $container.find('.order-interaction-area');\n        $orderArea.height($orderArea.height());\n    };\n\n    const _setInstructions = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container),\n            $resultArea = $$1('.result-area', $container),\n            min = parseInt(interaction.attr('minChoices'), 10),\n            max = parseInt(interaction.attr('maxChoices'), 10);\n\n        if (min) {\n            instructionMgr.appendInstruction(interaction, __('You must use at least %d choices', min), function () {\n                if ($resultArea.find('>li').length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n\n        if (max && max < _.size(interaction.getChoices())) {\n            const instructionMax = instructionMgr.appendInstruction(\n                interaction,\n                __('You can use maximum %d choices', max),\n                function () {\n                    if ($resultArea.find('>li').length >= max) {\n                        $choiceArea.find('>li').addClass('deactivated');\n                        this.setMessage(__('Maximum choices reached'));\n                    } else {\n                        $choiceArea.find('>li').removeClass('deactivated');\n                        this.reset();\n                    }\n                }\n            );\n\n            interact(`${$choiceArea.selector} >li.deactivated`).on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n                $target.addClass('brd-error');\n                instructionMax.setLevel('warning', 2000);\n                setTimeout(function () {\n                    $target.removeClass('brd-error');\n                }, 150);\n            });\n\n            // we don't check for isDragAndDropEnabled on purpose, as this binding is not to allow dragging,\n            // but only to provide feedback in case of a drag action on an inactive choice\n            interact(`${$choiceArea.selector} >li.deactivated`)\n                .draggable({\n                    onstart: function (e) {\n                        const $target = $$1(e.target);\n                        $target.addClass('brd-error');\n                        instructionMax.setLevel('warning');\n                    },\n                    onend: function (e) {\n                        const $target = $$1(e.target);\n                        $target.removeClass('brd-error');\n                        instructionMax.setLevel('info');\n                    }\n                })\n                .styleCursor(false);\n        }\n    };\n\n    const resetResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const initialOrder = _.keys(interaction.getChoices());\n        const $choiceArea = $$1('.choice-area', $container).append($$1('.result-area>li', $container));\n        const $choices = $choiceArea.children('.qti-choice');\n\n        $container.find('.qti-choice.active').each(function deactivateChoice() {\n            interactUtils.tapOn(this);\n        });\n\n        $choices.detach().sort(function (choice1, choice2) {\n            return _.indexOf(initialOrder, $$1(choice1).data('serial')) - _.indexOf(initialOrder, $$1(choice2).data('serial'));\n        });\n        $choiceArea.prepend($choices);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    const render = function (interaction) {\n        const $container = containerHelper.get(interaction),\n            $choiceArea = $container.find('.choice-area'),\n            $resultArea = $container.find('.result-area'),\n            $iconAdd = $container.find('.icon-add-to-selection'),\n            $iconRemove = $container.find('.icon-remove-from-selection'),\n            $iconBefore = $container.find('.icon-move-before'),\n            $iconAfter = $container.find('.icon-move-after'),\n            choiceSelector = `${$choiceArea.selector} >li:not(.deactivated)`,\n            resultSelector = `${$resultArea.selector} >li`,\n            $dragContainer = $container.find('.drag-container'),\n            orientation = (interaction.attr('orientation') && orientationSelectionEnabled) ? interaction.attr('orientation') : 'vertical';\n\n        let $activeChoice = null,\n            scaleX,\n            scaleY,\n            isDragAndDropEnabled,\n            dragOptions,\n            $dropzoneElement;\n\n        const _activeControls = function _activeControls() {\n            $iconAdd.addClass('inactive');\n            $iconRemove.removeClass('inactive').addClass('active');\n            $iconBefore.removeClass('inactive').addClass('active');\n            $iconAfter.removeClass('inactive').addClass('active');\n        };\n\n        const _resetControls = function _resetControls() {\n            $iconAdd.removeClass('inactive');\n            $iconRemove.removeClass('active').addClass('inactive');\n            $iconBefore.removeClass('active').addClass('inactive');\n            $iconAfter.removeClass('active').addClass('inactive');\n        };\n\n        const _setSelection = function _setSelection($choice) {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n            }\n            $activeChoice = $choice;\n            $activeChoice.addClass('active');\n        };\n\n        const _resetSelection = function _resetSelection() {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n                $activeChoice = null;\n            }\n            _resetControls();\n        };\n\n        const _addChoiceToSelection = function _addChoiceToSelection($target, position) {\n            const $results = $$1(resultSelector);\n            _resetSelection();\n\n            //move choice to the result list:\n            if (typeof position !== 'undefined' && position < $results.length) {\n                $results.eq(position).before($target);\n            } else {\n                $resultArea.append($target);\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            //update constraints :\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        const _toggleResultSelection = function _toggleResultSelection($target) {\n            if ($target.hasClass('active')) {\n                _resetSelection();\n            } else {\n                _setSelection($target);\n                _activeControls();\n            }\n        };\n\n        const _removeChoice = function _removeChoice() {\n            if ($activeChoice) {\n                //restore choice back to choice list\n                $choiceArea.append($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                //update constraints :\n                instructionMgr.validateInstructions(interaction);\n            }\n\n            _resetSelection();\n        };\n\n        const _moveResultBefore = function _moveResultBefore() {\n            const $prev = $activeChoice.prev();\n\n            if ($prev.length) {\n                $prev.before($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        const _moveResultAfter = function _moveResultAfter() {\n            const $next = $activeChoice.next();\n\n            if ($next.length) {\n                $next.after($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function () {\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n\n            $iconAdd.addClass('triggered');\n            setTimeout(function () {\n                $iconAdd.removeClass('triggered');\n            }, 150);\n\n            _addChoiceToSelection($target);\n        });\n\n        interact(resultSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _toggleResultSelection($target);\n        });\n\n        interact($iconRemove.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _removeChoice();\n        });\n\n        interact($iconBefore.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultBefore();\n        });\n\n        interact($iconAfter.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultAfter();\n        });\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').order) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').order;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function () {\n                if (_isDropzoneVisible()) {\n                    interact($resultArea.selector).fire({\n                        type: 'drop',\n                        target: $dropzoneElement.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            $dropzoneElement = $$1('<li>', { class: 'dropzone qti-choice' });\n            $$1('<div>', { class: 'qti-block' }).appendTo($dropzoneElement);\n\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result draggables\n            interact(resultSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _setSelection($target);\n\n                            // move dragged result to drag container\n                            $dragContainer.show();\n                            $dragContainer.offset($target.offset());\n                            if (orientation === 'horizontal') {\n                                $dragContainer.width($$1(e.currentTarget).width());\n                            } else {\n                                $dragContainer.width($target.parent().width());\n                            }\n                            $dragContainer.append($target);\n\n                            _iFrameDragFix(resultSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target),\n                                hasBeenDroppedInResultArea = $target.parent === $resultArea;\n\n                            $target.removeClass('dragged');\n                            $dragContainer.hide();\n\n                            if (!hasBeenDroppedInResultArea) {\n                                _removeChoice();\n                            }\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result area droppable\n            interact($resultArea.selector).dropzone({\n                overlap: 0.5,\n                ondragenter: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    _insertDropzone($dragged);\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function (e) {\n                    const $dragged = $$1(e.relatedTarget),\n                        dropzoneIndex = $$1(resultSelector).index($dropzoneElement);\n\n                    this.ondragleave(e);\n\n                    _addChoiceToSelection($dragged, dropzoneIndex);\n                    interactUtils.restoreOriginalPosition($dragged);\n                },\n                ondragleave: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    $dropzoneElement.remove();\n                    $dragged.removeClass('droppable');\n                }\n            });\n        }\n\n        function _isDropzoneVisible() {\n            return $$1.contains($container.get(0), $dropzoneElement.get(0));\n        }\n\n        function _insertDropzone($dragged) {\n            const draggedMiddle = _getMiddleOf($dragged),\n                previousMiddle = {\n                    x: 0,\n                    y: 0\n                };\n            let insertPosition;\n\n            // look for position where to insert dropzone\n            $$1(resultSelector).each(function (index) {\n                const currentMiddle = _getMiddleOf($$1(this));\n\n                if (orientation !== 'horizontal') {\n                    if (draggedMiddle.y > previousMiddle.y && draggedMiddle.y < currentMiddle.y) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.y = currentMiddle.y;\n                } else {\n                    if (draggedMiddle.x > previousMiddle.x && draggedMiddle.x < currentMiddle.x) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.x = currentMiddle.x;\n                }\n            });\n            // append dropzone to DOM\n            if (typeof insertPosition !== 'undefined') {\n                $$1(resultSelector).eq(insertPosition).before($dropzoneElement);\n            } else {\n                // no index found, we just append to the end\n                $resultArea.append($dropzoneElement);\n            }\n\n            // style dropzone\n            $dropzoneElement.height($dragged.height());\n            $dropzoneElement.find('div').text($dragged.text());\n        }\n\n        function _adjustDropzonePosition($dragged) {\n            const draggedBox = $dragged.get(0).getBoundingClientRect(),\n                $prevResult = $dropzoneElement.prev('.qti-choice'),\n                $nextResult = $dropzoneElement.next('.qti-choice'),\n                prevMiddle = $prevResult.length > 0 ? _getMiddleOf($prevResult) : false,\n                nextMiddle = $nextResult.length > 0 ? _getMiddleOf($nextResult) : false;\n\n            if (orientation !== 'horizontal') {\n                if (prevMiddle && draggedBox.top < prevMiddle.y) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.bottom > nextMiddle.y) {\n                    $nextResult.after($dropzoneElement);\n                }\n            } else {\n                if (prevMiddle && draggedBox.left < prevMiddle.x) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.right > nextMiddle.x) {\n                    $nextResult.after($dropzoneElement);\n                }\n            }\n        }\n\n        function _getMiddleOf($element) {\n            const elementBox = $element.get(0).getBoundingClientRect();\n            return {\n                x: elementBox.left + elementBox.width / 2,\n                y: elementBox.top + elementBox.height / 2\n            };\n        }\n\n        // rendering init\n\n        _setInstructions(interaction);\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function (e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'maxChoices' || data.key === 'minChoices') {\n                    instructionMgr.removeInstructions(interaction);\n                    _setInstructions(interaction);\n                    instructionMgr.validateInstructions(interaction);\n                }\n            }\n        });\n\n        _freezeSize($container);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container);\n        const $resultArea = $$1('.result-area', $container);\n\n        if (response === null || _.isEmpty(response)) {\n            resetResponse(interaction);\n        } else {\n            try {\n                _.each(pciResponse.unserialize(response, interaction), function (identifier) {\n                    $resultArea.append($choiceArea.find(`[data-identifier=\"${identifier}\"]`));\n                });\n            } catch (e) {\n                throw new Error(`wrong response format in argument : ${e}`);\n            }\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const response = [];\n        $$1('.result-area>li', $container).each(function () {\n            response.push($$1(this).data('identifier'));\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Set additionnal data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    const getCustomData = function (interaction, data) {\n        return _.merge(data || {}, {\n            horizontal: interaction.attr('orientation') === 'horizontal' && orientationSelectionEnabled\n        });\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //first, remove all events\n        const selectors = [\n            '.choice-area >li:not(.deactivated)',\n            '.result-area >li',\n            '.icon-add-to-selection',\n            '.icon-remove-from-selection',\n            '.icon-move-before',\n            '.icon-move-after'\n        ];\n        selectors.forEach(function unbindInteractEvents(selector) {\n            interact($container.find(selector).selector).unset();\n        });\n\n        $$1(document).off('.commonRenderer');\n\n        $container.find('.order-interaction-area').removeAttr('style');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                const $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            const $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the order interaction\n     * @exports qtiCommonRenderer/renderers/interactions/OrderInteraction\n     */\n    var OrderInteraction = {\n        qtiClass: 'orderInteraction',\n        getData: getCustomData,\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2020 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('qtiCustomInteractionContext',['lodash'], function(_) {\n    'use strict';\n\n    //need a global reference to have pciHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._pciHooks = window._pciHooks || {};\n\n    /**\n     * Global object accessible by all PCIs\n     *\n     * @type Object\n     */\n    return {\n        /**\n         * register a custom interaction (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} pciHook\n         * @returns {undefined}\n         */\n        register(pciHook) {\n            const typeIdentifier =\n                typeof pciHook.getTypeIdentifier === 'function' ? pciHook.getTypeIdentifier() : pciHook.typeIdentifier;\n            if (typeIdentifier) {\n                window._pciHooks[typeIdentifier] = pciHook;\n            } else {\n                throw new Error('invalid PCI hook');\n            }\n        },\n        /**\n         * notify when a custom interaction is ready for test taker interaction\n         *\n         * @param {string} pciInstance\n         * @fires custominteractionready\n         */\n        notifyReady(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n        /**\n         * notify when a custom interaction is completed by test taker\n         *\n         * @param {string} pciInstance\n         * @fires custominteractiondone\n         */\n        notifyDone(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n\n        onready(customInteraction, state) {\n            //to be implemented in future story\n        },\n        ondone(customInteraction, response, state, status) {\n            //to be implemented in future story\n        },\n\n        /**\n         * Get a cloned object representing the PCI model\n         *\n         * @param {string} pciTypeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance(pciTypeIdentifier) {\n            const registeredPCI = window._pciHooks[pciTypeIdentifier];\n\n            if (!registeredPCI) {\n                throw new Error('no portable custom interaction hook found with the id ' + pciTypeIdentifier);\n            }\n\n            return _.cloneDeep(registeredPCI);\n        }\n    };\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator',['qtiCustomInteractionContext'], function (qtiCustomInteractionContext) { 'use strict';\n\n    qtiCustomInteractionContext = qtiCustomInteractionContext && Object.prototype.hasOwnProperty.call(qtiCustomInteractionContext, 'default') ? qtiCustomInteractionContext['default'] : qtiCustomInteractionContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var instanciator = {\n        /**\n         * Get the PCI instance associated to the interaction object\n         * If none exists, create a new one based on the PCI typeIdentifier\n         *\n         * @param {Object} interaction - the js object representing the interaction\n         * @returns {Object} PCI instance\n         */\n        getPci(interaction) {\n            let pciTypeIdentifier;\n            let pci = interaction.data('pci');\n\n            if (!pci) {\n                pciTypeIdentifier = interaction.typeIdentifier;\n                pci = qtiCustomInteractionContext.createPciInstance(pciTypeIdentifier);\n                if (pci) {\n                    //binds the PCI instance to TAO interaction object and vice versa\n                    interaction.data('pci', pci);\n                    pci._taoCustomInteraction = interaction;\n                } else {\n                    throw new Error('no custom interaction hook found for the type ' + pciTypeIdentifier);\n                }\n            }\n\n            return pci;\n        },\n\n        /**\n         * Associate a PCI instance to the interaction object\n         * @param {Object} interaction - the js object representing the interaction\n         * @param {Object} instance - PCI instance\n         */\n        setPci(interaction, instance) {\n            interaction.data('pci', instance);\n        }\n    };\n\n    return instanciator;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator'], function (_, containerHelper, instanciator) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    function commonPciRenderer(runtime) {\n        return {\n            getRequiredModules: function getRequiredModules() {\n                var requireEntries = [];\n                //load hook if applicable\n                if (runtime.hook) {\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                }\n                //load libs\n                _.forEach(runtime.libraries, function(lib) {\n                    requireEntries.push(lib.replace(/\\.js$/, ''));\n                });\n                //load stylesheets\n                _.forEach(runtime.stylesheets, function(stylesheet) {\n                    requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                });\n                return requireEntries;\n            },\n            createInstance: function(interaction, context) {\n                var id = interaction.attr('responseIdentifier');\n                var pci = instanciator.getPci(interaction);\n                var properties = _.clone(interaction.properties);\n                var assetManager = context.assetManager;\n                var pciAssetManager = {\n                    resolve: function pciAssetResolve(url) {\n                        var resolved = assetManager.resolveBy('portableElementLocation', url);\n                        if (resolved === url || _.isUndefined(resolved)) {\n                            return assetManager.resolve(url);\n                        } else {\n                            return resolved;\n                        }\n                    }\n                };\n                pci.initialize(\n                    id,\n                    containerHelper\n                        .get(interaction)\n                        .children()\n                        .get(0),\n                    properties,\n                    pciAssetManager\n                );\n                return Promise.resolve(pci);\n            },\n            /**\n             *\n             * @param {Object }interaction\n             * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n             */\n            destroy: function destroy(interaction) {\n                return instanciator.getPci(interaction).destroy();\n            },\n            setState: function setState(interaction, state) {\n                instanciator.getPci(interaction).setSerializedState(state);\n            },\n            getState: function getState(interaction) {\n                return instanciator.getPci(interaction).getSerializedState();\n            }\n        };\n    }\n\n    return commonPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims',['lodash', 'core/logger', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'context'], function (_, loggerFactory, containerHelper, instanciator, sharedContext) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    sharedContext = sharedContext && Object.prototype.hasOwnProperty.call(sharedContext, 'default') ? sharedContext['default'] : sharedContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims');\n\n    const pciDoneCallback = pci => {\n        //standard callback function to be implemented in a future story\n        logger.info('pciDoneCallback called on PCI ' + pci.typeIdentifier);\n    };\n\n    /**\n     * Key under the IMS PCI constructor is stored on interaction\n     */\n    const pciConstructorDataKey = 'pciConstructor';\n\n    function defaultPciRenderer(runtime) {\n        return {\n            getRequiredModules() {\n                const requireEntries = [];\n                // load modules\n                _.forEach(runtime.modules, function (module, name) {\n                    requireEntries.push(name);\n                });\n                return requireEntries;\n            },\n            /**\n             * Saves the original IMS PCI module to be able to reinstanciate later\n             * @param {Object} interaction\n             * @param {Object} pciConstructor\n             */\n            setPCIConstructor(interaction, pciConstructor) {\n                interaction.data(pciConstructorDataKey, pciConstructor);\n            },\n            /**\n             * Returns with original IMS PCI module\n             * @param {Object} interaction\n             */\n            getPCIConstructor(interaction) {\n                return interaction.data(pciConstructorDataKey);\n            },\n            createInstance(interaction, context) {\n                let pciConstructor = this.getPCIConstructor(interaction);\n\n                //get interaction xml:lang prop to put it into pci instance config\n                const contentLanguage = interaction.attributes && interaction.attributes.language;\n                const itemLanguage = interaction.rootElement && interaction.rootElement.attributes && interaction.rootElement.attributes['xml:lang'];\n                const language = contentLanguage || itemLanguage;\n                const userLanguage = sharedContext && sharedContext.locale;\n\n                const properties = _.assign(_.clone(interaction.properties), {language, userLanguage});\n\n                // save original IMS PCI module first time to be able to reinstanciate later if necessary\n                if (!pciConstructor) {\n                    pciConstructor = instanciator.getPci(interaction);\n                    this.setPCIConstructor(interaction, pciConstructor);\n                }\n\n                // serialize any array or object properties\n                _.forOwn(properties, function (propVal, propKey) {\n                    properties[propKey] = _.isArray(propVal) || _.isObject(propVal) ? JSON.stringify(propVal) : propVal;\n                });\n\n                let pciReadyCallback;\n                const readyPromise = new Promise(resolve => {\n                    pciReadyCallback = resolve;\n                });\n\n                const config = {\n                    properties,\n                    templateVariables: {}, //not supported yet\n                    boundTo: context.response || {},\n                    onready: pciReadyCallback,\n                    ondone: pciDoneCallback,\n                    status: 'interacting' //only support interacting state currently(TODO: solution, review),\n                };\n\n                pciConstructor.getInstance(containerHelper.get(interaction).get(0), config, context.state);\n\n                return readyPromise.then(instance => {\n                    instanciator.setPci(interaction, instance);\n                    return instance;\n                });\n            },\n            destroy: function destroy(interaction) {\n                instanciator.getPci(interaction).oncompleted();\n            },\n            /**\n             * IMS PCI does not have setState, so PCI should be destroyed and reinstanciated with response.\n             * This function should run only in review mode.\n             * @param {Object} interaction\n             * @param {Object} state - state that should be set\n             * @returns {Promise<Object>} - Resolves with newly created instance\n             */\n            setReviewState(interaction, state) {\n                this.destroy(interaction);\n                return this.createInstance(interaction, { response: { RESPONSE: state.response } });\n            },\n            setState: _.noop,\n            getState(interaction) {\n                return instanciator.getPci(interaction).getState();\n            }\n        };\n    }\n\n    return defaultPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/ciRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, instanciator, commonPciRenderer, imsPciRenderer, util, ciRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    commonPciRenderer = commonPciRenderer && Object.prototype.hasOwnProperty.call(commonPciRenderer, 'default') ? commonPciRenderer['default'] : commonPciRenderer;\n    imsPciRenderer = imsPciRenderer && Object.prototype.hasOwnProperty.call(imsPciRenderer, 'default') ? imsPciRenderer['default'] : imsPciRenderer;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n    lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-customInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _setPciModel = function _setPciModel(interaction, runtime) {\n        var pciRenderer;\n        if (runtime.model === 'IMSPCI') {\n            pciRenderer = imsPciRenderer(runtime);\n        } else {\n            pciRenderer = commonPciRenderer(runtime);\n        }\n        interaction.data('pci-model', runtime.model);\n        interaction.data('pci-renderer', pciRenderer);\n    };\n\n    var _getPciRenderer = function _getPciRenderer(interaction) {\n        return interaction.data('pci-renderer');\n    };\n\n    /**\n     * Execute javascript codes to bring the interaction to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. configure the paths\n     * 2. require all required libs\n     * 3. create a pci instance based on the interaction model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable (state and/or response)\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction, options) {\n        var self = this;\n\n        options = options || {};\n        return new Promise(function (resolve, reject) {\n            var id = interaction.attr('responseIdentifier');\n            var typeIdentifier = interaction.typeIdentifier;\n            var assetManager = self.getAssetManager();\n            var state;\n            var response = {};\n\n            if (options.state && options.state[id]) {\n                state = options.state[id];\n            }\n            response[id] = { base: null };\n\n            ciRegistry\n                .loadRuntimes({ include: [typeIdentifier] })\n                .then(function () {\n                    var pciRenderer;\n                    var runtime = ciRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pci cannot be found : ' + typeIdentifier);\n                    }\n\n                    _setPciModel(interaction, runtime);\n\n                    pciRenderer = _getPciRenderer(interaction);\n\n                    window.require(\n                        pciRenderer.getRequiredModules(),\n                        function () {\n                            var pci = instanciator.getPci(interaction);\n                            if (pci) {\n                                pciRenderer.createInstance(interaction, {\n                                    response: response,\n                                    state: state,\n                                    assetManager: assetManager\n                                }).then(instance => {\n                                    //forward internal PCI event responseChange\n                                    if (_.isFunction(instance.on)) {\n                                        interaction.onPci('responseChange', function () {\n                                            containerHelper.triggerResponseChangeEvent(interaction);\n                                        });\n                                    }\n                                    resolve();\n                                });\n                            } else {\n                                reject('Unable to initialize pci \"' + id + '\"');\n                            }\n                        },\n                        reject\n                    );\n                })\n                .catch(function (error) {\n                    reject('Error loading runtime \"' + id + '\": ' + error);\n                });\n        });\n    };\n\n    /**\n     * Programmatically set the response following the json schema described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        instanciator.getPci(interaction).setResponse(response);\n    };\n\n    /**\n     * Get the response in the json format described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return instanciator.getPci(interaction).getResponse();\n    };\n\n    /**\n     * Remove the current response set in the interaction\n     * The state may not be restored at this point.\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function resetResponse(interaction) {\n        instanciator.getPci(interaction).resetResponse();\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} interaction\n     * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n     */\n    var destroy = function destroy(interaction) {\n        return _getPciRenderer(interaction).destroy(interaction);\n    };\n\n    /**\n     * Restore the state of the interaction from the serializedState.\n     *\n     * @param {Object} interaction\n     * @param {Object} serializedState - json format\n     */\n    var setState = function setState(interaction, serializedState) {\n        _getPciRenderer(interaction).setState(interaction, serializedState);\n    };\n\n    /**\n     * Get the current state of the interaction as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} interaction\n     * @returns {Object} json format\n     */\n    var getState = function getState(interaction) {\n        return _getPciRenderer(interaction).getState(interaction);\n    };\n\n    var getData = function getData(customInteraction, data) {\n        //remove ns + fix media file path\n        var markup = data.markup;\n        markup = util.removeMarkupNamespaces(markup);\n        markup = PortableElement.fixMarkupMediaSources(markup, this);\n        data.markup = markup;\n\n        return data;\n    };\n\n    var PortableCustomInteraction = {\n        qtiClass: 'customInteraction',\n        template: tpl,\n        getData: getData,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableCustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div\\n    class=\\\"qti-prompt-container\\\"\\n    data-html-editable-container\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <div class=\\\"qti-prompt\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-html-editable id=\\\"prompt-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Prompt = {\n        qtiClass: 'prompt',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Prompt;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-selectPointInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the responses from the interaction\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const getRawResponse = function getRawResponse(interaction) {\n        if (interaction && interaction.paper && _.isArray(interaction.paper.points)) {\n            return _.map(interaction.paper.points, function(point) {\n                return [point.x, point.y];\n            });\n        }\n        return [];\n    };\n\n    /**\n     * Add a new point to the interaction\n     * @param {Object} interaction\n     * @param {Object} point - the x/y point\n     */\n    const addPoint = function addPoint(interaction, point) {\n        const maxChoices = interaction.attr('maxChoices');\n\n        const pointChange = function pointChange() {\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        if (maxChoices > 0 && getRawResponse(interaction).length >= maxChoices) {\n            instructionMgr.validateInstructions(interaction);\n        } else {\n            if (!_.isArray(interaction.paper.points)) {\n                interaction.paper.points = [];\n            }\n\n            graphic.createTarget(interaction.paper, {\n                point: point,\n                create: function create(target) {\n                    if (interaction.isTouch && target && target.getBBox) {\n                        graphic.createTouchCircle(interaction.paper, target.getBBox());\n                    }\n\n                    interaction.paper.points.push(point);\n\n                    pointChange();\n                },\n                remove: function remove() {\n                    _.remove(interaction.paper.points, point);\n\n                    pointChange();\n                }\n            });\n        }\n    };\n\n    /**\n     * Make the image clickable and place targets at the given position.\n     * @param {Object} interaction\n     */\n    const enableSelection = function enableSelection(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $imageBox = $container.find('.main-image-box');\n        const isResponsive = $container.hasClass('responsive');\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n\n        interaction.paper.isTouch = false;\n\n        //used to see if we are in a touch context\n        image.touchstart(function() {\n            interaction.paper.isTouch = true;\n            image.untouchstart();\n        });\n\n        //get the point on click\n        image.click(function imageClicked(event) {\n            addPoint(interaction, graphic.getPoint(event, interaction.paper, $imageBox, isResponsive));\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function(resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive  : $container.hasClass('responsive')\n            });\n\n            //enable to select the paper to position a target\n            enableSelection(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                choiceCount: false,\n                getResponse: getRawResponse,\n                onError: function(data) {\n                    if (data) {\n                        graphic.highlightError(data.target, 'success');\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    const setResponse = function(interaction, response) {\n        let responseValues;\n\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n\n                if (interaction.getResponseDeclaration().attr('cardinality') === 'single') {\n                    responseValues = [responseValues];\n                }\n                _(responseValues)\n                    .filter(function(point) {\n                        return _.isArray(point) && point.length === 2;\n                    })\n                    .forEach(function(point) {\n                        addPoint(interaction, {\n                            x: point[0],\n                            y: point[1]\n                        });\n                    });\n            } catch (err) {\n                return;\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        if (interaction && interaction.paper) {\n            interaction.paper.points = [];\n\n            interaction.paper.forEach(function(element) {\n                const point = element.data('point');\n                if (typeof point === 'object') {\n                    graphic.trigger(element, 'click');\n                }\n            });\n        }\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {Object} interaction\n         * @returns {Object} the response\n         */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize(getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var SelectPointInteraction = {\n        qtiClass: 'selectPointInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'nouislider'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, pciResponse, nouislider) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-sliderInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"sliderInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _slideTo = function(options) {\n        options.sliderCurrentValue.find('.qti-slider-cur-value').text(options.value);\n        options.sliderValue.val(options.value);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    const render = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            direction = window.getComputedStyle($container[0]).getPropertyValue('direction') || 'ltr',\n            $el = $$1('<div />').attr({ id: `${attributes.responseIdentifier}-qti-slider`, class: 'qti-slider' }), //slider element\n            $sliderLabels = $$1('<div />').attr({ class: 'qti-slider-values' }),\n            $sliderCurrentValue = $$1('<div />').attr({\n                id: `${attributes.responseIdentifier}-qti-slider-cur-value`,\n                class: 'qti-slider-cur-value'\n            }), //show the current selected value\n            $sliderValue = $$1('<input />').attr({ type: 'hidden', id: `${attributes.responseIdentifier}-qti-slider-value`, class: 'qti-slider-value' }); //the input that always holds the slider value\n\n        //getting the options\n        let orientation = 'horizontal';\n        const reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false, //setting the slider whether to be reverse or not\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            step = typeof attributes.step !== 'undefined' && attributes.step ? parseInt(attributes.step) : 1, //default value as per QTI standard\n            steps = (max - min) / step; //number of the steps\n\n        //add the containers\n        $sliderCurrentValue\n            .append(`<span class=\"qti-slider-cur-value-text\">${__('Current value:')}</span>`)\n            .append('<span class=\"qti-slider-cur-value\"></span>');\n\n        //setting the orientation of the slider\n        if (\n            typeof attributes.orientation !== 'undefined' &&\n            $$1.inArray(attributes.orientation, ['horizontal', 'vertical']) > -1\n        ) {\n            orientation = attributes.orientation;\n        }\n\n        let reversedLabels = false;\n        //for vertical only reverse matters\n        if(orientation === 'vertical') {\n            reversedLabels = reverse;\n        }else {\n            reversedLabels = ((!reverse && direction === 'rtl') || (reverse && direction !== 'rtl'));\n        }\n\n        $sliderLabels\n            .append(`<span class=\"slider-min\">${reversedLabels ? max : min }</span>`)\n            .append(`<span class=\"slider-max\">${reversedLabels ? min : max}</span>`);\n\n        interaction\n            .getContainer()\n            .append($el)\n            .append($sliderLabels)\n            .append($sliderCurrentValue)\n            .append($sliderValue);\n\n\n        let sliderSize = 0;\n\n        if (orientation === 'horizontal') {\n            $container.addClass('qti-slider-horizontal');\n        } else {\n            const maxHeight = 300;\n            sliderSize = steps * 20;\n            if (sliderSize > maxHeight) {\n                sliderSize = maxHeight;\n            }\n            $container.addClass('qti-slider-vertical');\n            $el.height(`${sliderSize}px`);\n            $sliderLabels.height(`${sliderSize}px`);\n        }\n\n        //set the middle value if the stepLabel attribute is enabled\n        if (typeof attributes.stepLabel !== 'undefined' && attributes.stepLabel) {\n            const middleStep = parseInt(steps / 2),\n                leftOffset = (100 / steps) * middleStep,\n                middleValue = reverse ? max - middleStep * step : min + middleStep * step;\n\n            if (orientation === 'horizontal') {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"left:'${leftOffset}%\">${middleValue}</span>`);\n            } else {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"top:${leftOffset}%\">${middleValue}</span>`);\n            }\n        }\n\n        //create the slider\n        $el.noUiSlider({\n            start: reverse ? max : min,\n            range: {\n                min: min,\n                max: max\n            },\n            step: step,\n            orientation,\n            direction\n        }).on('slide', function() {\n            let val = parseInt($$1(this).val());\n            if (interaction.attr('reverse')) {\n                val = max + min - val;\n            }\n            val = Math.round(val * 1000) / 1000;\n            _slideTo({\n                value: val,\n                sliderValue: $sliderValue,\n                sliderCurrentValue: $sliderCurrentValue\n            });\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n        });\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function(e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'responseIdentifier' && data.value) {\n                    const attributesNew = interaction.getAttributes();\n                    // data.value and attributesNew.responseIdentifier is the same\n                    $container.find('.qti-slider').attr({ id: `${attributesNew.responseIdentifier}-qti-slider`});\n                    $container.find('.qti-slider-cur-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-cur-value`});\n                    $container.find('.qti-slider-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-value`});\n                }\n            }\n        });\n    };\n\n    var resetResponse = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false,\n            startValue = reverse ? max : min;\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(startValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound);\n        let value;\n\n        value = pciResponse.unserialize(response, interaction)[0];\n\n        _slideTo({\n            value: value,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(interaction.attr('reverse') ? max + min - value : value);\n    };\n\n    var _getRawResponse = function(interaction) {\n        let value;\n        const attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            min = parseInt(attributes.lowerBound),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`);\n\n        if (baseType === 'integer') {\n            value = parseInt($sliderValue.val());\n        } else if (baseType === 'float') {\n            value = parseFloat($sliderValue.val());\n        }\n\n        return isNaN(value) ? min : value;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize([_getRawResponse(interaction)], interaction);\n    };\n\n    const destroy = function(interaction) {\n        const $container = interaction.getContainer();\n\n        $container.empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    var SliderInteraction = {\n        qtiClass: 'sliderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'util/locale', 'ui/tooltip', 'core/logger', 'util/converter'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, patternMaskHelper, locale, tooltip, loggerFactory, converter) { 'use strict';\n\n        $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n        _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n        __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n        Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n        Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n        containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n        instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n        pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n        patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n        locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n        tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n        loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n        converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n\n        if (!Helpers0.__initialized) {\n          Helpers0(Handlebars);\n          Helpers0.__initialized = true;\n        }\n        var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n          this.compilerInfo = [4,'>= 1.0.0'];\n        helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n          var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n        function program1(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \"id=\\\"\"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\\"\";\n          return buffer;\n          }\n\n        function program3(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \" \"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n          return buffer;\n          }\n\n          buffer += \"<input\\n        \";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \"\\n        class=\\\"qti-interaction qti-inlineInteraction qti-textEntryInteraction\";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \"\\\"\\n        data-serial=\\\"\";\n          if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n          else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n          buffer += escapeExpression(stack1)\n            + \"\\\"\\n        data-qti-class=\\\"textEntryInteraction\\\"\\n        type=\\\"text\\\"\\n>\";\n          return buffer;\n          });\n        function tpl(data, options, asString) {\n          var html = Template(data, options);\n          return (asString || true) ? html : $(html);\n        }\n\n        /*\n         * This program is free software; you can redistribute it and/or\n         * modify it under the terms of the GNU General Public License\n         * as published by the Free Software Foundation; under version 2\n         * of the License (non-upgradable).\n         *\n         * This program is distributed in the hope that it will be useful,\n         * but WITHOUT ANY WARRANTY; without even the implied warranty of\n         * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n         * GNU General Public License for more details.\n         *\n         * You should have received a copy of the GNU General Public License\n         * along with this program; if not, write to the Free Software\n         * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n         *\n         * Copyright (c) 2014-2022 Open Assessment Technologies SA (under the project TAO-PRODUCT);\n         *\n         */\n\n        /**\n         * Create a logger\n         */\n        const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js');\n\n        /**\n         * Hide the tooltip for the text input\n         * @param {jQuery} $input\n         */\n        function hideTooltip($input) {\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').hide();\n            }\n        }\n\n        /**\n         * Create/Show tooltip for the text input\n         * @param {jQuery} $input\n         * @param {String} theme\n         * @param {String} message\n         */\n        function showTooltip($input, theme, message) {\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').updateTitleContent(message);\n            } else {\n                const textEntryTooltip = tooltip.create($input, message, {\n                    theme: theme,\n                    trigger: 'manual'\n                });\n\n                $input.data('$tooltip', textEntryTooltip);\n            }\n\n            $input.data('$tooltip').show();\n        }\n\n        /**\n         * Init rendering, called after template injected into the DOM\n         * All options are listed in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * @param {object} interaction\n         */\n        function render(interaction) {\n            const attributes = interaction.getAttributes();\n            const baseType = interaction.getResponseDeclaration().attr('baseType');\n            const $input = interaction.getContainer();\n            const patternMask = interaction.attr('patternMask');\n            const maxChars = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n            let expectedLength;\n\n            // Setting up baseType\n            switch (baseType) {\n                case 'integer':\n                    $input.attr('inputmode', 'numeric');\n                    break;\n                case 'float':\n                    $input.attr('inputmode', 'decimal');\n                    break;\n                default:\n                    $input.attr('inputmode', 'text');\n            }\n\n            //setting up the width of the input field\n            if (attributes.expectedLength) {\n                //adding 2 chars to include reasonable padding size\n                expectedLength = parseInt(attributes.expectedLength) + 2;\n                $input.css('width', expectedLength + 'ch');\n                $input.css('min-width', expectedLength + 'ch');\n            }\n\n            //checking if there's a placeholder for the input\n            if (attributes.placeholderText) {\n                $input.attr('placeholder', attributes.placeholderText);\n            }\n\n            if (maxChars) {\n                const updateMaxCharsTooltip = () => {\n                    const count = $input.val().length;\n                    let message;\n                    let messageType;\n\n                    if (count) {\n                        message = __('%d/%d', count, maxChars);\n                    } else {\n                        message = __('%d characters allowed', maxChars);\n                    }\n\n                    if (count >= maxChars) {\n                        $input.addClass('maxed');\n                        messageType = 'warning';\n                    } else {\n                        $input.removeClass('maxed');\n                        messageType = 'info';\n                    }\n\n                    showTooltip($input, messageType, message);\n                    if (count && messageType === 'warning') {\n                        hideTooltip($input);\n                    }\n                };\n\n                $input\n                    .attr('maxlength', maxChars)\n                    .on('focus.commonRenderer', function() {\n                        updateMaxCharsTooltip();\n                    })\n                    .on('keyup.commonRenderer', function() {\n                        updateMaxCharsTooltip();\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                    })\n                    .on('blur.commonRenderer', function() {\n                        hideTooltip($input);\n                    });\n            } else if (attributes.patternMask) {\n                const updatePatternMaskTooltip = () => {\n                    const regex = new RegExp(attributes.patternMask);\n\n                    hideTooltip($input);\n\n                    if ($input.val()) {\n                        if (regex.test($input.val())) {\n                            $input.removeClass('invalid');\n                        } else {\n                            $input.addClass('invalid');\n                            showTooltip($input, 'error', __('This is not a valid answer'));\n                        }\n                    }\n                };\n\n                $input\n                    .on('focus.commonRenderer', function() {\n                        updatePatternMaskTooltip();\n                    })\n                    .on('keyup.commonRenderer', function() {\n                        updatePatternMaskTooltip();\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                    })\n                    .on('blur.commonRenderer', function() {\n                        hideTooltip($input);\n                    });\n            } else {\n                $input.on('keyup.commonRenderer', function() {\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                });\n            }\n        }\n\n        function resetResponse(interaction) {\n            interaction.getContainer().val('');\n        }\n\n        /**\n         * Set the response to the rendered interaction.\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * Special value: the empty object value {} resets the interaction responses\n         *\n         * @param {object} interaction\n         * @param {object} response\n         */\n        function setResponse(interaction, response) {\n            let responseValue;\n\n            try {\n                responseValue = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                logger.warn(`setResponse error ${e}`);\n            }\n\n            if (responseValue && responseValue.length) {\n                interaction.getContainer().val(responseValue[0]);\n            }\n        }\n\n        /**\n         * Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n        function getResponse(interaction) {\n            const ret = { base: {} };\n            const $input = interaction.getContainer();\n            const attributes = interaction.getAttributes();\n            const baseType = interaction.getResponseDeclaration().attr('baseType');\n            const numericBase = attributes.base || 10;\n\n            const inputValue = $input.val();\n            let value;\n\n            if ($input.hasClass('invalid') || (attributes.placeholderText && inputValue === attributes.placeholderText)) {\n                //invalid response or response equals to the placeholder text are considered empty\n                value = '';\n            } else {\n                const convertedValue = converter.convert(inputValue.trim());\n                if (baseType === 'integer') {\n                    value = locale.parseInt(convertedValue, numericBase);\n                } else if (baseType === 'float') {\n                    value = locale.parseFloat(convertedValue);\n                } else if (baseType === 'string') {\n                    value = convertedValue;\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n\n            return ret;\n        }\n\n        function destroy(interaction) {\n            $$1('input.qti-textEntryInteraction').each(function(index, el) {\n                const $input = $$1(el);\n                if ($input.data('$tooltip')) {\n                    $input.data('$tooltip').dispose();\n                    $input.removeData('$tooltip');\n                }\n            });\n\n            //remove event\n            $$1(document).off('.commonRenderer');\n            containerHelper.get(interaction).off('.commonRenderer');\n\n            //remove instructions\n            instructionMgr.removeInstructions(interaction);\n\n            //remove all references to a cache container\n            containerHelper.reset(interaction);\n        }\n\n        /**\n         * Set the interaction state. It could be done anytime with any state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @param {Object} state - the interaction state\n         */\n        function setState(interaction, state) {\n            if (_.isObject(state)) {\n                if (state.response) {\n                    interaction.resetResponse();\n                    interaction.setResponse(state.response);\n                }\n            }\n        }\n\n        /**\n         * Get the interaction state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @returns {Object} the interaction current state\n         */\n        function getState(interaction) {\n            const state = {};\n            const response = interaction.getResponse();\n\n            if (response) {\n                state.response = response;\n            }\n            return state;\n        }\n\n        var TextEntryInteraction = {\n            qtiClass: 'textEntryInteraction',\n            template: tpl,\n            render: render,\n            getContainer: containerHelper.get,\n            setResponse: setResponse,\n            getResponse: getResponse,\n            resetResponse: resetResponse,\n            destroy: destroy,\n            setState: setState,\n            getState: getState\n        };\n\n        return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',['jquery', 'lodash', 'i18n', 'core/mimetype', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/uploadMime', 'ui/progressbar', 'ui/previewer', 'ui/modal', 'ui/waitForMedia'], function ($$1, _, __, mimetype, Handlebars, Helpers0, containerHelper, instructionMgr, uploadHelper, progressbar, previewer, modal, waitForMedia) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimetype = mimetype && Object.prototype.hasOwnProperty.call(mimetype, 'default') ? mimetype['default'] : mimetype;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    uploadHelper = uploadHelper && Object.prototype.hasOwnProperty.call(uploadHelper, 'default') ? uploadHelper['default'] : uploadHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"accept=\\\"\";\n      if (helper = helpers.accept) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.accept); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-blockInteraction qti-uploadInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n\t\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\t<div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"file-upload fixed-grid-row lft\\\">\\n        <div class=\\\"progressbar\\\"></div>\\n        <span class=\\\"btn-info small col-4\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Browse...\", options) : helperMissing.call(depth0, \"__\", \"Browse...\", options)))\n        + \"</span>\\n        <span class=\\\"file-name placeholder col-8 truncate\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No file selected\", options) : helperMissing.call(depth0, \"__\", \"No file selected\", options)))\n        + \"</span>\\n        <input type=\\\"file\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.accept), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"/>\\n    </div>\\n    <div class=\\\"file-upload-preview lft visible-file-upload-preview runtime-visible-file-upload-preview\\\">\\n        <p class=\\\"nopreview\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No preview available\", options) : helperMissing.call(depth0, \"__\", \"No preview available\", options)))\n        + \"</p>\\n    </div>\\n    <div class=\\\"file-upload-preview-popup modal\\\">\\n        <div class=\\\"modal-body\\\">\\n        </div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _initialInstructions = __('Browse your computer and select the appropriate file.');\n\n    var _readyInstructions = __('The selected file is ready to be sent.');\n\n    /**\n     * Validate type of selected file\n     * @param file\n     * @param interaction\n     * @returns {boolean}\n     */\n    var validateFileType = function validateFileType(file, interaction) {\n        var expectedTypes = uploadHelper.getExpectedTypes(interaction, true);\n        var filetype = mimetype.getMimeType(file);\n        if (expectedTypes.length) {\n            return _.indexOf(expectedTypes, filetype) >= 0;\n        }\n        return true;\n    };\n\n    /**\n     * Compute the message to be displayed when an invalid file type has been selected\n     *\n     * @param {Object} interaction\n     * @param {Function} userSelectedType\n     * @param {Function} messageWrongType\n     * @returns {String}\n     */\n    var getMessageWrongType = function getMessageWrongType(interaction, userSelectedType, messageWrongType) {\n        var types = uploadHelper.getExpectedTypes(interaction);\n        var expectedTypeLabels = _.map(_.uniq(types), function (type) {\n            var mime = _.find(uploadHelper.getMimeTypes(), { mime: type });\n            if (mime) {\n                return mime.label;\n            } else {\n                return type;\n            }\n        });\n\n        if (messageWrongType && _.isFunction(messageWrongType)) {\n            return messageWrongType({\n                userSelectedType: userSelectedType,\n                types: expectedTypeLabels\n            });\n        } else {\n            return __(\n                'Wrong type of file. Expected %s. The selected file has the mimetype \"%s\".',\n                expectedTypeLabels.join(__(' or ')),\n                userSelectedType\n            );\n        }\n    };\n\n    var _handleSelectedFiles = function _handleSelectedFiles(interaction, file, messageWrongType) {\n        var reader;\n        var $container = containerHelper.get(interaction);\n\n        // Show information about the processed file to the candidate.\n        var filename = file.name;\n        var filetype = mimetype.getMimeType(file);\n        instructionMgr.removeInstructions(interaction);\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        if (!validateFileType(file, interaction)) {\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(\n                interaction,\n                getMessageWrongType(interaction, filetype, messageWrongType),\n                function () {\n                    this.setLevel('error');\n                    //clear preview\n                }\n            );\n            instructionMgr.validateInstructions(interaction);\n            return;\n        }\n\n        $container\n            .find('.file-name')\n            .empty()\n            .append(filename);\n\n        // Let's read the file to get its base64 encoded content.\n        reader = new FileReader();\n\n        // Update file processing progress.\n\n        reader.onload = function (e) {\n            var base64Data, commaPosition, base64Raw, $previewArea;\n\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(interaction, _readyInstructions, function () {\n                this.setLevel('success');\n            });\n            instructionMgr.validateInstructions(interaction);\n\n            $container.find('.progressbar').progressbar('value', 100);\n\n            base64Data = e.target.result;\n            commaPosition = base64Data.indexOf(',');\n\n            // Store the base64 encoded data for later use.\n            base64Raw = base64Data.substring(commaPosition + 1);\n            interaction.data('_response', { base: { file: { data: base64Raw, mime: filetype, name: filename } } });\n\n            $previewArea = $container.find('.file-upload-preview');\n            $previewArea.previewer({\n                url: base64Data,\n                name: filename,\n                mime: filetype\n            });\n\n            // we wait for the image to be completely loaded\n            $previewArea.waitForMedia(function () {\n                var $originalImg = $previewArea.find('img'),\n                    $largeDisplay = $$1('.file-upload-preview-popup'),\n                    $item = $$1('.qti-item'),\n                    itemWidth = $item.width(),\n                    winWidth = $$1(window).width() - 80,\n                    fullHeight = $$1('body').height(),\n                    imgNaturalWidth,\n                    isOversized,\n                    modalWidth;\n\n                if (!$originalImg.length) {\n                    return;\n                }\n\n                imgNaturalWidth = $originalImg[0].naturalWidth;\n                isOversized = imgNaturalWidth > itemWidth;\n                modalWidth = Math.min(winWidth, imgNaturalWidth);\n\n                $previewArea.toggleClass('clickable', isOversized);\n\n                if (!isOversized) {\n                    return;\n                }\n\n                $previewArea.on('click', function () {\n                    var $modalBody;\n\n                    $$1('.upload-ia-modal-bg').remove();\n\n                    // remove any previous unnecessary content before inserting the preview image\n                    $modalBody = $largeDisplay.find('.modal-body');\n                    $modalBody.empty().append($originalImg.clone());\n\n                    $largeDisplay\n                        .on('opened.modal', function () {\n                            // prevents the rest of the page from scrolling when modal is open\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'hidden');\n\n                            $largeDisplay.css({\n                                width: modalWidth,\n                                height: fullHeight,\n                                left: (modalWidth - itemWidth - 40) / -2\n                            });\n                        })\n                        .on('closed.modal', function () {\n                            // make the page scrollable again\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'auto');\n                        })\n                        .modal({ modalOverlayClass: 'modal-bg upload-ia-modal-bg' });\n                });\n            });\n        };\n\n        reader.onloadstart = function onloadstart() {\n            instructionMgr.removeInstructions(interaction);\n            $container.find('.progressbar').progressbar('value', 0);\n        };\n\n        reader.onprogress = function onprogress(e) {\n            var percentProgress = Math.ceil((Math.round(e.loaded) / Math.round(e.total)) * 100);\n            $container.find('.progressbar').progressbar('value', percentProgress);\n        };\n\n        reader.readAsDataURL(file);\n    };\n\n    /**\n     * Resets the GUI state to the default display.\n     *\n     * @param {Object} interaction\n     */\n    function resetGui(interaction) {\n        var $container = containerHelper.get(interaction);\n        $container.find('.file-name').text(__('No file selected'));\n        $container.find('.btn-info').text(__('Browse...'));\n    }\n    function callResetGui(interaction) {\n        const renderer = interaction.getRenderer();\n        if (_.isFunction(renderer.resetGui)) {\n            renderer.resetGui(interaction);\n        }\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    function render(interaction) {\n        var changeListener,\n            self = this,\n            $input;\n        var $container = containerHelper.get(interaction);\n        callResetGui(interaction);\n\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        //init response\n        interaction.data('_response', { base: null });\n\n        changeListener = function (e) {\n            var file = e.target.files[0];\n\n            // Are you really sure something was selected\n            // by the user... huh? :)\n            if (typeof file !== 'undefined') {\n                _handleSelectedFiles(interaction, file, self.getCustomMessage('upload', 'wrongType'));\n            }\n        };\n\n        $input = $container.find('input');\n\n        $container.find('.progressbar').progressbar();\n\n        if (!window.FileReader) {\n            throw new Error('FileReader API not supported! Please use a compliant browser!');\n        }\n        $input.bind('change', changeListener);\n\n        // IE Specific hack, prevents button to slightly move on click\n        $input.bind('mousedown', function (e) {\n            e.preventDefault();\n            $$1(this).blur();\n            return false;\n        });\n    }\n    var resetResponse = function resetResponse(interaction) {\n        callResetGui(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        var filename,\n            $container = containerHelper.get(interaction);\n\n        if (response.base !== null) {\n            filename =\n                typeof response.base.file.name !== 'undefined' ? response.base.file.name : 'previously-uploaded-file';\n            $container\n                .find('.file-name')\n                .empty()\n                .text(filename);\n        }\n\n        interaction.data('_response', response);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return interaction.data('_response');\n    };\n\n    var destroy = function destroy(interaction) {\n        //remove event\n        $$1(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     * This way we could cover a lot more types. How could this be matched with the preview templates\n     * in tao/views/js/ui/previewer.js\n     */\n    var getCustomData = function getCustomData(interaction, data) {\n        return _.merge(data || {}, {\n            accept: uploadHelper.getExpectedTypes(interaction, true).join(',')\n        });\n    };\n\n    var UploadInteraction = {\n        qtiClass: 'uploadInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        getData: getCustomData,\n\n        // Exposed private methods for qtiCreator\n        resetGui: resetGui\n    };\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Item',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler'], function (Handlebars, Helpers0, containerHelper, itemStylesheetHandler) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    itemStylesheetHandler = itemStylesheetHandler && Object.prototype.hasOwnProperty.call(itemStylesheetHandler, 'default') ? itemStylesheetHandler['default'] : itemStylesheetHandler;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-item tao-scope runtime\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-itemBody \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    <div id=\\\"modalFeedbacks\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var Item = {\n        qtiClass: 'assessmentItem',\n        template: tpl,\n        getContainer: containerHelper.get,\n\n        /**\n         * Rendering initializations for the item\n         * @param {Object} item - the item model\n         */\n        render: function render(item) {\n            //target blank for all <a>\n            containerHelper.targetBlank(containerHelper.get(item));\n\n            //add stylesheets\n            itemStylesheetHandler.attach(item.stylesheets);\n        },\n\n        /**\n         * Unrender\n         * @param {Object} item - the item model\n         */\n        destroy: function destroy(item) {\n            //clear the container cache\n            containerHelper.clear();\n\n            //detach stylesheets\n            if (item.stylesheets) {\n                itemStylesheetHandler.detach(item.stylesheets);\n            }\n        }\n    };\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Math',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'mathJax', 'jquery'], function (Handlebars, Helpers0, containerHelper, MathJax, $$1) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    MathJax = MathJax && Object.prototype.hasOwnProperty.call(MathJax, 'default') ? MathJax['default'] : MathJax;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math display=\\\"block\\\">\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math>\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.block), {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    // Do not wait between rendering each individual math element\n    // http://docs.mathjax.org/en/latest/api/hub.html\n    if (typeof MathJax !== 'undefined' && MathJax) {\n        MathJax.Hub.processSectionDelay = 0;\n    }\n\n    var _Math = {\n        qtiClass: 'math',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(math) {\n            $$1('body').on('mathjaxRendered', function (event, reference) {\n                if ($$1(reference).find('math').length !== 0) {\n                    $$1(reference).closest('.qti-choice').addClass('flexible-choice-width');\n                }\n            });\n\n            return new Promise(function (resolve) {\n                const $self = containerHelper.get(math);\n                if (typeof MathJax !== 'undefined' && MathJax) {\n                    //MathJax needs to be exported globally to integrate with tools like TTS, it's weird...\n                    if (!window.MathJax) {\n                        window.MathJax = MathJax;\n                    }\n                    //defer execution fix some rendering issue in chrome\n                    if ($self.length) {\n                        MathJax.Hub.Queue(['Typeset', MathJax.Hub, $self[0]]);\n                        MathJax.Hub.Queue(function () {\n                            $$1('body').trigger('mathjaxRendered', [$self[0]]);\n                            resolve();\n                        });\n                    } else {\n                        resolve();\n                    }\n                } else {\n                    resolve();\n                }\n            });\n        }\n    };\n\n    return _Math;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n     **/\n\n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n\n    /**\n     * Check if the element is of a qti container type\n     *\n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element) {\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\n            return true;\n        } else {\n            throw 'the element is not of a container type';\n        }\n    }\n\n    /**\n     * Get the body element of the container\n     *\n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element) {\n        if (_checkContainerType(element)) {\n            return $('<div>')\n                .html(element.body())\n                .find('.x-tao-wrapper');\n        }\n    }\n\n    /**\n     * Add a class to the body element of the qti container\n     *\n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass) {\n        if (_checkContainerType(element) && (oldClass || newClass)) {\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n\n    /**\n     * Switch class to the wrapped DOM\n     *\n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass) {\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if (!$bodyDom.length) {\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if (oldClass) {\n            $bodyDom.removeClass(oldClass);\n        }\n        if (newClass) {\n            $bodyDom.addClass(newClass);\n        }\n    }\n\n    /**\n     * Add manually the encoded information to a dom element\n     *\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n\n    /**\n     * Get the full variable name for the data store\n     *\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value) {\n        if (dataName && value) {\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n\n    /**\n     * Set a data string to the element identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue) {\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(\n            element,\n            _getEncodedDataString(dataName, newValue),\n            _getEncodedDataString(dataName, oldValue)\n        );\n    }\n\n    /**\n     * Remove the stored data from the element by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName) {\n        var oldValue = getEncodedData(element, dataName);\n        if (dataName && oldValue) {\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value) {\n        var $body = _getBodyDom(element);\n        if ($body && $body.length && dataName && value) {\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n\n    /**\n     * Get the encoded data identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName) {\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if (dataName && $body && $body.length && $body.attr('class')) {\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\n            matches = $body.attr('class').match(regex);\n            if (matches) {\n                return matches[1];\n            }\n        }\n    }\n\n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    var container = {\n        setEncodedData: setEncodedData,\n        hasEncodedData: hasEncodedData,\n        getEncodedData: getEncodedData,\n        removeEncodedData: removeEncodedData,\n        setEncodedDataToDom: setEncodedDataToDom\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiItem/helper/container', 'ui/waitForMedia', 'ui/modal'], function (_, Handlebars, Helpers0, containerHelper, coreContainerHelper, waitForMedia, modal) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    coreContainerHelper = coreContainerHelper && Object.prototype.hasOwnProperty.call(coreContainerHelper, 'default') ? coreContainerHelper['default'] : coreContainerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"modal \";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"<h2 class=\\\"qti-title modal-title\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</h2>\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.inline), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-modalFeedback \";\n      if (helper = helpers.feedbackStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.feedbackStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"modal-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var modalFeedbackRenderer = {\n        qtiClass: 'modalFeedback',\n        template: tpl,\n        getContainer: containerHelper.get,\n        width: 600,\n        getData: function(fb, data) {\n            data.feedbackStyle = coreContainerHelper.getEncodedData(fb, 'modalFeedback');\n            return data;\n        },\n        render: function(modalFeedback, data) {\n            var $modal = containerHelper.get(modalFeedback);\n\n            $modal.waitForMedia(function() {\n                //when we are sure that media is loaded:\n                $modal\n                    .on('opened.modal', function() {\n                        //set item body height\n                        var $itemBody = containerHelper.get(modalFeedback.getRootElement()).children('.qti-itemBody');\n                        var requiredHeight = $modal.outerHeight() + parseInt($modal.css('top'));\n                        if (requiredHeight > $itemBody.height()) {\n                            $itemBody.height(requiredHeight);\n                        }\n                    })\n                    .on('closed.modal', function() {\n                        data = data || {};\n\n                        if (_.isFunction(data.callback)) {\n                            data.callback.call(this);\n                        }\n                    })\n                    .modal({\n                        startClosed: false,\n                        minHeight: modalFeedbackRenderer.minHeight,\n                        width: modalFeedbackRenderer.width\n                    });\n            });\n        }\n    };\n\n    return modalFeedbackRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Object',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/previewer'], function (Handlebars, Helpers0, containerHelper, previewer) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-object-container\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA\n     */\n\n    var _Object = {\n        qtiClass: 'object',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function(obj) {\n            var $container = containerHelper.get(obj);\n            var previewOptions = {\n                url: obj.renderer.resolveUrl(obj.attr('data')),\n                mime: obj.attr('type')\n            };\n            if (obj.attr('height')) {\n                previewOptions.height = obj.attr('height');\n            }\n            if (obj.attr('width')) {\n                previewOptions.width = obj.attr('width');\n            }\n            if (previewOptions.url && previewOptions.mime) {\n                $container.previewer(previewOptions);\n            }\n        }\n    };\n\n    return _Object;\n\n});\n\n","define('qtiInfoControlContext',[],function(){\n\n    //need a global reference to have picHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._picHooks = window._picHooks || {};\n\n    /**\n     * Global object accessible by all PICs\n     *\n     * @type Object\n     */\n    var taoQtiInfoControlContext = {\n        /**\n         * register a info control (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} picHook\n         * @returns {undefined}\n         */\n        register : function(picHook){\n            //@todo check picHook validity\n            window._picHooks[picHook.getTypeIdentifier()] = picHook;\n        },\n        /**\n         * notify when a info control is ready for test taker interaction\n         *\n         * @param {string} picInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(picInstance){\n            //@todo add pciInstance as event data and notify event to delivery engine\n        },\n        /**\n         * Get a cloned object representing the PIC model\n         *\n         * @param {string} typeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(typeIdentifier){\n\n            if(window._picHooks[typeIdentifier]){\n\n                var instance = {},\n                    proto = window._picHooks[typeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable info control hook found with the id ' + typeIdentifier;\n            }\n        }\n    };\n\n\n    return taoQtiInfoControlContext;\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'qtiInfoControlContext', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/icRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, qtiInfoControlContext, util, icRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    qtiInfoControlContext = qtiInfoControlContext && Object.prototype.hasOwnProperty.call(qtiInfoControlContext, 'default') ? qtiInfoControlContext['default'] : qtiInfoControlContext;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-infoControl\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * Get the PIC instance associated to the infoControl object\n     * If none exists, create a new one based on the PIC typeIdentifier\n     *\n     * @param {Object} infoControl - the js object representing the infoControl\n     * @returns {Object} PIC instance\n     */\n    var _getPic = function(infoControl) {\n        var typeIdentifier,\n            pic = infoControl.data('pic') || undefined;\n\n        if (!pic) {\n            typeIdentifier = infoControl.typeIdentifier;\n            pic = qtiInfoControlContext.createPciInstance(typeIdentifier);\n\n            if (pic) {\n                //binds the PIC instance to TAO infoControl object and vice versa\n                infoControl.data('pic', pic);\n                pic._taoInfoControl = infoControl;\n            } else {\n                throw 'no custom infoControl hook found for the type ' + typeIdentifier;\n            }\n        }\n\n        return pic;\n    };\n\n    /**\n     * Execute javascript codes to bring the infoControl to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. ensure the context is configured correctly\n     * 2. require all required libs\n     * 3. create a pic instance based on the infoControl model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable\n     *\n     * @param {Object} infoControl\n     * @param {Object} [options]\n     */\n    var render = function(infoControl, options) {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var state = {}; //@todo pass state and response to renderer here:\n            var id = infoControl.attr('id');\n            var typeIdentifier = infoControl.typeIdentifier;\n            var config = infoControl.properties;\n            var $dom = containerHelper.get(infoControl).children();\n            var assetManager = self.getAssetManager();\n\n            icRegistry\n                .loadRuntimes()\n                .then(function() {\n                    var requireEntries = [];\n                    var runtime = icRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pic cannot be found : ' + typeIdentifier);\n                    }\n\n                    //load the entrypoint, becomes optional per IMS PCI v1\n                    if (runtime.hook) {\n                        requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                    }\n\n                    //load required libraries\n                    _.forEach(runtime.libraries, function(module) {\n                        requireEntries.push(module.replace(/\\.js$/, ''));\n                    });\n\n                    //load stylesheets\n                    _.forEach(runtime.stylesheets, function(stylesheet) {\n                        requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                    });\n\n                    //load the entrypoint\n                    window.require(requireEntries, function() {\n                        var pic = _getPic(infoControl);\n                        var picAssetManager = {\n                            resolve: function resolve(url) {\n                                var resolved = assetManager.resolveBy('portableElementLocation', url);\n                                if (resolved === url) {\n                                    return assetManager.resolveBy('baseUrl', url);\n                                } else {\n                                    return resolved;\n                                }\n                            }\n                        };\n\n                        if (pic) {\n                            //call pic initialize() to render the pic\n                            pic.initialize(id, $dom[0], config, picAssetManager);\n                            //restore context (state + response)\n                            pic.setSerializedState(state);\n\n                            return resolve();\n                        }\n\n                        return reject('Unable to initialize pic : ' + id);\n                    }, reject);\n                })\n                .catch(function(error) {\n                    reject('Error loading runtime : ' + id);\n                });\n        });\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} infoControl\n     */\n    var destroy = function destroy(infoControl) {\n        _getPic(infoControl).destroy();\n    };\n\n    /**\n     * Restore the state of the infoControl from the serializedState.\n     *\n     * @param {Object} infoControl - the element instance\n     * @param {Object} state - the state to set\n     */\n    var setState = function setState(infoControl, state) {\n        _getPic(infoControl).setSerializedState(state);\n    };\n\n    /**\n     * Get the current state of the infoControl as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} infoControl - the element instance\n     * @returns {Object} the state\n     */\n    var getState = function getState(infoControl) {\n        return _getPic(infoControl).getSerializedState();\n    };\n\n    var PortableInfoControl = {\n        qtiClass: 'infoControl',\n        template: tpl,\n        getData: function(infoControl, data) {\n            //remove ns + fix media file path\n            var markup = data.markup;\n            markup = util.removeMarkupNamespaces(markup);\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\n            data.markup = markup;\n            return data;\n        },\n        render: render,\n        getContainer: containerHelper.get,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"printedVariable\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var PrintedVariable = {\n        qtiClass: 'printedVariable',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * Common helper functions\n     */\n    var interactionHelper = {\n        convertChoices: function(choices, outputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                if (Element.isA(c, 'choice')) {\n                    switch (outputType) {\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices: function(interaction, choices, inputType) {\n            var ret = [],\n                _this = this;\n\n            _.each(choices, function(c) {\n                var choice;\n                if (_.isString(c)) {\n                    if (inputType === 'serial') {\n                        choice = interaction.getChoice(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else if (inputType === 'identifier') {\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else {\n                        ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                } else {\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices: function(choices) {\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for (var i in choices) {\n                if (Element.isA(choices[i], 'choice')) {\n                    var choice = choices[i];\n                    if (choice.attr('fixed')) {\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                } else {\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for (var n = 0; n < r.length - 1; n++) {\n                if (f[n]) {\n                    continue;\n                }\n                var k = -1;\n                do {\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                } while (f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier: function(interaction, choiceSerial) {\n            var choice = interaction.getChoice(choiceSerial);\n            if (choice) {\n                return choice.id();\n            } else {\n                return '';\n            }\n        }\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //webpack trick : handlebar is usale only from cjs.\n    //but anyway we should deprecate the practice to invoke\n    //directly Handlebars at runtimej\n    let hb = Handlebars;\n    if(typeof hb.compile !== 'function'){\n        hb = require('handlebars');\n    }\n\n    const _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'figure',\n        'img',\n        'figcaption',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    const _dependencies = {\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock: ['_container'],\n        associateInteraction: ['simpleAssociableChoice'],\n        choiceInteraction: ['simpleChoice'],\n        gapMatchInteraction: ['gap', 'gapText'],\n        graphicAssociateInteraction: ['associableHotspot'],\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction: ['hotspotChoice'],\n        hotspotInteraction: ['hotspotChoice'],\n        hottextInteraction: ['hottext'],\n        inlineChoiceInteraction: ['inlineChoice'],\n        matchInteraction: ['simpleAssociableChoice'],\n        orderInteraction: ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    const _renderableSubclasses = {\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    const _defaults = {\n        shuffleChoices: true\n    };\n\n    const _isValidRenderer = function(renderer) {\n        let valid = true;\n\n        if (typeof renderer !== 'object') {\n            return false;\n        }\n\n        let classCorrect = false;\n        if (renderer.qtiClass) {\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\n                classCorrect = true;\n            } else {\n                const pos = renderer.qtiClass.indexOf('.');\n                if (pos > 0) {\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\n                    const subClass = renderer.qtiClass.slice(pos + 1);\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if (!classCorrect) {\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if (!renderer.template) {\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl() {\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    const Renderer = function(options) {\n        /**\n         * Store the registered renderer location\n         */\n        const _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        const _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        const _getClassRenderer = function(qtiClass) {\n            let ret = null;\n            if (_renderers[qtiClass]) {\n                ret = _renderers[qtiClass];\n            } else {\n                const pos = qtiClass.indexOf('.');\n                if (pos > 0) {\n                    qtiClass = qtiClass.slice(0, pos);\n                    if (_renderers[qtiClass]) {\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            let success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value) {\n            if (typeof key === 'string') {\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts) {\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key) {\n            if (typeof key === 'string' && options[key]) {\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\n            const messages = this.getOption('messages');\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\n                //currently not translatable but potentially could be if the need raises\n                return hb.compile(messages[elementName][messageKey]);\n            } else {\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager() {\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader() {\n            return this.themeLoader;\n        };\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass) {\n            let res;\n            let ret = '';\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n            const decorators = this.getOption('decorators');\n\n            if (!renderer || !_.isFunction(renderer.template)) {\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n            //post rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass) {\n            let ret = data;\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getData === 'function') {\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data) {\n            return hb.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass) {\n            let ret = null;\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                ret = renderer.getContainer(qtiElement, $scope);\n            } else {\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer && typeof renderer.render === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.setResponse === 'function') {\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\n                    if ($container instanceof $ && $container.length) {\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getResponse === 'function') {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.resetResponse === 'function') {\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState = function(qtiInteraction, state, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function() {\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations) {\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses) {\n            const self = this;\n            let required = [];\n\n            const themeData = themesHelper.getCurrentThemeData();\n            if (themeData) {\n                options.themes = themeData;\n            }\n            if (options.themes) {\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index) {\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\n            }\n\n            if (requiredClasses) {\n                if (_.isArray(requiredClasses)) {\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass) {\n                        const deps = _dependencies[reqClass];\n                        if (deps) {\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass) {\n                        let requiredSubClasses;\n                        if (_renderableSubclasses[qtiClass]) {\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass) {\n                                if (\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\n                                    !registerRendererClass(qtiClass, required)\n                                ) {\n                                    throw new Error(\n                                        self.name +\n                                            ' : missing qti class location declaration: ' +\n                                            qtiClass +\n                                            ', subclass: ' +\n                                            subclass\n                                    );\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            } else {\n                required = _.values(_locations);\n            }\n\n            moduleLoader([], ()=> true)\n                .addList( required.map( module => ({ module, category: 'qti'}) ) )\n                .load()\n                .then( loaded => {\n                    loaded.forEach( clazz => {\n                        if (_isValidRenderer(clazz)) {\n                            _renderers[clazz.qtiClass] = clazz;\n                        }\n\n                    });\n                    if (typeof callback === 'function') {\n                        callback.call(self, _renderers);\n                    }\n                });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload() {\n            if (this.themeLoader) {\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType) {\n            if (Element.isA(interaction, 'interaction')) {\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(\n                    interactionHelper.findChoices(interaction, choices, identificationType),\n                    'serial'\n                );\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType) {\n            let choices = [];\n            let serial, i;\n\n            if (Element.isA(interaction, 'interaction')) {\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if (!this.shuffledChoices[serial] || reshuffle) {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        this.shuffledChoices[serial] = [];\n                        for (i = 0; i < 2; i++) {\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                    //otherwise get the choices from the serials\n                } else {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        _.forEach(choices, function(choice, index) {\n                            if (index < 2) {\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial) {\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial) {\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if (returnedType === 'serial' || returnedType === 'identifier') {\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function() {\n            return _renderers;\n        };\n\n        this.getLocations = function() {\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url) {\n            if (!options.assetManager) {\n                return url;\n            }\n            if (typeof url === 'string' && url.length > 0) {\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl) {\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if (this.getOption('userRelativeUrl')) {\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\n                //already absolute or base64 encoded\n                return relUrl;\n            } else {\n                let absUrl = '';\n                const runtimeLocations = this.getOption('runtimeLocations');\n\n                if (runtimeLocations && _.size(runtimeLocations)) {\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier) {\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false; //break\n                        }\n                    });\n                }\n\n                if (absUrl) {\n                    return absUrl;\n                } else {\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    var Renderer$1 = {\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build: function(renderersLocations, name, defaultOptions) {\n            const NewRenderer = function() {\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n\n    return Renderer$1;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/rendererProvider',['taoQtiItem/qtiCommonRenderer/renderers/Renderer'], function (QtiRenderer) { 'use strict';\n\n    QtiRenderer = QtiRenderer && Object.prototype.hasOwnProperty.call(QtiRenderer, 'default') ? QtiRenderer['default'] : QtiRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for qtiCommonRenderer\n     */\n    var rendererProvider = {\n        name: 'commonRenderer',\n        init: () => {},\n        getRenderer: () => QtiRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<div class=\\\"grid-row qti-rubricBlock\\\" data-use=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.use)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"rubricBlock\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"qti-rubricBlock-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var RubricBlock = {\n        qtiClass: 'rubricBlock',\n        getContainer: containerHelper.get,\n        template: tpl,\n        getData: function getData(rubric, data) {\n            if (rubric.isEmpty()) {\n                data.empty = true;\n            }\n            return data;\n        }\n    };\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"media=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<link \\n    href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    type=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    rel=\\\"stylesheet\\\" \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Stylesheet = {\n        qtiClass: 'stylesheet',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Table',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"summary=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<table\\n    class=\\\"qti-table\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-qti-class=\\\"table\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    >\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</table>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = {\n        qtiClass: 'table',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Table;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Tooltip',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/tooltip'], function (Handlebars, Helpers0, containerHelper, tooltip) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"_tooltip\\\"\\n    data-role=\\\"tooltip-target\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Tooltip = {\n        qtiClass: '_tooltip',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(tooltipDOM) {\n            var $container = containerHelper.get(tooltipDOM);\n            var renderedTooltip = tooltip.create($container, tooltipDOM.content(), {\n                theme: 'default',\n                placement: 'top'\n            });\n\n            if ($container.data('$tooltip')) {\n                $container.data('$tooltip').dispose();\n                $container.removeData('$tooltip');\n            }\n            $container.data('$tooltip', renderedTooltip);\n        }\n    };\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/IdentifiedElement',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/util'], function (Element, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * IdentifiedElement model\n     */\n    var IdentifiedElement = Element.extend({\n        /**\n         * Generates and assign an identifier\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {Object} for chaining\n         */\n        buildIdentifier: function buildIdentifier(prefix, useSuffix) {\n            var item = this.getRootElement();\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\n            if (id) {\n                this.attr('identifier', id);\n            }\n            return this;\n        },\n\n        /**\n         * Get/set and identifier. It will be generated if it doesn't exists.\n         * @param {String} [value] - set the value or get it if not set.\n         * @returns {String} the identifier\n         */\n        id: function id(value) {\n            if (!value && !this.attr('identifier')) {\n                this.buildIdentifier(this.qtiClass, true);\n            }\n            return this.attr('identifier', value);\n        }\n    });\n\n    return IdentifiedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Choice',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Choice = IdentifiedElement.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'choice' || this._super(qtiClass);\n        },\n        getInteraction: function() {\n            var found,\n                ret = null,\n                item = this.getRootElement();\n            if (item) {\n                found = item.find(this.serial);\n                if (found) {\n                    ret = found.parent;\n                }\n            }\n            return ret;\n        }\n    });\n\n    return Choice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hotspot',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n\tQtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n\tvar QtiHotspot = QtiChoice.extend({});\n\n\treturn QtiHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/AssociableHotspot',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiAssociableHotspot = QtiHotspot.extend({\n        qtiClass: 'associableHotspot'\n    });\n\n    return QtiAssociableHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function () { 'use strict';\n\n    //@todo : need refactoring of qti item mixin with lodash.mixin()\n    var Mixin = {\n        augment: function(targetClass, methods, options) {\n            if (typeof targetClass === 'function' && typeof methods === 'object') {\n                for (var methodName in methods) {\n                    if (!Object.hasOwnProperty(targetClass.prototype, methodName)) {\n                        targetClass.prototype[methodName] = methods[methodName];\n                    } else {\n                        if (options && options.append) {\n                            var _parent = targetClass.prototype[methodName];\n                            targetClass.prototype[methodName] = function() {\n                                methods[methodName].apply(this, arguments);\n                                return _parent.apply(this, arguments);\n                            };\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    return Mixin;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Container',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, Element, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = Element.extend({\n        qtiClass: '_container',\n        init: function(body) {\n            this._super(); //generate serial, attributes array always empty\n            if (body && typeof body !== 'string') {\n                throw 'the body of a container must be a string';\n            }\n            this.bdy = body || '';\n            this.elements = {};\n        },\n        body: function(body) {\n            if (typeof body === 'undefined') {\n                return this.bdy;\n            } else {\n                if (typeof body === 'string') {\n                    this.bdy = body;\n                    $(document).trigger('containerBodyChange', {\n                        body: body,\n                        container: this,\n                        parent: this.parent()\n                    });\n                } else {\n                    throw 'body must be a string';\n                }\n            }\n        },\n        setElements: function(elements, body) {\n            var returnValue = false;\n\n            for (var i in elements) {\n                var elt = elements[i];\n                if (elt instanceof Element) {\n                    body = body || this.bdy;\n                    if (body.indexOf(elt.placeholder()) === -1) {\n                        body += elt.placeholder(); //append the element if no placeholder found\n                    }\n\n                    elt.setRootElement(this.getRootElement() || null);\n                    this.elements[elt.getSerial()] = elt;\n                    $(document).trigger('containerElementAdded', {\n                        element: elt,\n                        container: this\n                    });\n\n                    returnValue = true;\n                } else {\n                    returnValue = false;\n                    throw 'expected a qti element';\n                }\n            }\n\n            this.body(body);\n\n            return returnValue;\n        },\n        setElement: function(element, body) {\n            return this.setElements([element], body);\n        },\n        removeElement: function(element) {\n            var serial = '';\n            if (typeof element === 'string') {\n                serial = element;\n            } else if (element instanceof Element) {\n                serial = element.getSerial();\n            }\n            delete this.elements[serial];\n            this.body(this.body().replace('{{' + serial + '}}', ''));\n            return this;\n        },\n        getElements: function(qtiClass) {\n            var elts = {};\n            if (typeof qtiClass === 'string') {\n                for (var serial in this.elements) {\n                    if (Element.isA(this.elements[serial], qtiClass)) {\n                        elts[serial] = this.elements[serial];\n                    }\n                }\n            } else {\n                elts = _.clone(this.elements);\n            }\n            return elts;\n        },\n        getElement: function(serial) {\n            return this.elements[serial] ? this.elements[serial] : null;\n        },\n        getComposingElements: function() {\n            var elements = this.getElements();\n            var elts = {};\n            for (var serial in elements) {\n                elts[serial] = elements[serial]; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, elements[serial].getComposingElements());\n            }\n            return elts;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                elementsData = [],\n                tpl = this.body();\n\n            for (var serial in this.elements) {\n                var elt = this.elements[serial];\n                if (typeof elt.render === 'function') {\n                    if (elt.qtiClass === '_container') {\n                        //@todo : container rendering merging, to be tested\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\n                    } else {\n                        tpl = tpl.replace(elt.placeholder(), '{{{' + serial + '}}}');\n                        elementsData[serial] = elt.render(renderer);\n                    }\n                } else {\n                    throw 'render() is not defined for the qti element: ' + serial;\n                }\n            }\n\n            if (renderer.isRenderer) {\n                return this._super(\n                    {\n                        body: renderer.renderDirect(tpl, elementsData),\n                        contentModel: this.contentModel || 'flow'\n                    },\n                    renderer,\n                    args.placeholder\n                );\n            } else {\n                throw 'invalid qti renderer for qti container';\n            }\n        },\n        postRender: function(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n\n            var res = _(this.elements)\n                .filter(function(elt) {\n                    return typeof elt.postRender === 'function';\n                })\n                .map(function(elt) {\n                    return elt.postRender(data, '', renderer);\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n            return res;\n        },\n        toArray: function() {\n            var arr = {\n                serial: this.serial,\n                body: this.bdy,\n                elements: {}\n            };\n\n            for (var serial in this.elements) {\n                arr.elements[serial] = this.elements[serial].toArray();\n            }\n\n            return arr;\n        },\n        find: function(serial, parent) {\n            var found = null;\n\n            if (this.elements[serial]) {\n                found = { parent: parent || this, element: this.elements[serial], location: 'body' };\n            } else {\n                _.each(this.elements, function(elt) {\n                    found = elt.find(serial);\n                    if (found) {\n                        return false; //break loop\n                    }\n                });\n            }\n\n            return found;\n        },\n        isEmpty: function() {\n            return !this.bdy;\n        }\n    });\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function (Mixin, Container$1) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container$1 = Container$1 && Object.prototype.hasOwnProperty.call(Container$1, 'default') ? Container$1['default'] : Container$1;\n\n    var methods = {\n        initContainer: function(body) {\n            this.bdy = new Container$1(body || '');\n            this.bdy.setRootElement(this.getRootElement() || null);\n            this.bdy.contentModel = 'blockStatic';\n        },\n        getBody: function() {\n            return this.bdy;\n        },\n        body: function(body) {\n            var ret = this.bdy.body(body);\n            return body ? this : ret; //for method chaining on get\n        },\n        setElement: function(element, body) {\n            this.bdy.setElement(element, body);\n            return this;\n        },\n        removeElement: function(element) {\n            return this.bdy.removeElement(element);\n        },\n        getElements: function(qtiClass) {\n            return this.bdy.getElements(qtiClass);\n        },\n        getElement: function(serial) {\n            return this.bdy.getElement(serial);\n        }\n    };\n\n    var Container = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/Container'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerInline',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'inlineStatic';\n        }\n    });\n\n    var ContainerInline = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerInlineChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Gap',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n    var QtiGap = QtiChoice.extend({\n        qtiClass: 'gap'\n    });\n\n    return QtiGap;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Object',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiObject = Element.extend({\n        qtiClass: 'object',\n        getMediaType: function() {\n            var type = 'undefined';\n            var mimetype = this.attr('type');\n            if (mimetype) {\n                if (mimetype.indexOf('video') === 0) {\n                    type = 'video';\n                } else if (mimetype.indexOf('audio') === 0) {\n                    type = 'audio';\n                } else if (mimetype.indexOf('image') === 0) {\n                    type = 'image';\n                } else if (mimetype.indexOf('text/html') === 0) {\n                    type = 'html';\n                } else {\n                    type = 'object';\n                }\n            }\n            return type;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            switch (this.getMediaType()) {\n                case 'video':\n                    defaultData.video = true;\n                    break;\n                case 'audio':\n                    defaultData.audio = true;\n                    break;\n                case 'html':\n                    defaultData.html = true;\n                    break;\n                case 'image':\n                default:\n                    defaultData.object = true;\n            }\n\n            defaultData.attributes = { data: renderer.resolveUrl(this.attr('data')) };\n            defaultData.body = this._alt;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('data');\n        }\n    });\n\n    return QtiObject;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapImg',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/core/Object'], function (QtiChoice, QtiObject) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiGapImg = QtiChoice.extend({\n        qtiClass: 'gapImg',\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiGapImg;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapText',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var QtiGapText = QtiContainerChoice.extend({\n        qtiClass: 'gapText'\n    });\n\n    return QtiGapText;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/HotspotChoice',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiHotspotChoice = QtiHotspot.extend({\n        qtiClass: 'hotspotChoice'\n    });\n\n    return QtiHotspotChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hottext',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var Hottext = Choice.extend({\n        qtiClass: 'hottext'\n    });\n\n    Container.augment(Hottext);\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/InlineChoice',['taoQtiItem/qtiItem/core/choices/ContainerInlineChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiInlineChoice = QtiContainerChoice.extend({\n        qtiClass: 'inlineChoice'\n    });\n\n    return QtiInlineChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleAssociableChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleAssociableChoice'\n    });\n\n    return QtiSimpleAssociableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleChoice'\n    });\n\n    return QtiSimpleChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextVariableChoice',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, QtiChoice, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiTextVariableChoice = QtiChoice.extend({\n        init: function(serial, attributes, text) {\n            this._super(serial, attributes);\n            this.val(text || '');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'textVariableChoice' || this._super(qtiClass);\n        },\n        val: function(text) {\n            if (typeof text === 'undefined') {\n                return this.text;\n            } else {\n                if (typeof text === 'string') {\n                    this.text = text;\n                    $(document).trigger('choiceTextChange', {\n                        choice: this,\n                        text: text\n                    });\n                } else {\n                    throw 'text must be a string';\n                }\n            }\n            return this;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    body: this.text\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiTextVariableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextEntry',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiTextEntry = QtiTextVariableChoice.extend({\r\n        qtiClass: 'textEntry'\r\n    });\n\n    return QtiTextEntry;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/Feedback',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Feedback = IdentifiedElement.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    return Feedback;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackBlock = Feedback.extend({});\n\n\treturn FeedbackBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackInline = Feedback.extend({});\n\n\treturn FeedbackInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function (IdentifiedElement, Container) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ModalFeedback = IdentifiedElement.extend({\n        qtiClass: 'modalFeedback',\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ModalFeedback);\n\n    return ModalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigcaption',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figcaption';\n        }\n    });\n\n    var ContainerFigcaption = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/NamespacedElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    var methods = {\n        getNamespace: function() {\n            var relatedItem;\n            var namespaces;\n            var ns;\n\n            if (this.ns && (this.ns.name || this.ns.uri)) {\n                return _.clone(this.ns);\n            } else {\n                relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    namespaces = relatedItem.getNamespaces();\n                    for (ns in namespaces) {\n                        if (namespaces[ns].indexOf(this.nsUriFragment) > 0) {\n                            return {\n                                name: ns,\n                                uri: namespaces[ns]\n                            };\n                        }\n                    }\n                    //if no ns found in the item, set the default one!\n                    relatedItem.namespaces[this.defaultNsName] = this.defaultNsUri;\n                    return {\n                        name: this.defaultNsName,\n                        uri: this.defaultNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setNamespace: function(name, uri) {\n            this.ns = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var NamespacedElement = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return NamespacedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figcaption',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigcaption', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figcaption = Element.extend({\n        qtiClass: 'figcaption',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figcaption' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(Figcaption);\n    NamespacedElement.augment(Figcaption);\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigure',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figure';\n        }\n    });\n\n    var ContainerFigure = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figure',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigure', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figure = Element.extend({\n        qtiClass: 'figure',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figure' || this._super(qtiClass);\n        },\n        isEmpty: function () {\n            const imgElements = this.getElements('img');\n            if (imgElements && Object.values(imgElements).length) {\n                return Object.values(imgElements)[0].isEmpty();\n            } else {\n                return true;\n            }\n        }\n    });\n    Container.augment(Figure);\n    NamespacedElement.augment(Figure);\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Img',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Img = Element.extend({\n        qtiClass: 'img',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {\n                src: renderer.resolveUrl(this.attr('src'))\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('src');\n        }\n    });\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Include',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Include = Element.extend({\n        qtiClass: 'include',\n        defaultNsName: 'xi',\n        defaultNsUri: 'http://www.w3.org/2001/XInclude',\n        nsUriFragment: 'XInclude',\n        isEmpty: function() {\n            return !this.attr('href') || this.getBody().isEmpty();\n        }\n    });\n    Container.augment(Include);\n    NamespacedElement.augment(Include);\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Interaction',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util'], function (Element, _, rendererConfig, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    var QtiInteraction = Element.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = {};\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'interaction' || this._super(qtiClass);\n        },\n        addChoice: function(choice) {\n            choice.setRootElement(this.getRootElement() || null);\n            this.choices[choice.getSerial()] = choice;\n            return this;\n        },\n        getChoices: function() {\n            var choices = {};\n            for (var i in this.choices) {\n                //prevent passing the whole array by ref\n                choices[i] = this.choices[i];\n            }\n            return choices;\n        },\n        getChoice: function(serial) {\n            var ret = null;\n            if (this.choices[serial]) {\n                ret = this.choices[serial];\n            }\n            return ret;\n        },\n        getChoiceByIdentifier: function(identifier) {\n            for (var i in this.choices) {\n                if (this.choices[i].id() === identifier) {\n                    return this.choices[i];\n                }\n            }\n            return null;\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            //recursive to choices:\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    elts[serial] = this.choices[serial];\n                    elts = _.extend(elts, this.choices[serial].getComposingElements());\n                }\n            }\n            return elts;\n        },\n        find: function(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, 'choices', serial);\n            }\n            return found;\n        },\n        getResponseDeclaration: function() {\n            var response = null;\n            var responseId = this.attr('responseIdentifier');\n            if (responseId) {\n                var item = this.getRootElement();\n                if (item) {\n                    response = item.getResponseDeclaration(responseId);\n                } else {\n                    throw 'cannot get response of an interaction out of its item context';\n                }\n            }\n            return response;\n        },\n        /**\n         * Render the interaction to the view.\n         * The optional argument \"subClass\" allows distinguishing customInteraction: e.g. customInteraction.matrix, customInteraction.likertScale ...\n         */\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    _type: this.qtiClass.replace(/([A-Z])/g, function($1) {\n                        return '_' + $1.toLowerCase();\n                    }),\n                    choices: [],\n                    choiceShuffle: true\n                };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            var choices =\n                this.attr('shuffle') && renderer.getOption('shuffleChoices')\n                    ? renderer.getShuffledChoices(this)\n                    : this.getChoices();\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n            var _this = this;\n            _.each(choices, function(choice) {\n                if (Element.isA(choice, 'choice')) {\n                    try {\n                        var renderedChoice = choice.render(\n                            _.clone(interactionData, true),\n                            null,\n                            choice.qtiClass + '.' + _this.qtiClass,\n                            renderer\n                        ); //use interaction type as choice subclass\n                        defaultData.choices.push(renderedChoice);\n                    } catch (e) {\n                        //leave choices empty in case of error\n                    }\n                }\n            });\n\n            var tplName = args.subclass ? this.qtiClass + '.' + args.subclass : this.qtiClass;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, tplName, renderer);\n        },\n        postRender: function(data, altClassName, renderer) {\n            var self = this;\n            renderer = renderer || this.getRenderer();\n\n            return _(this.getChoices())\n                .filter(function(elt) {\n                    return Element.isA(elt, 'choice');\n                })\n                .map(function(choice) {\n                    return choice.postRender({}, choice.qtiClass + '.' + self.qtiClass, renderer);\n                })\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        setResponse: function(values) {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.setResponse(this, values);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        getResponse: function() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.getResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        resetResponse: function() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.resetResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state is provided by the interaction's renderer.\n         *\n         * @returns {Object} the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        getState: function() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState(this);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state will be given to the interaction's renderer.\n         *\n         * @param {Object} state - the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        setState: function(state) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState(this, state);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n        },\n\n        /**\n         * Clean up an interaction rendering.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n         */\n        clear: function() {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.destroy)) {\n                return renderer.destroy(this);\n            }\n        },\n\n        toArray: function() {\n            var arr = this._super();\n            arr.choices = {};\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    arr.choices[serial] = this.choices[serial].toArray();\n                }\n            }\n            return arr;\n        },\n\n        getNormalMaximum: function getNormalMaximum() {\n            //by default\n            return false;\n        }\n    });\n\n    return QtiInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Prompt',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Element, Container) { 'use strict';\n\n\tElement = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar Prompt = Element.extend({ qtiClass: 'prompt' });\n\tContainer.augment(Prompt);\n\n\treturn Prompt;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/BlockInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/core/interactions/Prompt', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Interaction, Prompt, _, rendererConfig) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    Prompt = Prompt && Object.prototype.hasOwnProperty.call(Prompt, 'default') ? Prompt['default'] : Prompt;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var BlockInteraction = Interaction.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.prompt = new Prompt('');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'blockInteraction' || this._super(qtiClass);\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            elts = _.extend(elts, this.prompt.getComposingElements());\n            elts[this.prompt.getSerial()] = this.prompt;\n            return elts;\n        },\n        find: function(serial) {\n            return this._super(serial) || this.prompt.find(serial);\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    promptId: `prompt-${this.prompt.getSerial()}`,\n                    prompt: this.prompt.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return [].concat(this.prompt.postRender({}, '', renderer)).concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.prompt = this.prompt.toArray();\n            return arr;\n        }\n    });\n\n    return BlockInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    var responseRules = {\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'match',\n                    expressions: [\n                        {\n                            qtiClass: 'variable',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                        {\n                            qtiClass: 'correct',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    },\n                                },\n                                {\n                                    qtiClass: 'baseValue',\n                                    attributes: {\n                                        baseType: 'integer'\n                                    },\n                                    value: '1',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponse',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponsePoint',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const _templateNames = {\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        NONE: 'no_response_processing'\n    };\n\n\n    var response = {\n        isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName(tplName) {\n            return _templateNames[tplName] || '';\n        },\n        getTemplateNameFromUri(tplUri) {\n            let tplName = '';\n\n            _.forIn(_templateNames, (uri, name) => {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n\n            return tplName;\n        },\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\n            if (!responseRules) {\n                return 'NONE';\n            }\n\n            const {\n                responseIf: {\n                    responseRules: [outcomeRules = {}] = [],\n                } = {}\n            } = responseRules;\n            const {\n                attributes: {\n                    identifier: outcomeIdentifier,\n                } = {},\n            } = outcomeRules;\n\n            if (!outcomeIdentifier) {\n                return '';\n            }\n\n            return Object.keys(responseRulesHelper).find(\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\n            );\n        }\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * It is the top abstract class for all variable classes\n     * (so not renderable and qtiClass undefined)\n     */\n    var VariableDeclaration = IdentifiedElement.extend({\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.defaultValue = null;\n        },\n        is: function is(qtiClass) {\n            return qtiClass === 'variableDeclaration' || this._super(qtiClass);\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            arr.defaultValue = this.defaultValue;\n            return arr;\n        },\n        setDefaultValue: function setDefaultValue(value) {\n            this.defaultValue = value;\n        },\n        getDefaultValue: function getDefaultValue() {\n            return this.defaultValue;\n        }\n    });\n\n    return VariableDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function (VariableDeclaration) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n\n    var OutcomeDeclaration = VariableDeclaration.extend({\n        qtiClass: 'outcomeDeclaration'\n    });\n\n    return OutcomeDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/maxScore',['lodash', 'lib/gamp/gamp', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function (_, gamp, responseHelper, OutcomeDeclaration) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    gamp = gamp && Object.prototype.hasOwnProperty.call(gamp, 'default') ? gamp['default'] : gamp;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    OutcomeDeclaration = OutcomeDeclaration && Object.prototype.hasOwnProperty.call(OutcomeDeclaration, 'default') ? OutcomeDeclaration['default'] : OutcomeDeclaration;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var pairExists = function pairExists(collection, pair) {\n        if (pair.length !== 2) {\n            return false;\n        }\n        return collection[pair[0] + ' ' + pair[1]] || collection[pair[1] + ' ' + pair[0]];\n    };\n\n    var maxScore = {\n        /**\n         * Set the normal maximum to the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setNormalMaximum: function setNormalMaximum(item) {\n            var normalMaximum,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                normalMaximum = _.reduce(\n                    item.getInteractions(),\n                    function(acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            return false;\n                        }\n                    },\n                    0\n                );\n\n                if (_.isNumber(normalMaximum)) {\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\n                } else {\n                    scoreOutcome.removeAttr('normalMaximum');\n                }\n            }\n        },\n\n        /**\n         * Set the maximum score of the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setMaxScore: function setMaxScore(item) {\n            var hasInvalidInteraction = false,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\n                customOutcomes,\n                maxScore,\n                maxScoreOutcome;\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                maxScore = _.reduce(\n                    item.getInteractions(),\n                    function(acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            hasInvalidInteraction = true;\n                            return acc;\n                        }\n                    },\n                    0\n                );\n\n                customOutcomes = _(item.getOutcomes()).filter(function(outcome) {\n                    return outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE';\n                });\n\n                if (customOutcomes.size()) {\n                    maxScore = customOutcomes.reduce(function(acc, outcome) {\n                        return gamp.add(acc, parseFloat(outcome.attr('normalMaximum') || 0));\n                    }, maxScore);\n                }\n\n                maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\n                if (!hasInvalidInteraction || customOutcomes.size()) {\n                    if (!maxScoreOutcome) {\n                        //add new outcome\n                        maxScoreOutcome = new OutcomeDeclaration({\n                            cardinality: 'single',\n                            baseType: 'float'\n                        });\n\n                        //attach the outcome to the item before generating item-level unique id\n                        item.addOutcomeDeclaration(maxScoreOutcome);\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\n                    }\n                    maxScoreOutcome.setDefaultValue(maxScore);\n                }\n\n                //handle special case when MAXSCORE is set up manually for some interaction like ExtendedText\n                if(hasInvalidInteraction && maxScoreOutcome) {\n                    if(maxScoreOutcome.attributes && maxScoreOutcome.attributes.externalScored) {\n                        if(_.isUndefined(maxScoreOutcome.defaultValue)) {\n                            maxScoreOutcome.setDefaultValue(1);\n                        }\n                    } else {\n                        item.removeOutcome('MAXSCORE');\n                    }\n                }\n            }\n        },\n\n        /**\n         * Sort an array of associable choices by its matchMax attr value\n         * @param {Array} choiceCollection\n         * @returns {Array}\n         */\n        getMatchMaxOrderedChoices: function getMatchMaxOrderedChoices(choiceCollection) {\n            return _(choiceCollection)\n                .map(function(choice) {\n                    var matchMax = parseInt(choice.attr('matchMax'), 10);\n                    if (_.isNaN(matchMax)) {\n                        matchMax = 0;\n                    }\n                    return {\n                        matchMax: matchMax === 0 ? Infinity : matchMax,\n                        id: choice.id()\n                    };\n                })\n                .sortBy('matchMax')\n                .reverse()\n                .valueOf();\n        },\n\n        /**\n         * Compute the maximum score of a \"choice\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        choiceInteractionBased: function choiceInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max,\n                maxChoice,\n                minChoice,\n                scoreMaps,\n                requiredChoiceCount,\n                totalAnswerableResponse,\n                sortedMapEntries,\n                missingMapsCount;\n\n            options = _.defaults(options || {}, { maxChoices: 0, minChoices: 0 });\n            maxChoice = parseInt(interaction.attr('maxChoices') || options.maxChoices, 10);\n            minChoice =  0 ;\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    maxChoice &&\n                    _.isArray(responseDeclaration.correctResponse) &&\n                    (responseDeclaration.correctResponse.length > maxChoice ||\n                        responseDeclaration.correctResponse.length < minChoice)\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //prepare constraint params\n                requiredChoiceCount = minChoice;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                //sort the score map entries by the score\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                sortedMapEntries = _(scoreMaps)\n                    .map(function(v) {\n                        return parseFloat(v);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .first(totalAnswerableResponse);\n\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\n                missingMapsCount = minChoice - sortedMapEntries.size();\n                _.times(missingMapsCount, function() {\n                    sortedMapEntries.push(mapDefault);\n                });\n\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\n                if (mapDefault && mapDefault > 0) {\n                    if (maxChoice) {\n                        missingMapsCount = maxChoice - sortedMapEntries.size();\n                    } else {\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.size();\n                    }\n                    if (missingMapsCount > 0) {\n                        _.times(missingMapsCount, function() {\n                            sortedMapEntries.push(mapDefault);\n                        });\n                    }\n                }\n\n                //calculate the maximum reachable score by choice map\n                max = sortedMapEntries.reduce(function(acc, v) {\n                    var score = v;\n                    if (score < 0 && requiredChoiceCount <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredChoiceCount--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //map point response processing does not work on choice based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"order\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        orderInteractionBased: function orderInteractionBased(interaction) {\n            var minChoice =  0 ;\n            var maxChoice = parseInt(interaction.attr('maxChoices') || 0, 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max;\n\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        (maxChoice && responseDeclaration.correctResponse.length > maxChoice)) ||\n                    (minChoice )\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\n                //map response processing does not work on order based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"associate\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        associateInteractionBased: function associateInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = parseInt(interaction.attr('maxAssociations') || 0, 10);\n            var minAssoc =  0 ;\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                requiredAssoc,\n                totalAnswerableResponse,\n                usedChoices,\n                choicesIdentifiers,\n                sortedMapEntries,\n                i,\n                allPossibleMapEntries,\n                infiniteScoringPair;\n\n            options = _.defaults(options || {}, { possiblePairs: [], checkInfinitePair: false });\n\n            if (maxAssoc && minAssoc && maxAssoc < minAssoc) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        (!responseDeclaration.correctResponse.length ||\n                            (maxAssoc && responseDeclaration.correctResponse.length > maxAssoc) ||\n                            (minAssoc )))\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n\n                    //get the list of choices used in map entries\n                    choicesIdentifiers = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choicesIdentifiers.push(choices[0].trim());\n                            choicesIdentifiers.push(choices[1].trim());\n                        }\n                    });\n\n                    //check if the choices usage are possible within the constraint defined in the interaction\n                    _.forEach(_.countBy(choicesIdentifiers), function(count, identifier) {\n                        var matchMax;\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        if (!choice) {\n                            max = 0;\n                            return false;\n                        }\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                requiredAssoc = minAssoc;\n                totalAnswerableResponse = maxAssoc === 0 ? Infinity : maxAssoc;\n                usedChoices = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(options.possiblePairs, function(pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                //get the sorted list of mapentries ordered by the score\n                sortedMapEntries = _(allPossibleMapEntries)\n                    .map(function(score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function(mapEntry) {\n                        var pair = mapEntry.pair;\n                        var choices, choiceId, choice, _usedChoices;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        //check that the pair is possible in term of matchMax\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            //clone the global used choices array to brings the changes in that object first before storing in the actual object\n                            _usedChoices = _.cloneDeep(usedChoices);\n\n                            for (i = 0; i < 2; i++) {\n                                choiceId = choices[i];\n\n                                //collect choices usage to check if the pair is possible\n                                if (!_usedChoices[choiceId]) {\n                                    choice = interaction.getChoiceByIdentifier(choiceId);\n                                    if (!choice) {\n                                        //unexisting choice, skip\n                                        return false;\n                                    }\n                                    _usedChoices[choiceId] = {\n                                        used: 0,\n                                        max: parseInt(choice.attr('matchMax'), 10)\n                                    };\n                                }\n                                if (\n                                    _usedChoices[choiceId].max &&\n                                    _usedChoices[choiceId].used === _usedChoices[choiceId].max\n                                ) {\n                                    //skip\n                                    return false;\n                                } else {\n                                    _usedChoices[choiceId].used++;\n                                }\n                            }\n\n                            //identify the edge case when we can get infinite association pair that create an infinite score\n                            infiniteScoringPair =\n                                infiniteScoringPair ||\n                                (options.checkInfinitePair &&\n                                    mapEntry.score > 0 &&\n                                    _usedChoices[choices[0]].max === 0 &&\n                                    _usedChoices[choices[1]].max === 0);\n\n                            //update the global used choices array\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .first(totalAnswerableResponse);\n\n                //infinite score => no normalMaximum should be generated for it\n                if (infiniteScoringPair) {\n                    return false;\n                }\n\n                //reduce the ordered list of map entries to calculate the max score\n                max = sortedMapEntries.reduce(function(acc, v) {\n                    var score = v.score;\n                    if (v.score < 0 && requiredAssoc <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredAssoc--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"gap match\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        gapMatchInteractionBased: function gapMatchInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                skippableWrongResponse,\n                totalAnswerableResponse,\n                usedChoices,\n                usedGaps,\n                group1,\n                group2,\n                allPossibleMapEntries;\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection) {\n                return _(choiceCollection)\n                    .map(function(choice) {\n                        return {\n                            matchMax: choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\n                            id: choice.id()\n                        };\n                    })\n                    .sortBy('matchMax')\n                    .reverse()\n                    .valueOf();\n            };\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n                    group1 = [];\n                    group2 = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            group1.push(choices[0].trim());\n                            group2.push(choices[1].trim());\n                        }\n                    });\n\n                    _.forEach(_.countBy(group1), function(count, identifier) {\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n\n                    _.forEach(_.countBy(group2), function(count) {\n                        var matchMax = 1; //match max for a gap is always 1\n                        if ( matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse =  Infinity ;\n                usedChoices = {};\n                usedGaps = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(calculatePossiblePairs(interaction), function(pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                max = _(allPossibleMapEntries)\n                    .map(function(score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function(mapEntry) {\n                        var pair = mapEntry.pair;\n                        var _usedChoices = _.cloneDeep(usedChoices);\n                        var choices, choiceId, gapId, choice;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choiceId = choices[0];\n                            gapId = choices[1];\n                            if (!_usedChoices[choiceId]) {\n                                choice = interaction.getChoiceByIdentifier(choiceId);\n                                if (!choice) {\n                                    //inexisting choice, skip\n                                    return false;\n                                }\n                                _usedChoices[choiceId] = {\n                                    used: 0,\n                                    max: parseInt(choice.attr('matchMax'), 10)\n                                };\n                            }\n                            if (_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max) {\n                                //skip\n                                return false;\n                            }\n                            _usedChoices[choiceId].used++;\n\n                            if (!usedGaps[gapId]) {\n                                usedGaps[gapId] = {\n                                    used: 0,\n                                    max: 1\n                                };\n                            }\n                            if (usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max) {\n                                //skip\n                                return false;\n                            }\n                            usedGaps[gapId].used++;\n\n                            //if an only if it is ok, we merge the temporary used choices array into the global one\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .first(totalAnswerableResponse)\n                    .reduce(function(acc, v) {\n                        var score = v.score;\n                        if (score >= 0) {\n                            return acc + score;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + score;\n                        }\n                    }, 0);\n\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = false;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"select point\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        selectPointInteractionBased: function selectPointInteractionBased(interaction) {\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, skippableWrongResponse, totalAnswerableResponse;\n\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\n                //such templates are not allowed\n                return 0;\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //calculate the maximum reachable score by choice map\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                max = _(responseDeclaration.mapEntries)\n                    .map(function(v) {\n                        return parseFloat(v.mappedValue);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .first(totalAnswerableResponse)\n                    .reduce(function(acc, v) {\n                        if (v >= 0) {\n                            return acc + v;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + v;\n                        }\n                    }, 0);\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"slider\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        sliderInteractionBased: function sliderInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                max = _(scoreMaps)\n                    .map(function(v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"text entry\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        textEntryInteractionBased: function textEntryInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            /**\n             * Check that a response is possible or not according to the defined patternmask\n             * @param {String} value\n             * @returns {Boolean}\n             */\n            var isPossibleResponse = function isPossibleResponse(value) {\n                var patternMask = interaction.attr('patternMask');\n                if (patternMask) {\n                    return !!value.match(new RegExp(patternMask));\n                } else {\n                    //no restriction by pattern so always possible\n                    return true;\n                }\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(\n                    _.filter(responseDeclaration.mapEntries, function(score, key) {\n                        return isPossibleResponse(key);\n                    })\n                );\n                max = _(scoreMaps)\n                    .map(function(v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"custom\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        customInteractionBased(interaction) {\n            const responseDeclaration = interaction.getResponseDeclaration();\n            const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            let max;\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    Array.isArray(responseDeclaration.correctResponse) &&\n                    (responseDeclaration.correctResponse.length)\n                ) {\n                    max = 1;\n                } else {\n                    max = 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                const values = _.values(responseDeclaration.mapEntries)\n                    .map(function(v) {\n                        return parseFloat(v);\n                    });\n                max = _.max(values);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else {\n                max = 0;\n            }\n            return max;\n        }\n    };\n\n    return maxScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/AssociateInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var AssociateInteraction = BlockInteraction.extend({\n        qtiClass: 'associateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        pairs.push([choices[i].id, choices[j].id]);\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ChoiceInteraction = BlockInteraction.extend({\n        qtiClass: 'choiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ContainerInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/mixin/Container'], function (BlockInteraction, Container) { 'use strict';\n\n\tBlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar ContainerInteraction = BlockInteraction.extend({});\n\tContainer.augment(ContainerInteraction);\n\n\treturn ContainerInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/CustomElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {\n        prop: function(name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.properties[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.prop(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.properties[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.properties[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeProp: function(propNames) {\n            var _this = this;\n            if (typeof propNames === 'string') {\n                propNames = [propNames];\n            }\n            _.each(propNames, function(propName) {\n                delete _this.attributes[propName];\n            });\n            return this;\n        },\n        getProperties: function() {\n            return _.clone(this.properties);\n        },\n        getMarkupNamespace: function() {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function(name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var CustomElement = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return CustomElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/CustomInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, Interaction, CustomElement, NamespacedElement, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    var CustomInteraction = Interaction.extend({\n        qtiClass: 'customInteraction',\n        defaultNsName: 'pci',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableCustomInteraction',\n        nsUriFragment: 'portableCustomInteraction',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            this.pciReadyCallbacks = [];\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'customInteraction' || this._super(qtiClass);\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pci: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n        getMarkupNamespace: function() {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function(name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        },\n        onPciReady: function(callback) {\n            this.pciReadyCallbacks.push(callback);\n\n            if (this.data('pci')) {\n                //if pci is already ready, call it immediately\n                this.triggerPciReady();\n            }\n        },\n        triggerPciReady: function() {\n            var _this = this,\n                pci = this.data('pci');\n\n            if (pci) {\n                _.each(this.pciReadyCallbacks, function(fn) {\n                    fn.call(_this, pci);\n                });\n\n                //empty the stack of ready callbacks\n                this.pciReadyCallbacks = [];\n\n                //mark the interaction as ready\n                this.data('pciReady', true);\n            } else {\n                throw 'cannot trigger pci ready when no pci is actually attached to the interaction';\n            }\n        },\n        onPci: function(event, callback) {\n            this.onPciReady(function(pci) {\n                if (_.isFunction(pci.on)) {\n                    pci.on(event, callback);\n                } else {\n                    throw 'the pci does not implement on() function';\n                }\n            });\n            return this;\n        },\n        offPci: function(event) {\n            this.onPciReady(function(pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.off(event);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        triggerPci: function(event, args) {\n            this.onPciReady(function(pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.trigger(event, args);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        getNormalMaximum() {\n            return maxScore.customInteractionBased(this);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(CustomInteraction);\n    NamespacedElement.augment(CustomInteraction);\n\n    return CustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction'], function (Interaction) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var InlineInteraction = Interaction.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'inlineInteraction' || this._super(qtiClass);\n        }\n    });\n\n    return InlineInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var EndAttemptInteraction = InlineInteraction.extend({\n        qtiClass: 'endAttemptInteraction'\n    });\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, BlockInteraction, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ExtendedTextInteraction = BlockInteraction.extend({\n        qtiClass: 'extendedTextInteraction',\n        render: function render() {\n            var i,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    multiple: false,\n                    maxStringLoop: []\n                },\n                response = this.getResponseDeclaration();\n\n            if (\n                this.attr('maxStrings') &&\n                (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n            ) {\n                defaultData.multiple = true;\n                for (i = 0; i < this.attr('maxStrings'); i++) {\n                    defaultData.maxStringLoop.push(i + ''); //need to convert to string. The tpl engine fails otherwise\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapMatchInteraction = ContainerInteraction.extend({\n        qtiClass: 'gapMatchInteraction',\n        getGaps: function getGaps() {\n            return this.getBody().getElements('gap');\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.gapMatchInteractionBased(this);\n        }\n    });\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ObjectInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/Object'], function (QtiBlockInteraction, QtiObject) { 'use strict';\n\n    QtiBlockInteraction = QtiBlockInteraction && Object.prototype.hasOwnProperty.call(QtiBlockInteraction, 'default') ? QtiBlockInteraction['default'] : QtiBlockInteraction;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiObjectInteraction = QtiBlockInteraction.extend({\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiObjectInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicInteraction',['taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (QtiObjectInteraction, _, rendererConfig) { 'use strict';\n\n    QtiObjectInteraction = QtiObjectInteraction && Object.prototype.hasOwnProperty.call(QtiObjectInteraction, 'default') ? QtiObjectInteraction['default'] : QtiObjectInteraction;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiGraphicInteraction = QtiObjectInteraction.extend({\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    backgroundImage: this.object.getAttributes(),\n                    object: this.object.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiGraphicInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicAssociateInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicAssociateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        if (i !== j) {\n                            pairs.push([choices[i].id, choices[j].id]);\n                        }\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, Element, _, rendererConfig, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicGapMatchInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicGapMatchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.gapImgs = {};\n        },\n        addGapImg: function addGapImg(gapImg) {\n            if (Element.isA(gapImg, 'gapImg')) {\n                gapImg.setRootElement(this.getRootElement() || null);\n                this.gapImgs[gapImg.getSerial()] = gapImg;\n            }\n        },\n        removeGapImg: function removeGapImg(gapImg) {\n            var serial = '';\n            if (typeof gapImg === 'string') {\n                serial = gapImg;\n            } else if (Element.isA(gapImg, 'gapImg')) {\n                serial = gapImg.getSerial();\n            }\n            delete this.gapImgs[serial];\n            return this;\n        },\n        getGapImgs: function getGapImgs() {\n            return _.clone(this.gapImgs);\n        },\n        getGapImg: function getGapImg(serial) {\n            return this.gapImgs[serial];\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var choice = this._super(identifier);\n            if (!choice) {\n                //if not found among the choices, search the gapImgs\n                choice = _.find(this.gapImgs, function(elt) {\n                    return elt && elt.id() === identifier;\n                });\n            }\n            return choice;\n        },\n        getComposingElements: function getComposingElements() {\n            var serial,\n                elts = this._super();\n            //recursive to choices:\n            for (serial in this.gapImgs) {\n                elts[serial] = this.gapImgs[serial];\n                elts = _.extend(elts, this.gapImgs[serial].getComposingElements());\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                if (this.gapImgs[serial]) {\n                    found = { parent: this, element: this.gapImgs[serial] };\n                }\n            }\n            return found;\n        },\n        render: function render() {\n            var serial,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    gapImgs: []\n                };\n\n            //note: no choice shuffling option available for graphic gap match\n            var gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                if (Element.isA(gapImgs[serial], 'choice')) {\n                    defaultData.gapImgs.push(gapImgs[serial].render({}, null, '', renderer));\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function toArray() {\n            var serial,\n                gapImgs,\n                arr = this._super();\n            arr.gapImgs = {};\n            gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                arr.gapImgs[serial] = gapImgs[serial].toArray();\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(graphicGapInteraction) {\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getGapImgs());\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getChoices());\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {\n                possiblePairs: calculatePossiblePairs(this),\n                checkInfinitePair: true\n            });\n        }\n    });\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicOrderInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicOrderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HotspotInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HotspotInteraction = GraphicInteraction.extend({\n        qtiClass: 'hotspotInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HottextInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, Element, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HottextInteraction = ContainerInteraction.extend({\n        qtiClass: 'hottextInteraction',\n        getChoices: function() {\n            return this.getBody().getElements('hottext');\n        },\n        getChoice: function(serial) {\n            var element = this.getBody().getElement(serial);\n            return Element.isA(element, 'choice') ? element : null;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoiceInteraction = InlineInteraction.extend({\n        qtiClass: 'inlineChoiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this, { maxChoices: 1 });\n        }\n    });\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MatchInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, SimpleAssociableChoice, _, rendererConfig, util, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    SimpleAssociableChoice = SimpleAssociableChoice && Object.prototype.hasOwnProperty.call(SimpleAssociableChoice, 'default') ? SimpleAssociableChoice['default'] : SimpleAssociableChoice;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var MatchInteraction = BlockInteraction.extend({\n        qtiClass: 'matchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = [{}, {}];\n        },\n        addChoice: function addChoice(choice, matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                choice.setRootElement(this.getRootElement() || null);\n                this.choices[matchSet][choice.getSerial()] = choice;\n            }\n        },\n        getChoices: function getChoices(matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                return _.clone(this.choices[matchSet]);\n            } else {\n                return _.clone(this.choices);\n            }\n        },\n        getChoice: function getChoice(serial) {\n            return this.choices[0][serial] || this.choices[1][serial] || null;\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var i, matchSet, serial;\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice && matchSet[serial].id() === identifier) {\n                        return matchSet[serial];\n                    }\n                }\n            }\n            return null;\n        },\n        getComposingElements: function getComposingElements() {\n            var i, matchSet, serial;\n            var elts = this._super();\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        elts[serial] = matchSet[serial];\n                        elts = _.extend(elts, matchSet[serial].getComposingElements());\n                    }\n                }\n            }\n\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, ['choices.0', 'choices.1'], serial);\n            }\n            return found;\n        },\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var renderer = args.renderer || this.getRenderer();\n            var defaultData = {\n                matchSet1: [],\n                matchSet2: []\n            };\n            var choices, i, matchSet, serial;\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            if (this.attr('shuffle') && renderer.getOption('shuffleChoices')) {\n                choices = renderer.getShuffledChoices(this);\n            } else {\n                choices = this.getChoices();\n            }\n\n            for (i = 0; i < 2; i++) {\n                matchSet = choices[i];\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        defaultData['matchSet' + (i + 1)].push(\n                            matchSet[serial].render(\n                                _.clone(interactionData, true),\n                                null,\n                                'simpleAssociableChoice.matchInteraction',\n                                renderer\n                            )\n                        );\n                    }\n                }\n            }\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function postRender(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return _(this.getChoices())\n                .map(function(choices) {\n                    return _(choices)\n                        .filter(function(choice) {\n                            return choice instanceof SimpleAssociableChoice;\n                        })\n                        .map(function(choice) {\n                            return choice.postRender({}, 'simpleAssociableChoice.matchInteraction', renderer);\n                        })\n                        .value();\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function toArray() {\n            var i, matchSet, serial;\n            var arr = this._super();\n            arr.choices = { 0: {}, 1: {} };\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        arr.choices[i][serial] = matchSet[serial].toArray();\n                    }\n                }\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(matchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(0));\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(1));\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MediaInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, ObjectInteraction, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    ObjectInteraction = ObjectInteraction && Object.prototype.hasOwnProperty.call(ObjectInteraction, 'default') ? ObjectInteraction['default'] : ObjectInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    var MediaInteraction = ObjectInteraction.extend({\n        qtiClass: 'mediaInteraction',\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    object: this.object.render({}, null, '', renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/OrderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var OrderInteraction = BlockInteraction.extend({\n        qtiClass: 'orderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return OrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SelectPointInteraction = GraphicInteraction.extend({\n        qtiClass: 'selectPointInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.selectPointInteractionBased(this);\n        }\n    });\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SliderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SliderInteraction = BlockInteraction.extend({\n        qtiClass: 'sliderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.sliderInteractionBased(this);\n        }\n    });\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var TextEntryInteraction = InlineInteraction.extend({\n        qtiClass: 'textEntryInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/UploadInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var UploadInteraction = InlineInteraction.extend({\n        qtiClass: 'uploadInteraction'\n    });\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'itemBody';\n        }\n    });\n\n    var ContainerItemBody = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerItemBody;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Item',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/ContainerItemBody', 'lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util'], function (Element, IdentifiedElement, Container, _, $, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Item = IdentifiedElement.extend({\n        qtiClass: 'assessmentItem',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.rootElement = this;\n            this.stylesheets = {};\n            this.responses = {};\n            this.outcomes = {};\n            this.modalFeedbacks = {};\n            this.namespaces = {};\n            this.schemaLocations = {};\n            this.responseProcessing = null;\n            this.apipAccessibility = null;\n        },\n        getInteractions: function getInteractions() {\n            var interactions = [];\n            var elts = this.getComposingElements();\n            for (var serial in elts) {\n                if (Element.isA(elts[serial], 'interaction')) {\n                    interactions.push(elts[serial]);\n                }\n            }\n            return interactions;\n        },\n        addResponseDeclaration: function addResponseDeclaration(response) {\n            if (Element.isA(response, 'responseDeclaration')) {\n                response.setRootElement(this);\n                this.responses[response.getSerial()] = response;\n            } else {\n                throw 'is not a qti response declaration';\n            }\n            return this;\n        },\n        getResponseDeclaration: function getResponseDeclaration(identifier) {\n            for (var i in this.responses) {\n                if (this.responses[i].attr('identifier') === identifier) {\n                    return this.responses[i];\n                }\n            }\n            return null;\n        },\n        addOutcomeDeclaration: function addOutcomeDeclaration(outcome) {\n            if (Element.isA(outcome, 'outcomeDeclaration')) {\n                outcome.setRootElement(this);\n                this.outcomes[outcome.getSerial()] = outcome;\n            } else {\n                throw 'is not a qti outcome declaration';\n            }\n            return this;\n        },\n        getOutcomeDeclaration: function getOutcomeDeclaration(identifier) {\n            var found;\n            _.forEach(this.outcomes, function(outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        getOutcomes: function getOutcomes() {\n            return _.clone(this.outcomes);\n        },\n        removeOutcome: function removeOutcome(identifier) {\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if (outcome) {\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        addModalFeedback: function addModalFeedback(feedback) {\n            if (Element.isA(feedback, 'modalFeedback')) {\n                feedback.setRootElement(this);\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\n            } else {\n                throw 'is not a qti modal feedback';\n            }\n            return this;\n        },\n        getComposingElements: function getComposingElements() {\n            var elts = this._super(),\n                _this = this;\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection) {\n                for (var i in _this[elementCollection]) {\n                    var elt = _this[elementCollection][i];\n                    elts[i] = elt;\n                    elts = _.extend(elts, elt.getComposingElements());\n                }\n            });\n            if (this.responseProcessing instanceof Element) {\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n\n            if (!found) {\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\n            }\n\n            return found;\n        },\n        getResponses: function getResponses() {\n            return _.clone(this.responses);\n        },\n        getRootElement: function getRootElement() {\n            return this;\n        },\n        addNamespace: function addNamespace(name, uri) {\n            this.namespaces[name] = uri;\n        },\n        setNamespaces: function setNamespaces(namespaces) {\n            this.namespaces = namespaces;\n        },\n        getNamespaces: function getNamespaces() {\n            return _.clone(this.namespaces);\n        },\n        setSchemaLocations: function setSchemaLocations(locations) {\n            this.schemaLocations = locations;\n        },\n        getSchemaLocations: function getSchemaLocations() {\n            return _.clone(this.schemaLocations);\n        },\n        setApipAccessibility: function setApipAccessibility(apip) {\n            this.apipAccessibility = apip || null;\n        },\n        getApipAccessibility: function getApipAccessibility() {\n            return this.apipAccessibility;\n        },\n        addStylesheet: function addStylesheet(stylesheet) {\n            if (Element.isA(stylesheet, 'stylesheet')) {\n                stylesheet.setRootElement(this);\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\n            } else {\n                throw 'is not a qti stylesheet declaration';\n            }\n            return this;\n        },\n        removeStyleSheet: function removeStyleSheet(stylesheet) {\n            delete this.stylesheets[stylesheet.getSerial()];\n            return this;\n        },\n        stylesheetExists: function stylesheetExists(href) {\n            var exists = false;\n            _.forEach(this.stylesheets, function(stylesheet) {\n                if (stylesheet.attr('href') === href) {\n                    exists = true;\n                    return false; //break each loop\n                }\n            });\n            return exists;\n        },\n        setResponseProcessing: function setResponseProcessing(rp) {\n            if (Element.isA(rp, 'responseProcessing')) {\n                rp.setRootElement(this);\n                this.responseProcessing = rp;\n            } else {\n                throw 'is not a response processing';\n            }\n            return this;\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            var toArray = function(elt) {\n                return elt.toArray();\n            };\n            arr.namespaces = this.namespaces;\n            arr.schemaLocations = this.schemaLocations;\n            arr.outcomes = _.map(this.outcomes, toArray);\n            arr.responses = _.map(this.responses, toArray);\n            arr.stylesheets = _.map(this.stylesheets, toArray);\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\n            arr.responseProcessing = this.responseProcessing.toArray();\n            return arr;\n        },\n        isEmpty: function isEmpty() {\n            var body = this.body().trim();\n\n            if (body) {\n                //hack to fix #2652\n                var $dummy = $('<div>').html(body),\n                    $children = $dummy.children();\n\n                if ($children.length === 1 && $children.hasClass('empty')) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        },\n\n        /**\n         * Clean up an item rendering.\n         * Ask the renderer to run destroy if exists.\n         */\n        clear: function clear() {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    renderer.destroy(this);\n                }\n            }\n        }\n    });\n\n    Container.augment(Item);\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\n        _container: 'taoQtiItem/qtiItem/core/Container',\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\n        math: 'taoQtiItem/qtiItem/core/Math',\n        figure: 'taoQtiItem/qtiItem/core/Figure',\n        img: 'taoQtiItem/qtiItem/core/Img',\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\n        object: 'taoQtiItem/qtiItem/core/Object',\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        include: 'taoQtiItem/qtiItem/core/Include',\n        table: 'taoQtiItem/qtiItem/core/Table',\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA\n     */\n\n    /**\n     * XML namespace handling\n     */\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    const prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        let key;\n        for (key in namespaces) {\n            if (namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    var xmlNsHandler = {\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs: function stripNs(body) {\n            const pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            const openRegEx = new RegExp('(<' + pattern + ')', 'gi');\n            const closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs: function restoreNs(xml, namespaces, ignoreMarkup = false) {\n            let xmlCopy = xml;\n            if (ignoreMarkup) {\n                // cut from xmlCopy <markup...>...</markup>\n                // because markup should be html without namespace qh5\n                xmlCopy = xml.replace(/((?=<markup)(.|\\n)*?(?:<\\/markup>)+)/gim, '');\n            }\n            const xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            const tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            const xmlMatch = xmlCopy.match(xmlRe);\n            const imsXsd = 'http://www.imsglobal.org/xsd';\n            const html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            const prefix = getPrefix(namespaces, html5Ns);\n            const prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            let i = xmlMatch ? xmlMatch.length : 0;\n\n            if (!xmlMatch) {\n                return xml;\n            }\n\n            while (i--) {\n                const tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(\n                    xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Returns iteraction score response rule object\n     *\n     * @param {String} responseIdentifiers interactions reponse indentifiers\n     * @returns {Obeject}\n     */\n    var itemScore = (responseIdentifiers) => {\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\n            qtiClass: 'variable',\n            attributes: {\n                identifier: `SCORE_${outcomeIdentifier}`,\n            },\n        }));\n\n        return {\n            qtiClass: 'setOutcomeValue',\n            attributes: {\n                identifier: 'SCORE',\n            },\n            expression: {\n                qtiClass: 'sum',\n                expressions: outcomeExpressions,\n            },\n        };\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\n        var properties = {};\n\n        _.forOwn(rawProperties, (value, key) => {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    };\n\n    const loadPortableCustomElementData = (portableElement, data) => {\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    };\n\n    var Loader = Class.extend({\n        init(item, classesLocation) {\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n            this.item = item || null; //starts either from scratch or with an existing item object\n\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\n        },\n        setClassesLocation(qtiClassesList) {\n            _.extend(this.classesLocation, qtiClassesList);\n\n            return this;\n        },\n        getRequiredClasses(data) {\n            let ret = [];\n\n            for (let i in data) {\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\n                    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n\n            return ret;\n        },\n        loadRequiredClasses(data, callback, reload) {\n            let requiredClass;\n            const requiredClasses = this.getRequiredClasses(data, reload);\n            const required = [];\n\n            for (let i in requiredClasses) {\n                requiredClass = requiredClasses[i];\n                if (this.classesLocation[requiredClass]) {\n                    required.push({\n                        module: this.classesLocation[requiredClass],\n                        category: 'qti'\n                    });\n                } else {\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\n                }\n            }\n\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\n                loadeded.forEach(QtiClass => {\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(this, this.qti);\n            });\n        },\n        getLoadedClasses() {\n            return _.keys(this.qti);\n        },\n        loadItemData(data, callback) {\n            this.loadRequiredClasses(data, Qti => {\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\n                    //unload an item from it's serial (in case of a reload)\n                    if (data.serial) {\n                        Element.unsetElement(data.serial);\n                    }\n\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    this.loadContainer(this.item.getBody(), data.body);\n\n                    for (let i in data.outcomes) {\n                        const outcome = this.buildOutcome(data.outcomes[i]);\n\n                        if (outcome) {\n                            this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n\n                    for (let i in data.feedbacks) {\n                        const feedback = this.buildElement(data.feedbacks[i]);\n\n                        if (feedback) {\n                            this.item.addModalFeedback(feedback);\n                        }\n                    }\n\n                    for (let i in data.stylesheets) {\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\n\n                        if (stylesheet) {\n                            this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\n                        ? [...data.responseProcessing.responseRules]\n                        : [];\n                    for (let i in data.responses) {\n                        const responseIdentifier = data.responses[i].identifier;\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\n                            expression: {\n                                expressions: [expression = {}] = [],\n                            } = {}\n                        } = {} }) => expression.attributes\n                        && expression.attributes.identifier === responseIdentifier\n                            || (\n                                expression.expressions\n                                && expression.expressions[0]\n                                && expression.expressions[0].attributes\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\n                            )\n                        );\n                        const [responseRule] = responseRuleItemIndex !== -1\n                            ? responseRules.splice(responseRuleItemIndex, 1)\n                            : [];\n\n                        const response = this.buildResponse(\n                            data.responses[i],\n                            responseRule\n                        );\n\n                        if (response) {\n                            this.item.addResponseDeclaration(response);\n\n                            const feedbackRules = data.responses[i].feedbackRules;\n\n                            if (feedbackRules) {\n                                _.forIn(feedbackRules, (fbData, serial) => {\n                                    const {\n                                        attributes: {\n                                            identifier: feedbackOutcomeIdentifier,\n                                        } = {}\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\n\n                                    // remove feedback response rule from response rules array\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\n                                        responseIf: {\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\n                                        } = {}\n                                    }) => {\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\n                                        const outcomeIdentifier = attributes.identifier;\n\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\n                                            && qtiClass === 'setOutcomeValue';\n                                    });\n\n                                    if (feedbackResponseRuleIndex !== -1) {\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\n                                    }\n                                });\n                            }\n                        }\n                    }\n\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\n\n                    if (data.responseProcessing) {\n                        const customResponseProcessing =\n                            (\n                                responseRules.length > 0\n                                && !(\n                                    responseRules.length === 1\n                                    && _.isEqual(\n                                        responseRules[0],\n                                        itemScoreHelper(\n                                            responseIdentifiers\n                                        )\n                                    )\n                                )\n                            )\n                            || (\n                                this.item.responses\n                                && Object.keys(this.item.responses)\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\n                            );\n\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\n                    }\n                    this.item.setNamespaces(data.namespaces);\n                    this.item.setSchemaLocations(data.schemaLocations);\n                    this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        loadAndBuildElement(data, callback) {\n            this.loadRequiredClasses(data, () => {\n                const element = this.buildElement(data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        loadElement(element, data, callback) {\n            this.loadRequiredClasses(data, () => {\n                this.loadElementData(element, data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements(data, callback) {\n            if (!this.item) {\n                throw new Error('QtiLoader : cannot load elements in empty item');\n            }\n\n            this.loadRequiredClasses(data, () => {\n                const allElements = this.item.getComposingElements();\n\n                for (let i in data) {\n                    const elementData = data[i];\n\n                    if (elementData && elementData.qtiClass && elementData.serial) {\n                        //find and update element\n                        if (allElements[elementData.serial]) {\n                            this.loadElementData(allElements[elementData.serial], elementData);\n                        }\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        buildResponse(data, responseRule) {\n            const response = this.buildElement(data);\n\n            response.template = responseHelper.getTemplateUriFromName(\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\n            )\n                || data.howMatch\n                || null;\n\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if (_.size(data.mapping)) {\n                response.mapEntries = data.mapping;\n            } else if (_.size(data.areaMapping)) {\n                response.mapEntries = data.areaMapping;\n            } else {\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule(data, response) {\n            const feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            const comparedOutcome = feedbackRule.comparedOutcome;\n\n            if (feedbackRule.feedbackThen) {\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\n            }\n\n            if (feedbackRule.feedbackElse) {\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome(data) {\n            const outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n\n            return outcome;\n        },\n        buildResponseProcessing(data, customResponseProcessing) {\n            const rp = this.buildElement(data);\n\n            if (customResponseProcessing) {\n                rp.xml = data.data;\n                rp.processingType = 'custom';\n            } else {\n                rp.processingType = 'templateDriven';\n            }\n\n            return rp;\n        },\n        loadContainer(bodyObject, bodyData) {\n            if (!Element.isA(bodyObject, '_container')) {\n                throw new Error('bodyObject must be a QTI Container');\n            }\n\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\n                throw new Error('wrong bodydata format');\n            }\n            //merge attributes when loading element data\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\n            bodyObject.setAttributes(attributes);\n\n            for (let serial in bodyData.elements) {\n                const eltData = bodyData.elements[serial];\n                const element = this.buildElement(eltData);\n\n                //check if class is loaded:\n                if (element) {\n                    bodyObject.setElement(element, bodyData.body);\n                }\n            }\n\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n        },\n        buildElement(elementData) {\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\n                throw new Error('wrong elementData format');\n            }\n\n            const className = elementData.qtiClass;\n\n            if (!this.qti[className]) {\n                throw new Error(`the qti element class does not exist: ${className}`);\n            }\n\n            const elt = new this.qti[className](elementData.serial);\n            this.loadElementData(elt, elementData);\n\n            return elt;\n        },\n        loadElementData(element, data) {\n            //merge attributes when loading element data\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            let body = data.body;\n            if (!body && data.text && data.qtiClass === 'inlineChoice') {\n                body = { body: data.text, elements: {} };\n            }\n            if (element.body && body) {\n                if (element.bdy) {\n                    this.loadContainer(element.getBody(), body);\n                }\n            }\n\n            if (element.object && data.object) {\n                if (element.object) {\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if (Element.isA(element, 'interaction')) {\n                this.loadInteractionData(element, data);\n            } else if (Element.isA(element, 'choice')) {\n                this.loadChoiceData(element, data);\n            } else if (Element.isA(element, 'math')) {\n                this.loadMathData(element, data);\n            } else if (Element.isA(element, 'infoControl')) {\n                this.loadPicData(element, data);\n            } else if (Element.isA(element, '_tooltip')) {\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData(interaction, data) {\n            if (Element.isA(interaction, 'blockInteraction')) {\n                if (data.prompt) {\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if (Element.isA(interaction, 'customInteraction')) {\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices(interaction, data) {\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if (data.choices) {\n                if (Element.isA(interaction, 'matchInteraction')) {\n                    for (let set = 0; set < 2; set++) {\n                        if (!data.choices[set]) {\n                            throw new Error(`missing match set #${set}`);\n                        }\n\n                        const matchSet = data.choices[set];\n\n                        for (let serial in matchSet) {\n                            const choice = this.buildElement(matchSet[serial]);\n\n                            if (choice) {\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                } else {\n                    for (let serial in data.choices) {\n                        const choice = this.buildElement(data.choices[serial]);\n\n                        if (choice) {\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\n                    if (data.gapImgs) {\n                        for (let serial in data.gapImgs) {\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\n\n                            if (gapImg) {\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loadChoiceData(choice, data) {\n            if (Element.isA(choice, 'textVariableChoice')) {\n                choice.val(data.text);\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\n                // this ensure compatibility of Qti 2.1 items\n                if (!choice.body()) {\n                    choice.body(data.text);\n                }\n            } else if (Element.isA(choice, 'containerChoice')) ;\n        },\n        loadObjectData(object, data) {\n            object.setAttributes(data.attributes);\n\n            //@todo: manage object like a container\n            if (data._alt) {\n                if (data._alt.qtiClass === 'object') {\n                    object._alt = Loader.buildElement(data._alt);\n                } else {\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData(math, data) {\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, (value, encoding) => {\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData(tooltip, data) {\n            tooltip.content(data.content);\n        },\n        loadPciData(pci, data) {\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData(pic, data) {\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Math',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function ($, _, Element, rendererConfig, NamespacedElement) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Math;\n\n    /**\n     * Remove the closing MathML tags and remove useless line breaks before and after it\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripMathTags(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : '') + 'math[^>]*>', 'g');\n        return mathML\n            .replace(regex, '')\n            .replace(/^\\s*[\\r\\n]/gm, '') //remove first blank line\n            .replace(/\\s*[\\r\\n]$/gm, ''); //last blank line\n    }\n\n    /**\n     * Remove mathML ns name prefix from the mathML\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripNamespace(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : ''), 'g');\n        return mathML.replace(regex, '<$1');\n    }\n\n    /**\n     * Check if the mathML string is to be considered empty\n     *\n     * @param {String} mathStr\n     * @returns {Boolean}\n     */\n    function _isEmptyMathML(mathStr) {\n        var $math,\n            mathText,\n            hasContent = false;\n\n        if (mathStr && mathStr.trim()) {\n            $math = $($.parseHTML(mathStr));\n            mathText = $math.text();\n            hasContent = _.isString(mathText) && !!mathText.trim();\n        }\n\n        return !hasContent;\n    }\n\n    Math = Element.extend({\n        qtiClass: 'math',\n        defaultNsName: 'm',\n        defaultNsUri: 'http://www.w3.org/1998/Math/MathML',\n        nsUriFragment: 'MathML',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.ns = null;\n            this.mathML = '';\n            this.annotations = {};\n        },\n        setAnnotation: function(encoding, value) {\n            this.annotations[encoding] = _.unescape(value);\n        },\n        getAnnotation: function(encoding) {\n            return this.annotations[encoding];\n        },\n        removeAnnotation: function(encoding) {\n            delete this.annotations[encoding];\n        },\n        setMathML: function(mathML) {\n            var ns = this.getNamespace(),\n                nsName = ns.name && ns.uri ? ns.name : '';\n\n            mathML = _stripMathTags(mathML, nsName);\n            if (ns) {\n                mathML = _stripNamespace(mathML, nsName);\n            }\n            this.mathML = mathML;\n        },\n        getMathML: function() {\n            return this.mathML;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                tag = this.qtiClass,\n                raw = this.mathML,\n                body = raw,\n                ns = this.getNamespace(),\n                annotations = '',\n                encoding,\n                defaultData;\n\n            for (encoding in this.annotations) {\n                annotations +=\n                    '<annotation encoding=\"' + encoding + '\">' + _.escape(this.annotations[encoding]) + '</annotation>';\n            }\n\n            if (annotations) {\n                if (raw.indexOf('</semantics>') > 0) {\n                    raw = raw.replace('</semantics>', annotations + '</semantics>');\n                } else {\n                    raw = '<semantics>' + raw + annotations + '</semantics>';\n                }\n            }\n\n            if (ns && ns.name) {\n                body = raw.replace(/<(\\/)?([^!<])/g, '<$1' + ns.name + ':$2');\n                tag = ns.name + ':' + tag;\n            }\n\n            body = body.replace(/<!--.*?-->/g, ''); // remove Mathjax-generated comments\n            body = body.replace(/&lt;!--.*?--&gt;/g, ''); // fix for broken items because of Mathjax comments\n\n            defaultData = {\n                block: this.attr('display') === 'block' ? true : false,\n                body: body,\n                raw: raw,\n                tag: tag,\n                ns: ns\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return _isEmptyMathML(this.mathML) && (!this.annotations.latex || !this.annotations.latex.trim());\n        }\n    });\n\n    NamespacedElement.augment(Math);\n\n    var Math$1 = Math;\n\n    return Math$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PortableInfoControl',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, CustomElement, NamespacedElement, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var PortableInfoControl = Element.extend({\n        qtiClass: 'infoControl',\n        defaultNsName: 'pic',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableInfoControl',\n        nsUriFragment: 'portableInfoControl',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            //stack of callback waiting to be ready\n            this.readyStack = [];\n        },\n\n        is: function(qtiClass) {\n            return qtiClass === 'infoControl' || this._super(qtiClass);\n        },\n\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pic: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n\n        /**\n         * Retrieve the state of the infoControl\n         * The call will be delegated to the infoControl's renderer.\n         *\n         * @returns {Object} the state\n         */\n        getState: function getState() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                ret = renderer.getState(this);\n            }\n            return ret;\n        },\n\n        /**\n         * Set the state of the infoControl\n         * The state will be set to the infoControl's renderer.\n         *\n         * @param {Object} state - the infoControl's state\n         */\n        setState: function setState(state) {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                renderer.setState(this, state);\n            }\n        },\n\n        toArray: function() {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n\n        /**\n         * Execute a callback when the PIC is ready (ie. registered, loaded and rendererd)\n         * @param {Function} cb - the function to execute once ready\n         */\n        onReady: function onReady(cb) {\n            this.readyStack.push(cb);\n\n            //if we are ready this will pop the stack\n            if (this.data('_ready') && this.data('pic')) {\n                this.triggerReady();\n            }\n        },\n\n        /**\n         * Define the PIC as ready and consume the waiting functions in the stack.\n         */\n        triggerReady: function triggerReady() {\n            var self = this;\n            _.forEach(this.readyStack, function(cb) {\n                cb.call(self, self.data('pic'));\n            });\n\n            //empty the stack\n            this.readyStack = [];\n\n            //mark the infoControl as ready\n            this.data('_ready', true);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(PortableInfoControl);\n    NamespacedElement.augment(PortableInfoControl);\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PrintedVariable',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var PrintedVariable = Element.extend({\n        qtiClass: 'printedVariable'\n    });\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',['taoQtiItem/qtiItem/core/Element', 'lodash'], function (Element, _) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var SimpleFeedbackRule = Element.extend({\n        qtiClass: '_simpleFeedbackRule',\n        serial: '',\n        rootElement: null,\n        init: function(serial, feedbackOutcome, feedbackThen, feedbackElse) {\n            this._super(serial, {});\n\n            this.condition = 'correct';\n            this.comparedOutcome = null;\n            this.comparedValue = 0.0;\n\n            this.feedbackOutcome = feedbackOutcome;\n            if (Element.isA(feedbackThen, 'feedback')) {\n                this.feedbackThen = feedbackThen;\n            } else {\n                this.feedbackThen = null;\n            }\n            if (Element.isA(feedbackElse, 'feedback')) {\n                this.feedbackElse = feedbackThen;\n            } else {\n                this.feedbackElse = null;\n            }\n        },\n        setCondition: function(comparedOutcome, condition, comparedValue) {\n            var _comparedValues = [];\n            if (Element.isA(comparedOutcome, 'variableDeclaration')) {\n                switch (condition) {\n                    case 'correct':\n                    case 'incorrect':\n                        if (Element.isA(comparedOutcome, 'responseDeclaration')) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                        } else {\n                            throw 'invalid outcome type: must be a responseDeclaration';\n                        }\n                        break;\n                    case 'lt':\n                    case 'lte':\n                    case 'equal':\n                    case 'gte':\n                    case 'gt':\n                        if (comparedValue !== null && comparedValue !== undefined) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            this.comparedValue = comparedValue;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    case 'choices':\n                        if (\n                            Element.isA(comparedOutcome, 'responseDeclaration') &&\n                            comparedValue !== null &&\n                            _.isArray(comparedValue)\n                        ) {\n                            var choices = _.values(comparedOutcome.getInteraction().getChoices());\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            _.each(comparedValue, function(v) {\n                                if (v instanceof Element) {\n                                    _comparedValues.push(v);\n                                } else if (_.isString(v)) {\n                                    _.each(choices, function(c) {\n                                        if (c.attr('identifier') === v) {\n                                            _comparedValues.push(c);\n                                            return false; //break\n                                        }\n                                    });\n                                }\n                            });\n\n                            this.comparedValue = _comparedValues;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    default:\n                        throw 'unknown condition type : '.condition;\n                }\n            } else {\n                throw 'invalid outcome type: must be a variableDeclaration';\n            }\n\n            return this;\n        },\n        setFeedbackElse: function(feedback) {\n            if (Element.isA(feedback, 'feedback')) {\n                this.feedbackElse = feedback;\n            }\n        },\n        toArray: function() {\n            var val = this.comparedValue;\n            var _toString = function(v) {\n                if (val instanceof Element) {\n                    return val.attr('identifier');\n                } else {\n                    return val + '';\n                }\n            };\n            if (_.isArray(val)) {\n                val = _.map(val, _toString);\n            } else {\n                val = _toString();\n            }\n            return {\n                condition: this.condition,\n                comparedOutcome: this.comparedOutcome.id(),\n                comparedValue: val\n            };\n        }\n    });\n\n    return SimpleFeedbackRule;\n\n});\n\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    var ResponseProcessing = Element.extend({\n        qtiClass: 'responseProcessing',\n        processingType: '',\n        xml: '',\n        toArray: function() {\n            var arr = this._super();\n            arr.processingType = this.processingType;\n            arr.xml = this.xml;\n            return arr;\n        }\n    });\n\n    return ResponseProcessing;\n\n});\n\n","define('taoQtiItem/qtiItem/core/RubricBlock',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/Container'], function (Element, Container) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var RubricBlock = Element.extend({\n        qtiClass: 'rubricBlock',\n        isEmpty: function isEmpty() {\n            return !(this.bdy && this.bdy.body());\n        }\n    });\n\n    Container.augment(RubricBlock);\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Stylesheet = Element.extend({\n        qtiClass: 'stylesheet',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = { href: renderer.resolveUrl(this.attr('href')) };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerTable',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'table';\n        }\n    });\n\n    var ContainerTable = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerTable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Table',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerTable'], function (_, Element, Container) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = Element.extend({\n        qtiClass: 'table'\n    });\n\n    Container.augment(Table);\n\n    Table = Table.extend({\n        // on table creation, we might get a body wrapped in a table element, that we need to get rid of\n        body: function(newBody) {\n            if (_.isString(newBody)) {\n                newBody = newBody.replace('<table>', '').replace('</table>', '');\n            }\n            return this._super(newBody);\n        }\n    });\n\n    var Table$1 = Table;\n\n    return Table$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Tooltip',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, ContainerInline, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ContainerInline = ContainerInline && Object.prototype.hasOwnProperty.call(ContainerInline, 'default') ? ContainerInline['default'] : ContainerInline;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Tooltip = Element.extend({\n        qtiClass: '_tooltip',\n\n        init: function(serial, attributes, newContent) {\n            this._super(serial, attributes);\n            this.content(newContent || '');\n        },\n\n        /**\n         * Set/get the content of the tooltip\n         * @param {String} newContent - as HTML\n         * @returns {Element|String}\n         */\n        content: function content(newContent) {\n            if (typeof newContent === 'undefined') {\n                return this.tooltipContent;\n            } else {\n                if (typeof newContent === 'string') {\n                    this.tooltipContent = newContent;\n                } else {\n                    throw new Error('newContent must be a string');\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Adds the tooltip content to the template data\n         */\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    content: this.tooltipContent\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    ContainerInline.augment(Tooltip);\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/ResponseDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration', 'lodash'], function (VariableDeclaration, _) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var ResponseDeclaration = VariableDeclaration.extend({\n        qtiClass: 'responseDeclaration',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            //MATCH_CORRECT, MAP_RESPONSE, MAP_RESPONSE_POINT\n            this.template = ''; //previously called 'howMatch'\n\n            //when template equals ont of the \"map\" one (MAP_RESPONSE, MAP_RESPONSE_POINT)\n            this.mappingAttributes = {};\n            this.mapEntries = {};\n\n            //correct response [0..*]\n            this.correctResponse = null;\n\n            //tao internal usage:\n            this.feedbackRules = {};\n        },\n        getFeedbackRules: function() {\n            return _.values(this.feedbackRules);\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            elts = _.extend(elts, this.feedbackRules);\n            return elts;\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.howMatch = this.template;\n            arr.correctResponses = this.correctResponse;\n            arr.mapping = this.mapEntries;\n            arr.mappingAttributes = this.mappingAttributes;\n            arr.feedbackRules = _.map(this.feedbackRules, function(rule) {\n                return rule.toArray();\n            });\n            return arr;\n        },\n        getInteraction: function() {\n            var interaction = null;\n            var responseId = this.id();\n            var item = this.getRootElement();\n            var interactions = item.getInteractions();\n            _.each(interactions, function(i) {\n                if (i.attributes.responseIdentifier === responseId) {\n                    interaction = i;\n                    return false; //break\n                }\n            });\n            return interaction;\n        },\n        isCardinality: function(cardinalities) {\n            var comparison;\n            if (_.isArray(cardinalities)) {\n                comparison = cardinalities;\n            } else if (_.isString(cardinalities)) {\n                cardinalities = [cardinalities];\n            } else {\n                return false;\n            }\n            return _.indexOf(comparison, this.attr('cardinality')) >= 0;\n        }\n    });\n\n    return ResponseDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/EventMgr',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    //@todo : complete with namespace managements\n    function EventMgr() {\n        var events = {};\n\n        this.get = function(event) {\n            if (event && events[event]) {\n                return _.clone(events[event]);\n            } else {\n                return [];\n            }\n        };\n\n        this.on = function(event, callback) {\n            var tokens = event.split('.');\n            if (tokens[0]) {\n                var name = tokens.shift();\n                events[name] = events[name] || [];\n                events[name].push({\n                    ns: tokens,\n                    callback: callback\n                });\n            }\n        };\n\n        this.off = function(event) {\n            if (event && events[event]) {\n                events[event] = [];\n            }\n        };\n\n        this.trigger = function(event, data) {\n            if (events[event]) {\n                _.each(events[event], function(e) {\n                    //@todo check ns:\n                    e.callback.apply(\n                        {\n                            type: event,\n                            ns: []\n                        },\n                        data\n                    );\n                });\n            }\n        };\n    }\n\n    return EventMgr;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\n        getRawValues: function(pciVar) {\n            if (_.isPlainObject(pciVar)) {\n                if (pciVar.base !== undefined) {\n                    return _.values(pciVar.base);\n                } else if (pciVar.list) {\n                    return _.values(pciVar.list);\n                }\n            }\n            throw 'unsupported type ';\n        }\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/modalFeedback',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container'], function ($, _, pci, containerHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    var getFeedbackMessageSignature = function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    };\n\n    /**\n     * Extract the display information for an interaction-related feedback\n     *\n     * @private\n     * @param {Object} interaction - a qti interaction object\n     * @returns {Object} Object containing useful display information\n     */\n    var extractDisplayInfo = function extractDisplayInfo(interaction) {\n        var $interactionContainer = interaction.getContainer();\n        var responseIdentifier = interaction.attr('responseIdentifier');\n        var messageGroupId, $displayContainer;\n\n        if (interaction.is('inlineInteraction')) {\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\n            if (!messageGroupId) {\n                //generate a messageFromId\n                messageGroupId = _.uniqueId('inline_message_group_');\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\n            }\n        } else {\n            messageGroupId = responseIdentifier;\n            $displayContainer = $interactionContainer;\n        }\n\n        return {\n            responseIdentifier: responseIdentifier,\n            interactionContainer: $interactionContainer,\n            displayContainer: $displayContainer,\n            messageGroupId: messageGroupId,\n            order: -1\n        };\n    };\n\n    /**\n     * Get interaction display information sorted in the order of appearance within the item\n     *\n     * @param {Object} item\n     * @returns {Array}\n     */\n    var getInteractionsDisplayInfo = function getInteractionsDisplayInfo(item) {\n        var interactionsDisplayInfo = [];\n        var $itemContainer = item.getContainer();\n        var interactionOrder = 0;\n\n        //extract all interaction related information needed to display their\n        _.forEach(item.getComposingElements(), function(element) {\n            if (element.is('interaction')) {\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\n            }\n        });\n\n        //sort interactionsDisplayInfo on the item level\n        $itemContainer.find('.qti-interaction').each(function() {\n            var self = this;\n            _.forEach(interactionsDisplayInfo, function(_interactionInfo) {\n                if (_interactionInfo.interactionContainer[0] === self) {\n                    _interactionInfo.order = interactionOrder;\n                    return false;\n                }\n            });\n            interactionOrder++;\n        });\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\n\n        return interactionsDisplayInfo;\n    };\n\n    /**\n     * Returns feedbacks according to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @returns {Array} renderingFeedbacks - feedbacks to be displayed\n     */\n    var getFeedbacks = function getFeedbacks(item, itemSession) {\n        var messages = {};\n        var $itemContainer = item.getContainer();\n        var $itemBody = $('.qti-itemBody', $itemContainer);\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\n        var renderingQueue = [];\n\n        _.forEach(item.modalFeedbacks, function(feedback) {\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n            var order = -1;\n\n            //verify if the feedback should be displayed\n            if (itemSession[outcomeIdentifier]) {\n                //is the feedback in the list of feedbacks to be displayed ?\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                if (!_.contains(feedbackIds, feedback.id())) {\n                    return true; //continue with next feedback\n                }\n\n                //which group of feedbacks (interaction related) the feedback belongs to ?\n                message = getFeedbackMessageSignature(feedback);\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\n                if (comparedOutcome && interactionInfo) {\n                    $container = interactionInfo.displayContainer;\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\n                    order = interactionInfo.order;\n                } else {\n                    $container = $itemBody;\n                    _currentMessageGroupId = '__item__';\n                }\n                //is this message already displayed ?\n                if (!messages[_currentMessageGroupId]) {\n                    messages[_currentMessageGroupId] = [];\n                }\n\n                if (_.contains(messages[_currentMessageGroupId], message)) {\n                    return true; //continue\n                } else {\n                    messages[_currentMessageGroupId].push(message);\n                }\n\n                //ok, display feedback\n                renderingQueue.push({\n                    feedback: feedback,\n                    $container: $container,\n                    order: order\n                });\n            }\n        });\n\n        renderingQueue = _.sortBy(renderingQueue, 'order');\n\n        return renderingQueue;\n    };\n\n    /**\n     * Provide helper function for collecting feedbacks\n     */\n    var modalFeedback = {\n        getFeedbacks: getFeedbacks\n    };\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/Parser',['jquery'], function ($) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /**\n     * Experimental parser\n     *\n     */\n\n    var Parser = function() {\n        var _$xml = null;\n        this.loadXML = function(xml) {\n            _$xml = $.parseXML(xml);\n        };\n        this.getDOM = function() {\n            return _$xml;\n        };\n    };\n\n    return Parser;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/simpleParser',['lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/core/Loader'], function (_, $, util, Loader) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2021 (original work) Open Assessment Technologies SA\n     **/\n\n    const _parsableElements = ['img', 'object', 'printedVariable'];\n    const _qtiClassNames = {\n        rubricblock: 'rubricBlock',\n        printedvariable: 'printedVariable'\n    };\n    const _qtiAttributesNames = {\n        powerform: 'powerForm',\n        mappingindicator: 'mappingIndicator'\n    };\n\n    const _defaultOptions = {\n        ns: {\n            math: '',\n            include: 'xi',\n            table: 'table',\n            image: 'img',\n            object: '',\n            figure: 'qh5',\n            figcaption: 'qh5'\n        },\n        loaded: null,\n        model: null\n    };\n\n    let parser;\n\n    function _getElementSelector(qtiClass, ns) {\n        return ns ? ns + '\\\\:' + qtiClass + ',' + qtiClass : qtiClass;\n    }\n\n    function getQtiClassFromXmlDom($node) {\n        let qtiClass = $node.prop('tagName').toLowerCase();\n\n        //remove ns :\n        qtiClass = qtiClass.replace(/.*:/, '');\n\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\n    }\n\n    function buildElement($elt) {\n        const qtiClass = getQtiClassFromXmlDom($elt);\n\n        const elt = {\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {}\n        };\n\n        $.each($elt[0].attributes, function () {\n            let attrName;\n            if (this.specified) {\n                attrName = _qtiAttributesNames[this.name] || this.name;\n                elt.attributes[attrName] = this.value;\n            }\n        });\n\n        return elt;\n    }\n\n    function buildMath($elt, options) {\n        const elt = buildElement($elt);\n\n        //set annotations:\n        elt.annotations = {};\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function () {\n            const $annotation = $(this);\n            const encoding = $annotation.attr('encoding');\n            if (encoding) {\n                elt.annotations[encoding] = _.unescape($annotation.html());\n            }\n            $annotation.remove();\n        });\n\n        //set math xml\n        elt.mathML = $elt.html();\n\n        //set ns:\n        elt.ns = {\n            name: 'm',\n            uri: 'http://www.w3.org/1998/Math/MathML' //@todo : remove hardcoding there\n        };\n\n        return elt;\n    }\n\n    function buildTooltip(targetHtml, contentId, contentHtml) {\n        const qtiClass = '_tooltip';\n\n        return {\n            elements: {},\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {\n                'aria-describedby': contentId\n            },\n            content: contentHtml,\n            body: {\n                elements: {},\n                serial: util.buildSerial('container'),\n                body: targetHtml\n            }\n        };\n    }\n\n    function parseTable($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedTable = parseContainer($elt, options);\n        elt.body.body = $parsedTable.body;\n        elt.body.elements = $parsedTable.elements;\n        return elt;\n    }\n\n    function parseFigure($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedFigure= parseContainer($elt, options);\n        elt.body.body = $parsedFigure.body;\n        elt.body.elements = $parsedFigure.elements;\n        const $figcaption = $elt.find(_getElementSelector('figcaption', options.ns.figcaption));\n        if ($figcaption.length) {\n            const element = buildElement($figcaption);\n            element.body = {\n                body: $figcaption.html(),\n                elements: {}\n            };\n            elt.body.elements[element.serial] = element;\n            $figcaption.replaceWith(_placeholder(element));\n        }\n        elt.body.body = $elt.html();\n        return elt;\n    }\n\n    function parseContainer($container, options) {\n        const ret = {\n            serial: util.buildSerial('_container_'),\n            body: '',\n            elements: {}\n        };\n        // table should be in top as it needs to be parsed first\n        $container.find('table').each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseTable($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        // figure should be in top as it needs to be parsed first\n        $container.find(_getElementSelector('figure', options.ns.figure)).each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseFigure($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('math', options.ns.math)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildMath($qtiElement, options);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('include', options.ns.include)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildElement($qtiElement);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find('[data-role=\"tooltip-target\"]').each(function () {\n            let element,\n                $target = $(this),\n                $content,\n                contentId = $target.attr('aria-describedBy'),\n                contentHtml;\n\n            if (contentId) {\n                $content = $container.find('#' + contentId);\n                if ($content.length) {\n                    contentHtml = $content.html();\n\n                    element = buildTooltip($target.html(), contentId, contentHtml);\n\n                    ret.elements[element.serial] = element;\n                    $target.replaceWith(_placeholder(element));\n                    $content.remove();\n                }\n            }\n        });\n\n        _.each(_parsableElements, function (qtiClass) {\n            $container.find(qtiClass).each(function () {\n                const $qtiElement = $(this);\n                const element = buildElement($qtiElement);\n                ret.elements[element.serial] = element;\n                $qtiElement.replaceWith(_placeholder(element));\n            });\n        });\n\n        ret.body = $container.html();\n        return ret;\n    }\n\n    function _placeholder(element) {\n        return '{{' + element.serial + '}}';\n    }\n\n    parser = {\n        parse: function (xmlStr, opts) {\n            const options = _.merge(_.clone(_defaultOptions), opts || {});\n\n            const $container = $(xmlStr);\n\n            const element = buildElement($container);\n\n            const data = parseContainer($container, options);\n\n            let loader;\n\n            if (!_.isUndefined(data.body)) {\n                element.body = data;\n            }\n\n            if (_.isFunction(options.loaded) && options.model) {\n                loader = new Loader().setClassesLocation(options.model);\n                loader.loadAndBuildElement(element, options.loaded);\n            }\n\n            return element;\n        }\n    };\n\n    var parser$1 = parser;\n\n    return parser$1;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xincludeLoader',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/simpleParser', 'taoQtiItem/qtiItem/core/Loader'], function ($, _, simpleParser, Loader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    simpleParser = simpleParser && Object.prototype.hasOwnProperty.call(simpleParser, 'default') ? simpleParser['default'] : simpleParser;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    function load(xinclude, baseUrl, callback) {\n        const href = xinclude.attr('href');\n        if (href && baseUrl) {\n            const fileUrl = `text!${baseUrl}${href}`;\n            // reset the previous definition of the XML, to receive updated passage\n            require.undef(fileUrl);\n            // require xml\n            require([fileUrl], function (stimulusXml) {\n                const $wrapper = $.parseXML(stimulusXml);\n                const $sampleXMLrootNode = $wrapper.children;\n                const $stimulus = $('<include>').append($sampleXMLrootNode);\n                const mathNs = 'm'; //for 'http://www.w3.org/1998/Math/MathML'\n                const data = simpleParser.parse($stimulus, {\n                    ns: {\n                        math: mathNs\n                    }\n                });\n\n                new Loader().loadElement(xinclude, data, function () {\n                    if (_.isFunction(callback)) {\n                        const loadedClasses = this.getLoadedClasses();\n                        loadedClasses.push('_container'); //the _container class is always required\n                        callback(xinclude, data, loadedClasses);\n                    }\n                });\n            }, function () {\n                //in case the file does not exist\n                callback(xinclude, false, []);\n            });\n        }\n    }\n\n    var xincludeLoader = {\n        load\n    };\n\n    return xincludeLoader;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/picManager',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element'], function ($, _, Element) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The template of a PicManager instance\n     * @type {picManager}\n     */\n    var picManager = {\n        /**\n         * Creates a manager for a particular PIC\n         *\n         * @param {Object} pic\n         * @param {QtiItem} item\n         * @returns {picManager}\n         */\n        init: function init(pic, item) {\n            if (Element.isA(pic, 'infoControl')) {\n                this._pic = pic;\n            }\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the managed PIC\n         *\n         * @returns {Object} the descriptor of the PIC\n         */\n        getPic: function getPic() {\n            return this._pic;\n        },\n\n        /**\n         * Gets the related Item\n         *\n         * @returns {QtiItem} the Item\n         */\n        getItem: function getItem() {\n            return this._item;\n        },\n\n        /**\n         * Gets the PIC serial\n         * @returns {String}\n         */\n        getSerial: function getSerial() {\n            return this._pic && this._pic.serial;\n        },\n\n        /**\n         * Gets the PIC type identifier\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return this._pic && this._pic.typeIdentifier;\n        },\n\n        /**\n         * Gets the underlying DOM element of the managed PIC\n         * @returns {{pic: (jQuery), tool: (jQuery), button: (jQuery), broken: (Boolean))}|*} An object providing the underlying DOM elements of the PIC and its tool\n         */\n        getDom: function getDom() {\n            if (!this._dom) {\n                var serial = this.getSerial();\n                var pic, tool;\n\n                if (serial) {\n                    pic = $('[data-serial=\"' + serial + '\"]');\n                    if (pic.length) {\n                        tool = $('[data-pic-serial=\"' + serial + '\"]');\n\n                        if (!tool.length) {\n                            tool = pic.children().first();\n                        }\n\n                        this._dom = {\n                            pic: pic,\n                            tool: tool,\n                            button: tool.find('.sts-button'),\n                            broken: pic.is(':empty') // tells if the tool has been moved outside of the PIC\n                        };\n                    }\n                }\n            }\n\n            return this._dom;\n        },\n\n        /**\n         * Enables the PIC.\n         * @fires enable\n         * @returns {picManager}\n         */\n        enable: function enable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            if (dom) {\n                // just remove the disabled state and destroy the disable mask\n                dom.button.removeClass('disabled');\n                dom.tool.find('.sts-button-disable-mask').remove();\n\n                this.disabled = false;\n                this.trigger('enable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Disables the PIC\n         * @fires disable\n         * @returns {picManager}\n         */\n        disable: function disable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            var button;\n            if (dom) {\n                // set a disabled state by adding a CSS class, then mask the button with a top-level element\n                button = dom.button.addClass('disabled');\n\n                $('<div class=\"sts-button-disable-mask\" style=\"position:absolute;z-index:10000000000000\"></div>')\n                    .appendTo(dom.tool)\n                    .offset(button.offset())\n                    .width(button.outerWidth())\n                    .height(button.outerHeight());\n\n                // also hide any sub component\n                dom.tool.find('.sts-container, .sts-menu-container').addClass('sts-hidden-container');\n\n                this.disabled = true;\n                this.trigger('disable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Shows the PIC\n         * @fires show\n         * @returns {picManager}\n         */\n        show: function show() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.show();\n\n                this.trigger('show');\n            }\n\n            return this;\n        },\n\n        /**\n         * Hides the PIC\n         * @fires hide\n         * @returns {picManager}\n         */\n        hide: function hide() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.hide();\n\n                this.trigger('hide');\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @returns {picManager}\n         */\n        trigger: function trigger(eventName) {\n            var dom = this.getDom();\n            var args = _.rest(arguments, 1);\n\n            args.unshift(this);\n\n            if (dom) {\n                // trigger the event, if the tool has been moved outside of the PIC, trigger also the event on the PIC\n                dom.tool.trigger(eventName, args);\n                if (dom.broken) {\n                    dom.pic.trigger(eventName, args);\n                }\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * The template of a PicManagerCollection instance\n     * @type {picManagerCollection}\n     */\n    var picManagerCollection = {\n        /**\n         * Creates the collection of PIC from an Item\n         *\n         * @param {QtiItem} item\n         * @returns {picManagerCollection}\n         */\n        init: function init(item) {\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the list of PIC managers for the PIC provided by the running item.\n         *\n         * @param {Boolean} [force] Force a list rebuild\n         * @returns {Array} Returns the list of managers for the provided PIC\n         */\n        getList: function getList(force) {\n            var self = this;\n\n            // build the list if empty\n            if (force || !self._list) {\n                self._map = {};\n                self._list = [];\n                if (self._item) {\n                    _.forEach(self._item.getElements(), function(element) {\n                        var manager;\n\n                        if (Element.isA(element, 'infoControl')) {\n                            manager = managerFactory(element, self._item);\n                            self._list.push(manager);\n                            self._map[element.serial] = manager;\n                            self._map[element.typeIdentifier] = manager;\n                        }\n                    });\n                }\n            }\n\n            return this._list;\n        },\n\n        /**\n         * Gets the manager of the first PIC matching the identifier from the list provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {Object} The manager of the PIC\n         */\n        getPic: function getPic(picId) {\n            this.getList();\n            return this._map[picId];\n        },\n\n        /**\n         * Executes an action on a particular PIC from the running item.\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @param {String} action The name of the action to call\n         * @returns {*} Returns the action result\n         */\n        execute: function execute(picId, action) {\n            var pic = this.getPic(picId);\n            if (pic && pic[action]) {\n                return pic[action].apply(pic, _.rest(arguments, 2));\n            }\n        },\n\n        /**\n         * Executes an action on each PIC provided by the running item.\n         * @param {String} action The name of the action to call\n         * @param {Function} [filter] An optional filter to reduce the list\n         * @returns {picManagerCollection}\n         */\n        executeAll: function executeAll(action, filter) {\n            var args = _.rest(arguments, 2);\n            var cb;\n\n            if (typeof filter === 'function') {\n                cb = function(pic) {\n                    if (filter.call(pic, pic) && pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            } else {\n                cb = function(pic) {\n                    if (pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            }\n\n            return this.each(cb);\n        },\n\n        /**\n         * Calls a callback function on each listed PIC from the running item.\n         * @param {Function} cb The callback function to apply on each listed PIC\n         * @returns {picManagerCollection}\n         */\n        each: function each(cb) {\n            _.forEach(this.getList(), cb);\n            return this;\n        },\n\n        /**\n         * Enables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        enablePic: function enablePic(picId) {\n            this.execute(picId, 'enable');\n            return this;\n        },\n\n        /**\n         * Disables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        disablePic: function disablePic(picId) {\n            this.execute(picId, 'disable');\n            return this;\n        },\n\n        /**\n         * Shows a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        showPic: function showPic(picId) {\n            this.execute(picId, 'show');\n            return this;\n        },\n\n        /**\n         * Hides a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        hidePic: function hidePic(picId) {\n            this.execute(picId, 'hide');\n            return this;\n        },\n\n        /**\n         * Enables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to enable\n         * @returns {picManagerCollection}\n         */\n        enableAll: function enableAll(filter) {\n            this.executeAll('enable', filter);\n            return this;\n        },\n\n        /**\n         * Disables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to disable\n         * @returns {picManagerCollection}\n         */\n        disableAll: function disableAll(filter) {\n            this.executeAll('disable', filter);\n            return this;\n        },\n\n        /**\n         * Shows all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to show\n         * @returns {picManagerCollection}\n         */\n        showAll: function showAll(filter) {\n            this.executeAll('show', filter);\n            return this;\n        },\n\n        /**\n         * Hides all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to hide\n         * @returns {picManagerCollection}\n         */\n        hideAll: function hideAll(filter) {\n            this.executeAll('hide', filter);\n            return this;\n        }\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {Object} pic\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var managerFactory = function managerFactory(pic, item) {\n        var manager = _.clone(picManager, true);\n        return manager.init(pic, item);\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var collectionFactory = function collectionFactory(item) {\n        var collection = _.clone(picManagerCollection, true);\n        return collection.init(item);\n    };\n\n    var picManager$1 = {\n        collection: collectionFactory,\n        manager: managerFactory\n    };\n\n    return picManager$1;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var userModules = {\n        /**\n         * Load user modules defined in the module config\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\n         * @returns {Promise}\n         */\n        load: function load(userModules) {\n            var config = module.config();\n\n            if (!userModules || !_.isArray(userModules)) {\n                if (config && config.userModules && _.isArray(config.userModules)) {\n                    userModules = config.userModules;\n                } else {\n                    userModules = [];\n                }\n            }\n            if(!userModules.length){\n                return Promise.resolve();\n            }\n            return new Promise(function(resolve, reject) {\n                window.require(userModules, function() {\n                    _.forEach(arguments, function(dependency) {\n                        if (dependency && _.isFunction(dependency.exec)) {\n                            dependency.exec();\n                        }\n                    });\n                    resolve();\n                }, function(err) {\n                    reject(err.message);\n                });\n            });\n        }\n    };\n\n    return userModules;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory',[],function(){\n    'use strict';\n\n    /**\n     * Generic portable element provider than loads portable elements directly on the client side\n     *\n     * Sample usage :\n     * var pciProvider = sideLoadingProviderFactory(pciManifestArray);\n     * pciProvider.add('anotherPciXYZ', anotherPciXYZObject);\n     *\n     */\n    return function sideLoadingProviderFactory(portableElements){\n\n        var _registry = portableElements;\n\n        return {\n            /**\n             * Side load the portable element here\n             * @param id\n             * @param pathToManifest\n             */\n            add : function add(id, portableElement){\n                _registry[id] = portableElement;\n                return this;\n            },\n            /**\n             * Implementation of the mandatory method load() of a portable element provider\n             *\n             * @returns {Promise} resolved when the added pci registered through their manifest are loaded\n             */\n            load : function load(){\n                return _registry;\n            }\n        };\n    };\n});\n","define('taoQtiItem/reviewRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const itemThemes = themes.get('items');\n    const moduleConfig = module.config();\n\n    //Create asset manager stack\n    const assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: url => {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    const locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n\n        // Interactions/Choices customised for reviewRenderer\n\n        choiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/reviewRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        hottext: 'taoQtiItem/reviewRenderer/renderers/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        associableHotspot: false,\n        gapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicOrderInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        uploadInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/UploadInteraction',\n        customInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/PortableCustomInteraction',\n        mediaInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MediaInteraction',\n\n        // Interactions/Choices inherited from qtiCommonRenderer\n\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',\n    };\n\n    var config = {\n        name: 'reviewRenderer',\n        locations,\n        options: {\n            assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/reviewRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/rendererProvider',['taoQtiItem/reviewRenderer/renderers/Renderer'], function (ReviewRenderer) { 'use strict';\n\n    ReviewRenderer = ReviewRenderer && Object.prototype.hasOwnProperty.call(ReviewRenderer, 'default') ? ReviewRenderer['default'] : ReviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for reviewRenderer\n     */\n    var rendererProvider = {\n        name: 'reviewRenderer',\n        init: () => {},\n        getRenderer: () => ReviewRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/runner/rendererStrategies',['core/logger', 'core/providerRegistry', 'taoQtiItem/qtiCommonRenderer/renderers/rendererProvider', 'taoQtiItem/reviewRenderer/renderers/rendererProvider'], function (loggerFactory, providerRegistry, qtiRenderer, reviewRenderer) { 'use strict';\n\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n    qtiRenderer = qtiRenderer && Object.prototype.hasOwnProperty.call(qtiRenderer, 'default') ? qtiRenderer['default'] : qtiRenderer;\n    reviewRenderer = reviewRenderer && Object.prototype.hasOwnProperty.call(reviewRenderer, 'default') ? reviewRenderer['default'] : reviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/runner/rendererStrategies');\n\n    /**\n     * The default renderer provider. It should be the QTI common renderer.\n     * @type string\n     */\n    const defaultRenderer = qtiRenderer.name;\n\n    /**\n     * Alias mapping for particular names.\n     * Gives the appropriate renderer based on the IMS view property.\n     * Read more about IMS view here:\n     * https://www.imsglobal.org/question/qtiv2p2p2/QTIv2p2p2-ASI-InformationModelv1p0/imsqtiv2p2p2_asi_v1p0_InfoModelv1p0.html#FigEnumeratedListClass_DataModel_View\n     *\n     * @type {Object}\n     */\n    const alias = {\n        author: qtiRenderer.name,\n        candidate: qtiRenderer.name,\n        proctor: reviewRenderer.name,\n        scorer: reviewRenderer.name,\n        testConstructor: qtiRenderer.name,\n        tutor: reviewRenderer.name\n    };\n\n    /**\n     * Gets the name of an existing renderer.\n     * If the wanted renderer does not exist, it will fallback to the default one.\n     * A warning will be issue for unknown names.\n     * @param {String} name\n     * @returns {String}\n     */\n    function getProviderName(name) {\n        const providers = rendererStrategies.getAvailableProviders();\n\n        if (providers.includes(name)) {\n            return name;\n        }\n\n        if (alias[name]) {\n            return alias[name];\n        }\n\n        if (name) {\n            logger.warn(`Unknown QTI Item Runner renderer ${name}!`);\n        }\n\n        return defaultRenderer;\n    }\n\n    /**\n     * This renderer manager registers two different renderers at the moment:\n     * - qtiCommonRenderer: Standard renderer used for test taker view\n     * - reviewRenderer: This renderer is meant to render items in review mode (which is ready-only with some enhancement)\n     *\n     * @param {string} rendererName\n     * @returns {*|{init(): *, getRenderer(): *}|init}\n     */\n    function rendererStrategies(rendererName) {\n        const providerName = getProviderName(rendererName);\n        const provider = rendererStrategies.getProvider(providerName);\n        const renderer = {\n            /**\n             * Initializes the renderer.\n             * @returns {renderer}\n             */\n            init() {\n                provider.init.call(this);\n                return this;\n            },\n\n            /**\n             * Gets the renderer's name\n             * @returns {String}\n             */\n            getName() {\n                return provider.name;\n            },\n\n            /**\n             * Gets the renderer\n             * @returns {renderer}\n             */\n            getRenderer() {\n                return provider.getRenderer();\n            }\n        };\n\n        return renderer.init();\n    }\n\n    providerRegistry(rendererStrategies);\n\n    rendererStrategies.registerProvider(qtiRenderer.name, qtiRenderer);\n    rendererStrategies.registerProvider(reviewRenderer.name, reviewRenderer);\n\n    return rendererStrategies;\n\n});\n\n","define('taoQtiItem/runner/provider/qti',['jquery', 'lodash', 'i18n', 'context', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/portableElementRegistry/ciRegistry', 'taoQtiItem/portableElementRegistry/icRegistry', 'taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory', 'taoQtiItem/runner/rendererStrategies', 'taoQtiItem/runner/provider/manager/picManager', 'taoQtiItem/runner/provider/manager/userModules', 'taoQtiItem/qtiItem/helper/modalFeedback', 'taoItems/assets/manager', 'util/locale'], function ($, _, __, context, QtiLoader, Element, ciRegistry, icRegistry, sideLoadingProviderFactory, rendererStrategies, picManager, userModules, modalFeedbackHelper, manager, locale) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    QtiLoader = QtiLoader && Object.prototype.hasOwnProperty.call(QtiLoader, 'default') ? QtiLoader['default'] : QtiLoader;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n    sideLoadingProviderFactory = sideLoadingProviderFactory && Object.prototype.hasOwnProperty.call(sideLoadingProviderFactory, 'default') ? sideLoadingProviderFactory['default'] : sideLoadingProviderFactory;\n    rendererStrategies = rendererStrategies && Object.prototype.hasOwnProperty.call(rendererStrategies, 'default') ? rendererStrategies['default'] : rendererStrategies;\n    picManager = picManager && Object.prototype.hasOwnProperty.call(picManager, 'default') ? picManager['default'] : picManager;\n    userModules = userModules && Object.prototype.hasOwnProperty.call(userModules, 'default') ? userModules['default'] : userModules;\n    modalFeedbackHelper = modalFeedbackHelper && Object.prototype.hasOwnProperty.call(modalFeedbackHelper, 'default') ? modalFeedbackHelper['default'] : modalFeedbackHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    /**\n     * @exports taoQtiItem/runner/provider/qti\n     */\n    var qtiItemRuntimeProvider = {\n        init: function (itemData, done) {\n            var self = this;\n\n            var rendererOptions = _.merge(\n                {\n                    assetManager: this.assetManager\n                },\n                _.pick(this.options, ['themes', 'preload', 'view'])\n            );\n\n            const Renderer = rendererStrategies(rendererOptions.view).getRenderer();\n\n            this._renderer = new Renderer(rendererOptions);\n\n            this._loader = new QtiLoader();\n\n            this._loader.loadItemData(itemData, function (item) {\n                if (!item) {\n                    return self.trigger('error', __('Unable to load item from the given data.'));\n                }\n\n                self._item = item;\n                self._renderer.load(function () {\n                    self._item.setRenderer(this);\n\n                    done();\n                }, this.getLoadedClasses());\n            });\n        },\n\n        render: function (elt, done, options) {\n            var self = this;\n\n            options = _.defaults(options || {}, { state: {} });\n\n            if (this._item) {\n                try {\n                    //render item html\n                    elt.innerHTML = this._item.render({});\n\n                    // apply RTL layout according to item language\n                    const $item = $(elt).find('.qti-item');\n                    const $itemBody = $item.find('.qti-itemBody');\n                    const itemDir = $itemBody.attr('dir');\n                    if (!itemDir) {\n                        const itemLang = $item.attr('lang');\n                        $itemBody.attr('dir', locale.getLanguageDirection(itemLang));\n                    }\n                } catch (e) {\n                    self.trigger('error', __('Error in template rendering: %s', e.message));\n                }\n                try {\n                    if (options.portableElements) {\n                        //if the option to directly load portable elements is provided, use only this one\n                        if (options.portableElements.pci) {\n                            ciRegistry.resetProviders();\n                            ciRegistry.registerProvider(\n                                'pciDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pci)\n                            );\n                        }\n                        if (options.portableElements.pic) {\n                            icRegistry.resetProviders();\n                            icRegistry.registerProvider(\n                                'picDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pic)\n                            );\n                        }\n                    }\n\n                    // Race between postRendering and timeout\n                    // postRendering waits for everything to be resolved or one reject\n                    Promise.race([\n                        Promise.all(this._item.postRender(options)),\n                        new Promise(function (resolve, reject) {\n                            _.delay(\n                                reject,\n                                timeout,\n                                new Error(__('It seems that there is an error during item loading. The error has been reported. The test will be paused.'))\n                            );\n                        })\n                    ])\n                        .then(function () {\n                            $(elt)\n                                .off('responseChange')\n                                .on('responseChange', function () {\n                                    self.trigger('statechange', self.getState());\n                                    self.trigger('responsechange', self.getResponses());\n                                })\n                                .off('endattempt')\n                                .on('endattempt', function (e, responseIdentifier) {\n                                    self.trigger('endattempt', responseIdentifier || e.originalEvent.detail);\n                                })\n                                .off('themechange')\n                                .on('themechange', function (e, themeName) {\n                                    var themeLoader = self._renderer.getThemeLoader();\n                                    themeName = themeName || e.originalEvent.detail;\n                                    if (themeLoader) {\n                                        themeLoader.change(themeName);\n                                    }\n                                });\n\n                            /**\n                             * Lists the PIC provided by this item.\n                             * @event qti#listpic\n                             */\n                            self.trigger('listpic', picManager.collection(self._item));\n\n                            return userModules.load().then(done);\n                        })\n                        .catch(function (renderingError) {\n                            done(); // in case of postRendering issue, we are also done\n                            const errorMsg = renderingError instanceof Error\n                                ? renderingError.message\n                                : renderingError;\n                            const error = new Error(__('Error in post rendering: %s', errorMsg));\n                            error.unrecoverable = true;\n                            self.trigger('error', error);\n                        });\n                } catch (err) {\n                    self.trigger('error', __('Error in post rendering: %s', err.message));\n                }\n            }\n        },\n\n        /**\n         * Clean up stuffs\n         */\n        clear: function (elt, done) {\n            var self = this;\n\n            if (self._item) {\n                Promise.all(\n                    this._item.getInteractions().map(function (interaction) {\n                        return interaction.clear();\n                    })\n                )\n                    .then(function () {\n                        self._item.clear();\n\n                        $(elt).off('responseChange').off('endattempt').off('themechange').off('feedback').empty();\n\n                        if (self._renderer) {\n                            self._renderer.unload();\n                        }\n\n                        self._item = null;\n                    })\n                    .then(done)\n                    .catch(function (err) {\n                        self.trigger('error', __('Something went wrong while destroying an interaction: %s', err.message));\n                    });\n            } else {\n                done();\n            }\n        },\n\n        /**\n         * Get state implementation.\n         * @returns {Object} that represents the state\n         */\n        getState: function getState() {\n            var state = {};\n            if (this._item) {\n                //get the state from interactions\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    state[interaction.attr('responseIdentifier')] = interaction.getState();\n                });\n\n                //get the state from infoControls\n                _.forEach(this._item.getElements(), function (element) {\n                    if (Element.isA(element, 'infoControl') && element.attr('id')) {\n                        state.pic = state.pic || {};\n                        state.pic[element.attr('id')] = element.getState();\n                    }\n                });\n            }\n            return state;\n        },\n\n        /**\n         * Set state implementation.\n         * @param {Object} state - the state\n         */\n        setState: function setState(state) {\n            if (this._item && state) {\n                //set interaction state\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    var id = interaction.attr('responseIdentifier');\n                    if (id && state[id]) {\n                        interaction.setState(state[id]);\n                    }\n                });\n\n                //set info control state\n                if (state.pic) {\n                    _.forEach(this._item.getElements(), function (element) {\n                        if (Element.isA(element, 'infoControl') && state.pic[element.attr('id')]) {\n                            element.setState(state.pic[element.attr('id')]);\n                        }\n                    });\n                }\n            }\n        },\n\n        getResponses: function () {\n            var responses = {};\n            if (this._item) {\n                _.reduce(\n                    this._item.getInteractions(),\n                    function (res, interaction) {\n                        responses[interaction.attr('responseIdentifier')] = interaction.getResponse();\n                        return responses;\n                    },\n                    responses\n                );\n            }\n            return responses;\n        },\n\n        renderFeedbacks: function (feedbacks, itemSession, done) {\n            var self = this;\n\n            var _renderer = self._item.getRenderer();\n            var _loader = new QtiLoader(self._item);\n\n            // loading feedbacks from response into the current item\n            _loader.loadElements(feedbacks, function (item) {\n                _renderer.load(function () {\n                    var renderingQueue = modalFeedbackHelper.getFeedbacks(item, itemSession);\n\n                    done(renderingQueue);\n                }, this.getLoadedClasses());\n            });\n        }\n    };\n\n    return qtiItemRuntimeProvider;\n\n});\n\n","define('taoQtiItem/runner/qtiItemRunner',['taoItems/runner/api/itemRunner', 'taoQtiItem/runner/provider/qti'], function (itemRunner, qtiRuntimeProvider) { 'use strict';\n\n\titemRunner = itemRunner && Object.prototype.hasOwnProperty.call(itemRunner, 'default') ? itemRunner['default'] : itemRunner;\n\tqtiRuntimeProvider = qtiRuntimeProvider && Object.prototype.hasOwnProperty.call(qtiRuntimeProvider, 'default') ? qtiRuntimeProvider['default'] : qtiRuntimeProvider;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\t//register the QTI Provider\n\titemRunner.register('qti', qtiRuntimeProvider);\n\n\treturn itemRunner;\n\n});\n\n","\ndefine(\"taoQtiItem/loader/taoQtiItemRunner.bundle\", function(){});\n","define(\"taoQtiItem/loader/taoQtiItemRunner.min\", [\"taoItems/loader/taoItemsRunner.min\"], function(){});\n"],"mappings":"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"}