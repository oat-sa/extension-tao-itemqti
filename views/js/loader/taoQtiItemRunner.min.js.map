{"version":3,"names":["define","ckConfigurator$1","Object","prototype","hasOwnProperty","call","getConfig","editor","toolbarType","options","underline","ckConfigurator","_","util","buildSerial","prefix","id","chars","i","charAt","Math","floor","random","length","buildId","item","suffix","exists","usedIds","TypeError","getUsedIds","includes","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","forEach","collectionName","collection","split","nameToken","elt","parent","isFunction","find","Error","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","indexOf","removeMarkupNamespaces","removeMarkupNamespace","getMarkupUsedNamespaces","namespaces","original","slash","node","push","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","_class","loggerFactory","rendererConfig","_instances","logger","Element","Class","extend","qtiClass","serial","rootElement","init","attributes","metaData","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","name","value","prop","document","trigger","key","removeData","removeAttr","removeAttributes","warn","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","object","body","location","getRootElement","setRelatedItem","setRootElement","getRelatedItem","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","rendering","resolveUrl","merge","getData","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","_containers","_$containerContext","_getSelector","selector","containerHelper","setContext","getContext","get","reset","omit","clear","eventType","triggerResponseChangeEvent","interaction","extraData","response","getResponse","targetBlank","$container","on","e","preventDefault","href","window","open","raphael","scaleRaphael","_Mathround","round","_Mathfloor","basic","stroke","\"stroke-width\"","\"stroke-dasharray\"","\"stroke-linejoin\"","fill","\"fill-opacity\"","cursor","hover","selectable","active","error","success","layer","opacity","creator","target","path","width","assoc","\"stroke-linecap\"","close","gstyle","\"imageset-rect-stroke\"","\"imageset-rect-no-stroke\"","\"imageset-img\"","\"order-text\"","\"font-family\"","\"font-weight\"","\"font-size\"","\"score-text-default\"","\"score-text\"","\"small-text\"","\"layer-pos-text\"","\"target-hover\"","\"target-success\"","\"assoc-layer\"","\"stroke-opacity\"","\"assoc-bullet\"","\"close-bg\"","\"touch-circle\"","shapeMap","default","poly","coordsValidator","rect","ellipse","circle","qti2raphCoordsMapper","coords","paper","height","a","size","join","raph2qtiCoordsMapper","x","y","cx","cy","r","rx","ry","GraphicHelper","_style","setStyle","responsivePaper","resizePaper","givenWidth","containerWidth","stopPropagation","diff","$editor","outerWidth","maxWidth","$body","responsive","innerWidth","factor","imgWidth","containerHeight","imgHeight","changeSize","resize","container","closest","resizer","throttle","innerHeight","image","img","imgId","setViewBox","createElement","self","shaper","shapeCoords","qtiCoords","raphaelCoords","apply","title","style","toFront","flashing","updateElementState","touchEffect","touchstart","createTouchCircle","getBBox","createTarget","point","w","baseSize","half","targetSize","transform","count","tBBox","click","p","select","remove","create","map","coord","parseInt","JSON","stringify","mapper","result","bbox","radius","tCircle","defer","animate","createText","top","left","content","disableEvents","text","hide","setAttribute","fontSize","scaledFontSize","updateTitle","createShapeText","shape","shapeClick","createBorderedImage","padding","halfPad","rw","rh","ix","iy","iw","ih","set","border","url","shadow","glow","offsetx","offsety","move","duration","animation","animateWith","children","child","nodeName","toLowerCase","removeChild","highlightError","restoredState","delay","event","evt","events","filter","el","f","Array","slice","getPoint","clickPoint","getBoundingClientRect","position","pw","cw","ph","ch","offset","pageX","pageY","clientX","clientY","scrollLeft","documentElement","scrollTop","Handlebars","Helpers0","instructionTpl","asString","html","Template","__initialized","template","depth0","helpers","partials","program1","buffer","stack1","escapeExpression","compilerInfo","functionType","helper","hash","inverse","noop","fn","program","message","_notificationLevels","Instruction","callback","defaultMessage","currentMessage","level","$dom","isValidLevel","setState","checkState","getId","update","timeout","start","stop","_this","timer","setTimeout","setLevel","getLevel","setMessage","validate","$$1","__","notifTpl","helperMissing","_instructions","instructionManager","validateInstructions","instruction","appendInstruction","validateCallback","removeInstructions","empty","resetInstructions","minMaxChoiceInstructions","min","max","onError","choiceCount","getChoices","minInstructionSet","msg","appendNotification","prepend","$notif","_remove","fadeOut","removeNotifications","informLoaded","leading","attach","stylesheets","$head","stylesheet","$link","onload","onerror","one","appendTo","detach","itemStylesheetHandler","regexChar","regexWords","patternMaskHelper","parsePattern","pattern","createMaxWordPattern","toString","createMaxCharPattern","printBase","withType","print","base","forIn","_formatters","formatter","baseType","printList","list","substring","printRecord","record","boolean","integer","float","string","pair","directedPair","file","uri","intOrIdentifier","identifier","PciPrettyPrint","pciPrettyPrint","_qtiModelPciResponseCardinalities","single","multiple","ordered","PciResponse","unserialize","responseDeclaration","getResponseDeclaration","cardinality","mappedCardinality","responseValues","isObject","serialize","prettyPrint","fixMarkupMediaSources","imgSrcPattern","substr","resolved","PortableElement","adaptSize","waitForMedia","itemSelector","sizeAdapter","$elements","first","addEventListener","rel","resetSize","resetHeight","mimeTypes","delimetr","uploadMime","getMimeTypes","getList","setExpectedTypes","types","classes","reduce","acc","selectedType","getExpectedTypes","includeEquivalents","equivalents","mimes","mime","mimeData","equivalent","union","tpl","Gap","program3","objetLabel","objectLabel","GapImg","GapText","Hottext","InlineChoice","SimpleAssociableChoice_AssociateInteraction","SimpleAssociableChoice_MatchInteraction","features","program5","program7","unique","allowElimination","SimpleChoice_ChoiceInteraction","choice","maxChoices","isVisible","SimpleChoice_OrderInteraction","Promise","eventifier","_requirejs","require","_defaultLoadingOptions","reload","loadModuleConfig","manifest","resolve","reject","requireConfigAliases","reqConfigs","modules","baseUrl","runtime","config","pciConfig","defaults","paths","runtimeModules","typeIdentifier","model","conf","isPortableElementProvider","provider","load","portableElementRegistry","methods","_loaded","__providers","_registry","version","last","registerProvider","moduleName","resetProviders","loadProviders","loadPromise","providerLoadingStack","shift","getAllVersions","all","versions","getRuntime","portableElement","assign","label","getCreator","xmlns","getLatestCreators","lastVersion","hook","enabled","getBaseUrl","loadRuntimes","then","providers","loadStack","results","configLoadingStack","_pcis","include","moduleConfigs","catch","err","loadCreators","requiredCreatorHooks","portableElementModel","creators","creatorHook","getTypeIdentifier","findIndex","module","enable","disable","isEnabled","featuresService","QtiElements","itemBody","parents","contains","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","div","dl","dt","dd","hr","math","li","ol","ul","param","table","tbody","tfoot","thead","td","th","tr","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","pre","br","infoControl","qti","textRun","feedbackInline","feedbackBlock","rubricBlock","blockInteraction","inlineInteraction","gap","hottext","printedVariable","prompt","templateElement","templateBlock","templateInline","choiceInteraction","associateInteraction","orderInteraction","matchInteraction","hottextInteraction","gapMatchInteraction","mediaInteraction","sliderInteraction","uploadInteraction","drawingInteraction","graphicInteraction","hotspotInteraction","graphicAssociateInteraction","graphicOrderInteraction","graphicGapMatchInteraction","selectPointInteraction","textEntryInteraction","extendedTextInteraction","inlineChoiceInteraction","endAttemptInteraction","customInteraction","_container","cache","containable","getAllowedContainersElements","getAllowedContainers","jqSelector","getParentClasses","aClass","intersect","intersection","getChildClasses","getAllowedContents","recursive","checked","contain","j","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","getAvailableAuthoringElements","tagTitles","commonInteractions","inlineInteractions","graphicInteractions","authoringElements","description","icon","short","tags","group","availableElements","elementId","entries","qtiElements","customInteractionRegistry","getAuthoringData","enabledOnly","pciModel","ciRegistry","registry","infoControlRegistry","icRegistry","getBaseUrlByIdentifier","handle","handlePortableElementLocation","source","relative","fullmatch","relPath","runtimeLocation","context","themes","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","assetManager","handleTheme","available","val","root_url","taomedia","external","base64","itemCssNoCache","locations","assessmentItem","_simpleFeedbackRule","_tooltip","outcomeDeclaration","responseProcessing","figure","figcaption","modalFeedback","\"simpleChoice.choiceInteraction\"","\"simpleChoice.orderInteraction\"","gapText","\"simpleAssociableChoice.matchInteraction\"","\"simpleAssociableChoice.associateInteraction\"","inlineChoice","hotspotChoice","gapImg","associableHotspot","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","order","orderDragAndDrop","messages","program2","program4","equal","contentModel","Container","Figcaption","imageTpl","widgetTpl","Template$1","program6","showFigure","DISABLE_FIGURE_WIDGET","featureFlags","FEATURE_FLAG_DISABLE_FIGURE_WIDGET","Figure","elem","class","some","bdy","elements","childElement","$figure","$img","css","program9","program11","program13","program15","program17","program19","program21","role","src","alt","Img","Include","hider","instructionMgr","pciResponse","interact","interactUtils","pairTpl","blockHelperMissing","choices","setChoice","$choice","$target","choiceSerial","getChoice","usage","_setChoice","responseMappingMode","siblings","$resultArea","$pair","thisPairSerial","$otherRepeatedPair","not","each","$otherPair","otherPairSerial","fadeIn","show","color","unsetChoice","$filledChoice","triggerChange","$parent","$sibling","isNumberOfMaxAssociationsZero","swapping","getChoiceByIdentifier","renderEmptyPairs","scrollObserverFactory","$scrollContainer","resetScrollObserver","currentDraggable","beforeY","beforeX","afterY","afterX","onScrollCb","getAttribute","webkitTransform","findScrollContainer","$el","ovf","dynamicDrop","getScrollContainer","draggedElement","off","_getRawResponse","_setInstructions","_iFrameDragFix","draggableSelector","iFrameDragFixOn","$activeDrop","resultSelector","fire","eq","relatedTarget","choiceSelector","$choiceArea","$activeChoice","scrollObserver","$bin","binSelector","_getChoice","isDragAndDropEnabled","dragOptions","dropOptions","scaleX","scaleY","_resetSelection","_unsetChoice","_isInsertionMode","_isModeEditing","_activateChoice","_handleChoiceActivate","_activateResult","targetSerial","_handleResultActivate","currentTarget","getOption","inertia","autoScroll","restrict","restriction","endOnly","elementRect","bottom","right","draggable","onstart","scale","calculateScale","onmove","moveElement","dx","dy","onend","restoreOriginalPosition","iFrameDragFixOff","styleCursor","overlap","ondragenter","ondragleave","dropzone","ondrop","resetResponse","tapOn","_setPairs","pairs","addedPairs","$emptyPair","$divs","next","setResponse","destroy","sort","aIndex","bIndex","getState","AssociateInteraction","listStyle","allowEliminationVisible","horizontal","promptId","KEY_CODE_SPACE","KEY_CODE_ENTER","KEY_CODE_LEFT","KEY_CODE_UP","KEY_CODE_RIGHT","KEY_CODE_DOWN","_triggerInput","$choiceBox","$input","$choiceBoxes","add","isBoolean","_pseudoLabel","inputSelector","$qtiChoice","keyCode","charCode","prev","focus","eliminator","dataset","eliminable","input","querySelector","originalEvent","classList","toggle","removeAttribute","values","highlightInvalidInput","$icon","choiceStyle","iconStyle","clearTimeout","isEliminable","getCustomData","listStyleVisible","listStyles","pop","eliminated","ChoiceInteraction","_setVal","change","EndAttemptInteraction","strLimiter","ckEditor","tooltip","converter","countTpl","expectedLength","minStrings","patternMask","placeholderType","_styleUpdater","themeLoaded","_getNumStrings","_isMultiple","limiter","inputLimiter","placeholderText","getItemLanguage","itemLang","itemLocale","ckOptions","resize_enabled","secure","protocol","forceCustomDomain","language","$element","num","_setPattern","_getFormat","hideXhtmlConstraints","hideXhtmlRecommendations","qtiItemStyle","$editorBody","qtiItem","currentStyle","getComputedStyle","\"background-color\"","_setUpCKEditor","status","listenTextInput","_getCKEditor","setData","_setMultipleVal","keys","setText","numericBase","maxStrings","editorValue","convertedValue","convert","isNaN","parseFloat","_getTextareaValue","expectedLines","isCke","patternRegEx","$textarea","$charsCounter","$wordsCounter","maxWords","maxLength","$maxLengthCounter","$maxWordsCounter","ignoreKeyCodes","spaceKeyCodes","isComposing","hasCompositionJustEnded","acceptKeyCode","emptyOrSpace","txt","hasSpace","getCharBefore","str","pos","getCharAfter","noSpaceNode","NODE_TEXT","isBlockBoundary","getName","getPreviousNotEmptyNode","range","getPreviousNode","getText","previousSourceNode","getPreviousSourceNode","nodeElement","parentNode","ownerDocument","getNextNotEmptyNode","getNextNode","nextSourceNode","getNextSourceNode","cancelEvent","cancel","stopImmediatePropagation","invalidToolip","patternHandler","newValue","debounce","dispose","keyLimitHandler","which","wordsCount","getWordsCount","charsCount","getCharsCount","middle","sel","getSelection","getRanges","startContainer","startOffset","endContainer","endOffset","getSelectedText","selectionStart","selectionEnd","textarea","updateCounter","nonKeyLimitHandler","dataValue","clipboardData","dataTransfer","limitByWordCount","limitByCharCount","insertHtml","end","handleCompositionStart","handleCompositionEnd","currentValue","handleBeforeInput","previousSnapshot","getSnapshot","createRange","editable","moveToElementEditablePosition","selectRanges","raw","_ckEditorData","patt","_destroyCkEditor","instances","_stripTags","tempNode","innerHTML","textContent","format","setReadOnly","readOnly","clearText","countChars","countWords","countExpectedLength","countMaxLength","countMaxWords","constraintHints","program14","program10","maxStringLoop","program12","program16","program18","program23","dompurify","program25","unless","program26","ExtendedTextInteraction","_choiceUsages","getGap","gapSelector","_handleChoiceSelect","_handleFilledGapSelect","_handleGapSelect","$flowContainer","filledGapSelector","$dragged","GapMatchInteraction","graphic","_getActiveElement","getById","_createPath","srcElement","destElement","onRemove","showCloser","closerBg","removeSet","closer","hideCloser","toBack","unclick","vset","_vsets","without","sx","sy","dest","srcBullet","destBullet","midPath","getPointAtLength","getTotalLength","selectLigne","attrs","_isMatchable","matchable","matchMax","matching","_shapesSelectable","assocs","activeChoice","assocsElement","_shapesUnSelectable","responses","concat","_paperUnSelect","_renderChoice","maxAssociations","pull","background","partial","res","responseValue","el1","el2","toRemove","GraphicAssociateInteraction","mouseEvent","gapImgs","activeDrop","isDirectedPairFlipped","flipDirectedPair","gapFillers","gapFiller","$gapImages","bgImage","getGapImg","usages","_selectShape","trackResponse","$clone","shapeOffset","activeOffset","currentCount","$gapList","$active","$imageBox","boxOffset","display","\"z-index\"","animationEnd","gapFillerImage","rElement","raphaelid","handleShapeSelect","onClickShape","_renderGapList","toggleActiveGapState","_setInactiveGapState","_setActiveGapState","gapFillersSelector","onClickGapImg","index","newSize","sortBy","responseChoice","responseGap","items","GraphicGapMatchInteraction","_createTexts","texts","times","number","_renderOrderList","$orderList","$orderer","$orderers","_showText","transf","_hideText","_unselectShape","unsetNumbers","activeNumber","GraphicOrderInteraction","HotspotInteraction","pseudoLabel","$inupt","currentChoices","HottextInteraction","select2","_emptyValue","_defaultOptions","allowEmpty","optionSelector","opts","required","choiceTooltip","getItemDir","itemDir","dirClass","opt","outerHTML","formatResult","formatSelection","minimumResultsForSearch","containerCssClass","dropdownCssClass","warning","$selectedIndex","selectedIndex","ev","choiceIdentifier","InlineChoiceInteraction","depth1","matchSet1","programWithDepth","matchSet2","inWarning","_onCheckboxSelected","_filterResponse","_inferValue","firstId","secondId","currentResponse","minAssociations","_countChoices","_maxMatchReached","association","overflow","_getChoiceDefinitionByIdentifier","matchMin","_countAssociations","rawResponse","rawChoices","_getRawChoices","matchset","superClosure","onMaxChoicesReached","report","onMatchMaxReached","originalBackgroundColor","originalColor","backgroundColor","responseCount","prependTo","MatchInteraction","inferValue","mediaplayer","canPreviewMedia","firefox","reFirefoxVersion","exec","navigator","userAgent","webm","reWebM","media","$item","maxPlays","canBePlayed","currentWidth","mediaElement","initMediaPlayer","mediaUrl","preview","canPause","canSeek","volume","autoStart","loop","renderTo","timesPlayed","restorePlayerState","playerState","isNumber","setVolume","muted","mute","startMuted","seek","pause","player","getPosition","getVolume","MediaInteraction","orientationSelectionEnabled","_freezeSize","$orderArea","instructionMax","initialOrder","$choices","deactivateChoice","choice1","choice2","_isDropzoneVisible","$dropzoneElement","_insertDropzone","draggedMiddle","_getMiddleOf","previousMiddle","insertPosition","currentMiddle","orientation","before","_adjustDropzonePosition","draggedBox","$prevResult","$nextResult","prevMiddle","nextMiddle","after","elementBox","$iconAdd","$iconRemove","$iconBefore","$iconAfter","$dragContainer","_activeControls","_resetControls","_setSelection","_addChoiceToSelection","$results","_toggleResultSelection","_removeChoice","_moveResultBefore","$prev","_moveResultAfter","$next","hasBeenDroppedInResultArea","dropzoneIndex","selectors","unbindInteractEvents","OrderInteraction","_pciHooks","register","pciHook","notifyReady","pciInstance","notifyDone","onready","ondone","createPciInstance","pciTypeIdentifier","registeredPCI","cloneDeep","qtiCustomInteractionContext","instanciator","getPci","pci","_taoCustomInteraction","setPci","instance","commonPciRenderer","getRequiredModules","requireEntries","libraries","lib","createInstance","properties","pciAssetManager","pciAssetResolve","resolveBy","initialize","setSerializedState","getSerializedState","sharedContext","defaultPciRenderer","setPCIConstructor","pciConstructor","pciConstructorDataKey","getPCIConstructor","contentLanguage","itemLanguage","userLanguage","locale","forOwn","propVal","propKey","pciReadyCallback","readyPromise","templateVariables","boundTo","pciDoneCallback","getInstance","oncompleted","setReviewState","RESPONSE","info","imsPciRenderer","_setPciModel","pciRenderer","_getPciRenderer","getAssetManager","onPci","serializedState","PortableCustomInteraction","Prompt","getRawResponse","points","addPoint","pointChange","isTouch","enableSelection","isResponsive","untouchstart","imageClicked","SelectPointInteraction","nouislider","_slideTo","sliderCurrentValue","sliderValue","direction","getPropertyValue","responseIdentifier","$sliderLabels","$sliderCurrentValue","$sliderValue","reverse","lowerBound","upperBound","step","steps","inArray","reversedLabels","sliderSize","maxHeight","stepLabel","middleStep","leftOffset","middleValue","noUiSlider","attributesNew","startValue","SliderInteraction","hideTooltip","showTooltip","theme","updateTitleContent","textEntryTooltip","validateDecimalInput","separatorName","\".\"","\",\"","\" \"","thousandsSeparator","getThousandsSeparator","decimalSeparator","getDecimalSeparator","thousandsSeparatorName","decimalSeparatorName","escapedThousandsSeparator","escapedDecimalSeparator","regexPattern","decimalError","maxChars","updateMaxCharsTooltip","messageType","updatePatternMaskTooltip","inputValue","TextEntryInteraction","mimetype","uploadHelper","progressbar","previewer","modal","_Mathmin","_Mathround2","resetGui","callResetGui","changeListener","_initialInstructions","files","_handleSelectedFiles","getCustomMessage","FileReader","bind","blur","accept","_readyInstructions","validateFileType","expectedTypes","filetype","getMimeType","getMessageWrongType","userSelectedType","messageWrongType","expectedTypeLabels","filename","reader","base64Data","commaPosition","base64Raw","$previewArea","$originalImg","$largeDisplay","itemWidth","winWidth","fullHeight","imgNaturalWidth","isOversized","modalWidth","naturalWidth","$modalBody","modalOverlayClass","onloadstart","onprogress","_Mathceil","ceil","percentProgress","loaded","total","readAsDataURL","UploadInteraction","Item","MathJax","block","Hub","processSectionDelay","_Math","reference","$self","Queue","_checkContainerType","_getBodyDom","_setBodyDomClass","newClass","oldClass","$wrapper","_setDomClass","$bodyDom","wrapInner","setEncodedDataToDom","dataName","oldValue","_getEncodedDataString","setEncodedData","getEncodedData","removeEncodedData","hasEncodedData","matches","_prefix","coreContainerHelper","inline","feedbackStyle","modalFeedbackRenderer","fb","$modal","$itemBody","requiredHeight","outerHeight","startClosed","minHeight","_Object","obj","previewOptions","_picHooks","taoQtiInfoControlContext","picHook","picInstance","proto","constructor","qtiInfoControlContext","_getPic","pic","_taoInfoControl","picAssetManager","PortableInfoControl","PrintedVariable","_Mathfloor2","interactionHelper","convertChoices","outputType","c","findChoices","inputType","shuffleChoices","n","k","tmp","serialToIdentifier","themeLoader","themesHelper","moduleLoader","getDocumentBaseUrl","host","pathname","hb","compile","_renderableClasses","_dependencies","_renderableSubclasses","simpleAssociableChoice","simpleChoice","_defaults","_isValidRenderer","valid","classCorrect","subClass","Renderer","registerRendererClass","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","elementName","messageKey","getThemeLoader","qtiSubclass","decorators","renderDirect","qtiInteraction","getLoadedRenderers","renderersLocations","requiredClasses","themeData","getCurrentThemeData","preload","reqClass","deps","requiredSubClasses","addList","category","unload","setShuffledChoices","identificationType","getShuffledChoices","reshuffle","returnedType","getRenderers","getLocations","getAbsoluteUrl","relUrl","absUrl","runtimeLocations","setAreaBroker","areaBroker","_areaBroker","getAreaBroker","getItemCreator","Renderer$1","build","defaultOptions","NewRenderer","QtiRenderer","rendererProvider","use","RubricBlock","rubric","Stylesheet","summary","Table","Tooltip","tooltipDOM","renderedTooltip","placement","IdentifiedElement","Choice","_super","getInteraction","QtiChoice","QtiHotspot","QtiAssociableHotspot","Mixin","augment","targetClass","methodName","_parent","setElements","returnValue","setElement","removeElement","getElements","getElement","elementsData","flatten","Container$1","ContainerChoice","ContainerInline","QtiGap","QtiObject","getMediaType","video","audio","_alt","QtiGapImg","QtiContainerChoice","QtiGapText","QtiHotspotChoice","QtiInlineChoice","QtiSimpleAssociableChoice","QtiSimpleChoice","QtiTextVariableChoice","QtiTextEntry","Feedback","FeedbackBlock","FeedbackInline","ModalFeedback","ContainerFigcaption","getNamespace","relatedItem","getNamespaces","nsUriFragment","defaultNsName","defaultNsUri","setNamespace","NamespacedElement","ContainerFigure","imgElements","QtiInteraction","addChoice","responseId","_type","choiceShuffle","interactionData","renderedChoice","tplName","getNormalMaximum","Interaction","BlockInteraction","responseRules","MATCH_CORRECT","outcomeIdentifier","responseIf","expression","expressions","MAP_RESPONSE","MAP_RESPONSE_POINT","responseRulesHelper","_templateNames","NONE","isUsingTemplate","isValidTemplateName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","getTemplateNameFromResponseRules","outcomeRules","isEqual","VariableDeclaration","defaultValue","setDefaultValue","getDefaultValue","OutcomeDeclaration","gamp","responseHelper","_Mathmin2","pairExists","externalScoredValues","maxScore","setNormalMaximum","scoreOutcome","getOutcomeDeclaration","normalMaximum","processingType","interactions","getInteractions","interactionMaxScore","setMaxScore","hasInvalidInteraction","customOutcomes","maxScoreOutcome","getOutcomes","outcome","addOutcomeDeclaration","externalScored","removeOutcome","isAllResponseProcessingRulesNone","getMatchMaxOrderedChoices","choiceCollection","valueOf","choiceInteractionBased","mapDefault","mappingAttributes","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","minChoices","correctResponse","mapEntries","score","orderInteractionBased","associateInteractionBased","maxAssoc","minAssoc","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","possiblePairs","checkInfinitePair","countBy","forEachRight","mapEntry","choiceId","_usedChoices","used","gapMatchInteractionBased","calculatePossiblePairs","getGaps","skippableWrongResponse","usedGaps","group1","group2","gapId","selectPointInteractionBased","mappedValue","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","customInteractionBased","ContainerInteraction","removeProp","propNames","propName","getProperties","getMarkupNamespace","markupNs","defaultMarkupNsName","defaultMarkupNsUri","setMarkupNamespace","CustomElement","CustomInteraction","entryPoint","pciReadyCallbacks","onPciReady","triggerPciReady","offPci","triggerPci","InlineInteraction","QtiBlockInteraction","QtiObjectInteraction","QtiGraphicInteraction","backgroundImage","GraphicInteraction","addGapImg","removeGapImg","getGapImgs","graphicGapInteraction","SimpleAssociableChoice","matchSet","ObjectInteraction","ContainerItemBody","outcomes","modalFeedbacks","schemaLocations","apipAccessibility","addResponseDeclaration","addModalFeedback","feedback","elementCollection","getResponses","addNamespace","setNamespaces","setSchemaLocations","getSchemaLocations","setApipAccessibility","apip","getApipAccessibility","addStylesheet","removeStyleSheet","stylesheetExists","setResponseProcessing","rp","$dummy","$children","qtiClasses","getPrefix","html5Ns","prefixed","xmlNsHandler","stripNs","openRegEx","closeRegEx","restoreNs","xml","ignoreMarkup","xmlCopy","xmlRe","tagRe","xmlMatch","imsXsd","prefixAtt","tagMatch","itemScore","responseIdentifiers","outcomeExpressions","itemScoreHelper","loadPortableCustomElementProperties","rawProperties","parse","loadPortableCustomElementData","Loader","classesLocation","setClassesLocation","qtiClassesList","getRequiredClasses","loadRequiredClasses","requiredClass","loadeded","QtiClass","getLoadedClasses","loadItemData","Qti","loadContainer","buildOutcome","feedbacks","buildElement","responseRuleItemIndex","_ref","responseRule","splice","buildResponse","feedbackRules","fbData","feedbackOutcomeIdentifier","feedbackOutcome","buildSimpleFeedbackRule","feedbackResponseRuleIndex","_ref2","setOutcomeResponseRule","responseKey","customResponseProcessing","buildResponseProcessing","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","howMatch","correctResponses","mapping","areaMapping","feedbackRule","setCondition","condition","comparedValue","feedbackThen","feedbackElse","comparedOutcome","bodyObject","bodyData","eltData","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","loadTooltipData","buildInteractionChoices","loadPciData","setMathML","mathML","annotations","encoding","setAnnotation","_stripMathTags","nsName","_stripNamespace","_isEmptyMathML","mathStr","hasContent","$math","mathText","parseHTML","unescape","getAnnotation","removeAnnotation","getMathML","escape","latex","Math$1","readyStack","onReady","cb","triggerReady","SimpleFeedbackRule","_comparedValues","setFeedbackElse","_toString","ResponseProcessing","ContainerTable","newBody","Table$1","newContent","tooltipContent","ResponseDeclaration","getFeedbackRules","rule","isCardinality","cardinalities","comparison","EventMgr","tokens","getRawValues","pciVar","getFeedbackMessageSignature","extractDisplayInfo","$interactionContainer","messageGroupId","$displayContainer","uniqueId","interactionContainer","displayContainer","getInteractionsDisplayInfo","interactionsDisplayInfo","$itemContainer","interactionOrder","_interactionInfo","getFeedbacks","itemSession","renderingQueue","feedbackIds","_currentMessageGroupId","interactionInfo","Parser","_$xml","loadXML","parseXML","getDOM","_getElementSelector","getQtiClassFromXmlDom","$node","_qtiClassNames","$elt","attrName","specified","_qtiAttributesNames","buildMath","$annotation","buildTooltip","targetHtml","contentId","contentHtml","\"aria-describedby\"","parseTable","$parsedTable","parseContainer","parseFigure","$parsedFigure","$figcaption","_placeholder","$qtiElement","$content","_parsableElements","rubricblock","printedvariable","powerform","mappingindicator","parser","xmlStr","loader","parser$1","simpleParser","xinclude","fileUrl","undef","stimulusXml","$sampleXMLrootNode","$stimulus","mathNs","loadedClasses","xincludeLoader","picManager","_pic","_item","getPic","getItem","getDom","_dom","tool","button","broken","dom","disabled","eventName","rest","unshift","picManagerCollection","force","_list","_map","manager","managerFactory","picId","execute","action","executeAll","enablePic","disablePic","showPic","hidePic","enableAll","disableAll","showAll","hideAll","collectionFactory","picManager$1","userModules","dependency","sideLoadingProviderFactory","portableElements","lodash","ReviewRenderer","providerRegistry","qtiRenderer","reviewRenderer","getProviderName","rendererStrategies","getAvailableProviders","alias","defaultRenderer","rendererName","providerName","getProvider","author","candidate","proctor","scorer","testConstructor","tutor","QtiLoader","modalFeedbackHelper","qtiItemRuntimeProvider","itemData","done","rendererOptions","pick","view","_loader","getLanguageDirection","race","detail","themeName","renderingError","errorMsg","unrecoverable","renderFeedbacks","itemRunner","qtiRuntimeProvider","convertXMLToHTML","xmlNode","htmlNode","from","childNodes","childNode","nodeType","Node","ELEMENT_NODE","appendChild","TEXT_NODE","createTextNode","nodeValue","parseXmlToDom","xmlString","DOMParser","xmlDoc","parseFromString","loadXIncludeElement","xiIncludeElementHref","processContentItem","contentItem","tempDiv","xiIncludeElements","querySelectorAll","xiIncludePromises","flatMap","xiElement","loadByElementPages","pages","containsXIInclude","pageUpdatePromises","page","hasXIInclude","contentPromises","updatedContentItems"],"sources":["/github/workspace/tao/views/build/config-wrap-start-default.js","../qtiCommonRenderer/helpers/ckConfigurator.js","../qtiItem/helper/util.js","../qtiItem/helper/rendererConfig.js","../qtiItem/core/Element.js","../qtiCommonRenderer/helpers/container.js","../qtiCommonRenderer/helpers/Graphic.js","../qtiCommonRenderer/helpers/instructions/Instruction.js","../qtiCommonRenderer/helpers/instructions/instructionManager.js","../qtiCommonRenderer/helpers/itemStylesheetHandler.js","../qtiCommonRenderer/helpers/patternMask.js","../qtiCommonRenderer/helpers/PciPrettyPrint.js","../qtiCommonRenderer/helpers/PciResponse.js","../qtiCommonRenderer/helpers/PortableElement.js","../qtiCommonRenderer/helpers/sizeAdapter.js","../qtiCommonRenderer/helpers/uploadMime.js","../qtiCommonRenderer/renderers/choices/Gap.js","../qtiCommonRenderer/renderers/choices/GapImg.js","../qtiCommonRenderer/renderers/choices/GapText.js","../qtiCommonRenderer/renderers/choices/Hottext.js","../qtiCommonRenderer/renderers/choices/InlineChoice.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction.js","../qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction.js","../portableElementRegistry/factory/factory.js","../qtiCreator/helper/qtiElements.js","../portableElementRegistry/factory/ciRegistry.js","../portableElementRegistry/ciRegistry.js","../portableElementRegistry/factory/icRegistry.js","../portableElementRegistry/icRegistry.js","../portableElementRegistry/assetManager/portableAssetStrategy.js","../qtiCommonRenderer/renderers/config.js","../qtiCommonRenderer/renderers/Container.js","../qtiCommonRenderer/renderers/Figcaption.js","../qtiCommonRenderer/renderers/Figure.js","../qtiCommonRenderer/renderers/Img.js","../qtiCommonRenderer/renderers/Include.js","../qtiCommonRenderer/renderers/interactions/AssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/ChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/EndAttemptInteraction.js","../qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js","../qtiCommonRenderer/renderers/interactions/GapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction.js","../qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction.js","../qtiCommonRenderer/renderers/interactions/HotspotInteraction.js","../qtiCommonRenderer/renderers/interactions/HottextInteraction.js","../qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction.js","../qtiCommonRenderer/renderers/interactions/MatchInteraction.js","../qtiCommonRenderer/renderers/interactions/MediaInteraction.js","../qtiCommonRenderer/renderers/interactions/OrderInteraction.js","../../qtiCustomInteractionContext.js","../qtiCommonRenderer/renderers/interactions/pci/instanciator.js","../qtiCommonRenderer/renderers/interactions/pci/common.js","../qtiCommonRenderer/renderers/interactions/pci/ims.js","../qtiCommonRenderer/renderers/interactions/PortableCustomInteraction.js","../qtiCommonRenderer/renderers/interactions/Prompt.js","../qtiCommonRenderer/renderers/interactions/SelectPointInteraction.js","../qtiCommonRenderer/renderers/interactions/SliderInteraction.js","../qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js","../qtiCommonRenderer/renderers/interactions/UploadInteraction.js","../qtiCommonRenderer/renderers/Item.js","../qtiCommonRenderer/renderers/Math.js","../qtiItem/helper/container.js","../qtiCommonRenderer/renderers/ModalFeedback.js","../qtiCommonRenderer/renderers/Object.js","../../qtiInfoControlContext.js","../qtiCommonRenderer/renderers/PortableInfoControl.js","../qtiCommonRenderer/renderers/PrintedVariable.js","../qtiItem/helper/interactionHelper.js","../qtiRunner/core/Renderer.js","../qtiCommonRenderer/renderers/Renderer.js","../qtiCommonRenderer/renderers/rendererProvider.js","../qtiCommonRenderer/renderers/RubricBlock.js","../qtiCommonRenderer/renderers/Stylesheet.js","../qtiCommonRenderer/renderers/Table.js","../qtiCommonRenderer/renderers/Tooltip.js","../qtiItem/core/IdentifiedElement.js","../qtiItem/core/choices/Choice.js","../qtiItem/core/choices/Hotspot.js","../qtiItem/core/choices/AssociableHotspot.js","../qtiItem/mixin/Mixin.js","../qtiItem/core/Container.js","../qtiItem/mixin/Container.js","../qtiItem/core/choices/ContainerChoice.js","../qtiItem/mixin/ContainerInline.js","../qtiItem/core/choices/ContainerInlineChoice.js","../qtiItem/core/choices/Gap.js","../qtiItem/core/Object.js","../qtiItem/core/choices/GapImg.js","../qtiItem/core/choices/GapText.js","../qtiItem/core/choices/HotspotChoice.js","../qtiItem/core/choices/Hottext.js","../qtiItem/core/choices/InlineChoice.js","../qtiItem/core/choices/SimpleAssociableChoice.js","../qtiItem/core/choices/SimpleChoice.js","../qtiItem/core/choices/TextVariableChoice.js","../qtiItem/core/choices/TextEntry.js","../qtiItem/core/feedbacks/Feedback.js","../qtiItem/core/feedbacks/FeedbackBlock.js","../qtiItem/core/feedbacks/FeedbackInline.js","../qtiItem/core/feedbacks/ModalFeedback.js","../qtiItem/mixin/ContainerFigcaption.js","../qtiItem/mixin/NamespacedElement.js","../qtiItem/core/Figcaption.js","../qtiItem/mixin/ContainerFigure.js","../qtiItem/core/Figure.js","../qtiItem/core/Img.js","../qtiItem/core/Include.js","../qtiItem/core/interactions/Interaction.js","../qtiItem/core/interactions/Prompt.js","../qtiItem/core/interactions/BlockInteraction.js","../qtiItem/helper/responseRules.js","../qtiItem/helper/response.js","../qtiItem/core/variables/VariableDeclaration.js","../qtiItem/core/variables/OutcomeDeclaration.js","../qtiItem/helper/maxScore.js","../qtiItem/core/interactions/AssociateInteraction.js","../qtiItem/core/interactions/ChoiceInteraction.js","../qtiItem/core/interactions/ContainerInteraction.js","../qtiItem/mixin/CustomElement.js","../qtiItem/core/interactions/CustomInteraction.js","../qtiItem/core/interactions/InlineInteraction.js","../qtiItem/core/interactions/EndAttemptInteraction.js","../qtiItem/core/interactions/ExtendedTextInteraction.js","../qtiItem/core/interactions/GapMatchInteraction.js","../qtiItem/core/interactions/ObjectInteraction.js","../qtiItem/core/interactions/GraphicInteraction.js","../qtiItem/core/interactions/GraphicAssociateInteraction.js","../qtiItem/core/interactions/GraphicGapMatchInteraction.js","../qtiItem/core/interactions/GraphicOrderInteraction.js","../qtiItem/core/interactions/HotspotInteraction.js","../qtiItem/core/interactions/HottextInteraction.js","../qtiItem/core/interactions/InlineChoiceInteraction.js","../qtiItem/core/interactions/MatchInteraction.js","../qtiItem/core/interactions/MediaInteraction.js","../qtiItem/core/interactions/OrderInteraction.js","../qtiItem/core/interactions/SelectPointInteraction.js","../qtiItem/core/interactions/SliderInteraction.js","../qtiItem/core/interactions/TextEntryInteraction.js","../qtiItem/core/interactions/UploadInteraction.js","../qtiItem/mixin/ContainerItemBody.js","../qtiItem/core/Item.js","../qtiItem/core/qtiClasses.js","../qtiItem/helper/xmlNsHandler.js","../qtiItem/helper/itemScore.js","../qtiItem/core/Loader.js","../qtiItem/core/Math.js","../qtiItem/core/PortableInfoControl.js","../qtiItem/core/PrintedVariable.js","../qtiItem/core/response/SimpleFeedbackRule.js","../qtiItem/core/ResponseProcessing.js","../qtiItem/core/RubricBlock.js","../qtiItem/core/Stylesheet.js","../qtiItem/mixin/ContainerTable.js","../qtiItem/core/Table.js","../qtiItem/core/Tooltip.js","../qtiItem/core/variables/ResponseDeclaration.js","../qtiItem/helper/EventMgr.js","../qtiItem/helper/pci.js","../qtiItem/helper/modalFeedback.js","../qtiItem/helper/Parser.js","../qtiItem/helper/simpleParser.js","../qtiItem/helper/xincludeLoader.js","../runner/provider/manager/picManager.js","../runner/provider/manager/userModules.js","../portableElementRegistry/provider/sideLoadingProviderFactory.js","../reviewRenderer/renderers/config.js","../reviewRenderer/renderers/Renderer.js","../reviewRenderer/renderers/rendererProvider.js","../runner/rendererStrategies.js","../runner/provider/qti.js","../runner/qtiItemRunner.js","../qtiCreator/helper/xincludeLoader.js","module-create.js","/github/workspace/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","define('taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator'], function (ckConfigurator$1) { 'use strict';\n\n    ckConfigurator$1 = ckConfigurator$1 && Object.prototype.hasOwnProperty.call(ckConfigurator$1, 'default') ? ckConfigurator$1['default'] : ckConfigurator$1;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options) {\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator$1.getConfig(editor, toolbarType, options);\n    };\n\n    var ckConfigurator = {\n        getConfig: getConfig\n    };\n\n    return ckConfigurator;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/util',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var util = {\n        buildSerial: function buildSerial(prefix) {\n            var id = prefix || '';\n            var chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n            for (var i = 0; i < 22; i++) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId: function buildId(item, prefix) {\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds = item.getUsedIds();\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds && usedIds.includes(id)) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier: function buildIdentifier(item, prefix, useSuffix) {\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if (!item) {\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if (!prefix) {\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if (prefix) {\n                prefix = prefix\n                    .replace(/_[0-9]+$/gi, '_') //detect incremental id of type choice_12, response_3, etc.\n                    .replace(/[^a-zA-Z0-9_]/gi, '_')\n                    .replace(/(_)+/gi, '_');\n                if (useSuffix) {\n                    suffix = '_' + i;\n                }\n            }\n\n            do {\n                exists = false;\n                id = prefix + suffix;\n                if (usedIds[id]) {\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while (exists);\n\n            return id;\n        },\n\n        findInCollection: function findInCollection(element, collectionNames, searchedSerial) {\n            var found = null;\n\n            if (_.isString(collectionNames)) {\n                collectionNames = [collectionNames];\n            }\n\n            if (_.isArray(collectionNames)) {\n                _.forEach(collectionNames, function (collectionName) {\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.forEach(collectionName.split('.'), function (nameToken) {\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if (elt) {\n                        found = { parent: element, element: elt };\n                        return false; //break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.forEach(collection, function (elt) {\n                        if (_.isFunction(elt.find)) {\n                            found = elt.find(searchedSerial);\n                            if (found) {\n                                return false; //break the each loop\n                            }\n                        }\n                    });\n\n                    if (found) {\n                        return false; //break the each loop\n                    }\n                });\n            } else {\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace: function addMarkupNamespace(markup, ns) {\n            if (ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function ($0, $1, $2, $3, $4) {\n                    if ($2.indexOf(':') > 0) {\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<' + $1 + ns + ':' + $2 + $3 + $4 + '>';\n                });\n                return markup;\n            }\n            return markup;\n        },\n        removeMarkupNamespaces: function removeMarkupNamespace(markup) {\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces: function getMarkupUsedNamespaces(markup) {\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function (original, slash, ns, node) {\n                namespaces.push(ns);\n                return '<' + slash + node + '>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function (args) {\n        var options = {\n            data: {},\n            placeholder: null,\n            subclass: '',\n            renderer: null\n        };\n\n        _.forEach(args, function (arg) {\n            if (arg) {\n                if (arg.isRenderer) {\n                    options.renderer = arg;\n                } else if (arg instanceof $ && arg.length) {\n                    options.placeholder = arg;\n                } else if (_.isString(arg)) {\n                    options.subclass = arg;\n                } else if (_.isPlainObject(arg)) {\n                    options.data = arg;\n                } else {\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n\n        return options;\n    };\n\n    return rendererConfigHelper;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Element',['jquery', 'lodash', 'class', 'core/logger', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, _class, loggerFactory, util, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass: '',\n        serial: '',\n        rootElement: null,\n        init: function (serial, attributes) {\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if (typeof serial === 'object') {\n                attributes = serial;\n                serial = '';\n            }\n\n            if (!serial) {\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if (serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))) {\n                throw 'invalid QTI serial : (' + typeof serial + ') ' + serial;\n            }\n\n            if (!_instances[serial]) {\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            } else {\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if (typeof this.initContainer === 'function') {\n                this.initContainer(arguments[2] || '');\n            }\n            if (typeof this.initObject === 'function') {\n                this.initObject();\n            }\n        },\n        is: function (qtiClass) {\n            return qtiClass === this.qtiClass;\n        },\n        placeholder: function () {\n            return '{{' + this.serial + '}}';\n        },\n        getSerial: function () {\n            return this.serial;\n        },\n        getUsedIdentifiers: function () {\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for (var i in elts) {\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if (id) {\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds: function getUsedIds() {\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function (elt) {\n                var id = elt.attr('id');\n                if (id && !usedIds.includes(id)) {\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.attributes[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.attr(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.attributes[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', { element: this, key: name, value: value });\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.data(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.metaData[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData: function (name) {\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr: function (name) {\n            return this.removeAttributes(name);\n        },\n        setAttributes: function (attributes) {\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes: function () {\n            return _.clone(this.attributes);\n        },\n        removeAttributes: function (attrNames) {\n            if (typeof attrNames === 'string') {\n                attrNames = [attrNames];\n            }\n            for (var i in attrNames) {\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements: function () {\n            var elts = {};\n            function append(element) {\n                elts[element.getSerial()] = element; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if (typeof this.initContainer === 'function') {\n                append(this.getBody());\n            }\n            if (typeof this.initObject === 'function') {\n                append(this.getObject());\n            }\n            _.forEach(this.metaData, function (v) {\n                if (Element.isA(v, '_container')) {\n                    append(v);\n                } else if (_.isArray(v)) {\n                    _.forEach(v, function (v) {\n                        if (Element.isA(v, '_container')) {\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses: function () {\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.forEach(composingElts, function (elt) {\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find: function (serial) {\n            var found = null;\n            var object, body;\n\n            if (typeof this.initObject === 'function') {\n                object = this.getObject();\n                if (object.serial === serial) {\n                    found = { parent: this, element: object, location: 'object' };\n                }\n            }\n\n            if (!found && typeof this.initContainer === 'function') {\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = { parent: this, element: body, location: 'body' };\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent: function () {\n            var item = this.getRootElement();\n            if (item) {\n                var found = item.find(this.getSerial());\n                if (found) {\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem: function (item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement: function (item) {\n            var composingElts, i;\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for (i in composingElts) {\n                    composingElts[i].setRootElement(item);\n                }\n            }\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem: function () {\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement: function () {\n            var ret = null;\n            if (Element.isA(this.rootElement, 'assessmentItem')) {\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer: function (renderer) {\n            if (renderer && renderer.isRenderer) {\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for (var serial in elts) {\n                    elts[serial].setRenderer(renderer);\n                }\n            } else {\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer: function () {\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    tag: this.qtiClass,\n                    serial: this.serial,\n                    attributes: this.getAttributes()\n                };\n\n            if (!_renderer) {\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if (typeof this.initObject === 'function') {\n                defaultData.object = {\n                    attributes: this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if (args.placeholder) {\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender: function (data, altClassName, renderer) {\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if (typeof this.initContainer === 'function') {\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if (_renderer) {\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            } else {\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer: function ($scope, subclass) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                return renderer.getContainer(this, $scope, subclass);\n            } else {\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray: function () {\n            var arr = {\n                serial: this.serial,\n                type: this.qtiClass,\n                attributes: this.getAttributes()\n            };\n\n            if (typeof this.initContainer === 'function') {\n                arr.body = this.getBody().toArray();\n            }\n            if (typeof this.initObject === 'function') {\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty: function () {\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass: function (className) {\n            var clazz = this.attr('class') || '';\n            if (!_containClass(clazz, className)) {\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass: function (className) {\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass: function (className) {\n            var clazz = this.attr('class') || '';\n            if (clazz) {\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if (clazz) {\n                    this.attr('class', clazz);\n                } else {\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass: function (className, state) {\n            if (typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if (this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset: function () {\n            return Element.issetElement(this.serial);\n        },\n        unset: function () {\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function (allClassStr, className) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function (qtiElement, qtiClass) {\n        return qtiElement instanceof Element && qtiElement.is(qtiClass);\n    };\n\n    Element.getElementBySerial = function (serial) {\n        return _instances[serial];\n    };\n\n    Element.issetElement = function (serial) {\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function (serial) {\n        var element = Element.getElementBySerial(serial);\n\n        if (element) {\n            var composingElements = element.getComposingElements();\n            _.forEach(composingElements, function (elt) {\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/container',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element'], function (_, $, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     */\n\n    //containers are cached, so do not forget to remove them.\n    let _containers = {};\n    let _$containerContext = $();\n\n    /**\n     * Build the selector for your element (from the element serial)\n     * @private\n     * @param {QtiElement} element\n     * @returns {String} the selector\n     */\n    const _getSelector = function (element) {\n        const serial = element.getSerial();\n        let selector = `[data-serial=${serial}]`;\n\n        if (Element.isA(element, 'choice')) {\n            selector = `.qti-choice${selector}`;\n        } else if (Element.isA(element, 'interaction')) {\n            selector = `.qti-interaction${selector}`;\n        }\n\n        return selector;\n    };\n\n    /**\n     * Helps you to retrieve the DOM element (as a jquery element)\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\n     */\n    const containerHelper = {\n        /**\n         * Set a global scope to look for element container\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         */\n        setContext($scope) {\n            _$containerContext = $scope;\n        },\n\n        /**\n         * Returns current scope\n         * @returns {jQueryElement}\n         */\n        getContext() {\n            return _$containerContext;\n        },\n\n        /**\n         * Get the container of the given element\n         * @param {QtiElement} element - the QTI Element to find the container for\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         * @returns {jQueryElement} the container\n         */\n        get(element, $scope) {\n            const serial = element.getSerial();\n\n            if ($scope instanceof $ && $scope.length) {\n                //find in the given context\n                return $scope.find(_getSelector(element));\n            } else if (_$containerContext instanceof $ && _$containerContext.length) {\n                //find in the globally set context\n                return _$containerContext.find(_getSelector(element));\n            } else if (!_containers[serial] || !_containers[serial].length) {\n                //find in the global context\n                _containers[serial] = $(_getSelector(element));\n            }\n\n            return _containers[serial];\n        },\n\n        /**\n         * getContainer use a cache to store elements. This methods helps you to purge it.\n         * @param {Element} element - find the container of this element\n         */\n        reset(element) {\n            if (element instanceof Element && _containers[element.getSerial()]) {\n                _containers = _.omit(_containers, element.getSerial());\n            }\n        },\n\n        /**\n         * Clear the containers cache\n         */\n        clear() {\n            _containers = {};\n            _$containerContext = $();\n        },\n\n        /**\n         * Trigger an event on the element's container\n         * @param {String} eventType - the name of the event\n         * @param {QtiElement} element - find the container of this element\n         * @param {Array} [data] - data to give to the event\n         */\n        trigger(eventType, element, data) {\n            if (eventType) {\n                if (data && !_.isArray(data)) {\n                    data = [data];\n                }\n                this.get(element).trigger(eventType, data);\n            }\n        },\n\n        /**\n         * Alias to trigger a responseChange Event from an interaction\n         * @param {QtiElement} interaction - the interaction that had a response changed\n         * @param {Object} [extraData] - additionnal data to give to the event\n         */\n        triggerResponseChangeEvent(interaction, extraData) {\n            this.trigger('responseChange', interaction, [\n                {\n                    interaction: interaction,\n                    response: interaction.getResponse()\n                },\n                extraData\n            ]);\n        },\n\n        /**\n         * Make all links to opens in another tab/window\n         * @param {jQueryElement} $container\n         */\n        targetBlank($container) {\n            $container.on('click', 'a', function (e) {\n                e.preventDefault();\n                const href = $(this).attr('href');\n                if (href && href.match(/^http/i)) {\n                    window.open(href, '_blank');\n                }\n            });\n        }\n    };\n\n    return containerHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/Graphic',['jquery', 'lodash', 'raphael', 'scale.raphael'], function ($, _, raphael, scaleRaphael) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    raphael = raphael && Object.prototype.hasOwnProperty.call(raphael, 'default') ? raphael['default'] : raphael;\n    scaleRaphael = scaleRaphael && Object.prototype.hasOwnProperty.call(scaleRaphael, 'default') ? scaleRaphael['default'] : scaleRaphael;\n\n    var basic = {\n    \tstroke: \"#8D949E\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-dasharray\": \"\",\n    \t\"stroke-linejoin\": \"round\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5,\n    \tcursor: \"pointer\"\n    };\n    var hover = {\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.3\n    };\n    var selectable = {\n    \t\"stroke-dasharray\": \"-\",\n    \tstroke: \"#3E7DA7\",\n    \tfill: \"#cccccc\",\n    \t\"fill-opacity\": 0.5\n    };\n    var active = {\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \t\"fill-opacity\": 0.5\n    };\n    var error = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \t\"fill-opacity\": 0.5,\n    \tfill: \"#661728\"\n    };\n    var success = {\n    \tstroke: \"#C74155\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 0.5\n    };\n    var layer = {\n    \tfill: \"#ffffff\",\n    \topacity: 0,\n    \tcursor: \"pointer\"\n    };\n    var creator = {\n    \t\"fill-opacity\": 0.5,\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-dasharray\": \"\",\n    \tfill: \"#0E5D91\",\n    \tcursor: \"pointer\"\n    };\n    var target = {\n    \tpath: \"m 18,8.4143672 -1.882582,0 C 15.801891,4.9747852 13.071059,2.2344961 9.63508,1.9026738 L 9.63508,0 8.2305176,0 l 0,1.9026387 C 4.7947148,2.2343027 2.0637246,4.9746621 1.7481973,8.4143672 l -1.7481973,0 0,1.4045625 1.754877,0 c 0.3460429,3.4066753 3.0632871,6.1119843 6.4756406,6.4413813 l 0,1.739689 1.4045624,0 0,-1.739725 c 3.412547,-0.329537 6.129633,-3.034793 6.475641,-6.4413453 l 1.889279,0 z m -8.36492,6.5188648 0,-4.064673 -1.4045624,0 0,4.063882 C 5.5511016,14.612555 3.4232695,12.494619 3.0864551,9.8189297 l 4.0449512,0 0,-1.4045625 -4.0546368,0 C 3.3788672,5.6984941 5.5228887,3.5393379 8.2305176,3.2161113 l 0,3.9153125 1.4045624,0 0,-3.9160859 c 2.711162,0.3203965 4.858576,2.4808887 5.160955,5.1990293 l -3.927441,0 0,1.4045625 3.917773,0 C 14.449289,12.496957 12.318363,14.616158 9.63508,14.933232 z\",\n    \tfill: \"#0E914B\",\n    \twidth: 1,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var assoc = {\n    \t\"stroke-width\": 2,\n    \t\"stroke-linecap\": \"round\",\n    \tcursor: \"pointer\"\n    };\n    var close = {\n    \tpath: \"m 8.9997236,18.000001 c -4.9703918,0 -8.99972284217367,-4.02901 -8.99972284217367,-9 C 7.5782633e-7,4.029011 4.0293108,9.8531742e-7 8.9997236,9.8531742e-7 13.970691,9.8531742e-7 18.000001,4.029011 18.000001,9.000001 c 0,4.97099 -4.02931,9 -9.0002774,9 z m 0.0045,-16.37151 c -4.06191,0 -7.35492,3.29635 -7.35492,7.36251 0,4.06562 3.292989,7.36255 7.35492,7.36255 4.0630384,0 7.3554334,-3.29693 7.3554334,-7.36255 0,-4.06614 -3.292969,-7.36251 -7.3554334,-7.36251 v 0 z m 3.1314894,9.31167 -1.953823,-1.94014 1.953843,-1.94018 c 0.08964,-0.089 0.134622,-0.19099 0.135073,-0.30584 4.31e-4,-0.11488 -0.04383,-0.21712 -0.132838,-0.30681 l -0.54267,-0.54685 c -0.08898,-0.0897 -0.190903,-0.13473 -0.305719,-0.13514 -0.114837,-4.4e-4 -0.217064,0.0439 -0.306703,0.1329 l -1.9623724,1.94865 -1.962395,-1.94865 c -0.08964,-0.089 -0.191845,-0.13336 -0.306702,-0.1329 -0.114837,4.3e-4 -0.216736,0.0455 -0.305719,0.13514 l -0.54265,0.54685 c -0.08902,0.0897 -0.133269,0.19193 -0.132838,0.30681 4.3e-4,0.11485 0.04543,0.21681 0.135073,0.30584 l 1.953823,1.94018 -1.953782,1.94014 c -0.0896,0.089 -0.134684,0.19094 -0.135114,0.3058 -4.31e-4,0.11486 0.04386,0.21716 0.132838,0.30681 l 0.542671,0.54687 c 0.08896,0.0897 0.190923,0.13467 0.305718,0.13516 0.114857,3.9e-4 0.217105,-0.0439 0.306724,-0.13288 l 1.962332,-1.94863 1.9623324,1.94863 c 0.08962,0.089 0.191886,0.13323 0.306744,0.13288 0.114836,-4.5e-4 0.216736,-0.0455 0.305698,-0.13516 l 0.542691,-0.54687 c 0.089,-0.0897 0.133227,-0.19193 0.132838,-0.30681 -3.9e-4,-0.1149 -0.0455,-0.21683 -0.135073,-0.3058 z\",\n    \tfill: \"#0E5D91\",\n    \twidth: 1,\n    \topacity: 0,\n    \t\"stroke-width\": 0,\n    \tcursor: \"pointer\"\n    };\n    var gstyle = {\n    \tbasic: basic,\n    \thover: hover,\n    \tselectable: selectable,\n    \tactive: active,\n    \terror: error,\n    \tsuccess: success,\n    \tlayer: layer,\n    \tcreator: creator,\n    \t\"imageset-rect-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#666666\",\n    \t\"stroke-width\": 1,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-rect-no-stroke\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#ffffff\",\n    \t\"stroke-width\": 2,\n    \t\"stroke-linejoin\": \"round\",\n    \tcursor: \"pointer\"\n    },\n    \t\"imageset-img\": {\n    \tcursor: \"pointer\"\n    },\n    \t\"order-text\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.7,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"bold\",\n    \t\"font-size\": 22,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text-default\": {\n    \tstroke: \"#444444\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"score-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 20,\n    \tcursor: \"pointer\"\n    },\n    \t\"small-text\": {\n    \tstroke: \"#000000\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 16,\n    \tcursor: \"pointer\"\n    },\n    \t\"layer-pos-text\": {\n    \tstroke: \"#333\",\n    \t\"stroke-width\": 0.5,\n    \t\"font-family\": \"sans-serif\",\n    \t\"font-weight\": \"normal\",\n    \t\"font-size\": 14\n    },\n    \ttarget: target,\n    \t\"target-hover\": {\n    \tfill: \"#3E7DA7\",\n    \t\"fill-opacity\": 1\n    },\n    \t\"target-success\": {\n    \tfill: \"#0E914B\",\n    \t\"fill-opacity\": 1\n    },\n    \tassoc: assoc,\n    \t\"assoc-layer\": {\n    \t\"stroke-width\": 12,\n    \tcursor: \"pointer\",\n    \t\"stroke-opacity\": 0\n    },\n    \t\"assoc-bullet\": {\n    \tfill: \"#000000\"\n    },\n    \tclose: close,\n    \t\"close-bg\": {\n    \tfill: \"#ffffff\",\n    \tstroke: \"none\",\n    \tcursor: \"pointer\",\n    \topacity: 0\n    },\n    \t\"touch-circle\": {\n    \tfill: \"none\",\n    \tstroke: \"#3E7DA7\",\n    \t\"stroke-width\": 2\n    }\n    };\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2023 (original work) Open Assessment Technologies SA ;\n     */\n\n    //maps the QTI shapes to Raphael shapes\n    const shapeMap = {\n        default: 'rect',\n        poly: 'path'\n    };\n\n    //length constraints to validate coords\n    const coordsValidator = {\n        rect: 4,\n        ellipse: 4,\n        circle: 3,\n        poly: 6,\n        default: 0\n    };\n\n    //transform the coords from the QTI system to Raphael system\n    const qti2raphCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper:  from left-x,top-y,right-x-bottom-y to x,y,w,h\n         * @param {Array} coords - QTI coords\n         * @returns {Array} raphael coords\n         */\n        rect: function (coords) {\n            return [coords[0], coords[1], coords[2] - coords[0], coords[3] - coords[1]];\n        },\n\n        /**\n         * Creates the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        default: function (paper) {\n            return [0, 0, paper.width, paper.height];\n        },\n\n        /**\n         * polygone coordinate mapper:  from x1,y1,...,xn,yn to SVG path format\n         * @param {Array} coords - QTI coords\n         * @returns {Array} path desc\n         */\n        poly: function (coords) {\n            let a;\n            const size = coords.length;\n\n            // autoClose if needed\n            if (coords[0] !== coords[size - 2] && coords[1] !== coords[size - 1]) {\n                coords.push(coords[0]);\n                coords.push(coords[1]);\n            }\n\n            // move to first point\n            coords[0] = 'M' + coords[0];\n\n            for (a = 1; a < size; a++) {\n                if (a % 2 === 0) {\n                    coords[a] = 'L' + coords[a];\n                }\n            }\n\n            return [coords.join(' ')];\n        }\n    };\n\n    //transform the coords from a raphael shape to the QTI system\n    const raph2qtiCoordsMapper = {\n        /**\n         * Rectangle coordinate mapper: from x,y,w,h to left-x,top-y,right-x-bottom-y\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        rect: function (attr) {\n            return [attr.x, attr.y, attr.x + attr.width, attr.y + attr.height];\n        },\n\n        /**\n         * Circle coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        circle: function (attr) {\n            return [attr.cx, attr.cy, attr.r];\n        },\n\n        /**\n         * Ellispe coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        ellipse: function (attr) {\n            return [attr.cx, attr.cy, attr.rx, attr.ry];\n        },\n\n        /**\n         * Get the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        default: function (attr) {\n            return this.rect(attr);\n        },\n\n        /**\n         * polygone coordinate mapper:  from SVG path (available as segments) to x1,y1,...,xn,yn format\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        path: function (attr) {\n            const poly = [];\n            let i;\n\n            if (_.isArray(attr.path)) {\n                for (i = 1; i < attr.path.length; i++) {\n                    if (attr.path[i].length === 3) {\n                        poly.push(attr.path[i][1]);\n                        poly.push(attr.path[i][2]);\n                    }\n                }\n            }\n\n            return poly;\n        }\n    };\n\n    /**\n     * Graphic interaction helper\n     * @exports qtiCommonRenderer/helpers/Graphic\n     */\n    const GraphicHelper = {\n        /**\n         * Raw access to the styles\n         * @type {Object}\n         */\n        _style: gstyle,\n\n        /**\n         * Apply the style defined by name to the element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         */\n        setStyle: function (element, name) {\n            if (element && gstyle[name]) {\n                element.attr(gstyle[name]);\n            }\n        },\n\n        /**\n         * Create a Raphael paper with a bg image, that is width responsive\n         * @param {String} id - the id of the DOM element that will contain the paper\n         * @param {String} serial - the interaction unique indentifier\n         * @param {Object} options - the paper parameters\n         * @param {String} options.img - the url of the background image\n         * @param {jQueryElement} [options.container] - the parent of the paper element (got the closest parent by default)\n         * @param {Boolean} [options.responsive] - scale to container\n         * @param {Number} [options.width] - the paper width\n         * @param {Number} [options.height] - the paper height\n         * @param {String} [options.imgId] - an identifier for the image element\n         * @param {Function} [options.done] - executed once the image is loaded\n         * @returns {Raphael.Paper} the paper\n         */\n        responsivePaper: function (id, serial, options) {\n            const $container = options.container || $('#' + id).parent();\n            const $editor = $('.image-editor', $container);\n            const $body = $container.closest('.qti-itemBody');\n            const resizer = _.throttle(resizePaper, 10);\n\n            const imgWidth = options.width || $container.innerWidth();\n            const imgHeight = options.height || $container.innerHeight();\n\n            const paper = scaleRaphael(id, imgWidth, imgHeight);\n            const image = paper.image(options.img, 0, 0, imgWidth, imgHeight);\n            image.id = options.imgId || image.id;\n            paper.setViewBox(0, 0, imgWidth, imgHeight);\n\n            resizer();\n\n            //retry to resize once the SVG is loaded\n            $(image.node).attr('externalResourcesRequired', 'true').on('load', resizer);\n\n            if (raphael.type === 'SVG') {\n                // TODO: move listeners somewhere they can be easily turned off\n                $(window).on('resize.qti-widget.' + serial, resizer);\n                // TODO: favor window resize event and deprecate $container resive event (or don't allow $container to be destroyed and rebuilt\n                $container.on('resize.qti-widget.' + serial, resizer);\n                $(document).on('customcssloaded.styleeditor', resizer);\n            } else {\n                $container.find('.main-image-box').width(imgWidth);\n                if (typeof options.resize === 'function') {\n                    options.resize(imgWidth, 1);\n                }\n            }\n\n            /**\n             * scale the raphael paper\n             * @private\n             */\n            function resizePaper(e, givenWidth) {\n                let containerWidth;\n\n                if (e) {\n                    e.stopPropagation();\n                }\n\n                const diff = $editor.outerWidth() - $editor.width() + ($container.outerWidth() - $container.width()) + 1;\n                const maxWidth = $body.width();\n                if (options.responsive) {\n                    containerWidth = $container.innerWidth();\n                } else {\n                    containerWidth = $editor.innerWidth();\n                }\n\n                if ((options.responsive && containerWidth > 0) || givenWidth > 0 || containerWidth > maxWidth) {\n                    if (options.responsive) {\n                        if (givenWidth < containerWidth && givenWidth < maxWidth) {\n                            containerWidth = givenWidth - diff;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth - diff;\n                        } else {\n                            containerWidth -= diff;\n                        }\n                    } else {\n                        if (givenWidth > 0 && givenWidth < maxWidth) {\n                            containerWidth = givenWidth;\n                        } else if (containerWidth > maxWidth) {\n                            containerWidth = maxWidth;\n                        }\n                    }\n\n                    const factor = containerWidth / imgWidth;\n                    const containerHeight = imgHeight * factor;\n\n                    if (containerWidth > 0) {\n                        paper.changeSize(containerWidth, containerHeight, false, false);\n                    }\n\n                    if (typeof options.resize === 'function') {\n                        options.resize(containerWidth, factor);\n                    }\n                }\n                $container.trigger('resized.qti-widget');\n            }\n\n            return paper;\n        },\n\n        /**\n         * Create a new Element into a raphael paper\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @param {Object} [options] - additional creation options\n         * @param {String} [options.id] - to set the new element id\n         * @param {String} [options.title] - to set the new element title\n         * @param {String} [options.style = basic] - to default style\n         * @param {Boolean} [options.hover = true] - to disable the default hover state\n         * @param {Boolean} [options.touchEffect = true] - a circle appears on touch\n         * @param {Boolean} [options.qtiCoords = true] - if the coords are in QTI format\n         * @returns {Raphael.Element} the created element\n         */\n        createElement: function (paper, type, coords, options) {\n            const self = this;\n            let element;\n            const shaper = shapeMap[type] ? paper[shapeMap[type]] : paper[type];\n            const shapeCoords = options.qtiCoords !== false ? self.raphaelCoords(paper, type, coords) : coords;\n\n            if (typeof shaper === 'function') {\n                element = shaper.apply(paper, shapeCoords);\n                if (element) {\n                    if (options.id) {\n                        element.id = options.id;\n                    }\n\n                    if (options.title) {\n                        element.attr('title', options.title);\n                    }\n\n                    element.attr(gstyle[options.style || 'basic']).toFront();\n\n                    //prevent issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n\n                    if (options.hover !== false) {\n                        element.hover(\n                            function () {\n                                if (!element.flashing) {\n                                    self.updateElementState(this, 'hover');\n                                }\n                            },\n                            function () {\n                                if (!element.flashing) {\n                                    self.updateElementState(\n                                        this,\n                                        this.active ? 'active' : this.selectable ? 'selectable' : 'basic'\n                                    );\n                                }\n                            }\n                        );\n                    }\n\n                    if (options.touchEffect !== false) {\n                        element.touchstart(function () {\n                            self.createTouchCircle(paper, element.getBBox());\n                        });\n                    }\n                }\n            } else {\n                throw new Error('Unable to find method ' + type + ' on paper');\n            }\n\n            return element;\n        },\n\n        /**\n         * Create target point\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} [options]\n         * @param {Object} [options.id] - and id to identify the target\n         * @param {Object} [options.point] - the point to add to the paper\n         * @param {Number} [options.point.x = 0] - point's x coord\n         * @param {Number} [options.point.y = 0] - point's y coord\n         * @param {Boolean} [options.hover] = true - the target has an hover effect\n         * @param {Function} [options.create] - call once created\n         * @param {Function} [options.remove] - call once removed\n         */\n        createTarget: function createTarget(paper, options) {\n            options = options || {};\n\n            const point = options.point || { x: 0, y: 0 };\n            const factor = paper.w !== 0 ? paper.width / paper.w : 1;\n            const hover = typeof options.hover === 'undefined' ? true : !!options.hover;\n\n            const baseSize = 18; // this is the base size of the path element to be placed on svg (i.e. the path element crosshair is created to have a size of 18)\n            const half = baseSize / 2;\n            const x = point.x - half;\n            const y = point.y - half;\n            const targetSize = factor !== 0 ? 2 / factor : 2;\n\n            //create the target from a path\n            const target = paper\n                .path(gstyle.target.path)\n                .transform('t' + x + ',' + y + 's' + targetSize)\n                .attr(gstyle.target)\n                .attr('title', _('Click again to remove'));\n\n            //generate an id if not set in options\n            if (options.id) {\n                target.id = options.id;\n            } else {\n                let count = 0;\n                paper.forEach(function (element) {\n                    if (element.data('target')) {\n                        count++;\n                    }\n                });\n                target.id = 'target-' + count;\n            }\n\n            const tBBox = target.getBBox();\n\n            //create an invisible rect over the target to ensure path selection\n            const layer = paper\n                .rect(tBBox.x, tBBox.y, tBBox.width, tBBox.height)\n                .attr(gstyle.layer)\n                .click(function () {\n                    const id = target.id;\n                    const p = this.data('point');\n\n                    if (_.isFunction(options.select)) {\n                        options.select(target, p, this);\n                    }\n\n                    if (_.isFunction(options.remove)) {\n                        this.remove();\n                        target.remove();\n                        options.remove(id, p);\n                    }\n                });\n\n            if (hover) {\n                layer.hover(\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-hover');\n                        }\n                    },\n                    () => {\n                        if (!target.flashing) {\n                            this.setStyle(target, 'target-success');\n                        }\n                    }\n                );\n            }\n\n            layer.id = 'layer-' + target.id;\n            layer.data('point', point);\n            target.data('target', point);\n\n            if (_.isFunction(options.create)) {\n                options.create(target);\n            }\n\n            return target;\n        },\n\n        /**\n         * Get the Raphael coordinate from QTI coordinate\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @returns {Array} the arguments array of coordinate to give to the approriate raphael shapre creator\n         */\n        raphaelCoords: function raphaelCoords(paper, type, coords) {\n            let shapeCoords;\n\n            if (_.isString(coords)) {\n                coords = _.map(coords.split(','), function (coord) {\n                    return parseInt(coord, 10);\n                });\n            }\n\n            if (!_.isArray(coords) || coords.length < coordsValidator[type]) {\n                throw new Error('Invalid coords ' + JSON.stringify(coords) + '  for type ' + type);\n            }\n\n            switch (type) {\n                case 'rect':\n                    shapeCoords = qti2raphCoordsMapper.rect(coords);\n                    break;\n                case 'default':\n                    shapeCoords = qti2raphCoordsMapper['default'].call(null, paper);\n                    break;\n                case 'poly':\n                    shapeCoords = qti2raphCoordsMapper.poly(coords);\n                    break;\n                default:\n                    shapeCoords = coords;\n                    break;\n            }\n\n            return shapeCoords;\n        },\n\n        /**\n         * Get the QTI coordinates from a Raphael Element\n         * @param {Raphael.Element} element - the shape to get the coords from\n         * @param {Raphael.Element} paper - the interaction paper\n         * @param {number} width - width of background image\n         * @returns {String} the QTI coords\n         */\n        qtiCoords: function qtiCoords(element, paper, width) {\n            const mapper = raph2qtiCoordsMapper[element.type];\n            let result = '';\n            const factor = paper && width ? width / paper.w : 1;\n\n            if (_.isFunction(mapper)) {\n                result = _.map(mapper.call(raph2qtiCoordsMapper, element.attr()), function (coord) {\n                    return Math.round(coord * factor);\n                }).join(',');\n            }\n\n            return result;\n        },\n\n        /**\n         * Create a circle that animate and disapear from a shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} element - used to get the bbox from\n         */\n        createTouchCircle: function (paper, bbox) {\n            const radius = bbox.width > bbox.height ? bbox.width : bbox.height;\n            const tCircle = paper.circle(bbox.x + bbox.width / 2, bbox.y + bbox.height / 2, radius);\n\n            tCircle.attr(gstyle['touch-circle']);\n\n            _.defer(function () {\n                tCircle.animate({ r: radius + 5, opacity: 0.7 }, 300, function () {\n                    tCircle.remove();\n                });\n            });\n        },\n\n        /**\n         * Create a text, that scales.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - the text options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {String} [options.disableEvents] - ignore events for the node\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @returns {Raphael.Element} the created text\n         */\n        createText: function (paper, options) {\n            const top = options.top || 0;\n            const left = options.left || 0;\n            const content = options.content || '';\n            const style = options.style || 'small-text';\n            const title = options.title || '';\n            const disableEvents = options.disableEvents || false;\n            let factor = 1;\n\n            if (paper.width && paper.w) {\n                factor = paper.width / paper.w;\n            }\n\n            const text = paper.text(left, top, content).toFront();\n            if (options.id) {\n                text.id = options.id;\n            }\n\n            if (options.hide) {\n                text.hide();\n            }\n\n            text.attr(gstyle[style]);\n\n            if (disableEvents) {\n                text.node.setAttribute('pointer-events', 'none');\n            }\n\n            if (typeof factor !== 'undefined' && factor !== 1) {\n                const fontSize = parseInt(text.attr('font-size'), 10);\n                const scaledFontSize = Math.floor(fontSize / factor) + 1;\n\n                text.attr('font-size', scaledFontSize);\n            }\n\n            if (title) {\n                this.updateTitle(text, title);\n            }\n\n            return text;\n        },\n\n        /**\n         * Create a text in the middle of the related shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} shape - the shape to add the text to\n         * @param {Object} options - the text options\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @param {Boolean} [options.shapeClick = false] - clicking the text delegates to the shape\n         * @returns {Raphael.Element} the created text\n         */\n        createShapeText: function (paper, shape, options) {\n            const bbox = shape.getBBox();\n\n            const text = this.createText(\n                paper,\n                _.merge(\n                    {\n                        left: bbox.x + bbox.width / 2,\n                        top: bbox.y + bbox.height / 2\n                    },\n                    options\n                )\n            );\n\n            if (options.shapeClick) {\n                text.click(() => {\n                    this.trigger(shape, 'click');\n                });\n            }\n\n            return text;\n        },\n\n        /**\n         * Create an image with a padding and a border, using a set.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - image options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {Number} options.width - image width\n         * @param {Number} options.height - image height\n         * @param {Number} options.url - image ulr\n         * @param {Number} [options.padding = 6] - a multiple of 2 is welcomed\n         * @param {Boolean} [options.border = false] - add a border around the image\n         * @param {Boolean} [options.shadow = false] - add a shadow back the image\n         * @returns {Raphael.Element} the created set, augmented of a move(x,y) method\n         */\n        createBorderedImage: function (paper, options) {\n            const padding = options.padding >= 0 ? options.padding : 6;\n            const halfPad = padding / 2;\n\n            const rx = options.left,\n                ry = options.top,\n                rw = options.width + padding,\n                rh = options.height + padding;\n\n            const ix = options.left + halfPad,\n                iy = options.top + halfPad,\n                iw = options.width,\n                ih = options.height;\n\n            const set = paper.set();\n\n            //create a rectangle with a padding and a border.\n            const rect = paper\n                .rect(rx, ry, rw, rh)\n                .attr(options.border ? gstyle['imageset-rect-stroke'] : gstyle['imageset-rect-no-stroke']);\n\n            //and an image centered into the rectangle.\n            const image = paper.image(options.url, ix, iy, iw, ih).attr(gstyle['imageset-img']);\n\n            if (options.shadow) {\n                set.push(\n                    rect.glow({\n                        width: 2,\n                        offsetx: 1,\n                        offsety: 1\n                    })\n                );\n            }\n\n            set.push(rect, image);\n\n            /**\n             * Add a move method to set that keep the given coords during an animation\n             * @private\n             * @param {Number} x - destination\n             * @param {Number} y - destination\n             * @param {Number} [duration = 400] - the animation duration\n             * @returns {Raphael.Element} the set for chaining\n             */\n            set.move = function move(x, y, duration) {\n                const animation = raphael.animation({ x: x, y: y }, duration || 400);\n                const elt = rect.animate(animation);\n                image.animateWith(elt, animation, { x: x + halfPad, y: y + halfPad }, duration || 400);\n                return set;\n            };\n\n            return set;\n        },\n\n        /**\n         * Update the visual state of an Element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         * @param {String} [title] - a title linked to this step\n         */\n        updateElementState: function (element, state, title) {\n            if (element && element.animate) {\n                element.animate(gstyle[state], 200, 'linear', function () {\n                    element.attr(gstyle[state]); //for attr that don't animate\n\n                    //preven issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n                });\n\n                if (title) {\n                    this.updateTitle(element, title);\n                }\n            }\n        },\n\n        /**\n         * Update the title of an element (the attr method of Raphael adds only new node instead of updating exisitings).\n         * @param {Raphael.Element} element - the element to update the title\n         * @param {String} [title] - the new title\n         */\n        updateTitle: function (element, title) {\n            if (element && element.node) {\n                //removes all remaining titles nodes\n                _.forEach(element.node.children, function (child) {\n                    if (child.nodeName.toLowerCase() === 'title') {\n                        element.node.removeChild(child);\n                    }\n                });\n\n                //then set the new title\n                element.attr('title', title);\n            }\n        },\n\n        /**\n         * Highlight an element with the error style\n         * @param {Raphael.Element} element - the element to hightlight\n         * @param {String} [restorState = 'basic'] - the state to restore the elt into after flash\n         */\n        highlightError: function (element, restoredState) {\n            if (element) {\n                element.flashing = true;\n                this.updateElementState(element, 'error');\n                _.delay(() => {\n                    this.updateElementState(element, restoredState || 'basic');\n                    element.flashing = false;\n                }, 800);\n            }\n        },\n\n        /**\n         * Trigger an event already bound to a raphael element\n         * @param {Raphael.Element} element\n         * @param {String} event - the event name\n         *\n         */\n        trigger: function (element, event) {\n            const evt = element.events.filter(el => el.name === event);\n            if (evt.length && evt[0] && typeof evt[0].f === 'function') {\n                evt[0].f.apply(element, Array.prototype.slice.call(arguments, 2));\n            }\n        },\n\n        /**\n         * Get an x/y point from a MouseEvent\n         * @param {MouseEvent} event - the source event\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {jQueryElement} $container - the paper container\n         * @param {Boolean} isResponsive - if the paper is scaling\n         * @returns {Object} x,y point\n         */\n        getPoint: function getPoint(event, paper, $container) {\n            const point = this.clickPoint($container, event);\n            const rect = $container.get(0).getBoundingClientRect();\n            const factor = paper.w / rect.width;\n\n            point.x = Math.round(point.x * factor);\n            point.y = Math.round(point.y * factor);\n\n            return point;\n        },\n\n        /**\n         * Get paper position relative to the container\n         * @param {jQueryElement} $container - the paper container\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @returns {Object} position with top and left\n         */\n        position: function ($container, paper) {\n            const pw = parseInt(paper.w || paper.width, 10);\n            const cw = parseInt($container.width(), 10);\n            const ph = parseInt(paper.w || paper.width, 10);\n            const ch = parseInt($container.height(), 10);\n\n            return {\n                left: (cw - pw) / 2,\n                top: (ch - ph) / 2\n            };\n        },\n\n        /**\n         * Get a point from a click event\n         * @param {jQueryElement} $container - the element that contains the paper\n         * @param {MouseEvent} event - the event triggered by the click\n         * @returns {Object} the x,y point\n         */\n        clickPoint: function ($container, event) {\n            let x, y;\n            const offset = $container.offset();\n\n            if (event.pageX || event.pageY) {\n                x = event.pageX - offset.left;\n                y = event.pageY - offset.top;\n            } else if (event.clientX || event.clientY) {\n                x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - offset.left;\n                y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop - offset.top;\n            }\n\n            return { x, y };\n        }\n    };\n\n    return GraphicHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',['lodash', 'taoQtiItem/qtiItem/helper/util', 'handlebars', 'lib/handlebars/helpers'], function (_, util, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" class=\\\"small feedback-info item-instruction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-info icon\\\"></span><span class=\\\"instruction-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n</div>\";\n      return buffer;\n      });\n    function instructionTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    var _notificationLevels = ['info', 'warning', 'error', 'success'];\n\n    var Instruction = function(interaction, message, callback) {\n        this.interaction = interaction;\n        this.defaultMessage = message || '';\n        this.currentMessage = '';\n        this.level = 'info';\n        this.serial = util.buildSerial('instruction_');\n        this.callback = callback;\n        this.$dom = null;\n        this.state = false;\n    };\n\n    Instruction.isValidLevel = function(level) {\n        return _.indexOf(_notificationLevels, level) >= 0;\n    };\n\n    Instruction.prototype.setState = function(state) {\n        this.state = state;\n    };\n\n    Instruction.prototype.checkState = function(state) {\n        return this.state === state;\n    };\n\n    Instruction.prototype.getId = function() {\n        return this.serial;\n    };\n\n    Instruction.prototype.create = function($container) {\n        $container.append(\n            instructionTpl({\n                message: this.defaultMessage,\n                serial: this.serial\n            })\n        );\n\n        this.$dom = $container.find('#' + this.serial);\n    };\n\n    Instruction.prototype.update = function(options) {\n        var level = options && options.level ? options.level : '',\n            message = options && options.message ? options.message : '',\n            timeout = options && options.timeout ? options.timeout : 0,\n            start = options && typeof options.start === 'function' ? options.start : null,\n            stop = options && typeof options.stop === 'function' ? options.stop : null;\n\n        if (level && Instruction.isValidLevel(level)) {\n            this.$dom.removeClass('feedback-' + this.level).addClass('feedback-' + level);\n            this.$dom\n                .find('.icon')\n                .removeClass('icon-' + this.level)\n                .addClass('icon-' + level);\n            this.level = level;\n        }\n\n        if (message) {\n            this.$dom.find('.instruction-message').html(message);\n            this.currentMessage = message;\n        }\n\n        if (timeout) {\n            var _this = this;\n            if (start) {\n                start.call(_this);\n            }\n            _this.timer = setTimeout(function() {\n                if (stop) {\n                    stop.call(_this);\n                }\n                _this.timer = null;\n            }, timeout);\n        }\n    };\n\n    Instruction.prototype.setLevel = function(level, timeout) {\n        var options = {\n            level: level\n        };\n\n        if (timeout) {\n            options.timeout = parseInt(timeout);\n            options.stop = function() {\n                this.setLevel('info');\n            };\n        }\n\n        this.update(options);\n    };\n\n    Instruction.prototype.getLevel = function() {\n        return this.level;\n    };\n\n    Instruction.prototype.setMessage = function(message, timeout) {\n        this.update({ message: message, timeout: timeout });\n    };\n\n    Instruction.prototype.reset = function() {\n        this.update({ level: 'info', message: this.defaultMessage });\n        this.state = false;\n    };\n\n    Instruction.prototype.validate = function(data) {\n        if (typeof this.callback === 'function') {\n            this.callback.call(this, data);\n        }\n    };\n\n    return Instruction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',['lodash', 'jquery', 'i18n', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction', 'handlebars', 'lib/handlebars/helpers'], function (_, $$1, __, containerHelper, Instruction, Handlebars, Helpers0) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Instruction = Instruction && Object.prototype.hasOwnProperty.call(Instruction, 'default') ? Instruction['default'] : Instruction;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"small feedback-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \" item-notification\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <span class=\\\"icon-\";\n      if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"></span><span class=\\\"feedback-message\\\">\";\n      if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n    <span title=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n        + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\n</div>\\n\";\n      return buffer;\n      });\n    function notifTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //stores the instructions\n    var _instructions = {};\n\n    /**\n     * The instruction manager helps you in managing instructions and\n     * constraints on a QTI Element, usually an interaction or a choice.\n     *\n     * @exports qtiCommonRenderer/helpers/Instructions/instructionManager\n     */\n    var instructionManager = {\n        /**\n         * Validate the instructions of an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {Object} [data] - any data to give to the instructions\n         */\n        validateInstructions: function (element, data) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.forEach(_instructions[serial], function (instruction) {\n                    instruction.validate(data || {});\n                });\n            }\n        },\n\n        /**\n         * Add a new instructions to an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display to the user when the instruction is validated\n         * @param {Function} validateCallback - how to validate the instruction\n         * @returns {Instruction} the created instruction\n         */\n        appendInstruction: function (element, message, validateCallback) {\n            var serial = element.getSerial(),\n                instruction = new Instruction(element, message, validateCallback);\n\n            if (!_instructions[serial]) {\n                _instructions[serial] = {};\n            }\n            _instructions[serial][instruction.getId()] = instruction;\n\n            instruction.create($$1('.instruction-container', containerHelper.get(element)));\n\n            return instruction;\n        },\n\n        /**\n         * Remove instructions from an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         */\n        removeInstructions: function (element) {\n            _instructions[element.getSerial()] = {};\n            containerHelper.get(element).find('.instruction-container').empty();\n        },\n\n        /**\n         * Reset the instructions states for an element (but keeps configuration)\n         * @param {Object} element - the qti object, ie. interaction, choice, etc.\n         */\n        resetInstructions: function (element) {\n            var serial = element.getSerial();\n            if (_instructions[serial]) {\n                _.forEach(_instructions[serial], function (instruction) {\n                    instruction.reset();\n                });\n            }\n        },\n\n        /**\n         * Default instuction set with a min/max constraints.\n         * @param {Object} interaction\n         * @param {jQueryElement} $container\n         * @param {Object} options\n         * @param {Number} [options.min = 0] -\n         * @param {Number} [options.max = 0] -\n         * @param {Function} options.getResponse - a ref to a function that get the raw response (array) from the interaction in parameter\n         * @param {Function} [options.onError] - called by once an error occurs with validateInstruction data in parameters\n         */\n        minMaxChoiceInstructions: function (interaction, options) {\n            var self = this,\n                min = options.min || 0,\n                max = options.max || 0,\n                getResponse = options.getResponse,\n                onError = options.onError || _.noop(),\n                choiceCount = options.choiceCount === false ? false : _.size(interaction.getChoices()),\n                minInstructionSet = false,\n                msg;\n\n            if (!_.isFunction(getResponse)) {\n                throw 'invalid parameter getResponse';\n            }\n\n            //if maxChoice = 0, inifinite choice possible\n            if (max > 0 && (choiceCount === false || max < choiceCount)) {\n                if (max === min) {\n                    minInstructionSet = true;\n                    msg =\n                        max <= 1\n                            ? __('You must select exactly %d choice', max)\n                            : __('You must select exactly %d choices', max);\n\n                    self.appendInstruction(interaction, msg, function (data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    message: __('Maximum choices reached'),\n                                    timeout: 2000,\n                                    start: function () {\n                                        onError(data);\n                                    },\n                                    stop: function () {\n                                        this.update({ level: 'success', message: msg });\n                                    }\n                                });\n                            }\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                } else if (max > min) {\n                    msg =\n                        max <= 1\n                            ? __('You can select maximum %d choice', max)\n                            : __('You can select maximum %d choices', max);\n                    self.appendInstruction(interaction, msg, function (data) {\n                        if (getResponse(interaction).length >= max) {\n                            this.setLevel('success');\n                            this.setMessage(__('Maximum choices reached'));\n                            if (this.checkState('fulfilled')) {\n                                this.update({\n                                    level: 'warning',\n                                    timeout: 2000,\n                                    start: function () {\n                                        onError(data);\n                                    },\n                                    stop: function () {\n                                        this.setLevel('info');\n                                    }\n                                });\n                            }\n\n                            this.setState('fulfilled');\n                        } else {\n                            this.reset();\n                        }\n                    });\n                }\n            }\n\n            if (!minInstructionSet && min > 0 && (choiceCount === false || min < choiceCount)) {\n                msg =\n                    min <= 1\n                        ? __('You must select at least %d choice', min)\n                        : __('You must select at least %d choices', min);\n                self.appendInstruction(interaction, msg, function () {\n                    if (getResponse(interaction).length >= min) {\n                        this.setLevel('success');\n                    } else {\n                        this.reset();\n                    }\n                });\n            }\n        },\n\n        /**\n         * Appends a instruction  notification message\n         * @deprecated in favor of instructions\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display\n         * @param {String} [level = 'info'] - the notification level in info, success, error or warning\n         */\n        appendNotification: function (element, message, level) {\n            level = level || 'info';\n\n            if (Instruction.isValidLevel(level)) {\n                var $container = containerHelper.get(element);\n\n                $container.find('.notification-container').prepend(\n                    notifTpl({\n                        level: level,\n                        message: message\n                    })\n                );\n\n                var $notif = $container.find('.item-notification:first');\n                var _remove = function () {\n                    $notif.fadeOut();\n                };\n\n                $notif.find('.close-trigger').on('click', _remove);\n                setTimeout(_remove, 2000);\n\n                return $notif;\n            }\n        },\n\n        /**\n         * Removes all the displayed notifications\n         * @deprecated in favor of instructions\n         */\n        removeNotifications: function (element) {\n            containerHelper.get(element).find('.item-notification').remove();\n        }\n    };\n\n    return instructionManager;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler',['jquery', 'lodash'], function ($, _) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    //throttle events because of the loop\n    var informLoaded = _.throttle(\n        function() {\n            $(document).trigger('customcssloaded.styleeditor',[{}]);\n        },\n        10,\n        { leading: false }\n    );\n\n    /**\n     * Attach QTI Stylesheets to the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     * @fires customcssloaded.styleeditor on document 10ms after stylesheets are loaded\n     */\n    var attach = function attach(stylesheets) {\n        var $head = $('head');\n\n        //fallback\n        if (!$head.length) {\n            $head = $('body');\n        }\n\n        // relative links with cache buster\n        _(stylesheets).forEach(function(stylesheet) {\n            var $link, href;\n\n            //if the href is something\n            if (stylesheet.attr('href')) {\n                $link = $(stylesheet.render());\n\n                //get the resolved href once rendererd\n                href = $link.attr('href');\n\n                //we need to set the href after the link is appended to the head (for our dear IE)\n                $link.removeAttr('href').attr('href', href);\n\n                if (stylesheet.attr('onload')) {\n                    $link[0].onload = stylesheet.attr('onload');\n                }\n\n                if (stylesheet.attr('onerror')) {\n                    $link[0].onerror = stylesheet.attr('onerror');\n                }\n\n                $link.one('load', informLoaded).appendTo($head);\n            }\n        });\n    };\n\n    /**\n     * Remove QTI Stylesheets from the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     */\n    var detach = function detach(stylesheets) {\n        _(stylesheets).forEach(function(stylesheet) {\n            if (stylesheet.serial) {\n                $('link[data-serial=\"' + stylesheet.serial + '\"]').remove();\n            }\n        });\n    };\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler\n     */\n    var itemStylesheetHandler = {\n        attach: attach,\n        detach: detach\n    };\n\n    return itemStylesheetHandler;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/patternMask',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var regexChar = /\\^\\[\\\\s\\\\S\\]\\{\\d+\\,(\\d+)\\}\\$/,\n        regexWords = /\\^\\(\\?\\:\\(\\?\\:\\[\\^\\\\s\\\\:\\\\!\\\\\\?\\\\\\;\\\\\\…\\\\\\€\\]\\+\\)\\[\\\\s\\\\:\\\\!\\\\\\?\\\\;\\\\\\…\\\\\\€\\]\\*\\)\\{\\d+\\,(\\d+)\\}\\$/;\n\n    var patternMaskHelper = {\n        /**\n         * Parse the pattern string and according to the given type, try to extract the associate number\n         *\n         * @param {String} pattern - the pattern string to be parsed\n         * @param {String} type - words or chars\n         * @returns {*}\n         */\n        parsePattern: function parsePattern(pattern, type) {\n            if (pattern === undefined || pattern === null) {\n                return null;\n            }\n            if (type === 'words') {\n                //expre = /^(?:(?:[^\\s\\:\\!\\?\\;\\…\\€]+)[\\s\\:\\!\\?\\;\\…\\€]*){0,3}$/;\n                var result = pattern.match(regexWords);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else if (type === 'chars') {\n                // This is the original regExp generated by our code\n                // expre = /^[\\s\\S]{0,10}$/;\n                // and we will try to extract the top limit from it with this regexp\n                // which is mostly just escaped version of the first one.\n                var result = pattern.match(regexChar);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        },\n        /**\n         * Reverse function of parsePattern for word type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxWordPattern: function createMaxWordPattern(max) {\n            return '^(?:(?:[^\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]+)[\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]*){0,' + max.toString() + '}$';\n        },\n        /**\n         * Reverse function of parsePattern for char type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxCharPattern: function createMaxCharPattern(max) {\n            return '^[\\\\s\\\\S]{0,' + max.toString() + '}$';\n        }\n    };\n\n    return patternMaskHelper;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _formatters = {\n        boolean: function (value) {\n            return value ? 'true' : 'false';\n        },\n        integer: function (value) {\n            return value;\n        },\n        float: function (value) {\n            return value;\n        },\n        string: function (value) {\n            return value === '' ? 'NULL' : '\"' + value + '\"';\n        },\n        point: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        pair: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        directedPair: function (value) {\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        duration: function (value) {\n            return value;\n        },\n        file: function (value) {\n            return 'binary data';\n        },\n        uri: function (value) {\n            return value;\n        },\n        intOrIdentifier: function (value) {\n            return value;\n        },\n        identifier: function (value) {\n            return value;\n        }\n    };\n\n    /**\n     * Return the pretty print string for a qti base variable\n     *\n     * @param {type} value\n     * @param {type} withType - the qti baseType\n     * @returns {String}\n     */\n    function printBase(value, withType) {\n        var print = '',\n            base = value.base;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (base) {\n            _.forIn(_formatters, function (formatter, baseType) {\n                if (base[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n                    print += formatter(base[baseType]);\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti list variable\n     *\n     * @param {object} value\n     * @param {string} withType - the qti basetype of the list\n     * @returns {string}\n     */\n    function printList(value, withType) {\n        var print = '',\n            list = value.list;\n\n        withType = typeof withType !== 'undefined' ? withType : true;\n\n        if (list) {\n            _.forIn(_formatters, function (formatter, baseType) {\n                if (list[baseType] !== undefined) {\n                    print += withType ? '(' + baseType + ') ' : '';\n\n                    print += '[';\n\n                    _.forEach(list[baseType], function (value) {\n                        print += formatter(value) + ', ';\n                    });\n\n                    if (_.size(list[baseType])) {\n                        print = print.substring(0, print.length - 2);\n                    }\n\n                    print += ']';\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    }\n\n    /**\n     * Return the pretty print string for a qti record variable\n     *\n     * @param {object} value\n     * @returns {String}\n     */\n    function printRecord(value) {\n        if (value && value.record) {\n            return '(record) ' + JSON.stringify(value.record);\n        }\n        return '';\n    }\n\n    var PciPrettyPrint = {\n        printBase: printBase,\n        printList: printList,\n        printRecord: printRecord\n    };\n\n    return PciPrettyPrint;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PciResponse',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint'], function (_, pciPrettyPrint) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pciPrettyPrint = pciPrettyPrint && Object.prototype.hasOwnProperty.call(pciPrettyPrint, 'default') ? pciPrettyPrint['default'] : pciPrettyPrint;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    var _qtiModelPciResponseCardinalities = {\n        single: 'base',\n        multiple: 'list',\n        ordered: 'list',\n        record: 'record'\n    };\n\n    var PciResponse = {\n        /**\n         * Parse a response variable formatted according to IMS PCI: http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * @see serialize\n         * @param {Object} response\n         * @param {Object} interaction\n         * @returns {Array}\n         */\n        unserialize: function(response, interaction) {\n            var ret = [],\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                var responseValues = response[mappedCardinality];\n\n                if (responseValues === null) {\n                    ret = [];\n                } else if (_.isObject(responseValues)) {\n                    if (responseValues[baseType] !== undefined) {\n                        ret = responseValues[baseType];\n                        ret = _.isArray(ret) ? ret : [ret];\n                    } else {\n                        throw 'invalid response baseType';\n                    }\n                } else {\n                    throw 'invalid response cardinality, expected ' + cardinality + ' (' + mappedCardinality + ')';\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return ret;\n        },\n        /**\n         * Serialize the input response array into the format to be send to result server according to IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * With the only exception for empty response, which is represented by a javascript \"null\" value\n         *\n         * @see http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * @param {Array} responseValues\n         * @param {Object} interaction\n         * @returns {Object|null}\n         */\n        serialize: function(responseValues, interaction) {\n            if (!_.isArray(responseValues)) {\n                throw 'invalid argument : responseValues must be an Array';\n            }\n\n            var response = {},\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            responseValues = _.map(responseValues || [], function(v) {\n                return baseType === 'boolean' ? v === true || v === 'true' : v;\n            });\n\n            if (_qtiModelPciResponseCardinalities[cardinality]) {\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                if (mappedCardinality === 'base') {\n                    if (responseValues.length === 0) {\n                        //return empty response:\n                        response.base = null;\n                    } else {\n                        response.base = {};\n                        response.base[baseType] = responseValues[0];\n                    }\n                } else {\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = responseValues;\n                }\n            } else {\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return response;\n        },\n        isEmpty: function(response) {\n            return (\n                response === null ||\n                _.isEmpty(response) ||\n                response.base === null ||\n                (_.isArray(response.list) && _.isEmpty(response.list)) ||\n                (_.isArray(response.record) && _.isEmpty(response.record))\n            );\n        },\n\n        /**\n         * Print a PCI JSON response into a human-readable string.\n         *\n         * @param {Object} response A response in PCI JSON representation.\n         * @returns {String} A human-readable version of the PCI JSON representation.\n         */\n        prettyPrint: function(response) {\n            var print = '';\n\n            if (typeof response.base !== 'undefined') {\n                // -- BaseType.\n                print += pciPrettyPrint.printBase(response, true);\n            } else if (typeof response.list !== 'undefined') {\n                // -- ListType\n                print += pciPrettyPrint.printList(response, true);\n            } else if (typeof response.record !== 'undefined') {\n                // -- RecordType\n                print += pciPrettyPrint.printRecord(response, true);\n            } else {\n                throw 'Not a valid PCI JSON Response';\n            }\n\n            return print;\n        }\n    };\n\n    return PciResponse;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/PortableElement',[],function () { 'use strict';\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * Portable element helper\n     */\n\n    var imgSrcPattern = /(<img[^>]*\\ssrc=[\"'])([^\"']+)([\"'])/gi;\n\n    /**\n     * Replace all identified relative media urls by the absolute one.\n     * For now only images are supported.\n     *\n     * @param {String} html - the html to parse\n     * @param {Object} the renderer\n     * @returns {String} the html without updated URLs\n     */\n    function fixMarkupMediaSources(html, renderer) {\n        html = html || '';\n\n        return html.replace(imgSrcPattern, function(substr, $1, $2, $3) {\n            var resolved = renderer.resolveUrl($2) || $2;\n            return $1 + resolved + $3;\n        });\n    }\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/PortableElement\n     */\n    var PortableElement = {\n        fixMarkupMediaSources: fixMarkupMediaSources\n    };\n\n    return PortableElement;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',['jquery', 'util/adaptSize', 'ui/waitForMedia'], function ($, adaptSize, waitForMedia) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    const itemSelector = '.add-option, .result-area .target, .choice-area .qti-choice';\n\n    var sizeAdapter = {\n        /**\n         * Resize jQueryElement that have changed their dimensions due to a change of the content\n         *\n         * @param {jQueryElement|widget} target\n         */\n        adaptSize(target) {\n            let $elements;\n            let $container;\n\n            switch (true) {\n                // widget\n                case typeof target.$container !== 'undefined':\n                    $elements = target.$container.find(itemSelector);\n                    $container = target.$container;\n                    break;\n\n                // jquery elements\n                default:\n                    $elements = target;\n                    $container = $($elements).first().parent();\n            }\n\n            $container.waitForMedia(function () {\n                // Occasionally in caching scenarios, after waitForMedia(), image.height is reporting its naturalHeight instead of its CSS height\n                // The timeout allows adaptSize.height() to work with the true rendered heights of elements, instead of naturalHeights\n                setTimeout(() => {\n                    adaptSize.height($elements);\n\n                    // detect any CSS load, and adapt heights again after\n                    document.addEventListener(\n                        'load',\n                        e => {\n                            if (e.target && e.target.rel === 'stylesheet') {\n                                adaptSize.height($elements);\n                            }\n                        },\n                        true\n                    );\n                }, 1);\n            });\n        },\n\n        /**\n         * Reset height to jQueryElement(s) to auto\n         *\n         * @param {jQueryElement|widget} target\n         */\n        resetSize(target) {\n            adaptSize.resetHeight(target.$container.find(itemSelector));\n        }\n    };\n\n    return sizeAdapter;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/uploadMime',['lodash', 'i18n', 'core/mimetype/definitions'], function (_, __, mimeTypes) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimeTypes = mimeTypes && Object.prototype.hasOwnProperty.call(mimeTypes, 'default') ? mimeTypes['default'] : mimeTypes;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-21 (original work) Open Assessment Technologies SA ;\n     */\n\n    const delimetr = ' ';\n\n    const uploadMime = {\n        /**\n         * Fetch mime type definitions\n         * (translation function for labels must be injected from here)\n         * @returns {Array}\n         */\n        getMimeTypes: function getMimeTypes() {\n            return mimeTypes.getList(__);\n        },\n\n        /**\n         * Set the expected types in the format according to the number of types\n         *\n         * @param {Object} interaction\n         * @param {Array} types\n         */\n        setExpectedTypes: function setExpectedTypes(interaction, types) {\n            let classes = interaction.attr('class') || '';\n            classes = classes.replace(/x-tao-upload-type-[-_a-zA-Z+.0-9]*/g, '').trim();\n            interaction.attr('class', classes);\n            interaction.removeAttr('type');\n\n            if (!types) {\n                return;\n            }\n\n            if (types.length === 1) {\n                //if there is only one value set into the qti standard type attribute\n                if (types[0] !== 'any/kind') {\n                    interaction.attr('type', types[0]);\n                }\n            } else {\n                //For backward compatibility:\n                //if there is more than one value, set into into TAO specific css classes\n                interaction.attr(\n                    'class',\n                    _.reduce(\n                        types,\n                        function (acc, selectedType) {\n                            return acc + ' x-tao-upload-type-' + selectedType.replace('/', '_');\n                        },\n                        classes\n                    ).trim()\n                );\n\n                interaction.attr('type', types.join(delimetr));\n            }\n        },\n\n        /**\n         * Return the array of authorized mime types\n         * Get the standard \"type\" attribute value with mime types separated by space.\n         * @param {Object} interaction - standard QTI interaction model object\n         * @param {Boolean} [includeEquivalents] - enable including all recognized as equivalent types\n         * @returns {Array}\n         */\n        getExpectedTypes: function getExpectedTypes(interaction, includeEquivalents) {\n            let equivalents = [];\n            let types = [];\n            let mimes;\n\n            if (interaction.attr('type')) {\n                types = interaction.attr('type').split(delimetr);\n            }\n\n            // add in equivalent mimetypes to the list of expected types\n            if (includeEquivalents === true) {\n                mimes = uploadMime.getMimeTypes();\n                _.forEach(types, function (mime) {\n                    const mimeData = _.find(mimes, { mime: mime });\n                    if (mimeData && _.isArray(mimeData.equivalent)) {\n                        equivalents = _.union(equivalents, mimeData.equivalent);\n                    }\n                });\n            }\n\n            return _.union(types, equivalents);\n        }\n    };\n\n    return uploadMime;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-gap\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <span data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"gapmatch-content\\\">&nbsp;</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Gap = {\n        qtiClass: 'gap',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Gap;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objetLabel)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-gapImg selectable\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <img src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.data)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n         width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n         \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objectLabel), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapImg = {\n        qtiClass: 'gapImg',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapImg;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapText = {\n        qtiClass: 'gapText',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return GapText;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span class=\\\"qti-choice qti-hottext hottext\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\r\\n    <label class=\\\"hottext-checkmark\\\">\\r\\n        <input type=\\\"checkbox\\\" value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\r\\n        <span class=\\\"icon-checkbox small\\\"></span>\\r\\n    </label>\\r\\n    <span class=\\\"hottext-content\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\r\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Hottext = {\n        qtiClass: 'hottext',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span role=\\\"option\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoice = {\n        qtiClass: 'inlineChoice',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return InlineChoice;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_AssociateInteraction = {\n        qtiClass: 'simpleAssociableChoice.associateInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<th class=\\\"qti-choice qti-associableChoice qti-simpleAssociableChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</th>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleAssociableChoice_MatchInteraction = {\n        qtiClass: 'simpleAssociableChoice.matchInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleAssociableChoice_MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'services/features'], function (Handlebars, Helpers0, containerHelper, features) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"radio\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-radio\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"response-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                value=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n                tabindex=\\\"1\\\"\\n            >\\n            <span class=\\\"icon-checkbox\\\"></span>\\n            \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", helper, options;\n      buffer += \"\\n    <label data-eliminable=\\\"container\\\" data-label=\\\"\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Eliminate\", options) : helperMissing.call(depth0, \"__\", \"Eliminate\", options)))\n        + \"\\\">\\n        <span data-eliminable=\\\"trigger\\\" class=\\\"icon-checkbox\\\"></span>\\n    </label>\\n    \";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice qti-simpleChoice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"pseudo-label-box\\\">\\n        <label class=\\\"real-label\\\">\\n            \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.unique), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </label>\\n        <div class=\\\"label-box\\\">\\n            <div class=\\\"label-content clear\\\" contenteditable=\\\"false\\\" id=\\\"choice-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n                \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                <svg class=\\\"overlay-answer-eliminator\\\">\\n                    <line x1=\\\"0\\\" y1=\\\"100%\\\" x2=\\\"100%\\\" y2=\\\"0\\\"/>\\n                    <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"/>\\n                </svg>\\n            </div>\\n        </div>\\n    </div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowElimination), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_ChoiceInteraction = {\n        qtiClass: 'simpleChoice.choiceInteraction',\n        getContainer: containerHelper.get,\n        getData: function(choice, data) {\n            data.unique = parseInt(data.interaction.attributes.maxChoices) === 1;\n            data.allowElimination = features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination');\n            return data;\n        },\n        template: tpl\n    };\n\n    return SimpleChoice_ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</li>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SimpleChoice_OrderInteraction = {\n        qtiClass: 'simpleChoice.orderInteraction',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return SimpleChoice_OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    /**\n     * Evaluate if the given object is a proper portable element provider\n     * @param {Object} provider\n     * @returns {Boolean}\n     */\n    var isPortableElementProvider = function isPortableElementProvider(provider){\n        return (provider && _.isFunction(provider.load));\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        /**\n         * The portable element registry instance\n         * @typedef {portableElementRegistry}\n         */\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n\n            /**\n             * Get a register portable element\n             * @param {String} typeIdentifier\n             * @param {String} version\n             * @returns {Object}\n             */\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], {version : version});\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n\n            /**\n             * Register a portable element provider\n             * @param moduleName\n             * @param {String|Object }provider - the portable provider object or module name\n             * @returns {portableElementRegistry}\n             */\n            registerProvider : function registerProvider(moduleName, provider){\n                __providers[moduleName] = isPortableElementProvider(provider) ? provider : null;\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Clear all previously registered providers\n             * @returns {portableElementRegistry}\n             */\n            resetProviders : function resetProviders(){\n                __providers = {};\n                _loaded = false;\n                return this;\n            },\n\n            /**\n             * Load the providers\n             * @param {Object} [options]\n             * @param {Boolean} [options.reload] - force to reload the registered providers\n             * @returns {Promise}\n             */\n            loadProviders : function loadProviders(options){\n                var self = this;\n                var loadPromise;\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve([]);\n                } else {\n                    loadPromise = new Promise(function(resolve, reject) {\n                        var providerLoadingStack = [];\n                        _.forIn(__providers, function(provider, id){\n                            if(provider === null){\n                                providerLoadingStack.push(id);\n                            }\n                        });\n                        _requirejs(providerLoadingStack, function(){\n                            _.forEach([].slice.call(arguments), function(provider){\n                                if(isPortableElementProvider(provider)){\n                                    __providers[providerLoadingStack.shift()] = provider;\n                                }\n                            });\n                            resolve(__providers);\n                            _loaded = true;\n                            self.trigger('providersloaded', __providers);\n                        }, reject);\n                    });\n                }\n\n                return loadPromise;\n            },\n\n            /**\n             * Get all versions of all portable elements registered\n             * @returns {Object} - all portable elements and their versions\n             */\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n\n            /**\n             * Get the runtime for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the runtime model\n             */\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    return _.assign(portableElement.runtime, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        model : portableElement.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Get the creator model for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {Object} the creator model\n             */\n            getCreator : function getCreator(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement && portableElement.creator){\n                    return _.assign(portableElement.creator, {\n                        id : portableElement.typeIdentifier,\n                        label : portableElement.label,\n                        baseUrl : portableElement.baseUrl,\n                        response : portableElement.response,\n                        model : portableElement.model,\n                        xmlns : portableElement.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n\n            /**\n             * Returned all enabled created from the registry\n             * @returns {Object} the collection of creators\n             */\n            getLatestCreators : function getLatestCreators(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    var lastVersion = _.last(versions);\n\n                    //check if the portable element is creatable:\n                    if(lastVersion.creator && lastVersion.creator.hook && lastVersion.enabled){\n                        all[id] = lastVersion;\n                    }\n                });\n                return all;\n            },\n\n            /**\n             * Get the baseUrl for a given portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {String} the base url\n             */\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n\n            /**\n             * Load the runtimes from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                    loadPromise = self.loadProviders(options).then(function(providers){\n\n                        var loadStack = [];\n\n                        _.forEach(providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                            return Promise.all(loadStack).then(function (results){//TODO could remove one level of promise\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, self._registry || {});//incremental loading\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                        return true;\n                                    }\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n                                });\n                            });\n\n                    });\n\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * Load the creators from registered portable element provider(s)\n             *\n             * @param {Object} [options]\n             * @param {Array} [options.include] - the exact list of portable element typeIdentifier that should be loaded\n             * @param {Boolean} [options.reload] - tells if all interactions should be reloaded\n             * @returns {Promise}\n             */\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var portableElementModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(portableElementModel.creator && portableElementModel.creator.hook){\n                            if(portableElementModel.enabled){\n                                if(_.isArray(options.include) && _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }else{\n                                if(!_.isArray(options.include) || _.indexOf(options.include, typeIdentifier) < 0){\n                                    return true;\n                                }\n                            }\n                            requiredCreatorHooks.push(portableElementModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.forEach(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var portableElementModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : portableElementModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + portableElementModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n\n            /**\n             * enable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            enable: function enable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = true;\n                }\n                return this;\n            },\n\n            /**\n             * disable a portable element\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            disable: function disable(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                if(portableElement){\n                    portableElement.enabled = false;\n                }\n                return this;\n            },\n\n            /**\n             * check is a portable element is enabled\n             * @param {String} typeIdentifier\n             * @param {String} [version] - if the version is provided, the method will try to find that version\n             * @returns {portableElementRegistry}\n             */\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var portableElement = this.get(typeIdentifier, version);\n                return (portableElement && portableElement.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Utility to retrieve and manipualte QTI Elements\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n', 'services/features'], function ($, _, __, featuresService) {\n    'use strict';\n\n    const QtiElements = {\n        classes: {\n            //abstract classes:\n            itemBody: { parents: ['bodyElement'], contains: ['block'], abstract: true },\n            atomicBlock: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            atomicInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            simpleBlock: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['block'], abstract: true },\n            simpleInline: {\n                parents: ['bodyElement', 'flowStatic', 'inlineStatic'],\n                contains: ['inline'],\n                abstract: true\n            },\n            flowStatic: { parents: ['flow'], abstract: true },\n            blockStatic: { parents: ['block'], abstract: true },\n            inlineStatic: { parents: ['inline'], abstract: true },\n            flow: { parents: ['objectFlow'], abstract: true },\n            tableCell: { parents: ['bodyElement'], contains: ['flow'], abstract: true },\n            //html-derived qti elements:\n            caption: { parents: ['bodyElement'], contains: ['inline'], xhtml: true },\n            col: { parents: ['bodyElement'], xhtml: true },\n            colgroup: { parents: ['bodyElement'], contains: ['col'], xhtml: true },\n            div: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['flow'], xhtml: true },\n            dl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['dlElement'], xhtml: true },\n            dt: { parents: ['dlElement'], contains: ['inline'], xhtml: true },\n            dd: { parents: ['dlElement'], contains: ['flow'], xhtml: true },\n            hr: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], xhtml: true },\n            math: { parents: ['blockStatic', 'flowStatic', 'inlineStatic'], xhtml: true },\n            li: { parents: ['bodyElement'], contains: ['flow'], xhtml: true },\n            ol: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            ul: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], contains: ['li'], xhtml: true },\n            object: { parents: ['bodyElement', 'flowStatic', 'inlineStatic'], contains: ['objectFlow'], xhtml: true },\n            param: { parents: ['objectFlow'], xhtml: true },\n            table: {\n                parents: ['blockStatic', 'bodyElement', 'flowStatic'],\n                contains: ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'],\n                xhtml: true\n            },\n            tbody: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            tfoot: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            thead: { parents: ['bodyElement'], contains: ['tr'], xhtml: true },\n            td: { parents: ['tableCell'], xhtml: true },\n            th: { parents: ['tableCell'], xhtml: true },\n            tr: { parents: ['bodyElement'], contains: ['tableCell'], xhtml: true },\n            a: { parents: ['simpleInline'], xhtml: true },\n            abbr: { parents: ['simpleInline'], xhtml: true },\n            acronym: { parents: ['simpleInline'], xhtml: true },\n            b: { parents: ['simpleInline'], xhtml: true },\n            big: { parents: ['simpleInline'], xhtml: true },\n            cite: { parents: ['simpleInline'], xhtml: true },\n            code: { parents: ['simpleInline'], xhtml: true },\n            dfn: { parents: ['simpleInline'], xhtml: true },\n            em: { parents: ['simpleInline'], xhtml: true },\n            i: { parents: ['simpleInline'], xhtml: true },\n            kbd: { parents: ['simpleInline'], xhtml: true },\n            q: { parents: ['simpleInline'], xhtml: true },\n            samp: { parents: ['simpleInline'], xhtml: true },\n            small: { parents: ['simpleInline'], xhtml: true },\n            span: { parents: ['simpleInline'], xhtml: true },\n            strong: { parents: ['simpleInline'], xhtml: true },\n            sub: { parents: ['simpleInline'], xhtml: true },\n            sup: { parents: ['simpleInline'], xhtml: true },\n            tt: { parents: ['simpleInline'], xhtml: true },\n            var: { parents: ['simpleInline'], xhtml: true },\n            blockquote: { parents: ['simpleBlock'], xhtml: true },\n            address: { parents: ['atomicBlock'], xhtml: true },\n            h1: { parents: ['atomicBlock'], xhtml: true },\n            h2: { parents: ['atomicBlock'], xhtml: true },\n            h3: { parents: ['atomicBlock'], xhtml: true },\n            h4: { parents: ['atomicBlock'], xhtml: true },\n            h5: { parents: ['atomicBlock'], xhtml: true },\n            h6: { parents: ['atomicBlock'], xhtml: true },\n            p: { parents: ['atomicBlock'], xhtml: true },\n            pre: { parents: ['atomicBlock'], xhtml: true },\n            img: { parents: ['atomicInline'], xhtml: true, attributes: ['src', 'alt', 'longdesc', 'height', 'width'] },\n            br: { parents: ['atomicInline'], xhtml: true },\n            //qti elements:\n            infoControl: { parents: ['blockStatic', 'bodyElement', 'flowStatic'], qti: true },\n            textRun: { parents: ['inlineStatic', 'flowstatic'], qti: true },\n            feedbackInline: { parents: ['simpleInline', 'feedbackElement'], qti: true },\n            feedbackBlock: { parents: ['simpleBlock'], qti: true },\n            rubricBlock: { parents: ['simpleBlock'], qti: true }, //strange qti 2.1 exception, marked as simpleBlock instead of\n            blockInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            inlineInteraction: { parents: ['inline', 'flow', 'interaction'], qti: true },\n            gap: { parents: ['inlineStatic'], qti: true },\n            hottext: { parents: ['flowstatic', 'inlineStatic'], contains: ['inlineStatic'], qti: true },\n            printedVariable: { parents: ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], qti: true },\n            prompt: { parents: ['bodyElement'], contains: ['inlineStatic'], qti: true },\n            templateElement: { parents: ['bodyElement'], qti: true },\n            templateBlock: {\n                parents: ['blockStatic', 'flowStatic', 'templateElement'],\n                contains: ['blockStatic'],\n                qti: true\n            },\n            templateInline: {\n                parents: ['inlineStatic', 'flowStatic', 'templateElement'],\n                contains: ['inlineStatic'],\n                qti: true\n            },\n            choiceInteraction: { parents: ['blockInteraction'], qti: true },\n            associateInteraction: { parents: ['blockInteraction'], qti: true },\n            orderInteraction: { parents: ['blockInteraction'], qti: true },\n            matchInteraction: { parents: ['blockInteraction'], qti: true },\n            hottextInteraction: { parents: ['blockInteraction'], qti: true },\n            gapMatchInteraction: { parents: ['blockInteraction'], qti: true },\n            mediaInteraction: { parents: ['blockInteraction'], qti: true },\n            sliderInteraction: { parents: ['blockInteraction'], qti: true },\n            uploadInteraction: { parents: ['blockInteraction'], qti: true },\n            drawingInteraction: { parents: ['blockInteraction'], qti: true },\n            graphicInteraction: { parents: ['blockInteraction'], qti: true },\n            hotspotInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicAssociateInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicOrderInteraction: { parents: ['graphicInteraction'], qti: true },\n            graphicGapMatchInteraction: { parents: ['graphicInteraction'], qti: true },\n            selectPointInteraction: { parents: ['graphicInteraction'], qti: true },\n            textEntryInteraction: { parents: ['stringInteraction', 'inlineInteraction'], qti: true },\n            extendedTextInteraction: { parents: ['stringInteraction', 'blockInteraction'], qti: true },\n            inlineChoiceInteraction: { parents: ['inlineInteraction'], qti: true },\n            endAttemptInteraction: { parents: ['inlineInteraction'], qti: true },\n            customInteraction: { parents: ['block', 'flow', 'interaction'], qti: true },\n            _container: { parents: ['block'], qti: true } //a pseudo class introduced in TAO\n        },\n\n        cache: { containable: {}, children: {}, parents: {} },\n\n        getAllowedContainersElements(qtiClass, $container) {\n            const classes = QtiElements.getAllowedContainers(qtiClass);\n            let jqSelector = '';\n            for (let i in classes) {\n                if (!classes[i].qti) {\n                    //html element:\n                    jqSelector += `${classes[i]}, `;\n                }\n            }\n\n            if (jqSelector) {\n                jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n            }\n\n            return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n        },\n\n        getAllowedContainers(qtiClass) {\n            let ret;\n            if (QtiElements.cache.containable[qtiClass]) {\n                ret = QtiElements.cache.containable[qtiClass];\n            } else {\n                ret = [];\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (model.contains) {\n                        const intersect = _.intersection(model.contains, parents);\n                        if (intersect.length) {\n                            if (!model.abstract) {\n                                ret.push(aClass);\n                            }\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                        }\n                    }\n                }\n                QtiElements.cache.containable[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getAllowedContents(qtiClass, recursive, checked) {\n            let ret = [];\n            checked = checked || {};\n\n            const model = QtiElements.classes[qtiClass];\n            if (model && model.contains) {\n                for (let i in model.contains) {\n                    const contain = model.contains[i];\n                    if (!checked[contain]) {\n                        checked[contain] = true;\n\n                        //qtiClass can contain everything defined as its contents\n                        ret.push(contain);\n\n                        //qtiClass can also contain subclass of its contents\n                        const children = QtiElements.getChildClasses(contain, true);\n                        for (let j in children) {\n                            const child = children[j];\n                            if (!checked[child]) {\n                                checked[child] = true;\n\n                                ret.push(child);\n\n                                //adding children allowed contents depends on the option \"recursive\"\n                                if (recursive) {\n                                    ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                                }\n                            }\n                        }\n\n                        //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                        }\n                    }\n                }\n            }\n\n            //qtiClass can contain all allowed contents of its parents:\n            const parents = QtiElements.getParentClasses(qtiClass, true);\n            for (let i in parents) {\n                ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n            }\n\n            return _.uniq(ret);\n        },\n\n        isAllowedClass(qtiContainerClass, qtiContentClass) {\n            const allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n            return _.indexOf(allowedClasses, qtiContentClass) >= 0;\n        },\n\n        getParentClasses(qtiClass, recursive) {\n            let ret;\n            if (recursive && QtiElements.cache.parents[qtiClass]) {\n                ret = QtiElements.cache.parents[qtiClass];\n            } else {\n                ret = [];\n                if (QtiElements.classes[qtiClass]) {\n                    ret = QtiElements.classes[qtiClass].parents;\n                    if (recursive) {\n                        for (let i in ret) {\n                            ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                        }\n                        ret = _.uniq(ret);\n                    }\n                }\n                QtiElements.cache.parents[qtiClass] = ret;\n            }\n\n            return ret;\n        },\n\n        getChildClasses(qtiClass, recursive, type) {\n            let ret;\n            const cacheType = type ? type : 'all';\n            if (recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]) {\n                ret = QtiElements.cache.children[qtiClass][cacheType];\n            } else {\n                ret = [];\n                for (let aClass in QtiElements.classes) {\n                    const model = QtiElements.classes[aClass];\n                    if (_.indexOf(model.parents, qtiClass) >= 0) {\n                        if (type) {\n                            if (model[type]) {\n                                ret.push(aClass);\n                            }\n                        } else {\n                            ret.push(aClass);\n                        }\n                        if (recursive) {\n                            ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                        }\n                    }\n                }\n                if (!QtiElements.cache.children[qtiClass]) {\n                    QtiElements.cache.children[qtiClass] = {};\n                }\n                QtiElements.cache.children[qtiClass][cacheType] = ret;\n            }\n\n            return ret;\n        },\n\n        isBlock(qtiClass) {\n            return QtiElements.is(qtiClass, 'block');\n        },\n\n        isInline(qtiClass) {\n            return QtiElements.is(qtiClass, 'inline');\n        },\n\n        is(qtiClass, topClass) {\n            if (qtiClass === topClass) {\n                return true;\n            } else {\n                const parents = QtiElements.getParentClasses(qtiClass, true);\n                return _.indexOf(parents, topClass) >= 0;\n            }\n        },\n\n        /**\n         * Check wether an element is visible, using the feature viibility service\n         * @param {string} qtiClass - see the list of available classes\n         * @returns {boolean} true by default and false only if the element is explicitely registered as hidden\n         */\n        isVisible(qtiClass) {\n            if (this.is(qtiClass, 'customInteraction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/customInteraction/${qtiClass.replace(/Interaction$/, '').replace(/^customInteraction\\./, '')}`);\n            }\n            if (this.is(qtiClass, 'interaction')) {\n                return featuresService.isVisible(`taoQtiItem/creator/interaction/${qtiClass.replace(/Interaction$/, '')}`);\n            }\n            return true;\n        },\n\n        /**\n         * Get the list of available elements for the authoring side\n         * The list of those element is statically defined, but we filter out elements that should be visible\n         * @returns {Object} the available elements\n         */\n        getAvailableAuthoringElements() {\n            const tagTitles = {\n                commonInteractions: __('Common Interactions'),\n                inlineInteractions: __('Inline Interactions'),\n                graphicInteractions: __('Graphic Interactions')\n            };\n\n            const authoringElements = {\n                choiceInteraction: {\n                    label: __('Choice Interaction'),\n                    description: __(\n                        'Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'\n                    ),\n                    icon: 'icon-choice',\n                    short: __('Choice'),\n                    qtiClass: 'choiceInteraction',\n                    tags: [tagTitles.commonInteractions, 'mcq'],\n                    group: 'common-interactions'\n                },\n                orderInteraction: {\n                    label: __('Order Interaction'),\n                    icon: 'icon-order',\n                    description: __('Arrange a list of choices in the correct order.'),\n                    short: __('Order'),\n                    qtiClass: 'orderInteraction',\n                    tags: [tagTitles.commonInteractions, 'ordering'],\n                    group: 'common-interactions'\n                },\n                associateInteraction: {\n                    label: __('Associate Interaction'),\n                    icon: 'icon-associate',\n                    description: __('Create pair(s) from a series of choices.'),\n                    short: __('Associate'),\n                    qtiClass: 'associateInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                matchInteraction: {\n                    label: __('Match Interaction'),\n                    icon: 'icon-match',\n                    description: __(\n                        'Create association(s) between two sets of choices displayed in a table (row and column).'\n                    ),\n                    short: __('Match'),\n                    qtiClass: 'matchInteraction',\n                    tags: [tagTitles.commonInteractions, 'association'],\n                    group: 'common-interactions'\n                },\n                hottextInteraction: {\n                    label: __('Hottext Interaction'),\n                    icon: 'icon-hottext',\n                    description: __('Select one or more text parts (hottext) within a text.'),\n                    short: __('Hottext'),\n                    qtiClass: 'hottextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                gapMatchInteraction: {\n                    label: __('Gap Match Interaction'),\n                    icon: 'icon-gap-match',\n                    description: __(' Fill in the gaps in a text from a set of choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'gapMatchInteraction',\n                    tags: [tagTitles.commonInteractions, 'text', 'association'],\n                    group: 'common-interactions'\n                },\n                sliderInteraction: {\n                    label: __('Slider Interaction'),\n                    icon: 'icon-slider',\n                    description: __('Select a value within a numerical range.'),\n                    short: __('Slider'),\n                    qtiClass: 'sliderInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                extendedTextInteraction: {\n                    label: __('Extended Text Interaction'),\n                    icon: 'icon-extended-text',\n                    description: __(\n                        'Collect open-ended information in one or more text area(s) (strings or numeric values).'\n                    ),\n                    short: __('Extended Text'),\n                    qtiClass: 'extendedTextInteraction',\n                    tags: [tagTitles.commonInteractions, 'text'],\n                    group: 'common-interactions'\n                },\n                uploadInteraction: {\n                    label: __('File Upload Interaction'),\n                    icon: 'icon-upload',\n                    description: __('Upload a file (e.g. document, picture...) as a response.'),\n                    short: __('File Upload'),\n                    qtiClass: 'uploadInteraction',\n                    tags: [tagTitles.commonInteractions, 'special'],\n                    group: 'common-interactions'\n                },\n                mediaInteraction: {\n                    label: __('Media Interaction'),\n                    icon: 'icon-media',\n                    description: __(\n                        'Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'\n                    ),\n                    short: __('Media'),\n                    qtiClass: 'mediaInteraction',\n                    tags: [tagTitles.commonInteractions, 'media'],\n                    group: 'common-interactions'\n                },\n                _container: {\n                    label: __('Text Block'),\n                    icon: 'icon-font',\n                    description: __(\n                        'Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'\n                    ),\n                    short: __('Block'),\n                    qtiClass: '_container',\n                    tags: [tagTitles.inlineInteractions, 'text'],\n                    group: 'inline-interactions'\n                },\n                inlineChoiceInteraction: {\n                    label: __('Inline Choice Interaction'),\n                    icon: 'icon-inline-choice',\n                    description: __('Select a choice from a drop-down list.'),\n                    short: __('Inline Choice'),\n                    qtiClass: 'inlineChoiceInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'mcq'],\n                    group: 'inline-interactions'\n                },\n                textEntryInteraction: {\n                    label: __('Text Entry Interaction'),\n                    icon: 'icon-text-entry',\n                    description: __(\n                        'Collect open-ended information in a short text input (strings or numeric values).'\n                    ),\n                    short: __('Text Entry'),\n                    qtiClass: 'textEntryInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'text'],\n                    group: 'inline-interactions'\n                },\n                endAttemptInteraction: {\n                    label: __('End Attempt Interaction'),\n                    icon: 'icon-end-attempt',\n                    description: __('Trigger the end of the item attempt.'),\n                    short: __('End Attempt'),\n                    qtiClass: 'endAttemptInteraction',\n                    tags: [tagTitles.inlineInteractions, 'inline-interactions', 'button', 'submit'],\n                    group: 'inline-interactions'\n                },\n                hotspotInteraction: {\n                    label: __('Hotspot Interaction'),\n                    icon: 'icon-hotspot',\n                    description: __('Select one or more areas (hotspots) displayed on an picture.'),\n                    short: __('Hotspot'),\n                    qtiClass: 'hotspotInteraction',\n                    tags: [tagTitles.graphicInteractions, 'mcq'],\n                    group: 'graphic-interactions'\n                },\n                graphicOrderInteraction: {\n                    label: __('Graphic Order Interaction'),\n                    icon: 'icon-graphic-order',\n                    description: __('Order the areas (hotspots) displayed on a picture.'),\n                    short: __('Order'),\n                    qtiClass: 'graphicOrderInteraction',\n                    tags: [tagTitles.graphicInteractions, 'ordering'],\n                    group: 'graphic-interactions'\n                },\n                graphicAssociateInteraction: {\n                    label: __('Graphic Associate Interaction'),\n                    icon: 'icon-graphic-associate',\n                    description: __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                    short: __('Associate'),\n                    qtiClass: 'graphicAssociateInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                graphicGapMatchInteraction: {\n                    label: __('Graphic Gap Match Interaction'),\n                    icon: 'icon-graphic-gap',\n                    description: __('Fill in the gaps on a picture with a set of image choices.'),\n                    short: __('Gap Match'),\n                    qtiClass: 'graphicGapMatchInteraction',\n                    tags: [tagTitles.graphicInteractions, 'association'],\n                    group: 'graphic-interactions'\n                },\n                selectPointInteraction: {\n                    label: __('Select Point Interaction'),\n                    icon: 'icon-select-point',\n                    description: __('Position one or more points on a picture (response areas are not displayed).'),\n                    short: __('Select Point'),\n                    qtiClass: 'selectPointInteraction',\n                    tags: [tagTitles.graphicInteractions],\n                    group: 'graphic-interactions'\n                }\n            };\n\n            //filter out hidden elements\n            const availableElements = {};\n            for (const [elementId, element] of Object.entries(authoringElements)) {\n                if (this.isVisible(elementId)) {\n                    availableElements[elementId] = element;\n                }\n            }\n            return availableElements;\n        }\n    };\n\n    return QtiElements;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2022 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'i18n',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, __, portableElementRegistry, qtiElements) {\n    'use strict';\n\n    /**\n     * Create a ney interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry() {\n        return portableElementRegistry({\n            /**\n             * Get the authoring information for a given custom interaction\n             * @param {string} typeIdentifier - the interaction type identifier\n             * @param {Object} [options]\n             * @param {string|number} [options.version] - the interaction version\n             * @param {boolean} [options.enabledOnly] - to only get interaction enabled && visible\n             * @returns {Object} the authoring info\n             */\n            getAuthoringData(typeIdentifier, options = {}) {\n                options = _.defaults(options || {}, { version: 0, enabledOnly: false });\n                const pciModel = this.get(typeIdentifier, options.version);\n                const qtiClass = `customInteraction.${pciModel.typeIdentifier}`;\n                if (\n                    pciModel &&\n                    pciModel.creator &&\n                    pciModel.creator.hook &&\n                    pciModel.creator.icon &&\n                    ((pciModel.enabled && qtiElements.isVisible(qtiClass)) || !options.enabledOnly)\n                ) {\n                    return {\n                        label: pciModel.label, //currently no translation available\n                        icon: pciModel.creator.icon.replace(new RegExp(`^${typeIdentifier}/`), pciModel.baseUrl),\n                        short: pciModel.short,\n                        description: pciModel.description,\n                        qtiClass, //custom interaction is block type\n                        tags: _.union([__('Custom Interactions')], pciModel.tags),\n                        group: 'custom-interactions'\n                    };\n                }\n            }\n        }).on('creatorsloaded', function () {\n            const creators = this.getLatestCreators();\n            _.forEach(creators, function (creator, typeIdentifier) {\n                qtiElements.classes[`customInteraction.${typeIdentifier}`] = {\n                    parents: ['customInteraction'],\n                    qti: true\n                };\n            });\n        });\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.forEach(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.forEach(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","define('taoQtiItem/qtiCommonRenderer/renderers/config',['context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: function handleTheme(url) {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base ||\n                            (itemThemes.available && itemThemes.available.map(val => val.path).includes(url.path)))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        choiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        hottext: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        gapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        mediaInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        uploadInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        graphicAssociateInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        associableHotspot: false,\n        customInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'commonRenderer',\n        locations: locations,\n        options: {\n            assetManager: assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Container',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<div class=\\\"qti-block\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      return buffer;\n      }\n\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.contentModel), \"blockStatic\", options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.contentModel), \"blockStatic\", options));\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = {\n        qtiClass: '_container',\n        template: tpl\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figcaption',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figcaption\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figcaption>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Figcaption = {\n        qtiClass: 'figcaption',\n        template: tpl\n    };\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Figure',['context', 'lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'handlebars', 'lib/handlebars/helpers'], function (context, _, containerHelper, Handlebars, Helpers0) { 'use strict';\n\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<figure data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\\n\";\n      return buffer;\n      });\n    function imageTpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<figure \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</figure>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-figure=\\\"true\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.showFigure), {hash:{},inverse:self.program(6, program6, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\";\n      return buffer;\n      });\n    function widgetTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022-2023 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    const DISABLE_FIGURE_WIDGET = context.featureFlags['FEATURE_FLAG_DISABLE_FIGURE_WIDGET'];\n\n    var Figure = {\n        qtiClass: 'figure',\n        getContainer: containerHelper.get,\n        template: DISABLE_FIGURE_WIDGET ? imageTpl : widgetTpl,\n        getData(elem, data) {\n            if (DISABLE_FIGURE_WIDGET) {\n                return data;\n            }\n\n            let showFigure = false;\n            if (data.attributes.class && ['wrap-left', 'wrap-right'].includes(data.attributes.class)) {\n                showFigure = true;\n            } else {\n                _.some(elem.bdy['elements'], childElement => {\n                    if (childElement.serial.includes('figcaption')) {\n                        showFigure = true;\n                        data.attributes.class = 'wrap-left';\n                        elem.attributes.class = 'wrap-left';\n                    }\n                });\n            }\n            data.attributes.showFigure = showFigure;\n            elem.attributes.showFigure = showFigure;\n            return data;\n        },\n        render(figure) {\n            const $figure = containerHelper.get(figure);\n            const $img = $figure.find('img');\n            if ($img.length && (DISABLE_FIGURE_WIDGET || $figure.prop('tagName') === 'FIGURE')) {\n                // move width from image to figure\n                $figure.css({ width: $img.attr('width') });\n                $img.attr('width', '100%');\n            }\n        }\n    };\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Img',['ui/waitForMedia', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (waitForMedia, Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"class=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"height=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"width=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-describedby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-hidden=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-label=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-labelledby=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" aria-live=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" role=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<img\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"img\\\"\\n    src=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    alt=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.alt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-describedby']), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-hidden']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-label']), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-labelledby']), {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['aria-live']), {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.role), {hash:{},inverse:self.noop,fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Img = {\n        qtiClass: 'img',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(img, data) {\n            return new Promise(function(resolve, reject) {\n                containerHelper.get(img).waitForMedia(resolve);\n            });\n        }\n    };\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Include',['handlebars', 'lib/handlebars/helpers'], function (Handlebars, Helpers0) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-include\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\">\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Include = {\n        qtiClass: 'include',\n        template: tpl\n    };\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',['jquery', 'lodash', 'i18n', 'ui/hider', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'interact', 'ui/interactUtils'], function ($$1, _, __, hider, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    hider = hider && Object.prototype.hasOwnProperty.call(hider, 'default') ? hider['default'] : hider;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    class=\\\"qti-interaction qti-blockInteraction qti-associateInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"associateInteraction\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <ul class=\\\"choice-area clearfix  none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <ul class=\\\"result-area none target clearfix\\\">\\n    </ul>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"hidden incomplete-pair\";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<li class=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"target lft\\\"></div>\\n    <div class=\\\"target rgt\\\"></div>\\n</li>\\n\";\n      return buffer;\n      });\n    function pairTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const setChoice = function (interaction, $choice, $target) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getChoice(choiceSerial);\n        let usage = $choice.data('usage') || 0;\n\n        if (!choiceSerial) {\n            throw new Error('empty choice serial');\n        }\n\n        //to track number of times a choice is used in a pair\n        usage++;\n        $choice.data('usage', usage);\n\n        const _setChoice = function () {\n            $target.data('serial', choiceSerial).html($choice.html()).addClass('filled');\n\n            if (!interaction.responseMappingMode && choice.attr('matchMax') && usage >= choice.attr('matchMax')) {\n                $choice.addClass('deactivated');\n            }\n        };\n\n        if ($target.siblings('div').hasClass('filled')) {\n            const $resultArea = $$1('.result-area', $container);\n            const $pair = $target.parent();\n            const thisPairSerial = [$target.siblings('div').data('serial'), choiceSerial];\n            let $otherRepeatedPair = $$1();\n\n            //check if it is not a repeating association!\n            $resultArea\n                .children()\n                .not($pair)\n                .each(function () {\n                    let $otherPair = $$1(this).children('.filled');\n                    if ($otherPair.length === 2) {\n                        let otherPairSerial = [$$1($otherPair[0]).data('serial'), $$1($otherPair[1]).data('serial')];\n                        if (_.intersection(thisPairSerial, otherPairSerial).length === 2) {\n                            $otherRepeatedPair = $otherPair;\n                            return false;\n                        }\n                    }\n                });\n\n            if ($otherRepeatedPair.length === 0) {\n                //no repeated pair, so allow the choice to be set:\n                _setChoice();\n\n                //trigger pair made event\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'added',\n                    $pair: $pair,\n                    choices: thisPairSerial\n                });\n\n                instructionMgr.validateInstructions(interaction, { choice: $choice, target: $target });\n\n                if (interaction.responseMappingMode || parseInt(interaction.attr('maxAssociations')) === 0) {\n                    $pair.removeClass('incomplete-pair');\n\n                    //append new pair option?\n                    if (!$resultArea.children('.incomplete-pair').length) {\n                        $resultArea.append(pairTpl({ empty: true }));\n                        $resultArea.children('.incomplete-pair').fadeIn(600, function () {\n                            hider.show(this);\n                        });\n                    }\n                }\n            } else {\n                //repeating pair: show it:\n\n                //@todo add a notification message here in warning\n                $otherRepeatedPair.css('border', '1px solid orange');\n                $target.html(__('identical pair already exists')).css({\n                    color: 'orange',\n                    border: '1px solid orange'\n                });\n                setTimeout(function () {\n                    $otherRepeatedPair.removeAttr('style');\n                    $target.empty().css({ color: '', border: '' });\n                }, 2000);\n            }\n        } else {\n            _setChoice();\n        }\n    };\n\n    const unsetChoice = function (interaction, $filledChoice, animate, triggerChange) {\n        const $container = containerHelper.get(interaction);\n        const choiceSerial = $filledChoice.data('serial');\n        const $choice = $container.find('.choice-area [data-serial=' + choiceSerial + ']');\n        const $parent = $filledChoice.parent();\n        const $sibling = $container.find(\n            '.choice-area [data-serial=' + $filledChoice.siblings('.target').data('serial') + ']'\n        );\n        const isNumberOfMaxAssociationsZero = parseInt(interaction.attr('maxAssociations')) === 0;\n        let usage = $choice.data('usage') || 0;\n\n        //decrease the  use for this choice\n        usage--;\n\n        $choice.data('usage', usage).removeClass('deactivated');\n\n        $filledChoice.removeClass('filled').removeData('serial').empty();\n\n        if (!interaction.swapping) {\n            if (triggerChange !== false) {\n                //a pair with one single element is not valid, so consider the response to be modified:\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type: 'removed',\n                    $pair: $filledChoice.parent()\n                });\n                instructionMgr.validateInstructions(interaction, { choice: $choice });\n            }\n\n            // if we are removing the sibling too, update its usage\n            // but only if number of maximum assotiations is zero\n            if (isNumberOfMaxAssociationsZero) {\n                $sibling.data('usage', $sibling.data('usage') - 1).removeClass('deactivated');\n            }\n\n            //completely empty pair:\n            if (\n                !$choice.siblings('div').hasClass('filled') &&\n                (isNumberOfMaxAssociationsZero || interaction.responseMappingMode)\n            ) {\n                //shall we remove it?\n                if (!$parent.hasClass('incomplete-pair')) {\n                    if (animate) {\n                        $parent.addClass('removing').fadeOut(500, function () {\n                            $$1(this).remove();\n                        });\n                    } else {\n                        $parent.remove();\n                    }\n                }\n            }\n        }\n    };\n\n    const getChoice = function (interaction, identifier) {\n        const $container = containerHelper.get(interaction);\n\n        //warning: do not use selector data-identifier=identifier because data-identifier may change dynamically\n        const choice = interaction.getChoiceByIdentifier(identifier);\n        if (!choice) {\n            throw new Error('cannot find a choice with the identifier : ' + identifier);\n        }\n        return $$1('.choice-area [data-serial=' + choice.getSerial() + ']', $container);\n    };\n\n    const renderEmptyPairs = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const max = parseInt(interaction.attr('maxAssociations'));\n        const $resultArea = $$1('.result-area', $container);\n\n        if (interaction.responseMappingMode || max === 0) {\n            $resultArea.append(pairTpl({ empty: true }));\n            hider.show($resultArea.children('.incomplete-pair'));\n        } else {\n            for (let i = 0; i < max; i++) {\n                $resultArea.append(pairTpl());\n            }\n        }\n    };\n\n    /**\n     * Builds a scroll observer that will make sure the dragged element keeps an accurate positioning\n     * @param {jQuery} $scrollContainer\n     * @returns {scrollObserver}\n     */\n    const scrollObserverFactory = function scrollObserverFactory($scrollContainer) {\n        let currentDraggable = null;\n        let beforeY = 0;\n        let beforeX = 0;\n        let afterY = 0;\n        let afterX = 0;\n\n        // reset the scroll observer context\n        function resetScrollObserver() {\n            currentDraggable = null;\n            beforeY = 0;\n            beforeX = 0;\n            afterY = 0;\n            afterX = 0;\n        }\n\n        // keep the position of the dragged element accurate with the scroll position\n        function onScrollCb() {\n            let x;\n            let y;\n            if (currentDraggable) {\n                beforeY = afterY;\n                beforeX = afterX;\n\n                if (afterY === 0 && beforeY === 0) beforeY = this.scrollTop;\n                if (afterX === 0 && beforeX === 0) beforeX = this.scrollLeft;\n\n                afterY = this.scrollTop;\n                afterX = this.scrollLeft;\n\n                y = (parseInt(currentDraggable.getAttribute('data-y'), 10) || 0) + (afterY - beforeY);\n                x = (parseInt(currentDraggable.getAttribute('data-x'), 10) || 0) + (afterX - beforeX);\n\n                // translate the element\n                currentDraggable.style.webkitTransform = currentDraggable.style.transform = `translate(${x}px, ${y}px)`;\n\n                // update the position attributes\n                currentDraggable.setAttribute('data-x', x);\n                currentDraggable.setAttribute('data-y', y);\n            }\n        }\n\n        // find the scroll container within the parents if any\n        $scrollContainer.parents().each(function findScrollContainer() {\n            const $el = $$1(this);\n            const ovf = $el.css('overflow');\n            if (ovf !== 'hidden' && ovf !== 'visible') {\n                $scrollContainer = $el;\n                return false;\n            }\n        });\n\n        // make sure the drop zones will follow the scroll\n        interact.dynamicDrop(true);\n\n        /**\n         * @typedef {Object} scrollObserver\n         */\n        return {\n            /**\n             * Gets the scroll container\n             * @returns {jQuery}\n             */\n            getScrollContainer: function getScrollContainer() {\n                return $scrollContainer;\n            },\n\n            /**\n             * Initializes the scroll observer while dragging a choice\n             * @param {HTMLElement|jQuery} draggedElement\n             */\n            start: function start(draggedElement) {\n                resetScrollObserver();\n                currentDraggable = draggedElement instanceof $$1 ? draggedElement.get(0) : draggedElement;\n                $scrollContainer.on('scroll.scrollObserver', _.throttle(onScrollCb, 50));\n            },\n\n            /**\n             * Tears down the the scroll observer once the dragging is done\n             */\n            stop: function stop() {\n                $scrollContainer.off('.scrollObserver');\n                resetScrollObserver();\n            }\n        };\n    };\n    const _getRawResponse = function (interaction) {\n        const response = [];\n        const $container = containerHelper.get(interaction);\n        $$1('.result-area>li', $container).each(function () {\n            const pair = [];\n            $$1(this)\n                .find('div')\n                .each(function () {\n                    const serial = $$1(this).data('serial');\n                    if (serial) {\n                        const choice = interaction.getChoice(serial);\n                        if (choice) {\n                            pair.push(choice.id());\n                        }\n                    }\n                });\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n    const _setInstructions = function (interaction) {\n        const min = parseInt(interaction.attr('minAssociations'), 10);\n        const max = parseInt(interaction.attr('maxAssociations'), 10);\n\n        //infinite association:\n        if (min === 0) {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('You may make as many association pairs as you want.'));\n            }\n        } else {\n            if (max === 0) {\n                instructionMgr.appendInstruction(interaction, __('The maximum number of association is unlimited.'));\n            }\n            //the max value is implicit since the appropriate number of empty pairs have already been created\n            let msg = __('You need to make') + ' ';\n            msg += min > 1 ? __('at least') + ' ' + min + ' ' + __('association pairs') : __('one association pair');\n            instructionMgr.appendInstruction(interaction, msg, function () {\n                if (_getRawResponse(interaction).length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    const render = function (interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const $choiceArea = $container.find('.choice-area');\n            const $resultArea = $container.find('.result-area');\n\n            let $activeChoice = null;\n            let scrollObserver = null;\n\n            let isDragAndDropEnabled;\n            let dragOptions;\n            let dropOptions;\n            let scaleX, scaleY;\n\n            let $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n            let choiceSelector = $choiceArea.selector + ' >li';\n            let resultSelector = $resultArea.selector + ' >li>div';\n            let binSelector = $container.selector + ' .remove-choice';\n\n            let _getChoice = function (serial) {\n                return $choiceArea.find('[data-serial=' + serial + ']');\n            };\n\n            /**\n             * @todo Tried to store $resultArea.find[...] in a variable but this fails\n             * @param $choice\n             * @param $target\n             * @private\n             */\n            const _setChoice = function ($choice, $target) {\n                setChoice(interaction, $choice, $target);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _resetSelection = function () {\n                if ($activeChoice) {\n                    $resultArea.find('.remove-choice').remove();\n                    $activeChoice.removeClass('active');\n                    $container.find('.empty').removeClass('empty');\n                    $activeChoice = null;\n                }\n            };\n\n            const _unsetChoice = function ($choice) {\n                unsetChoice(interaction, $choice, true);\n                sizeAdapter.adaptSize(\n                    $$1('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction))\n                );\n            };\n\n            const _isInsertionMode = function () {\n                return $activeChoice && $activeChoice.data('identifier');\n            };\n\n            const _isModeEditing = function () {\n                return $activeChoice && !$activeChoice.data('identifier');\n            };\n            const _activateChoice = function ($choice) {\n                _resetSelection();\n                $activeChoice = $choice;\n                $choice.addClass('active');\n                $resultArea.find('>li>.target').addClass('empty');\n            };\n\n            const _handleChoiceActivate = function ($target) {\n                if ($target.hasClass('deactivated')) {\n                    return;\n                }\n\n                if (_isModeEditing()) {\n                    //swapping:\n                    interaction.swapping = true;\n                    _unsetChoice($activeChoice);\n                    _setChoice($target, $activeChoice);\n                    _resetSelection();\n                    interaction.swapping = false;\n                } else {\n                    if ($target.hasClass('active')) {\n                        _resetSelection();\n                    } else {\n                        _activateChoice($target);\n                    }\n                }\n            };\n            const _activateResult = function ($target) {\n                const targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $resultArea\n                    .find('>li>.target')\n                    .filter(function () {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function () {\n                        return $$1(this).data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n            };\n\n            const _handleResultActivate = function ($target) {\n                let choiceSerial,\n                    targetSerial = $target.data('serial');\n\n                if (_isInsertionMode()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled')) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n                        //set choices:\n                        if (targetSerial) {\n                            _unsetChoice($target);\n                        }\n                        _setChoice($activeChoice, $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (_isModeEditing()) {\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if (targetSerial !== choiceSerial) {\n                        if ($target.hasClass('filled') || $activeChoice.siblings('div')[0] === $target[0]) {\n                            interaction.swapping = true; //hack to prevent deleting empty pair in infinite association mode\n                        }\n\n                        _unsetChoice($activeChoice);\n                        if (targetSerial) {\n                            //swapping:\n                            _unsetChoice($target);\n                            _setChoice(_getChoice(targetSerial), $activeChoice);\n                        }\n                        _setChoice(_getChoice(choiceSerial), $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n                } else if (targetSerial) {\n                    _activateResult($target);\n                    $target.append($bin);\n                }\n            };\n\n            // Point & click handlers\n\n            interact($container.selector).on('tap', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                _resetSelection();\n            });\n\n            interact($choiceArea.selector + ' >li').on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleChoiceActivate($target);\n                e.preventDefault();\n            });\n\n            interact($resultArea.selector + ' >li>div').on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _handleResultActivate($target);\n                e.preventDefault();\n            });\n\n            interact(binSelector).on('tap', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n\n                e.stopPropagation();\n                _unsetChoice($activeChoice);\n                _resetSelection();\n                e.preventDefault();\n            });\n\n            if (!interaction.responseMappingMode) {\n                _setInstructions(interaction);\n            }\n\n            // Drag & drop handlers\n\n            if (self.getOption && self.getOption('enableDragAndDrop') && self.getOption('enableDragAndDrop').associate) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').associate;\n            }\n\n            function _iFrameDragFix(draggableSelector, target) {\n                interactUtils.iFrameDragFixOn(function () {\n                    let $activeDrop = $$1(resultSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(resultSelector).fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    $activeDrop = $$1(choiceSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(choiceSelector + '.empty').fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    interact(draggableSelector).fire({\n                        type: 'dragend',\n                        target: target\n                    });\n                });\n            }\n\n            if (isDragAndDropEnabled) {\n                scrollObserver = scrollObserverFactory($container);\n                dragOptions = {\n                    inertia: false,\n                    autoScroll: {\n                        container: scrollObserver.getScrollContainer().get(0)\n                    },\n                    restrict: {\n                        restriction: '.qti-interaction',\n                        endOnly: false,\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                    }\n                };\n\n                // makes choices draggables\n                interact(choiceSelector + ':not(.deactivated)')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function (e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _activateChoice($target);\n                                    _iFrameDragFix(choiceSelector + ':not(.deactivated)', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function (e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function (e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n                                    // The reason of placing delay here is that there was timing conflict between \"draggable\" and \"drag-zone\" elements.\n                                    _.delay(function () {\n                                        _resetSelection();\n                                    });\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                // makes results draggables\n                interact(resultSelector + '.filled')\n                    .draggable(\n                        _.defaults(\n                            {\n                                onstart: function (e) {\n                                    let $target = $$1(e.target);\n                                    let scale;\n                                    $target.addClass('dragged');\n                                    _resetSelection();\n                                    _activateResult($target);\n                                    _iFrameDragFix(resultSelector + '.filled', e.target);\n                                    scale = interactUtils.calculateScale(e.target);\n                                    scaleX = scale[0];\n                                    scaleY = scale[1];\n\n                                    scrollObserver.start($activeChoice);\n                                },\n                                onmove: function (e) {\n                                    interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                                },\n                                onend: function (e) {\n                                    let $target = $$1(e.target);\n                                    $target.removeClass('dragged');\n\n                                    interactUtils.restoreOriginalPosition($target);\n\n                                    if ($activeChoice) {\n                                        _unsetChoice($activeChoice);\n                                    }\n                                    _resetSelection();\n\n                                    interactUtils.iFrameDragFixOff();\n\n                                    scrollObserver.stop();\n                                }\n                            },\n                            dragOptions\n                        )\n                    )\n                    .styleCursor(false);\n\n                dropOptions = {\n                    overlap: 'pointer',\n                    ondragenter: function (e) {\n                        $$1(e.target).addClass('dropzone');\n                        $$1(e.relatedTarget).addClass('droppable');\n                    },\n                    ondragleave: function (e) {\n                        $$1(e.target).removeClass('dropzone');\n                        $$1(e.relatedTarget).removeClass('droppable');\n                    }\n                };\n\n                // makes hotspots droppables\n                interact(resultSelector).dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function (e) {\n                                this.ondragleave(e);\n                                _handleResultActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n\n                // makes available choices droppables\n                interact(choiceSelector + '.empty').dropzone(\n                    _.defaults(\n                        {\n                            ondrop: function (e) {\n                                this.ondragleave(e);\n                                _handleChoiceActivate($$1(e.target));\n                            }\n                        },\n                        dropOptions\n                    )\n                );\n            }\n\n            // interaction init\n\n            renderEmptyPairs(interaction);\n\n            sizeAdapter.adaptSize($$1('.result-area .target, .choice-area .qti-choice', $container));\n            resolve();\n        });\n    };\n\n    const resetResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //destroy selected choice:\n        $container.find('.result-area .active').each(function () {\n            interactUtils.tapOn(this);\n        });\n\n        $$1('.result-area>li>div', $container).each(function () {\n            unsetChoice(interaction, $$1(this), false, false);\n        });\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _setPairs = function (interaction, pairs) {\n        const $container = containerHelper.get(interaction);\n        let addedPairs = 0;\n        let $emptyPair = $$1('.result-area>li:first', $container);\n        if (pairs && interaction.getResponseDeclaration().attr('cardinality') === 'single' && pairs.length) {\n            pairs = [pairs];\n        }\n        _.forEach(pairs, function (pair) {\n            if ($emptyPair.length) {\n                let $divs = $emptyPair.children('div');\n                setChoice(interaction, getChoice(interaction, pair[0]), $$1($divs[0]));\n                setChoice(interaction, getChoice(interaction, pair[1]), $$1($divs[1]));\n                addedPairs++;\n                $emptyPair = $emptyPair.next('li');\n            } else {\n                //the number of pairs exceeds the maximum allowed pairs: break;\n                return false;\n            }\n        });\n\n        return addedPairs;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' >li').unset();\n        interact($container.find('.result-area').selector + ' >li>div').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        $$1('.result-area', $container).empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        let aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        let bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        let state = {};\n        let response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the associate interaction\n     * @exports qtiCommonRenderer/renderers/interactions/AssociateInteraction\n     */\n    var AssociateInteraction = {\n        qtiClass: 'associateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n\n        renderEmptyPairs: renderEmptyPairs\n    };\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',['lodash', 'jquery', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter', 'util/adaptSize', 'services/features'], function (_, $$1, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, sizeAdapter, adaptSize, features) { 'use strict';\n\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n  sizeAdapter = sizeAdapter && Object.prototype.hasOwnProperty.call(sizeAdapter, 'default') ? sizeAdapter['default'] : sizeAdapter;\n  adaptSize = adaptSize && Object.prototype.hasOwnProperty.call(adaptSize, 'default') ? adaptSize['default'] : adaptSize;\n  features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    \n    return \" allow-elimination-visible\";\n    }\n\n  function program7(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data) {\n    \n    \n    return \" horizontal\";\n    }\n\n  function program13(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.listStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.listStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program15(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  class=\\\"qti-interaction qti-blockInteraction qti-choiceInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowEliminationVisible), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n  data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  data-qti-class=\\\"choiceInteraction\\\"\\n  \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n>\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <ol\\n    class=\\\"plain block-listing solid choice-area\";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.listStyle), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\"\\n    aria-labelledby=\\\"\";\n    if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\"\\n  >\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data};\n    if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  </ol>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014-2022 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  const KEY_CODE_SPACE = 32;\n  const KEY_CODE_ENTER = 13;\n  const KEY_CODE_LEFT = 37;\n  const KEY_CODE_UP = 38;\n  const KEY_CODE_RIGHT = 39;\n  const KEY_CODE_DOWN = 40;\n\n  /**\n   * Propagate the checked state to the actual input.\n   * @type {Function}\n   * @param {jQuery} $choiceBox - list element with the class `.qti-choice`\n   * @param {Boolean} state\n   * @private\n   */\n  const _triggerInput = function _triggerInput($choiceBox, state) {\n      const $input = $choiceBox.find('input:radio,input:checkbox').not('[disabled]').not('.disabled');\n      const $choiceBoxes = $choiceBox.add($choiceBox.siblings());\n\n      if (!$input.length) {\n          return;\n      }\n\n      if (!_.isBoolean(state)) {\n          state = !$input.prop('checked');\n      }\n\n      $input.prop('checked', state);\n      $input.trigger('change');\n\n      $choiceBoxes.removeClass('user-selected');\n      $choiceBoxes\n          .find('input:checked')\n          .not('[disabled]')\n          .not('.disabled')\n          .parents('.qti-choice')\n          .addClass('user-selected');\n  };\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   *\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @param {jQueryElement} $container\n   */\n  const _pseudoLabel = function _pseudoLabel(interaction, $container) {\n      const inputSelector =\n          '.qti-choice input:radio:not([disabled]):not(.disabled), .qti-choice input:checkbox:not([disabled]):not(.disabled)';\n      $container.off('.commonRenderer');\n\n      $container\n          .on('keydown.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const $qtiChoice = $$1(this).closest('.qti-choice');\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_UP || keyCode === KEY_CODE_LEFT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .prev('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              } else if (keyCode === KEY_CODE_DOWN || keyCode === KEY_CODE_RIGHT) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  $qtiChoice\n                      .next('.qti-choice')\n                      .find('input:radio,input:checkbox')\n                      .not('[disabled]')\n                      .not('.disabled')\n                      .focus();\n              }\n          })\n          .on('keyup.commonRenderer.keyNavigation', inputSelector, function (e) {\n              const keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n              if (keyCode === KEY_CODE_SPACE || keyCode === KEY_CODE_ENTER) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  _triggerInput($$1(this).closest('.qti-choice'));\n              }\n          });\n\n      $container.on('click.commonRenderer', '.qti-choice', function (e) {\n          const $choiceBox = $$1(this);\n          let state;\n          const eliminator = e.target.dataset && e.target.dataset.eliminable;\n          const input = this.querySelector('.real-label > input');\n\n          // if the click has been triggered by a keyboard check, prevent this listener to cancel this check\n          if (e.originalEvent && $$1(e.originalEvent.target).is('input')) {\n              return;\n          }\n\n          //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n          if ($choiceBox.closest('.qti-item').hasClass('prevent-click-handler')) {\n              return;\n          }\n\n          e.preventDefault();\n          e.stopPropagation(); //required otherwise any tao scoped, form initialization might prevent it from working\n\n          if (!_.isUndefined(eliminator)) {\n              state = false;\n              if (eliminator === 'trigger') {\n                  this.classList.toggle('eliminated');\n              }\n          }\n\n          _triggerInput($choiceBox, state);\n\n          if (this.classList.contains('eliminated')) {\n              input.setAttribute('disabled', 'disabled');\n          } else {\n              input.removeAttribute('disabled');\n          }\n\n          instructionMgr.validateInstructions(interaction, { choice: $choiceBox });\n          containerHelper.triggerResponseChangeEvent(interaction);\n          $$1(input).focus();\n      });\n  };\n\n  /**\n   * Get the responses from the DOM.\n   * @private\n   * @param {Object} interaction - the interaction instance\n   * @returns {Array} the list of choices identifiers\n   */\n  const _getRawResponse = function _getRawResponse(interaction) {\n      const values = [];\n      const $container = containerHelper.get(interaction);\n      $$1('.real-label > input[name=response-' + interaction.getSerial() + ']:checked', $container).each(function () {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Define the instructions for the interaction\n   * @private\n   * @param {Object} interaction - the interaction instance\n   */\n  const _setInstructions = function _setInstructions(interaction) {\n      const min = interaction.attr('minChoices');\n      const max = interaction.attr('maxChoices');\n      let msg;\n      const choiceCount = _.size(interaction.getChoices());\n\n      const highlightInvalidInput = function highlightInvalidInput($choice) {\n          const $input = $choice.find('.real-label > input');\n          const $icon = $choice.find('.real-label > span');\n\n          const choiceStyle = $choice.attr('style');\n          const iconStyle = $icon.attr('style');\n          $choice.css('color', '#BA122B');\n          $icon.css('color', '#BA122B').addClass('cross error');\n\n          let timeout = interaction.data('__instructionTimeout');\n\n          if (timeout) {\n              clearTimeout(timeout);\n          }\n          timeout = setTimeout(function () {\n              $input.prop('checked', false);\n              $choice.attr('style', choiceStyle);\n              $icon.attr('style', iconStyle).removeClass('cross');\n              $choice.toggleClass('user-selected', false);\n              containerHelper.triggerResponseChangeEvent(interaction);\n          }, 150);\n          interaction.data('__instructionTimeout', timeout);\n      };\n\n      // if maxChoice = 1, use the radio group behaviour\n      // if maxChoice = 0, infinite choice possible\n      // there are 5 cases according AUT-345 Choice interaction: reduce edge cases constraints\n      if (min === 1 && (max === 0 || max === choiceCount || typeof max === 'undefined')) {\n          // Multiple Choice: 4.Constraint: Answer required -> minChoices = 1 / maxChoices = 0 -> “You need to select at least 1 choice”\n          // Multiple Choice: 5.Constraint: Other constraints -> minChoices = 1 / maxChoices = (N or Disabled)\n          msg = __('You need to select at least 1 choice.');\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= 1) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min >= 1 && max >= 2 && min !== max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> “You must select from minChoices to maxChoices choices. for the correct answer“\n          msg = __('You need to select from %s to %s choices.', min, max);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= min && _getRawResponse(interaction).length < max) {\n                  this.reset();\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && min === max) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices ≠ Disabled -> “You need to select {minChoices = maxChoices value} choices.“\n          msg = __('You need to select %s choices', min);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length === min) {\n                  this.setLevel('success');\n              } else if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  this.update({\n                      level: 'warning',\n                      timeout: 2000,\n                      start: function () {\n                          if (data && data.choice) {\n                              highlightInvalidInput(data.choice);\n                          }\n                      },\n                      stop: function () {\n                          this.setLevel('info');\n                      }\n                  });\n                  this.setState('fulfilled');\n              }  else {\n                  this.reset();\n              }\n          });\n      } else if (max > 1 && max < choiceCount && (typeof min === 'undefined' || min === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices = Disabled / maxChoices ≠ Disabled  -> \"You can select up to {maxChoices value} choices.\"\n          msg = __('You can select up to %s choices.', max);\n          instructionMgr.appendInstruction(interaction, msg, function (data) {\n              if (_getRawResponse(interaction).length >= max) {\n                  this.setMessage(__('Maximum choices reached'));\n                  if (this.checkState('fulfilled')) {\n                      this.update({\n                          level: 'warning',\n                          timeout: 2000,\n                          start: function () {\n                              if (data && data.choice) {\n                                  highlightInvalidInput(data.choice);\n                              }\n                          },\n                          stop: function () {\n                              this.setLevel('info');\n                          }\n                      });\n                  }\n                  this.setState('fulfilled');\n              } else {\n                  this.reset();\n              }\n          });\n      } else if (min > 1 && (typeof max === 'undefined' || max === 0)) {\n          // Multiple Choice: 5. Constraint: Other constraints -> minChoices ≠ Disabled / maxChoices = Disabled or 0   -> \"You need to select at least {minChoices value} choices.\"\"\n          msg = __('You need to select at least %s choices.', min);\n          instructionMgr.appendInstruction(interaction, msg, function () {\n              if (_getRawResponse(interaction).length >= min) {\n                  this.setLevel('success');\n              } else {\n                  this.reset();\n              }\n          });\n      }\n      // Single choice: 1.Constraint: None -> minChoices = 0 / maxChoices = 1 -> No messages\n      // Single choice: 2.Constraint: Answer required  -> minChoices = 1, maxChoices = 1 -> No messages\n      // Multiple Choice: 3.Constraint: None  -> minChoices = 0, maxChoices = 0 -> No messages\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const render = function render(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      _pseudoLabel(interaction, $container);\n\n      _setInstructions(interaction);\n\n      if (interaction.attr('orientation') === 'horizontal') {\n          const $elements = $$1('.add-option, .result-area .target, .choice-area .qti-choice', $container);\n          sizeAdapter.adaptSize($elements);\n\n          $$1(document).on('themeapplied.choiceInteraction', () => adaptSize.height($elements));\n      }\n  };\n\n  /**\n   * Reset the responses previously set\n   *\n   * @param {Object} interaction - the interaction instance\n   */\n  const resetResponse = function resetResponse(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      $$1('.real-label > input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set a new response to the rendered interaction.\n   * Please note that it does not reset previous responses.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} response - the PCI formatted response\n   */\n  const setResponse = function setResponse(interaction, response) {\n      const $container = containerHelper.get(interaction);\n\n      try {\n          _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n              const $input = $container.find('.real-label > input[value=\"' + identifier + '\"]').prop('checked', true);\n              $input.closest('.qti-choice').toggleClass('user-selected', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the response formatted in PCI\n   */\n  const getResponse = function getResponse(interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Check if a choice interaction is choice-eliminable\n   *\n   * @param {Object} interaction\n   * @returns {boolean}\n   */\n  const isEliminable = function isEliminable(interaction) {\n      return /\\beliminable\\b/.test(interaction.attr('class'));\n  };\n\n  /**\n   * Set additional data to the template (data that are not really part of the model).\n   * @param {Object} interaction - the interaction\n   * @param {Object} [data] - interaction custom data\n   * @returns {Object} custom data\n   */\n  const getCustomData = function getCustomData(interaction, data) {\n      const listStyleVisible = features.isVisible('taoQtiItem/creator/interaction/choice/property/listStyle');\n      const listStyles = (interaction.attr('class') || '').match(/\\blist-style-[\\w-]+/) || [];\n      return _.merge(data || {}, {\n          horizontal: interaction.attr('orientation') === 'horizontal',\n          listStyle: listStyleVisible ? listStyles.pop() : void 0,\n          eliminable: isEliminable(interaction),\n          allowEliminationVisible: features.isVisible('taoQtiItem/creator/interaction/choice/property/allowElimination')\n      });\n  };\n\n  /**\n   * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n   * @param {Object} interaction - the interaction\n   */\n  const destroy = function destroy(interaction) {\n      const $container = containerHelper.get(interaction);\n\n      const timeout = interaction.data('__instructionTimeout');\n\n      if (timeout) {\n          clearTimeout(timeout);\n      }\n\n      //remove event\n      $container.off('.commonRenderer');\n      $$1(document).off('.commonRenderer').off('.choiceInteraction');\n\n      //remove instructions\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  const setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n\n          const $container = containerHelper.get(interaction);\n\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n              $$1('.qti-simpleChoice', $container)\n                  .sort(function (a, b) {\n                      const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                      const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('.choice-area', $container));\n          }\n\n          //restore eliminated choices\n          if (isEliminable(interaction) && _.isArray(state.eliminated) && state.eliminated.length) {\n              _.forEach(state.eliminated, function (identifier) {\n                  $container.find('.qti-simpleChoice[data-identifier=\"' + identifier + '\"]').addClass('eliminated');\n              });\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  const getState = function getState(interaction) {\n      const $container = containerHelper.get(interaction);\n      const state = {};\n      const response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          state.order = [];\n          $$1('.qti-simpleChoice', $container).each(function () {\n              state.order.push($$1(this).data('identifier'));\n          });\n      }\n\n      //store the eliminated choices\n      if (isEliminable(interaction)) {\n          state.eliminated = [];\n          $container.find('.qti-simpleChoice.eliminated').each(function () {\n              state.eliminated.push($$1(this).data('identifier'));\n          });\n      }\n\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the choice interaction\n   * @exports qtiCommonRenderer/renderers/interactions/ChoiceInteraction\n   */\n  var ChoiceInteraction = {\n      qtiClass: 'choiceInteraction',\n      template: tpl,\n      getData: getCustomData,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'i18n'], function (_, Handlebars, Helpers0, containerHelper, pciResponse, __) { 'use strict';\n\n        _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n        Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n        Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n        containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n        pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n        __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n\n        if (!Helpers0.__initialized) {\n          Helpers0(Handlebars);\n          Helpers0.__initialized = true;\n        }\n        var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n          this.compilerInfo = [4,'>= 1.0.0'];\n        helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n          var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n        function program1(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \" lang=\\\"\"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\\"\";\n          return buffer;\n          }\n\n          buffer += \"<a class=\\\"qti-interaction qti-inlineInteraction qti-endAttemptInteraction btn small btn-info\\\"\\n        data-serial=\\\"\";\n          if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n          else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n          buffer += escapeExpression(stack1)\n            + \"\\\" \\n        data-qti-class=\\\"endAttemptInteraction\\\"\\n        value=\\\"false\\\"\\n        tabindex=\\\"0\\\"\\n        \";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \">\\n        \"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\n</a>\\n\";\n          return buffer;\n          });\n        function tpl(data, options, asString) {\n          var html = Template(data, options);\n          return (asString || true) ? html : $(html);\n        }\n\n        /**\n         * This program is free software; you can redistribute it and/or\n         * modify it under the terms of the GNU General Public License\n         * as published by the Free Software Foundation; under version 2\n         * of the License (non-upgradable).\n         *\n         * This program is distributed in the hope that it will be useful,\n         * but WITHOUT ANY WARRANTY; without even the implied warranty of\n         * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n         * GNU General Public License for more details.\n         *\n         * You should have received a copy of the GNU General Public License\n         * along with this program; if not, write to the Free Software\n         * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n         *\n         * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n         */\n\n        /**\n         * Init rendering, called after template injected into the DOM\n         * All options are listed in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @fires endattempt with the response identifier\n         */\n        function render(interaction, options) {\n            var $container = containerHelper.get(interaction);\n\n            //on click,\n            $container.on('click.commonRenderer', function(e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if (\n                    $(e.currentTarget)\n                        .closest('.qti-item')\n                        .hasClass('prevent-click-handler')\n                ) {\n                    return;\n                }\n                $container.val(true);\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                $container.trigger('endattempt', [interaction.attr('responseIdentifier')]);\n            });\n        }\n\n        /**\n         * Set the response to the rendered interaction.\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @param {object} response\n         */\n        function setResponse(interaction, response) {\n            _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n        }\n\n        /**\n         * Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n        function getResponse(interaction) {\n            var val = containerHelper.get(interaction).val();\n            val = val && val !== 'false' && val !== '0';\n            return pciResponse.serialize([val], interaction);\n        }\n\n        /**\n             * Reset the response ... wondering if it is useful ...\n\n             * @param {type} interaction\n             */\n        function resetResponse(interaction) {\n            _setVal(interaction, false);\n        }\n\n        /**\n         * Set the interaction state. It could be done anytime with any state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @param {Object} state - the interaction state\n         */\n        function setState(interaction, state) {\n            if (_.isObject(state)) {\n                if (state.response) {\n                    interaction.resetResponse();\n                    interaction.setResponse(state.response);\n                }\n            }\n        }\n\n        /**\n         * Get the interaction state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @returns {Object} the interaction current state\n         */\n        function getState(interaction) {\n            var state = {};\n            var response = interaction.getResponse();\n\n            if (response) {\n                state.response = response;\n            }\n            return state;\n        }\n\n        /**\n         *\n         * @param {Object} interaction\n         * @param {Boolean} val\n         */\n        function _setVal(interaction, val) {\n            containerHelper\n                .get(interaction)\n                .val(val)\n                .change();\n        }\n\n        /**\n         * Destroy the interaction to restore the dom as it is before render() is called\n         *\n         * @param {Object} interaction\n         */\n        function destroy(interaction) {\n            //remove event\n            containerHelper.get(interaction).off('.commonRenderer');\n        }\n\n        /**\n         * Define default template data\n         *\n         * @param {Object} interaction\n         * @param {Object} data\n         * @returns {Object}\n         */\n        function getCustomData(interaction, data) {\n            if (!data.attributes.title) {\n                data.attributes.title = __('End Attempt');\n            }\n            return data;\n        }\n\n        var EndAttemptInteraction = {\n            qtiClass: 'endAttemptInteraction',\n            template: tpl,\n            getData: getCustomData,\n            render: render,\n            getContainer: containerHelper.get,\n            setResponse: setResponse,\n            getResponse: getResponse,\n            resetResponse: resetResponse,\n            destroy: destroy,\n            setState: setState,\n            getState: getState\n        };\n\n        return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',['jquery', 'lodash', 'i18n', 'services/features', 'util/strLimiter', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'ckeditor', 'taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'ui/tooltip', 'util/converter', 'core/logger'], function ($$1, _, __, features, strLimiter, Handlebars, Helpers0, containerHelper, instructionMgr, ckEditor, ckConfigurator, patternMaskHelper, tooltip, converter, loggerFactory) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    strLimiter = strLimiter && Object.prototype.hasOwnProperty.call(strLimiter, 'default') ? strLimiter['default'] : strLimiter;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    ckEditor = ckEditor && Object.prototype.hasOwnProperty.call(ckEditor, 'default') ? ckEditor['default'] : ckEditor;\n    ckConfigurator = ckConfigurator && Object.prototype.hasOwnProperty.call(ckConfigurator, 'default') ? ckConfigurator['default'] : ckConfigurator;\n    patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n    converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(14, program14, data),fn:self.program(10, program10, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n                <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\" contenteditable></div>\\n            \";\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      \n      return \" attributes.class\";\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n            \";\n      stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n                <textarea\\n                    class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                    name=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"_\"\n        + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n        + \"\\\"\\n                    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                    aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n                ></textarea>\\n            \";\n      return buffer;\n      }\n    function program16(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"pattern=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n        \";\n      stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      return buffer;\n      }\n    function program19(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n        <div class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" contenteditable></div>\\n        \";\n      return buffer;\n      }\n\n    function program21(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n            <textarea\\n                class=\\\"text-container text-\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \" solid\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n                \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n                aria-labelledby=\\\"\";\n      if (helper = helpers.promptId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.promptId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n            ></textarea>\\n        \";\n      return buffer;\n      }\n\n    function program23(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            \";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        \";\n      return buffer;\n      }\n\n    function program25(depth0,data) {\n      \n      var buffer = \"\", stack1, helper, options;\n      buffer += \"\\n            <span class=\\\"text-counter-chars\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxLength), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n            <span class=\\\"text-counter-words\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(26, program26, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\";\n      stack1 = (helper = helpers.dompurify || (depth0 && depth0.dompurify),options={hash:{},data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options) : helperMissing.call(depth0, \"dompurify\", ((stack1 = (depth0 && depth0.constraintHints)),stack1 == null || stack1 === false ? stack1 : stack1.maxWords), options));\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</span>\\n        \";\n      return buffer;\n      }\n    function program26(depth0,data) {\n      \n      \n      return \" style=\\\"display: none\\\"\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-extendedTextInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"extendedTextInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.multiple), {hash:{},inverse:self.program(18, program18, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"text-counter\\\">\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template$1 = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n      buffer += \"<span class=\\\"\";\n      if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"</span>\\n\";\n      return buffer;\n      });\n    function countTpl(data, options, asString) {\n      var html = Template$1(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Create a logger\n     */\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js');\n\n    const hideXhtmlConstraints = !features.isVisible(\n        'taoQtiItem/creator/interaction/extendedText/property/xhtmlConstraints'\n    );\n    const hideXhtmlRecommendations = !features.isVisible(\n        'taoQtiItem/creator/interaction/extendedText/property/xhtmlRecommendations'\n    );\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Promise} rendering is async\n     */\n    function render(interaction) {\n        return new Promise(function (resolve, reject) {\n            let $el, expectedLength, minStrings, patternMask, placeholderType, editor;\n            let _styleUpdater, themeLoaded, _getNumStrings;\n            let $container = containerHelper.get(interaction);\n\n            const multiple = _isMultiple(interaction);\n            const limiter = inputLimiter(interaction);\n\n            const placeholderText = interaction.attr('placeholderText');\n\n            const getItemLanguage = () => {\n                let itemLang = $container.closest('.qti-item').attr('lang');\n                let itemLocale = itemLang && itemLang.split('-')[0];\n                if (!itemLocale) {\n                    itemLang = window.document.documentElement.getAttribute('lang');\n                    itemLocale = itemLang && itemLang.split('-')[0];\n                }\n                return itemLocale;\n            };\n\n            const toolbarType = 'extendedText';\n            const ckOptions = {\n                resize_enabled: true,\n                secure: location.protocol === 'https:',\n                forceCustomDomain: true,\n                language: getItemLanguage()\n            };\n\n            if (!multiple) {\n                $el = $container.find('textarea');\n                if (placeholderText) {\n                    $el.attr('placeholder', placeholderText);\n                }\n                if (_getFormat(interaction) === 'xhtml') {\n                    if (hideXhtmlConstraints && hideXhtmlRecommendations) {\n                        $container.find('.text-counter').hide();\n                    }\n\n                    if (hideXhtmlConstraints) {\n                        limiter.enabled = false;\n                    }\n\n                    _styleUpdater = function () {\n                        let qtiItemStyle, $editorBody, qtiItem;\n\n                        if (editor.document) {\n                            qtiItem = $$1('.qti-item').get(0);\n                            qtiItemStyle = qtiItem.currentStyle || window.getComputedStyle(qtiItem);\n\n                            if (editor.document.$ && editor.document.$.body) {\n                                $editorBody = $$1(editor.document.$.body);\n                            } else {\n                                $editorBody = $$1(editor.document.getBody().$);\n                            }\n\n                            $editorBody.css({\n                                'background-color': 'transparent',\n                                color: qtiItemStyle.color\n                            });\n                        }\n                    };\n                    themeLoaded = function () {\n                        _styleUpdater();\n                    };\n\n                    editor = _setUpCKEditor(interaction, ckOptions);\n                    if (!editor) {\n                        reject('Unable to instantiate ckEditor');\n                    }\n\n                    editor.on('instanceReady', function () {\n                        _styleUpdater();\n\n                        //TAO-6409, disable navigation from cke toolbar\n                        if (editor.container && editor.container.$) {\n                            $$1(editor.container.$).addClass('no-key-navigation');\n                        }\n\n                        //it seems there's still something done after loaded, so resolved must be defered\n                        _.delay(resolve, 300);\n                    });\n                    if (editor.status === 'ready' || editor.status === 'loaded') {\n                        _.defer(resolve);\n                    }\n                    editor.on('configLoaded', function () {\n                        editor.config = ckConfigurator.getConfig(editor, toolbarType, ckOptions);\n\n                        if (limiter.enabled) {\n                            limiter.listenTextInput();\n                        }\n                    });\n                    editor.on('change', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    $$1(document).on('themechange.themeloader', themeLoaded);\n                } else {\n                    $el.on('keyup.commonRenderer change.commonRenderer', function () {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    if (limiter.enabled) {\n                        limiter.listenTextInput();\n                    }\n\n                    resolve();\n                }\n\n                //multiple inputs\n            } else {\n                $el = $container.find('input');\n                minStrings = interaction.attr('minStrings');\n                expectedLength = interaction.attr('expectedLength');\n                patternMask = interaction.attr('patternMask');\n\n                //setting the checking for minimum number of answers\n                if (minStrings) {\n                    //get the number of filled inputs\n                    _getNumStrings = function ($element) {\n                        let num = 0;\n                        $element.each(function () {\n                            if ($$1(this).val() !== '') {\n                                num++;\n                            }\n                        });\n\n                        return num;\n                    };\n\n                    minStrings = parseInt(minStrings, 10);\n                    if (minStrings > 0) {\n                        $el.on('blur.commonRenderer', function () {\n                            setTimeout(function () {\n                                //checking if the user was clicked outside of the input fields\n\n                                //TODO remove notifications in favor of instructions\n\n                                if (!$el.is(':focus') && _getNumStrings($el) < minStrings) {\n                                    instructionMgr.appendNotification(\n                                        interaction,\n                                        `${__('The minimum number of answers is ')} : ${minStrings}`,\n                                        'warning'\n                                    );\n                                }\n                            }, 100);\n                        });\n                    }\n                }\n\n                //set the fields width\n                if (expectedLength) {\n                    expectedLength = parseInt(expectedLength, 10);\n\n                    if (expectedLength > 0) {\n                        $el.each(function () {\n                            $$1(this).css('width', `${expectedLength}em`);\n                        });\n                    }\n                }\n\n                //set the fields pattern mask\n                if (patternMask) {\n                    $el.each(function () {\n                        _setPattern($$1(this), patternMask);\n                    });\n                }\n\n                //set the fields placeholder\n                if (placeholderText) {\n                    /**\n                     * The type of the fileds placeholder:\n                     * multiple - set placeholder for each field\n                     * first - set placeholder only for first field\n                     * none - dont set placeholder\n                     */\n                    placeholderType = 'first';\n\n                    if (placeholderType === 'multiple') {\n                        $el.each(function () {\n                            $$1(this).attr('placeholder', placeholderText);\n                        });\n                    } else if (placeholderType === 'first') {\n                        $el.first().attr('placeholder', placeholderText);\n                    }\n                }\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Reset the textarea / ckEditor\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function resetResponse(interaction) {\n        if (_getFormat(interaction) === 'xhtml') {\n            _getCKEditor(interaction).setData('');\n        } else {\n            containerHelper.get(interaction).find('input, textarea').val('');\n        }\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {object} response\n     */\n    function setResponse(interaction, response) {\n        const _setMultipleVal = (identifier, value) => {\n            interaction.getContainer().find(`#${identifier}`).val(value);\n        };\n\n        const baseType = interaction.getResponseDeclaration().attr('baseType');\n\n        if (response.base === null && Object.keys(response).length === 1) {\n            response = { base: { string: '' } };\n        }\n\n        if (response.base && typeof response.base[baseType] !== 'undefined') {\n            setText(interaction, response.base[baseType]);\n        } else if (response.list && response.list[baseType]) {\n            for (let i in response.list[baseType]) {\n                const serial = typeof response.list.serial === 'undefined' ? '' : response.list.serial[i];\n                _setMultipleVal(`${serial}_${i}`, response.list[baseType][i]);\n            }\n        } else {\n            throw new Error('wrong response format in argument.');\n        }\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {object}\n     */\n    function getResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const attributes = interaction.getAttributes();\n        const responseDeclaration = interaction.getResponseDeclaration();\n        const baseType = responseDeclaration.attr('baseType');\n        const numericBase = attributes.base || 10;\n        const multiple = !!(\n            attributes.maxStrings &&\n            (responseDeclaration.attr('cardinality') === 'multiple' ||\n                responseDeclaration.attr('cardinality') === 'ordered')\n        );\n        const ret = multiple ? { list: {} } : { base: {} };\n        let values;\n        let value = '';\n\n        if (multiple) {\n            values = [];\n\n            $container.find('input').each(function (i) {\n                const editorValue = $$1(this).val();\n\n                if (attributes.placeholderText && value === attributes.placeholderText) {\n                    values[i] = '';\n                } else {\n                    const convertedValue = converter.convert(editorValue);\n                    if (baseType === 'integer') {\n                        values[i] = parseInt(convertedValue, numericBase);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'float') {\n                        values[i] = parseFloat(convertedValue);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    } else if (baseType === 'string') {\n                        values[i] = convertedValue;\n                    }\n                }\n            });\n\n            ret.list[baseType] = values;\n        } else {\n            if (attributes.placeholderText && _getTextareaValue(interaction) === attributes.placeholderText) {\n                value = '';\n            } else {\n                if (baseType === 'integer') {\n                    value = parseInt(converter.convert(_getTextareaValue(interaction)), numericBase);\n                } else if (baseType === 'float') {\n                    value = converter.convert(_getTextareaValue(interaction));\n                } else if (baseType === 'string') {\n                    value = converter.convert(_getTextareaValue(interaction, true));\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n        }\n\n        return ret;\n    }\n\n    /**\n     * Creates an input limiter object\n     * @param {Object} interaction - the extended text interaction\n     * @returns {Object} the limiter\n     */\n    function inputLimiter(interaction) {\n        const $container = containerHelper.get(interaction);\n        const expectedLength = interaction.attr('expectedLength');\n        const expectedLines = interaction.attr('expectedLines');\n        const patternMask = interaction.attr('patternMask');\n        const isCke = _getFormat(interaction) === 'xhtml';\n        let patternRegEx;\n        let $textarea, $charsCounter, $wordsCounter, maxWords, maxLength, $maxLengthCounter, $maxWordsCounter;\n        let enabled = false;\n\n        if (expectedLength || expectedLines || patternMask) {\n            enabled = true;\n            $textarea = $$1('.text-container', $container);\n            $charsCounter = $$1('.count-chars', $container);\n            $wordsCounter = $$1('.count-words', $container);\n            $maxLengthCounter = $$1('.count-max-length', $container);\n            $maxWordsCounter = $$1('.count-max-words', $container);\n\n            if (patternMask !== '') {\n                maxWords = parseInt(patternMaskHelper.parsePattern(patternMask, 'words'), 10);\n                maxLength = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n                maxWords = _.isNaN(maxWords) ? 0 : maxWords;\n                maxLength = _.isNaN(maxLength) ? 0 : maxLength;\n                if (!maxLength && !maxWords) {\n                    patternRegEx = new RegExp(patternMask);\n                }\n                $maxLengthCounter.text(maxLength);\n                $maxWordsCounter.text(maxWords);\n            }\n        }\n\n        /**\n         * The limiter instance\n         */\n        const limiter = {\n            /**\n             * Is the limiter enabled regarding the interaction configuration\n             */\n            enabled,\n\n            /**\n             * Listen for text input into the interaction and limit it if necessary\n             */\n            listenTextInput() {\n                const ignoreKeyCodes = [\n                    8, // backspace\n                    13, // enter\n                    16, // shift\n                    17, // control\n                    46, // delete\n                    37, // arrow left\n                    38, // arrow up\n                    39, // arrow right\n                    40, // arrow down\n                    35, // home\n                    36, // end\n\n                    // ckeditor specific:\n                    1114177, // home\n                    3342401, // Shift + home\n                    1114181, // end\n                    3342405, // Shift + end\n\n                    2228232, // Shift + backspace\n                    2228261, // Shift + arrow left\n                    4456485, // Alt   + arrow left\n                    2228262, // Shift + arrow up\n                    2228263, // Shift + arrow right\n                    4456487, // Alt   + arrow right\n                    2228264, // Shift + arrow down\n                    2228237, // Shift + enter\n\n                    1114120, // Ctrl + backspace\n                    1114177, // Ctrl + a\n                    1114202, // Ctrl + z\n                    1114200 // Ctrl + x\n                ];\n                const spaceKeyCodes = [\n                    32, // space\n                    13, // enter\n                    2228237 // shift + enter in ckEditor\n                ];\n                let isComposing = false;\n                let hasCompositionJustEnded = false;\n\n                const acceptKeyCode = keyCode => ignoreKeyCodes.includes(keyCode);\n                const emptyOrSpace = txt => (txt && txt.trim() === '') || /\\^s*$/.test(txt);\n                const hasSpace = txt => /\\s+/.test(txt);\n                const getCharBefore = (str, pos) => str && str.substring(Math.max(0, pos - 1), pos);\n                const getCharAfter = (str, pos) => str && str.substring(pos, pos + 1);\n                const noSpaceNode = node =>\n                    node.type === ckEditor.NODE_TEXT || (!node.isBlockBoundary() && node.getName() !== 'br');\n                const getPreviousNotEmptyNode = range => {\n                    let node = range.getPreviousNode();\n                    /**\n                     * The previous node isn't always the right one, because it can be an empty <b> tag for example.\n                     * So we need to get the previous node until we find a non empty one, but we should not go above body.\n                     */\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let previousSourceNode = node.getPreviousSourceNode();\n                        let nodeElement = previousSourceNode;\n                        if (previousSourceNode && previousSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = previousSourceNode.parentNode || previousSourceNode.$.parentNode;\n                        }\n                        if (\n                            !nodeElement ||\n                            !nodeElement.ownerDocument ||\n                            !nodeElement.ownerDocument.body.contains(nodeElement)\n                        ) {\n                            return null;\n                        }\n                        node = previousSourceNode;\n                    }\n                    return node;\n                };\n                const getNextNotEmptyNode = range => {\n                    let node = range.getNextNode();\n                    while (node && (node.isEmpty ? node.isEmpty() : node.getText() === '')) {\n                        let nextSourceNode = node.getNextSourceNode();\n                        let nodeElement = nextSourceNode;\n                        if (nextSourceNode && nextSourceNode.type === ckEditor.NODE_TEXT) {\n                            nodeElement = nextSourceNode.parentNode || nextSourceNode.$.parentNode;\n                        }\n                        if (\n                            !nodeElement ||\n                            !nodeElement.ownerDocument ||\n                            !nodeElement.ownerDocument.body.contains(nodeElement)\n                        ) {\n                            return null;\n                        }\n                        node = nextSourceNode;\n                    }\n                    return node;\n                };\n                const cancelEvent = e => {\n                    if (e.cancel) {\n                        e.cancel();\n                    } else {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                    }\n                    return false;\n                };\n                const invalidToolip = tooltip.error($container, __('This is not a valid answer'), {\n                    position: 'bottom',\n                    trigger: 'manual'\n                });\n                const patternHandler = function patternHandler(e) {\n                    if (isComposing || hasCompositionJustEnded) {\n                        // IME composing fires keydown/keyup events\n                        hasCompositionJustEnded = false;\n                        return;\n                    }\n\n                    if (patternRegEx) {\n                        let newValue;\n                        if (isCke) {\n                            // cke has its own object structure\n                            newValue = this.getData();\n                        } else {\n                            // covers input\n                            newValue = e.currentTarget.value;\n                        }\n\n                        if (!newValue) {\n                            return false;\n                        }\n                        _.debounce(function () {\n                            if (!patternRegEx.test(newValue)) {\n                                $container.addClass('invalid');\n                                $container.show();\n                                invalidToolip.show();\n                                containerHelper.triggerResponseChangeEvent(interaction);\n                            } else {\n                                $container.removeClass('invalid');\n                                invalidToolip.dispose();\n                            }\n                        }, 400)();\n                    }\n                };\n\n                /**\n                 * This part works on keyboard input\n                 *\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const keyLimitHandler = e => {\n                    if (isComposing) {\n                        return;\n                    }\n                    // Safari on OS X may send a keydown of 229 after compositionend\n                    if (e.which !== 229) {\n                        hasCompositionJustEnded = false;\n                    }\n\n                    const keyCode = e.data ? e.data.keyCode : e.which;\n                    const wordsCount = maxWords && this.getWordsCount();\n                    const charsCount = maxLength && this.getCharsCount();\n\n                    if (maxWords && wordsCount >= maxWords) {\n                        let left, right, middle;\n\n                        if (isCke) {\n                            const editor = _getCKEditor(interaction);\n                            const sel = editor.getSelection();\n                            const range = sel.getRanges()[0];\n\n                            if (range.startContainer && range.startContainer.type === ckEditor.NODE_TEXT) {\n                                left = getCharBefore(range.startContainer.getText(), range.startOffset);\n                            }\n                            if (!left) {\n                                const node = getPreviousNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    const text = node.getText();\n                                    left = getCharBefore(text, text && text.length);\n                                } else {\n                                    left = ' ';\n                                }\n                            }\n\n                            if (range.endContainer && range.endContainer.type === ckEditor.NODE_TEXT) {\n                                right = getCharAfter(range.endContainer.getText(), range.endOffset);\n                            }\n                            if (!right) {\n                                const node = getNextNotEmptyNode(range);\n                                if (node && noSpaceNode(node)) {\n                                    right = getCharAfter(node.getText(), 0);\n                                } else {\n                                    right = ' ';\n                                }\n                            }\n\n                            middle = sel.getSelectedText();\n                        } else {\n                            const { selectionStart, selectionEnd, value } = $textarea[0];\n                            left = getCharBefore(value, selectionStart);\n                            right = getCharAfter(value, selectionEnd);\n                            middle = value.substring(selectionStart, selectionEnd);\n                        }\n\n                        // Will prevent the keystroke:\n                        // - IF there is a word part before and after the selection,\n                        //   AND the selection does not contain spaces,\n                        //   AND the keystroke is either a space or enter\n                        // - IF there is no word part before and after the selection,\n                        //   AND the selection is empty,\n                        //   AND the keystroke is not from the list of accepted codes,\n                        //   AND the keystroke is not a space\n                        if (\n                            (!emptyOrSpace(left) &&\n                                !emptyOrSpace(right) &&\n                                !hasSpace(middle) &&\n                                spaceKeyCodes.includes(keyCode)) ||\n                            (emptyOrSpace(left) &&\n                                emptyOrSpace(right) &&\n                                !middle &&\n                                !acceptKeyCode(keyCode) &&\n                                keyCode !== 32)\n                        ) {\n                            return cancelEvent(e);\n                        }\n                    }\n\n                    if (maxLength && charsCount >= maxLength && !acceptKeyCode(keyCode)) {\n                        if (!isCke && charsCount > maxLength) {\n                            const textarea = $textarea[0];\n                            textarea.value = textarea.value.substring(0, maxLength);\n                            textarea.focus();\n                        }\n                        return cancelEvent(e);\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                /**\n                 * This part works on drop or paste\n                 * @param {Event} e\n                 * @returns {boolean}\n                 */\n                const nonKeyLimitHandler = e => {\n                    let newValue;\n\n                    if (typeof $$1(e.target).attr('data-clipboard') === 'string') {\n                        newValue = $$1(e.target).attr('data-clipboard');\n                    } else if (isCke) {\n                        // cke has its own object structure\n                        newValue = e.data.dataValue;\n                    } else {\n                        // covers input via paste or drop\n                        newValue = e.originalEvent.clipboardData\n                            ? e.originalEvent.clipboardData.getData('text')\n                            : e.originalEvent.dataTransfer.getData('text') ||\n                              e.originalEvent.dataTransfer.getData('text/plain') ||\n                              '';\n                    }\n\n                    // prevent insertion of non-limited data\n                    cancelEvent(e);\n\n                    if (!newValue) {\n                        return false;\n                    }\n\n                    // limit by word or character count if required\n                    if (maxWords) {\n                        newValue = strLimiter.limitByWordCount(newValue, maxWords - this.getWordsCount());\n                    } else if (maxLength) {\n                        newValue = strLimiter.limitByCharCount(newValue, maxLength - this.getCharsCount());\n                    }\n\n                    // insert the cut-off text\n                    if (isCke) {\n                        _getCKEditor(interaction).insertHtml(newValue);\n                    } else {\n                        let elements = containerHelper.get(interaction).find('textarea');\n                        let el = elements[0];\n                        let { selectionStart: start, selectionEnd: end, value: text } = el;\n                        elements.val(text.substring(0, start) + newValue + text.substring(end, text.length));\n                        el.focus();\n                        el.selectionStart = start + newValue.length;\n                        el.selectionEnd = el.selectionStart;\n                    }\n\n                    _.defer(() => this.updateCounter());\n                };\n\n                const handleCompositionStart = e => {\n                    isComposing = true;\n                    return e;\n                };\n\n                const handleCompositionEnd = e => {\n                    isComposing = false;\n                    hasCompositionJustEnded = true;\n                    // if plain text - then limit input right after composition end event\n                    if (_getFormat(interaction) !== 'xhtml' && maxLength !== null) {\n                        const currentValue = $textarea[0].value;\n                        $textarea[0].value = currentValue.substring(0, maxLength);\n                    }\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                const handleBeforeInput = e => {\n                    _.defer(() => this.updateCounter());\n                    return e;\n                };\n\n                if (_getFormat(interaction) === 'xhtml') {\n                    const editor = _getCKEditor(interaction);\n\n                    if (maxLength) {\n                        let previousSnapshot = editor.getSnapshot();\n\n                        editor.on('key', function () {\n                            const range = this.createRange();\n                            if (limiter.getCharsCount() > limiter.maxLength) {\n                                const editable = this.editable();\n                                editable.setData(previousSnapshot, true);\n                                range.moveToElementEditablePosition(editable, true);\n                                editor.getSelection().selectRanges([range]);\n                                return;\n                            }\n                            previousSnapshot = editor.getSnapshot();\n                        });\n                    }\n                    editor.on('key', keyLimitHandler);\n                    editor.on('change', evt => {\n                        patternHandler(evt);\n                        _.defer(() => this.updateCounter());\n                    });\n                    editor.on('paste', nonKeyLimitHandler);\n                    // @todo: drop requires cke 4.5\n                    // cke.on('drop', nonKeyLimitHandler);\n                } else {\n                    $textarea\n                        .on('beforeinput.commonRenderer', handleBeforeInput)\n                        .on('input.commonRenderer', () => {\n                            _.defer(() => this.updateCounter());\n                        })\n                        .on('compositionstart.commonRenderer', handleCompositionStart)\n                        .on('compositionend.commonRenderer', handleCompositionEnd)\n                        .on('keyup.commonRenderer', patternHandler)\n                        .on('keydown.commonRenderer', keyLimitHandler)\n                        .on('paste.commonRenderer drop.commonRenderer', nonKeyLimitHandler);\n                }\n            },\n\n            /**\n             * Get the number of words that are actually written in the response field\n             * @returns {Number} number of words\n             */\n            getWordsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                if (_.isEmpty(value)) {\n                    return 0;\n                }\n                // leading and trailing white space don't qualify as words\n                return value.trim().replace(/\\s+/gi, ' ').split(' ').length;\n            },\n\n            /**\n             * Get the number of characters that are actually written in the response field\n             * @returns {Number} number of characters\n             */\n            getCharsCount() {\n                const value = _getTextareaValue(interaction) || '';\n                // remove NO-BREAK SPACE in empty lines added and all new line symbols\n                return value.replace(/[\\r\\n]{1}\\xA0[\\r\\n]{1}/gm, '\\r').replace(/[\\r\\n]+/gm, '').length;\n            },\n\n            /**\n             * Update the counter element\n             */\n            updateCounter() {\n                $charsCounter.text(this.getCharsCount());\n                $wordsCounter.text(this.getWordsCount());\n            },\n\n            maxLength\n        };\n\n        return limiter;\n    }\n\n    /**\n     * return the value of the textarea or ckeditor data\n     * @param  {Object} interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {String} the value\n     */\n    function _getTextareaValue(interaction, raw) {\n        if (_getFormat(interaction) === 'xhtml') {\n            return _ckEditorData(interaction, raw);\n        } else {\n            return containerHelper.get(interaction).find('textarea').val();\n        }\n    }\n\n    /**\n     * Setting the pattern mask for the input, for browsers which doesn't support this feature\n     * @param {jQuery} $element\n     * @param {string} pattern\n     */\n    function _setPattern($element, pattern) {\n        const patt = new RegExp(pattern);\n\n        //test when some data is entering in the input field\n        //@todo plug the validator + tooltip\n        $element.on('keyup.commonRenderer', function () {\n            $element.removeClass('field-error');\n            if (!patt.test($element.val())) {\n                $element.addClass('field-error');\n            }\n        });\n    }\n\n    /**\n     * Whether or not multiple strings are expected from the candidate to\n     * compose a valid response.\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Boolean} true if a multiple\n     */\n    function _isMultiple(interaction) {\n        const attributes = interaction.getAttributes();\n        const response = interaction.getResponseDeclaration();\n        return !!(\n            attributes.maxStrings &&\n            (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n        );\n    }\n\n    /**\n     * Instantiate CkEditor for the interaction\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {Object} [options= {}] - the CKEditor configuration options\n     * @returns {Object} the ckEditor instance (or you'll be in trouble\n     */\n    function _setUpCKEditor(interaction, options) {\n        const $container = containerHelper.get(interaction);\n        const editor = ckEditor.replace($container.find('.text-container')[0], options || {});\n        if (editor) {\n            $container.data('editor', editor.name);\n            return editor;\n        }\n    }\n\n    /**\n     * Destroy CKEditor\n     *\n     * @param {Object} interaction - the extended text interaction model\n     */\n    function _destroyCkEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n        let editor;\n        if (name) {\n            editor = ckEditor.instances[name];\n        }\n        if (editor) {\n            editor.destroy();\n            $container.removeData('editor');\n        }\n    }\n\n    /**\n     * Gets the CKEditor instance\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Object}  CKEditor instance\n     */\n    function _getCKEditor(interaction) {\n        const $container = containerHelper.get(interaction);\n        const name = $container.data('editor');\n\n        return ckEditor.instances[name];\n    }\n\n    /**\n     * get the text content of the ckEditor ( not the entire html )\n     * @param  {object} interaction the interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {string}             text content of the ckEditor\n     */\n    function _ckEditorData(interaction, raw) {\n        const editor = _getCKEditor(interaction);\n        let data = (editor && editor.getData()) || '';\n\n        if (!raw) {\n            data = _stripTags(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Remove HTML tags from a string\n     * @param {String} str\n     * @returns {String}\n     */\n    function _stripTags(str) {\n        const tempNode = document.createElement('div');\n        tempNode.innerHTML = str;\n        return tempNode.textContent;\n    }\n\n    /**\n     * Get the interaction format\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {String} format in 'plain', 'xhtml', 'preformatted'\n     */\n    function _getFormat(interaction) {\n        const format = interaction.attr('format');\n        if (['plain', 'xhtml', 'preformatted'].includes(format)) {\n            return format;\n        }\n        return 'plain';\n    }\n\n    function enable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').removeAttr('disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(false);\n                } else {\n                    editor.readOnly = false;\n                }\n            }\n        }\n    }\n\n    function disable(interaction) {\n        const $container = containerHelper.get(interaction);\n        let editor;\n\n        $container.find('input, textarea').attr('disabled', 'disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(true);\n                } else {\n                    editor.readOnly = true;\n                }\n            }\n        }\n    }\n\n    function clearText(interaction) {\n        setText(interaction, '');\n    }\n\n    function setText(interaction, text) {\n        const limiter = inputLimiter(interaction);\n        if (_getFormat(interaction) === 'xhtml') {\n            try {\n                _getCKEditor(interaction).setData(text, function () {\n                    if (limiter.enabled) {\n                        limiter.updateCounter();\n                    }\n                });\n            } catch (e) {\n                logger.warn(`setText error ${e}!`);\n            }\n        } else {\n            containerHelper.get(interaction).find('textarea').val(text);\n            if (limiter.enabled) {\n                limiter.updateCounter();\n            }\n        }\n    }\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $el = $container.find('input, textarea');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            _destroyCkEditor(interaction);\n        }\n\n        //remove event\n        $el.off('.commonRenderer');\n        $$1(document).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                try {\n                    interaction.setResponse(state.response);\n                } catch (e) {\n                    interaction.resetResponse();\n                    throw e;\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    }\n\n    /**\n     * Hydrates the dataset for the interaction with respect to its attributes.\n     *\n     * @param {object} interaction - the interaction instance\n     * @param {object} data - the default data object\n     * @returns {object} the hydrated data set\n     */\n    function getData(interaction, data) {\n        const pattern = interaction.attr('patternMask');\n        const maxWords = parseInt(patternMaskHelper.parsePattern(pattern, 'words'), 10);\n        const maxLength = parseInt(patternMaskHelper.parsePattern(pattern, 'chars'), 10);\n        const expectedLines = parseInt(interaction.attr('expectedLines'), 10);\n        const expectedLength = !isNaN(expectedLines)\n            ? expectedLines * 72\n            : parseInt(interaction.attr('expectedLength'), 10);\n\n        // Build DOM placeholders, this is needed to properly assemble the constraint hints\n        // The interaction will later rely on this to bind the values\n        const countChars = countTpl({ name: 'count-chars', value: 0 });\n        const countWords = countTpl({ name: 'count-words', value: 0 });\n        const countExpectedLength = countTpl({ name: 'count-expected-length', value: expectedLength });\n        const countMaxLength = countTpl({ name: 'count-max-length', value: maxLength });\n        const countMaxWords = countTpl({ name: 'count-max-words', value: maxWords });\n\n        return _.merge(data || {}, {\n            maxWords: !isNaN(maxWords) ? maxWords : 0,\n            maxLength: !isNaN(maxLength) ? maxLength : 0,\n            attributes: !isNaN(expectedLines) ? { expectedLength } : void 0,\n            // Build the constraint hints from translated text and DOM placeholders\n            // The template will render them as it, then the interaction will update the value from the binding\n            constraintHints: {\n                expectedLength: __('%s of %s characters recommended.', countChars, countExpectedLength),\n                maxLength: __('%s of %s characters maximum.', countChars, countMaxLength),\n                maxWords: __('%s of %s words maximum.', countWords, countMaxWords)\n            }\n        });\n    }\n\n    /**\n     * Expose the common renderer for the extended text interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction\n     */\n    var ExtendedTextInteraction = {\n        qtiClass: 'extendedTextInteraction',\n        getContainer: containerHelper.get,\n        template,\n        render,\n        setResponse,\n        getResponse,\n        getData,\n        resetResponse,\n        destroy,\n        getState,\n        setState,\n        enable,\n        disable,\n        clearText,\n        setText,\n        inputLimiter\n    };\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',['lodash', 'i18n', 'jquery', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, __, $$1, Handlebars, Helpers0, containerHelper, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-gapMatchInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"gapMatchInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <ul class=\\\"choice-area none block-listing solid horizontal source\\\">\\n        \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    </ul>\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"qti-flow-container\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    var setChoice = function(interaction, $choice, $target) {\n        var choiceSerial = $choice.data('serial'),\n            choice = interaction.getChoice(choiceSerial);\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n        _choiceUsages[choiceSerial]++;\n\n        $target\n            .data('serial', choiceSerial)\n            .html($choice.html())\n            .addClass('filled');\n\n        if (\n            !interaction.responseMappingMode &&\n            choice.attr('matchMax') &&\n            _choiceUsages[choiceSerial] >= choice.attr('matchMax')\n        ) {\n            $choice.attr('class', 'deactivated');\n        }\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n    };\n\n    var unsetChoice = function(interaction, $choice) {\n        var serial = $choice.data('serial');\n        var $container = containerHelper.get(interaction);\n\n        $container\n            .find('.choice-area [data-serial=' + serial + ']')\n            .removeClass()\n            .addClass('qti-choice');\n\n        _choiceUsages[serial]--;\n\n        $choice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if (!interaction.swapping) {\n            //set correct response\n            containerHelper.triggerResponseChangeEvent(interaction);\n        }\n    };\n\n    var getChoice = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.choice-area [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    var getGap = function(interaction, identifier) {\n        var $container = containerHelper.get(interaction);\n        return $$1('.qti-flow-container [data-identifier=\"' + identifier + '\"]', $container);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $container.find('.choice-area');\n        var $flowContainer = $container.find('.qti-flow-container');\n\n        var $activeChoice = null;\n        var $activeDrop = null;\n\n        var isDragAndDropEnabled;\n        var dragOptions;\n        var scaleX, scaleY;\n\n        var $bin = $$1('<span>', { class: 'icon-undo remove-choice', title: __('remove') });\n\n        var choiceSelector = $choiceArea.selector + ' .qti-choice';\n        var gapSelector = $flowContainer.selector + ' .gapmatch-content';\n        var filledGapSelector = gapSelector + '.filled';\n        var binSelector = $container.selector + ' .remove-choice';\n\n        var _getChoice = function(serial) {\n            return $choiceArea.find('[data-serial=' + serial + ']');\n        };\n\n        var _setChoice = function($choice, $target) {\n            return setChoice(interaction, $choice, $target);\n        };\n\n        var _resetSelection = function() {\n            if ($activeChoice) {\n                $flowContainer.find('.remove-choice').remove();\n                $activeChoice.removeClass('deactivated active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            }\n        };\n\n        var _unsetChoice = function($choice) {\n            return unsetChoice(interaction, $choice);\n        };\n\n        var _isInsertionMode = function() {\n            return $activeChoice && !$activeChoice.hasClass('filled');\n        };\n\n        var _isModeEditing = function() {\n            return $activeChoice && $activeChoice.hasClass('filled');\n        };\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').gapMatch) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').gapMatch;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function() {\n                if ($activeDrop) {\n                    interact(gapSelector).fire({\n                        type: 'drop',\n                        target: $activeDrop.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 1, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleChoiceSelect($target);\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes filled gaps draggables\n            interact(filledGapSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function(e) {\n                            var $target = $$1(e.target);\n                            var scale;\n                            $target.addClass('dragged');\n                            _handleFilledGapSelect($target);\n\n                            _iFrameDragFix(filledGapSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function(e) {\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                        },\n                        onend: function(e) {\n                            var $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n\n                            if ($activeChoice) {\n                                _unsetChoice($activeChoice);\n                                _resetSelection();\n                            }\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes gaps droppables\n            interact(gapSelector).dropzone({\n                overlap: 0.05,\n                ondragenter: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $activeDrop = $target;\n                    $target.addClass('dropzone');\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function(e) {\n                    _handleGapSelect($$1(e.target));\n\n                    this.ondragleave(e);\n                },\n                ondragleave: function(e) {\n                    var $target = $$1(e.target),\n                        $dragged = $$1(e.relatedTarget);\n\n                    $target.removeClass('dropzone');\n                    $dragged.removeClass('droppable');\n\n                    $activeDrop = null;\n                }\n            });\n        }\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function(e) {\n            e.stopPropagation();\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleChoiceSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(gapSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleGapSelect($$1(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(binSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _unsetChoice($activeChoice);\n            _resetSelection();\n            e.preventDefault();\n        });\n\n        // Common handlers\n\n        function _handleChoiceSelect($target) {\n            if (($activeChoice && $target.hasClass('active')) || $target.hasClass('deactivated')) {\n                return;\n            }\n            _resetSelection();\n\n            $activeChoice = $target.addClass('active');\n            $$1(gapSelector).addClass('empty');\n        }\n\n        function _handleFilledGapSelect($target) {\n            $activeChoice = $target;\n            $$1(gapSelector).addClass('active');\n        }\n\n        function _handleGapSelect($target) {\n            var choiceSerial, targetSerial;\n\n            if (_isInsertionMode()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    //set choices:\n                    if (targetSerial) {\n                        _unsetChoice($target);\n                    }\n\n                    _setChoice($activeChoice, $target);\n                }\n\n                $activeChoice.removeClass('active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            } else if (_isModeEditing()) {\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if (targetSerial !== choiceSerial) {\n                    _unsetChoice($activeChoice);\n                    if (targetSerial) {\n                        //swapping:\n                        _unsetChoice($target);\n                        _setChoice(_getChoice(targetSerial), $activeChoice);\n                    }\n                    _setChoice(_getChoice(choiceSerial), $target);\n                }\n\n                _resetSelection();\n            } else if ($target.data('serial') && $target.hasClass('filled')) {\n                targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $flowContainer\n                    .find('>li>div')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                $choiceArea\n                    .find('>li:not(.deactivated)')\n                    .filter(function() {\n                        return $target.data('serial') !== targetSerial;\n                    })\n                    .addClass('empty');\n\n                //append trash bin:\n                $target.append($bin);\n            }\n        }\n    };\n\n    var resetResponse = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        $$1('.gapmatch-content.active', $container).removeClass('active');\n        $$1('.gapmatch-content', $container).each(function() {\n            unsetChoice(interaction, $$1(this));\n        });\n    };\n\n    var _setPairs = function(interaction, pair) {\n        if (pair && pair.length) {\n            setChoice(interaction, getChoice(interaction, pair[0]), getGap(interaction, pair[1]).find('.gapmatch-content'));\n        }\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        resetResponse(interaction);\n        let pairs = pciResponse.unserialize(response, interaction);\n        if ( _.isArray(pairs) && _.isArray(pairs[0])) {\n            _.forEach(pairs, pair => _setPairs(interaction, pair));\n        } else {\n            _setPairs(interaction, pairs);\n        }\n    };\n\n    var _getRawResponse = function(interaction) {\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $$1('.gapmatch-content', $container).each(function() {\n            var choiceSerial = $$1(this).data('serial'),\n                pair = [];\n\n            if (choiceSerial) {\n                pair.push(interaction.getChoice(choiceSerial).attr('identifier'));\n            }\n            pair.push($$1(this).data('identifier'));\n\n            if (pair.length === 2) {\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10307\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' .qti-choice').unset();\n        interact($container.find('.qti-flow-container').selector + ' .gapmatch-content').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //restore selection\n        $container.find('.gapmatch-content').empty();\n        $container.find('.active').removeClass('active');\n        $container.find('.remove-choice').remove();\n        $container.find('.empty').removeClass('empty');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        var $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function(a, b) {\n                        var aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var $container;\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function() {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the gapmatch interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GapMatchInteraction\n     */\n    var GapMatchInteraction = {\n        qtiClass: 'gapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicAssociateInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the element that has the active state\n     * @private\n     * @param {Object} interaction\n     * @returns {Raphael.Element} the active element\n     */\n    const _getActiveElement = function _getActiveElement(interaction) {\n        let active;\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && element.active === true) {\n                active = element;\n                return false;\n            }\n        });\n        return active;\n    };\n\n    /**\n     * Create a path from a src element to a destination.\n     * The path is selectable and can be removed by itself\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} srcElement - the path starts from this shape\n     * @param {Raphael.Element} destElement - the path ends to this shape\n     * @param {Function} onRemove - called back on path remove\n     */\n    const _createPath = function _createPath(interaction, srcElement, destElement, onRemove) {\n        const $container = containerHelper.get(interaction);\n\n        //virtual set, not a raphael one, just to group the elements\n        let vset = [];\n\n        //get the middle point of the source shape\n        const src = srcElement.getBBox();\n        const sx = src.x + src.width / 2;\n        const sy = src.y + src.height / 2;\n\n        //get the middle point of the source shape\n        const dest = destElement.getBBox();\n        const dx = dest.x + dest.width / 2;\n        const dy = dest.y + dest.height / 2;\n\n        //create a path with bullets at the beginning and the end\n        const srcBullet = interaction.paper.circle(sx, sy, 3).attr(graphic._style['assoc-bullet']);\n\n        const destBullet = interaction.paper.circle(dx, dy, 3).attr(graphic._style['assoc-bullet']);\n\n        const path = interaction.paper\n            .path('M' + sx + ',' + sy + 'L' + sx + ',' + sy)\n            .attr(graphic._style.assoc)\n            .animate({ path: 'M' + sx + ',' + sy + 'L' + dx + ',' + dy }, 300);\n\n        //create an overall layer that make easier the path selection\n        const layer = interaction.paper.path('M' + sx + ',' + sy + 'L' + dx + ',' + dy).attr(graphic._style['assoc-layer']);\n\n        //get the middle of the path\n        const midPath = layer.getPointAtLength(layer.getTotalLength() / 2);\n\n        //create an hidden background for the closer\n        const closerBg = interaction.paper.circle(midPath.x, midPath.y, 9).attr(graphic._style['close-bg']).toBack();\n\n        //create an hidden closer\n        const closer = interaction.paper\n            .path(graphic._style.close.path)\n            .attr(graphic._style.close)\n            .transform('T' + (midPath.x - 9) + ',' + (midPath.y - 9))\n            .attr('title', __('Click again to remove'))\n            .toBack();\n\n        //the path is below the shapes\n        srcElement.toFront();\n        destElement.toFront();\n\n        //add the path into a set\n        vset = [srcBullet, path, destBullet, layer, closerBg, closer];\n        interaction._vsets.push(vset);\n\n        //to identify the element of the set outside the context\n        vset.forEach(el => {\n            el.data('assoc-path', true);\n        });\n\n        //enable to select the path by clicking the invisible layer\n        layer.click(function selectLigne() {\n            if (closer.attrs.opacity === 0) {\n                showCloser();\n            } else {\n                hideCloser();\n            }\n        });\n\n        $container.on('unselect.graphicassociate', function () {\n            hideCloser();\n        });\n\n        function showCloser() {\n            closerBg.toFront().animate({ opacity: 0.8 }, 300).click(removeSet);\n            closer.toFront().animate({ opacity: 1 }, 300).click(removeSet);\n        }\n\n        function hideCloser() {\n            if (closerBg && closerBg.type) {\n                closerBg\n                    .animate({ opacity: 0 }, 300, function () {\n                        closerBg.toBack();\n                    })\n                    .unclick();\n                closer\n                    .animate({ opacity: 0 }, 300, function () {\n                        closer.toBack();\n                    })\n                    .unclick();\n            }\n        }\n\n        //remove set handler\n        function removeSet() {\n            vset.forEach(item => item.remove());\n            interaction._vsets = _.without(interaction._vsets, vset);\n            if (typeof onRemove === 'function') {\n                onRemove();\n            }\n        }\n    };\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || 0;\n            matchable = matchMax === 0 || matchMax > matching;\n        }\n        return matchable;\n    };\n    /**\n     * Makes the shapes selectable\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} active - the active shape\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction, active) {\n        const assocs = active.data('assocs') || [];\n        const choices = interaction.getChoices();\n        const activeChoice = choices[active.id];\n\n        //update the shape state\n        _.forEach(choices, function (choice) {\n            if (!assocs.includes(choice.id())) {\n                const element = interaction.paper.getById(choice.serial);\n                const assocsElement = element.data('assocs') || [];\n                if (\n                    !element.active &&\n                    element.id !== active.id &&\n                    _isMatchable(element) &&\n                    !assocsElement.includes(activeChoice.id())\n                ) {\n                    element.selectable = true;\n                    graphic.updateElementState(element, 'selectable');\n                }\n            }\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        let responses = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            const assocs = element.data('assocs');\n            if (element && assocs) {\n                responses = responses.concat(\n                    _.map(assocs, function (id) {\n                        return [choice.id(), id];\n                    })\n                );\n            }\n        });\n        return responses;\n    };\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (image) {\n            image.click(function () {\n                _shapesUnSelectable(interaction);\n                $container.trigger('unselect.graphicassociate');\n            });\n        }\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const shape = choice.attr('shape');\n        const coords = choice.attr('coords');\n        const maxAssociations = interaction.attr('maxAssociations');\n\n        graphic\n            .createElement(interaction.paper, shape, coords, {\n                id: choice.serial,\n                title: __('Select this area to start an association')\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', 0)\n            .removeData('assocs')\n            .click(function () {\n                //can't create more associations than the maxAssociations attr\n                if (maxAssociations > 0 && _getRawResponse(interaction).length >= maxAssociations) {\n                    _shapesUnSelectable(interaction);\n                    instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                    return;\n                }\n                const active = _getActiveElement(interaction);\n                if (this.selectable) {\n                    if (active) {\n                        //increment the matching counter\n                        active.data('matching', active.data('matching') + 1);\n                        this.data('matching', this.data('matching') + 1);\n\n                        //attach the response to the active (not the dest)\n                        const assocs = active.data('assocs') || [];\n                        assocs.push(choice.id());\n                        active.data('assocs', assocs);\n\n                        //and create the path\n                        _createPath(interaction, active, this, () => {\n                            //decrement the matching counter\n                            active.data('matching', active.data('matching') - 1);\n                            this.data('matching', this.data('matching') - 1);\n\n                            //detach the response from the active\n                            active.data('assocs', _.pull(active.data('assocs') || [], choice.id()));\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n                        });\n                    }\n                    _shapesUnSelectable(interaction);\n                } else if (this.active) {\n                    _shapesUnSelectable(interaction);\n                } else if (_isMatchable(this)) {\n                    if (active) {\n                        _shapesUnSelectable(interaction);\n                    }\n                    graphic.updateElementState(this, 'active', __('Select this area to start an association'));\n                    this.active = true;\n                    _shapesSelectable(interaction, this);\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n            interaction._vsets = [];\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //make the paper clear the selection by clicking it\n            _paperUnSelect(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minAssociations'),\n                max: interaction.attr('maxAssociations'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data && data.target) {\n                        graphic.highlightError(data.target);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n                if (responseValues.length === 2 && !Array.isArray(responseValues[0]) && !Array.isArray(responseValues[1])) {\n                    responseValues = [responseValues];\n                }\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                //create an object with choiceId => shapeElement\n                const map = _.transform(interaction.getChoices(), function (res, choice) {\n                    res[choice.id()] = interaction.paper.getById(choice.serial);\n                });\n                _.forEach(responseValues, function (responseValue) {\n                    if (_.isArray(responseValue) && responseValue.length === 2) {\n                        const el1 = map[responseValue[0]];\n                        const el2 = map[responseValue[1]];\n                        if (el1 && el2) {\n                            graphic.trigger(el1, 'click');\n                            graphic.trigger(el2, 'click');\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const toRemove = [];\n        //reset response and state bound to shapes\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.data({\n                    max: choice.attr('matchMax'),\n                    matching: 0,\n                    assocs: []\n                });\n            }\n        });\n\n        if (interaction && interaction.paper) {\n            //remove the paths, but outside the forEach as it is implemented as a linked list\n            interaction.paper.forEach(function (elt) {\n                if (elt.data('assoc-path')) {\n                    toRemove.push(elt);\n                }\n            });\n        }\n        toRemove.forEach(el => el.remove());\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $container.off('.graphicassociate');\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction\n     */\n    var GraphicAssociateInteraction = {\n        qtiClass: 'graphicAssociateInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',['jquery', 'lodash', 'i18n', 'module', 'core/mouseEvent', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'interact', 'ui/interactUtils'], function ($$1, _, __, module, mouseEvent, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr, interact, interactUtils) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicGapMatchInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal source\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n      if (helper = helpers.gapImgs) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.gapImgs); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.gapImgs) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    let isDragAndDropEnabled;\n\n    // this represents the state for the active droppable zone\n    // we need it only to access the active dropzone in the iFrameFix\n    // should be removed when the old test runner is discarded\n    let activeDrop = null;\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    const _choiceUsages = {};\n\n    /**\n     * This options enables to support old items created with the wrong\n     * direction in the directedpairs.\n     *\n     * @deprecated\n     */\n    const isDirectedPairFlipped = module.config().flipDirectedPair;\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    const _isMatchable = function (element) {\n        let matchable = false;\n        if (element) {\n            const matchMax = element.data('max') || 0;\n            const matching = element.data('matching') || [];\n            matchable = matchMax === 0 || matchMax > matching.length;\n        }\n        return matchable;\n    };\n\n    /**\n     * Makes the shapes selectable (at least those who can still accept matches)\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesSelectable = function _shapesSelectable(interaction) {\n        const tooltip = __('Select the area to add an image');\n\n        //update the shape state\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (_isMatchable(element)) {\n                element.selectable = true;\n                graphic.setStyle(element, 'selectable');\n                graphic.updateTitle(element, tooltip);\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, tooltip);\n            });\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    const _shapesUnSelectable = function _shapesUnSelectable(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.selectable = false;\n                graphic.setStyle(element, 'basic');\n                graphic.updateTitle(element, __('Select an image first'));\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            gapFiller.forEach(function (element) {\n                graphic.updateTitle(element, __('Remove'));\n            });\n        });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    const _paperUnSelect = function _paperUnSelect(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $gapImages = $$1('ul > li', $container);\n        const bgImage = interaction.paper.getById('bg-image-' + interaction.serial);\n        if (bgImage) {\n            interact(bgImage.node).on('tap', function () {\n                _shapesUnSelectable(interaction);\n                $gapImages.removeClass('active');\n            });\n        }\n    };\n\n    /**\n     * Sets a choice and marks as disabled if at max\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _setChoice = function _setChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n        const choice = interaction.getGapImg(choiceSerial);\n        let matchMax;\n        let usages;\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n\n        _choiceUsages[choiceSerial]++;\n\n        // disable choice if maxium usage reached\n        if (!interaction.responseMappingMode && choice.attr('matchMax')) {\n            matchMax = +choice.attr('matchMax');\n            usages = +_choiceUsages[choiceSerial];\n\n            // note: if matchMax is 0, then test taker is allowed unlimited usage of that choice\n            if (matchMax !== 0 && matchMax <= usages) {\n                interact($choice.get(0)).draggable(false);\n                $choice.addClass('disabled');\n                $choice.removeClass('selectable');\n            }\n        }\n    };\n\n    /**\n     * Unset a choice and unmark as disabled\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    const _unsetChoice = function _unsetChoice(interaction, $choice) {\n        const choiceSerial = $choice.data('serial');\n\n        _choiceUsages[choiceSerial]--;\n\n        $choice.removeClass('disabled');\n        $choice.addClass('selectable');\n        interact($choice.get(0)).draggable(true);\n    };\n\n    /**\n     * Select a shape (= hotspot) (a gap image must be active)\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} element - the selected shape\n     * @param {Boolean} [trackResponse = true] - if the selection trigger a response chane\n     */\n    const _selectShape = function _selectShape(interaction, element, trackResponse) {\n        let $img, $clone, id, bbox, shapeOffset, activeOffset, matching, currentCount;\n\n        //lookup for the active element\n        const $container = containerHelper.get(interaction);\n        const $gapList = $$1('ul', $container);\n        const $active = $gapList.find('.active:first');\n        const $imageBox = $$1('.main-image-box', $container);\n        const boxOffset = $imageBox.offset();\n\n        if ($active.length) {\n            //the macthing elements are linked to the shape\n            id = $active.data('identifier');\n            matching = element.data('matching') || [];\n            matching.push(id);\n            element.data('matching', matching);\n            currentCount = matching.length;\n\n            //the image to clone\n            $img = $active.find('img');\n\n            //then reset the state of the shapes and the gap images\n            _shapesUnSelectable(interaction);\n            $gapList.children().removeClass('active');\n\n            _setChoice(interaction, $active);\n\n            $clone = $img.clone();\n            shapeOffset = $$1(element.node).offset();\n            activeOffset = $active.offset();\n\n            $clone.css({\n                position: 'absolute',\n                display: 'block',\n                'z-index': 10000,\n                opacity: 0.8,\n                top: activeOffset.top - boxOffset.top,\n                left: activeOffset.left - boxOffset.left\n            });\n\n            $clone.appendTo($imageBox);\n            $clone.animate(\n                {\n                    top: shapeOffset.top - boxOffset.top,\n                    left: shapeOffset.left - boxOffset.left\n                },\n                200,\n                function animationEnd() {\n                    $clone.remove();\n\n                    //extract some coords for positioning\n                    bbox = element.getBBox();\n\n                    //create an image into the paper and move it to the selected shape\n                    const gapFiller = graphic\n                        .createBorderedImage(interaction.paper, {\n                            url: $img.attr('src'),\n                            left: bbox.x + 8 * (currentCount - 1),\n                            top: bbox.y + 8 * (currentCount - 1),\n                            width: parseInt($img.attr('width'), 10),\n                            height: parseInt($img.attr('height'), 10),\n                            padding: 0,\n                            border: false,\n                            shadow: true\n                        })\n                        .data('identifier', id)\n                        .toFront();\n\n                    const gapFillerImage = gapFiller[2].node;\n                    interact(gapFillerImage).on('tap', function (e) {\n                        const target = e.currentTarget;\n                        const rElement = interaction.paper.getById(target.raphaelid);\n\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        // adding a new gapfiller on the hotspot by simulating a click on the underlying shape...\n                        if ($gapList.find('.active').length > 0) {\n                            interactUtils.tapOn(element.node);\n\n                            // ... or removing the existing gapfiller\n                        } else {\n                            //update the element matching array\n                            element.data(\n                                'matching',\n                                _.without(element.data('matching') || [], rElement.data('identifier'))\n                            );\n\n                            //delete interaction.gapFillers[interaction.gapFillers.indexOf(gapFiller)];\n                            interaction.gapFillers = _.without(interaction.gapFillers, gapFiller);\n\n                            gapFiller.remove();\n\n                            _unsetChoice(interaction, $active);\n\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                        }\n                    });\n\n                    interaction.gapFillers.push(gapFiller);\n\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                }\n            );\n        }\n    };\n\n    /**\n     * Render a choice (= hotspot) inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     *\n     * @private\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        //create the shape\n        const rElement = graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select an image first'),\n                hover: false\n            })\n            .data('max', choice.attr('matchMax'))\n            .data('matching', []);\n\n        interact(rElement.node).on('tap', function onClickShape() {\n            handleShapeSelect();\n        });\n\n        if (isDragAndDropEnabled) {\n            interact(rElement.node).dropzone({\n                overlap: 0.15,\n                ondragenter: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'hover');\n                        activeDrop = rElement.node;\n                    }\n                },\n                ondrop: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        handleShapeSelect();\n                        activeDrop = null;\n                    }\n                },\n                ondragleave: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        activeDrop = null;\n                    }\n                }\n            });\n        }\n\n        function handleShapeSelect() {\n            // check if can make the shape selectable on click\n            if (_isMatchable(rElement) && rElement.selectable === true) {\n                _selectShape(interaction, rElement);\n            }\n        }\n    };\n\n    const _iFrameDragFix = function _iFrameDragFix(draggableSelector, target) {\n        interactUtils.iFrameDragFixOn(function () {\n            if (activeDrop) {\n                interact(activeDrop).fire({\n                    type: 'drop',\n                    target: activeDrop,\n                    relatedTarget: target\n                });\n            }\n            interact(draggableSelector).fire({\n                type: 'dragend',\n                target: target\n            });\n        });\n    };\n\n    /**\n     * Render the list of gap fillers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $gapList - the list than contains the orderers\n     */\n    const _renderGapList = function _renderGapList(interaction, $gapList) {\n        const gapFillersSelector = $gapList.selector + ' li';\n        let dragOptions;\n        let scaleX, scaleY;\n\n        interact(gapFillersSelector).on('tap', function onClickGapImg(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            toggleActiveGapState($$1(e.currentTarget));\n        });\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            $$1(gapFillersSelector).each(function (index, gap) {\n                interact(gap)\n                    .draggable(\n                        _.assign({}, dragOptions, {\n                            onstart: function (e) {\n                                const $target = $$1(e.target);\n                                _setActiveGapState($target);\n                                $target.addClass('dragged');\n\n                                _iFrameDragFix(gapFillersSelector, e.target);\n                                const scale = interactUtils.calculateScale(e.target);\n                                scaleX = scale[0];\n                                scaleY = scale[1];\n                            },\n                            onmove: function (e) {\n                                interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            },\n                            onend: function (e) {\n                                _.defer(() => {\n                                    const $target = $$1(e.target);\n                                    _setInactiveGapState($target);\n                                    $target.removeClass('dragged');\n                                    interactUtils.restoreOriginalPosition($target);\n                                    interactUtils.iFrameDragFixOff();\n                                });\n                            }\n                        })\n                    )\n                    .styleCursor(false);\n            });\n        }\n\n        function toggleActiveGapState($target) {\n            if (!$target.hasClass('disabled')) {\n                if ($target.hasClass('active')) {\n                    _setInactiveGapState($target);\n                } else {\n                    _setActiveGapState($target);\n                }\n            }\n        }\n\n        function _setActiveGapState($target) {\n            $gapList.children('li').removeClass('active');\n            $target.addClass('active');\n            _shapesSelectable(interaction);\n        }\n\n        function _setInactiveGapState($target) {\n            $target.removeClass('active');\n            _shapesUnSelectable(interaction);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @return {Promise}\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function (resolve) {\n            const $container = containerHelper.get(interaction);\n            const $gapList = $$1('ul.source', $container);\n            const background = interaction.object.attributes;\n\n            interaction.gapFillers = [];\n\n            if (\n                self.getOption &&\n                self.getOption('enableDragAndDrop') &&\n                self.getOption('enableDragAndDrop').graphicGapMatch\n            ) {\n                isDragAndDropEnabled = self.getOption('enableDragAndDrop').graphicGapMatch;\n            }\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                resize: function (newSize, factor) {\n                    $gapList.css('max-width', newSize + 'px');\n                    if (factor !== 1) {\n                        $gapList.find('img').each(function () {\n                            const $img = $$1(this);\n                            $img.width($img.attr('width') * factor);\n                            $img.height($img.attr('height') * factor);\n                        });\n                    }\n                },\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //create the list of gap images\n            _renderGapList(interaction, $gapList);\n\n            //clicking the paper to reset selection\n            _paperUnSelect(interaction);\n        });\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of matches\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const pairs = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element && _.isArray(element.data('matching'))) {\n                _.forEach(element.data('matching'), function (gapImg) {\n                    //backward support of previous order\n                    if (isDirectedPairFlipped) {\n                        pairs.push([choice.id(), gapImg]);\n                    } else {\n                        pairs.push([gapImg, choice.id()]);\n                    }\n                });\n            }\n        });\n        return _.sortBy(pairs, [0, 1]);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                responseValues = null;\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    const element = interaction.paper.getById(choice.serial);\n                    if (element) {\n                        _.forEach(responseValues, function (pair) {\n                            if (pair.length === 2) {\n                                //backward support of previous order\n                                const responseChoice = isDirectedPairFlipped ? pair[0] : pair[1];\n                                const responseGap = isDirectedPairFlipped ? pair[1] : pair[0];\n                                if (responseChoice === choice.id()) {\n                                    $$1('[data-identifier=\"' + responseGap + '\"]', $container).addClass('active');\n                                    _selectShape(interaction, element);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _shapesUnSelectable(interaction);\n\n        _.forEach(interaction.gapFillers, function (gapFiller) {\n            interactUtils.tapOn(gapFiller.items[2][0]); // this refers to the gapFiller image\n        });\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        return pciResponse.serialize(raw, interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n\n            interact($container.find('ul.source li').selector).unset(); // gapfillers\n            interact($container.find('.main-image-box rect').selector).unset(); // choices/hotspot\n        }\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var GraphicGapMatchInteraction = {\n        qtiClass: 'graphicGapMatchInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        isDirectedPairFlipped: isDirectedPairFlipped\n    };\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicOrderInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal ordinals\\\"></ul>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Creates ALL the texts (the numbers to display in the shapes). They are created styled but hidden.\n     *\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Number} size - the number of numbers to create...\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @return {Array} the creates text element\n     */\n    const _createTexts = function _createTexts(paper, size) {\n        const texts = [];\n        _.times(size, function (index) {\n            const number = index + 1;\n            const text = graphic.createText(paper, {\n                id: 'text-' + number,\n                content: number,\n                title: __('Remove'),\n                style: 'order-text',\n                hide: true,\n                disableEvents: true\n            });\n\n            texts.push(text);\n        });\n        return texts;\n    };\n    /**\n     * Render the list of numbers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _renderOrderList = function _renderOrderList(interaction, $orderList) {\n        let size = _.size(interaction.getChoices());\n        const min = interaction.attr('minChoices');\n        const max = interaction.attr('maxChoices');\n\n        //calculate the number of orderer to display\n        if (max > 0 && max <= size) {\n            size = max;\n        } else if (min > 0 && min <= size) {\n            size = min;\n        }\n\n        //add them to the list\n        _.times(size, function (index) {\n            const position = index + 1;\n            const $orderer = $$1('<li class=\"selectable\" data-number=\"' + position + '\">' + position + '</li>');\n            if (index === 0) {\n                $orderer.addClass('active');\n            }\n            $orderList.append($orderer);\n        });\n\n        //create related svg texts\n        _createTexts(interaction.paper, size);\n\n        //bind the activation event\n        const $orderers = $orderList.children('li');\n        $orderers.click(function (e) {\n            e.preventDefault();\n            const $orderer = $$1(this);\n\n            if (!$orderer.hasClass('active') && !$orderer.hasClass('disabled')) {\n                $orderers.removeClass('active');\n                $orderer.addClass('active');\n            }\n        });\n    };\n    /**\n     * Show the text that match the element's number.\n     * We need to display it at the center of the shape.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to show the text for\n     */\n    const _showText = function _showText(paper, element) {\n        const bbox = element.getBBox();\n\n        //we retrieve the good text from it's id\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            //move it to the center of the shape (using absolute transform), and than display it\n            const transf = 'T' + (bbox.x + bbox.width / 2) + ',' + (bbox.y + bbox.height / 2);\n            text.transform(transf).show().toFront();\n        }\n    };\n    /**\n     * Select a shape to position an order\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the selected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _selectShape = function _selectShape(paper, element, $orderList) {\n        //lookup for the active number\n        const $active = $orderList.find('.active:first');\n        if ($active.length && $active.data('number') > 0) {\n            //associate the current number directly to the element\n            element.data('number', $active.data('number'));\n            element.active = true;\n            _showText(paper, element);\n            graphic.updateElementState(element, 'active');\n\n            //update the state of the order list\n            $active.toggleClass('active disabled').siblings(':not(.disabled)').first().toggleClass('active');\n        }\n    };\n    /**\n     * Hide an element text.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to hide the text for\n     */\n    const _hideText = function _hideText(paper, element) {\n        const text = paper.getById('text-' + element.data('number'));\n        if (text) {\n            text.hide();\n        }\n    };\n    /**\n     * Unselect a shape to free the position\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the unselected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    const _unselectShape = function _unselectShape(paper, element, $orderList) {\n        const number = element.data('number');\n        const unsetNumbers = [number];\n\n        $orderList.children(':not(.disabled)').each(function () {\n            unsetNumbers.push($$1(this).data('number'));\n        });\n\n        const activeNumber = Math.min.apply(Math, unsetNumbers) || number;\n\n        //update element state\n        element.active = false;\n        _hideText(paper, element);\n        element.removeData('number');\n        graphic.updateElementState(element, 'basic');\n\n        //reset order list state and activate the removed number\n        $orderList\n            .children()\n            .removeClass('active')\n            .filter('[data-number=' + number + ']')\n            .removeClass('disabled');\n\n        // Set (min) active number\n        $orderList.find('li[data-number=\"' + activeNumber + '\"]').addClass('active');\n    };\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, $orderList, choice) {\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    return;\n                }\n                if (this.active) {\n                    _unselectShape(interaction.paper, this, $orderList);\n                } else {\n                    _selectShape(interaction.paper, this, $orderList);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice });\n            });\n    };\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        const response = [];\n        _.forEach(interaction.getChoices(), function (choice) {\n            const elt = interaction.paper.getById(choice.serial);\n            if (elt && elt.data('number')) {\n                response.push({\n                    index: elt.data('number'),\n                    id: choice.id()\n                });\n            }\n        });\n        return _(response).sortBy('index').map('id').value();\n    };\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const $orderList = $$1('ul', $container);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //create the list of number to order\n            _renderOrderList(interaction, $orderList);\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction, $orderList));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    graphic.highlightError(data.target);\n                }\n            });\n        });\n    };\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n        if (response && interaction.paper) {\n            try {\n                //try to unserualize tthe pci response\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(responseValues, function (responseValue, index) {\n                    const number = index + 1;\n\n                    //get the choice that match the response\n                    const choice = _(interaction.getChoices())\n                        .filter({ attributes: { identifier: responseValue } })\n                        .first();\n                    if (choice) {\n                        const element = interaction.paper.getById(choice.serial);\n                        if (element) {\n                            //activate the orderer to be consistant\n                            $orderList.children('[data-number=' + number + ']').addClass('active');\n\n                            //select the related shape\n                            _selectShape(interaction.paper, element, $orderList);\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $orderList = $$1('ul', $container);\n\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                _unselectShape(interaction.paper, element, $orderList);\n            }\n        });\n\n        $orderList.children('li').removeClass('active disabled').first().addClass('active');\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n            $$1('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var GraphicOrderInteraction = {\n        qtiClass: 'graphicOrderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, __, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-hotspotInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    const _renderChoice = function _renderChoice(interaction, choice) {\n        const $container = containerHelper.get(interaction);\n        graphic\n            .createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n                id: choice.serial,\n                title: __('Select this area')\n            })\n            .click(function () {\n                if (this.active) {\n                    graphic.updateElementState(this, 'basic', __('Select this area'));\n                    this.active = false;\n                    $container.trigger('inactiveChoice.qti-widget', [choice, this]);\n                } else {\n                    graphic.updateElementState(this, 'active', __('Click again to remove'));\n                    this.active = true;\n                    $container.trigger('activeChoice.qti-widget', [choice, this]);\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n                instructionMgr.validateInstructions(interaction, { choice: choice, target: this });\n            });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    const _getRawResponse = function _getRawResponse(interaction) {\n        return _(interaction.getChoices())\n            .map(function (choice) {\n                const rElement = interaction.paper.getById(choice.serial);\n                return rElement && rElement.active === true ? choice.id() : false;\n            })\n            .filter(_.isString)\n            .value();\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    const render = function render(interaction) {\n        return new Promise(resolve => {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: this.resolveUrl(background.data),\n                container: $container,\n                responsive: $container.hasClass('responsive')\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse: _getRawResponse,\n                onError: function (data) {\n                    if (data.target.active) {\n                        data.target.active = false;\n                        graphic.updateElementState(this, 'basic', __('Select this area'));\n                        graphic.highlightError(data.target);\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                        $container.trigger('inactiveChoice.qti-widget', [data.choice, data.target]);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        let responseValues;\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (_.isArray(responseValues)) {\n                _.forEach(interaction.getChoices(), function (choice) {\n                    if (responseValues.includes(choice.attributes.identifier)) {\n                        const rElement = interaction.paper.getById(choice.serial);\n                        if (rElement) {\n                            rElement.active = true;\n                            graphic.updateElementState(rElement, 'active', __('Click again to remove'));\n                            instructionMgr.validateInstructions(interaction, { choice: choice, target: rElement });\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const resetResponse = function resetResponse(interaction) {\n        _.forEach(interaction.getChoices(), function (choice) {\n            const element = interaction.paper.getById(choice.serial);\n            if (element) {\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n        instructionMgr.resetInstructions(interaction);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        const raw = _getRawResponse(interaction);\n        const response = pciResponse.serialize(raw, interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container).empty().removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    var HotspotInteraction = {\n        qtiClass: 'hotspotInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-hottextInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"hottextInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"qti-flow-container\\\">\";\n    if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"</div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * 'pseudo-label' is technically a div that behaves like a label.\n   * This allows the usage of block elements inside the fake label\n   */\n  var pseudoLabel = function (interaction) {\n      var $container = containerHelper.get(interaction);\n\n      var setChoice = function ($choice, interaction) {\n          var $inupt = $choice.find('input');\n\n          if ($inupt.prop('checked') || $inupt.hasClass('disabled')) {\n              $inupt.prop('checked', false);\n          } else {\n              var maxChoices = parseInt(interaction.attr('maxChoices'));\n              var currentChoices = _.values(_getRawResponse(interaction)).length;\n\n              if (currentChoices < maxChoices || maxChoices === 0) {\n                  $inupt.prop('checked', true);\n              }\n          }\n          containerHelper.triggerResponseChangeEvent(interaction);\n          instructionMgr.validateInstructions(interaction, { choice: $choice });\n      };\n\n      $$1('.hottext', $container).on('click', function (e) {\n          e.preventDefault();\n          setChoice($$1(this), interaction);\n      });\n  };\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n   *\n   * @param {object} interaction\n   */\n  var render = function (interaction) {\n      pseudoLabel(interaction);\n\n      //set up the constraints instructions\n      instructionMgr.minMaxChoiceInstructions(interaction, {\n          min: interaction.attr('minChoices'),\n          max: interaction.attr('maxChoices'),\n          getResponse: _getRawResponse,\n          onError: function (data) {\n              var $input, $choice, $icon;\n              if (data.choice && data.choice.length) {\n                  $choice = data.choice.addClass('error');\n                  $input = $choice.find('input');\n                  $icon = $choice.find(' > label > span').addClass('error cross');\n\n                  setTimeout(function () {\n                      $input.prop('checked', false);\n                      $choice.removeClass('error');\n                      $icon.removeClass('error cross');\n                  }, 350);\n              }\n          }\n      });\n  };\n\n  var resetResponse = function (interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input', $container).prop('checked', false);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function (interaction, response) {\n      var $container = containerHelper.get(interaction);\n\n      try {\n          _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n              $container.find('input[value=\"' + identifier + '\"]').prop('checked', true);\n          });\n          instructionMgr.validateInstructions(interaction);\n      } catch (e) {\n          throw new Error('wrong response format in argument : ' + e);\n      }\n  };\n\n  var _getRawResponse = function (interaction) {\n      var values = [];\n      var $container = containerHelper.get(interaction);\n      $$1('input:checked', $container).each(function () {\n          values.push($$1(this).val());\n      });\n      return values;\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function (interaction) {\n      return pciResponse.serialize(_getRawResponse(interaction), interaction);\n  };\n\n  /**\n   * Clean interaction destroy\n   * @param {Object} interaction\n   */\n  var destroy = function destroy(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      //restore selected choices:\n      $container.find('.hottext').off('click');\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      if (_.isObject(state)) {\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n      return state;\n  };\n\n  var HottextInteraction = {\n      qtiClass: 'hottextInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState\n  };\n\n  return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'ui/tooltip', 'select2'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, tooltip, select2) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<span role=\\\"listbox\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-inlineChoiceInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n        data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n        data-qti-class=\\\"inlineChoiceInteraction\\\"\\n        data-has-search=\\\"false\\\"\\n        \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <span role=\\\"option\\\" data-identifier=\\\"empty\\\"></span>\\n    \";\n      options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * The value of the \"empty\" option\n     * @type String\n     */\n    const _emptyValue = 'empty';\n\n    const _defaultOptions = {\n        allowEmpty: true,\n        placeholderText: __('select a choice')\n    };\n\n    const optionSelector = 'span[role=\"option\"]';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} options - object containing available options\n     */\n    const render = function (interaction, options) {\n        const opts = _.clone(_defaultOptions);\n        const required = !!interaction.attr('required');\n        let choiceTooltip;\n        const $container = containerHelper.get(interaction);\n\n        _.extend(opts, options);\n\n        if (opts.allowEmpty && !required) {\n            $container.find(`span[data-identifier=${_emptyValue}]`).text(`--- ${__(`leave empty`)}---`);\n        } else {\n            $container.find(`span[data-identifier=${_emptyValue}]`).remove();\n        }\n\n        const getItemDir = () => {\n            const itemBody = $$1('.qti-itemBody');\n            const itemDir = itemBody.attr('dir') || 'ltr';\n            return itemDir;\n        };\n\n        const dirClass = getItemDir();\n        $container.select2({\n            data: $container\n                .find(optionSelector)\n                .map((i, opt) => ({\n                    id: $$1(opt).data('identifier'),\n                    markup: opt.outerHTML\n                }))\n                .get(),\n            formatResult: function (result) {\n                return result.markup;\n            },\n            formatSelection: function (data) {\n                return data.markup;\n            },\n            width: 'fit-content',\n            placeholder: opts.placeholderText,\n            minimumResultsForSearch: -1,\n            containerCssClass: `${dirClass}`,\n            dropdownCssClass: `qti-inlineChoiceInteraction-dropdown ${dirClass}`\n        });\n\n        const $el = $container.select2('container');\n\n        if (required) {\n            //set up the tooltip plugin for the input\n            choiceTooltip = tooltip.warning($el, __('A choice must be selected'));\n\n            if ($container.val() === '') {\n                choiceTooltip.show();\n            }\n        }\n\n        $container\n            .on('change', function (e) {\n                //if tts component is loaded and click-to-speak function is activated - we must fix the situation when select2 prevents tts from working\n                //for this a \"one-moment\" handler of option click is added and removed after event fired\n                if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                    const $selectedIndex = $$1(e.currentTarget)[0].options.selectedIndex\n                        ? $$1(e.currentTarget)[0].options.selectedIndex\n                        : null;\n                    $container.find(optionSelector).one('click', function (ev) {\n                        ev.stopPropagation();\n                    });\n                    $container.find(optionSelector).eq($selectedIndex).trigger('click');\n                }\n\n                if (required && $container.val() !== '') {\n                    choiceTooltip.hide();\n                }\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n            })\n            .on('select2-open', function () {\n                if (required) {\n                    choiceTooltip.hide();\n                }\n            })\n            .on('select2-close', function () {\n                if (required && $container.val() === '') {\n                    choiceTooltip.show();\n                }\n            });\n    };\n\n    const _setVal = function (interaction, choiceIdentifier) {\n        containerHelper.get(interaction).val(choiceIdentifier).select2('val', choiceIdentifier);\n    };\n\n    const resetResponse = function (interaction) {\n        _setVal(interaction, _emptyValue);\n    };\n\n\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const value = containerHelper.get(interaction).val();\n        return value && value !== _emptyValue ? [value] : [];\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //remove event\n        $$1(document).off('.commonRenderer');\n\n        $container.select2('destroy');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        let $container;\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                $container = containerHelper.get(interaction);\n\n                //just in case the dropdown is opened\n                $container.select2('disable').select2('close');\n\n                $$1(optionSelector, $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($container);\n\n                $container.select2('enable');\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        let $container;\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1(optionSelector, $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the inline choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction\n     */\n    var InlineChoiceInteraction = {\n        qtiClass: 'inlineChoiceInteraction',\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse) { 'use strict';\n\n  $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n  _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n  __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n  Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n  Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n  containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n  instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n  pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n  if (!Helpers0.__initialized) {\n    Helpers0(Handlebars);\n    Helpers0.__initialized = true;\n  }\n  var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n    var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"id=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" \"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = \"\", stack1;\n    buffer += \" lang=\\\"\"\n      + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n      + \"\\\"\";\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var stack1, helper;\n    if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program9(depth0,data) {\n    \n    var stack1;\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { return stack1; }\n    else { return ''; }\n    }\n\n  function program11(depth0,data,depth1) {\n    \n    var buffer = \"\", stack1;\n    buffer += \"\\n      <tr>\\n        \";\n    stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n        \";\n    stack1 = helpers.each.call(depth0, (depth1 && depth1.matchSet1), {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      \";\n    return buffer;\n    }\n  function program12(depth0,data) {\n    \n    \n    return \"\\n        <td>\\n          <label>\\n            <input type=\\\"checkbox\\\" >\\n            <span class=\\\"icon-checkbox cross\\\"></span>\\n          </label>\\n        </td>\\n        \";\n    }\n\n    buffer += \"<div \";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-matchInteraction\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\\" data-serial=\\\"\";\n    if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n    else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n    buffer += escapeExpression(stack1)\n      + \"\\\" data-qti-class=\\\"matchInteraction\\\"\";\n    stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \">\\n  \";\n    stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"match-interaction-area\\\">\\n    <table class=\\\"matrix\\\">\\n      <thead>\\n      <tr>\\n        <th> </th>\\n        \";\n    options={hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data};\n    if (helper = helpers.matchSet1) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet1); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet1) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tr>\\n      </thead>\\n      <tbody>\\n      \";\n    options={hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data};\n    if (helper = helpers.matchSet2) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0.matchSet2); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers.matchSet2) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.programWithDepth(11, program11, data, depth0),data:data}); }\n    if(stack1 || stack1 === 0) { buffer += stack1; }\n    buffer += \"\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n    return buffer;\n    });\n  function tpl(data, options, asString) {\n    var html = Template(data, options);\n    return (asString || true) ? html : $(html);\n  }\n\n  /*\n   * This program is free software; you can redistribute it and/or\n   * modify it under the terms of the GNU General Public License\n   * as published by the Free Software Foundation; under version 2\n   * of the License (non-upgradable).\n   *\n   * This program is distributed in the hope that it will be useful,\n   * but WITHOUT ANY WARRANTY; without even the implied warranty of\n   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   * GNU General Public License for more details.\n   *\n   * You should have received a copy of the GNU General Public License\n   * along with this program; if not, write to the Free Software\n   * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n   *\n   * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n   *\n   */\n\n  /**\n   * TODO do not use global context var, it's value is shared between interaction instances\n   *\n   * Flag to not throw warning instruction if already\n   * displaying the warning. If such a flag is not used,\n   * disturbances can be seen by the candidate if he clicks\n   * like hell on choices.\n   */\n  var inWarning = false;\n\n  /**\n   * Init rendering, called after template injected into the DOM\n   * All options are listed in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   */\n  var render = function(interaction) {\n      var $container = containerHelper.get(interaction);\n\n      // Initialize instructions system.\n      _setInstructions(interaction);\n\n      $container.on('click.commonRenderer', 'input[type=checkbox]', function(e) {\n          _onCheckboxSelected(interaction, e);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Set the response to the rendered interaction.\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @param {object} response\n   */\n  var setResponse = function(interaction, response) {\n      var $container = containerHelper.get(interaction);\n      response = _filterResponse(response);\n\n      if (typeof response.list !== 'undefined' && typeof response.list.directedPair !== 'undefined') {\n          _(response.list.directedPair).forEach(function(directedPair) {\n              var x = $$1('th[data-identifier=\"' + directedPair[0] + '\"]', $container).index() - 1;\n              var y = $$1('th[data-identifier=\"' + directedPair[1] + '\"]', $container)\n                  .parent()\n                  .index();\n\n              $$1('.matrix > tbody tr', $container)\n                  .eq(y)\n                  .find('input[type=checkbox]')\n                  .eq(x)\n                  .prop('checked', true);\n          });\n      }\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  /**\n   * Return the response of the rendered interaction\n   *\n   * The response format follows the IMS PCI recommendation :\n   * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n   *\n   * Available base types are defined in the QTI v2.1 information model:\n   * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n   *\n   * @param {object} interaction\n   * @returns {object}\n   */\n  var getResponse = function(interaction) {\n      var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\n      return response;\n  };\n\n  var resetResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $$1('input[type=checkbox]:checked', $container).each(function() {\n          $$1(this).prop('checked', false);\n      });\n\n      instructionMgr.validateInstructions(interaction);\n  };\n\n  var _filterResponse = function(response) {\n      if (typeof response.list === 'undefined') {\n          // Maybe it's a base?\n          if (typeof response.base === 'undefined') {\n              // Oops, it is even not a base.\n              throw 'The given response is not compliant with PCI JSON representation.';\n          } else {\n              // It's a base, Is it a directedPair? Null?\n              if (response.base === null) {\n                  return { list: { directedPair: [] } };\n              } else if (typeof response.base.directedPair === 'undefined') {\n                  // Oops again, it is not a directedPair.\n                  throw 'The matchInteraction only accepts directedPair values as responses.';\n              } else {\n                  return { list: { directedPair: [response.base.directedPair] } };\n              }\n          }\n      } else if (typeof response.list.directedPair === 'undefined') {\n          // Oops, not a directedPair.\n          throw 'The matchInteraction only accept directedPair values as responses.';\n      } else {\n          return response;\n      }\n  };\n\n  var _getRawResponse = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      var values = [];\n\n      $container.find('input[type=checkbox]:checked').each(function() {\n          values.push(_inferValue(this));\n      });\n\n      return values;\n  };\n\n  var _inferValue = function(element) {\n      var $element = $$1(element);\n      var $container = $element.closest('.match-interaction-area');\n      var y = $element.closest('tr').index();\n      var x = $element.closest('td').index();\n      var firstId = $$1('.matrix > thead th', $container)\n          .eq(x)\n          .data('identifier');\n      var secondId = $$1('.matrix > tbody th', $container)\n          .eq(y)\n          .data('identifier');\n      return [firstId, secondId];\n  };\n\n  var _onCheckboxSelected = function(interaction, e) {\n      var choice;\n      var currentResponse = _getRawResponse(interaction);\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n\n      if (maxAssociations === 0) {\n          maxAssociations = _countChoices(interaction);\n      }\n\n      if (_.size(currentResponse) > maxAssociations) {\n          // No more associations possible.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction);\n      } else if ((choice = _maxMatchReached(interaction, e.target)) !== false) {\n          // Check if matchmax is respected for both choices\n          // involved in the selection.\n          e.preventDefault();\n          instructionMgr.validateInstructions(interaction, choice);\n      } else {\n          containerHelper.triggerResponseChangeEvent(interaction, {});\n          instructionMgr.validateInstructions(interaction);\n      }\n  };\n\n  var _maxMatchReached = function(interaction, input) {\n      var association = _inferValue(input);\n      var overflow = false;\n\n      _(association).forEach(function(identifier) {\n          var choice = _getChoiceDefinitionByIdentifier(interaction, identifier);\n          var matchMin = choice.attributes.matchMin;\n          var matchMax = choice.attributes.matchMax;\n          var assoc = _countAssociations(interaction, choice);\n\n          if (matchMax > 0 && assoc > matchMax) {\n              overflow = choice;\n          }\n      });\n\n      return overflow;\n  };\n\n  var _countAssociations = function(interaction, choice) {\n      var rawResponse = _getRawResponse(interaction);\n      var count = 0;\n\n      // How much time can we find rawChoice in rawResponses?\n      _(rawResponse).forEach(function(response) {\n          if (response[0] === choice.attributes.identifier || response[1] === choice.attributes.identifier) {\n              count++;\n          }\n      });\n\n      return count;\n  };\n\n  var _countChoices = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      return $container.find('input[type=checkbox]').length;\n  };\n\n  var _getChoiceDefinitionByIdentifier = function(interaction, identifier) {\n      var rawChoices = _getRawChoices(interaction);\n      return rawChoices[identifier];\n  };\n\n  var _getRawChoices = function(interaction) {\n      var rawChoices = {};\n\n      _(interaction.choices).forEach(function(matchset) {\n          _(matchset).forEach(function(choice) {\n              rawChoices[choice.attributes.identifier] = choice;\n          });\n      });\n\n      return rawChoices;\n  };\n\n  var _setInstructions = function(interaction) {\n      var msg;\n      var minAssociations = interaction.attr('minAssociations');\n      var maxAssociations = interaction.attr('maxAssociations');\n      var choiceCount = _countChoices(interaction);\n\n      // Super closure is here again to save our souls! Houray!\n      // ~~~~~~~ |==||||0__\n\n      var superClosure = function() {\n          var onMaxChoicesReached = function(report, msg) {\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  report.update({\n                      level: 'warning',\n                      message: __('Maximum number of choices reached.'),\n                      timeout: 2000,\n                      stop: function() {\n                          report.update({ level: 'success', message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          var onMatchMaxReached = function(interaction, choice, report, msg, level) {\n              var $container = containerHelper.get(interaction);\n\n              if (inWarning === false) {\n                  inWarning = true;\n\n                  var $choice = $container.find(\n                      '.qti-simpleAssociableChoice[data-identifier=\"' + choice.attributes.identifier + '\"]'\n                  );\n                  var originalBackgroundColor = $choice.css('background-color');\n                  var originalColor = $choice.css('color');\n\n                  report.update({\n                      level: 'warning',\n                      message: __('The highlighted choice cannot be associated more than %d time(s).').replace(\n                          '%d',\n                          choice.attributes.matchMax\n                      ),\n                      timeout: 3000,\n                      start: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: '#fff',\n                                  color: '#ba122b'\n                              },\n                              250,\n                              function() {\n                                  $choice.animate(\n                                      {\n                                          backgroundColor: '#ba122b',\n                                          color: '#fff'\n                                      },\n                                      250\n                                  );\n                              }\n                          );\n                      },\n                      stop: function() {\n                          $choice.animate(\n                              {\n                                  backgroundColor: originalBackgroundColor,\n                                  color: originalColor\n                              },\n                              500\n                          );\n                          report.update({ level: level, message: msg });\n                          inWarning = false;\n                      }\n                  });\n              }\n          };\n\n          if (minAssociations === 0 && maxAssociations > 0) {\n              // No minimum but maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', maxAssociations);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.reset();\n                  }\n              });\n          } else if (minAssociations === 0 && maxAssociations === 0) {\n              // No minimum, no maximum.\n              msg = __('You must select 0 to %d choices.').replace('%d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations === 0) {\n              // minimum but no maximum.\n              msg = __('You must select %1$d to %2$d choices.');\n              msg = msg.replace('%1$d', minAssociations);\n              msg = msg.replace('%2$d', choiceCount);\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > choiceCount) {\n                      onMaxChoicesReached(this, msg);\n                  } else {\n                      this.setLevel('success');\n                  }\n              });\n          } else if (minAssociations > 0 && maxAssociations > 0) {\n              // minimum and maximum.\n              if (minAssociations !== maxAssociations) {\n                  msg = __('You must select %1$d to %2$d choices.');\n                  msg = msg.replace('%1$d', minAssociations);\n                  msg = msg.replace('%2$d', maxAssociations);\n              } else {\n                  msg = __('You must select exactly %d choice(s).');\n                  msg = msg.replace('%d', minAssociations);\n              }\n\n              instructionMgr.appendInstruction(interaction, msg, function(choice) {\n                  var responseCount = _.size(_getRawResponse(interaction));\n\n                  if (\n                      choice &&\n                      choice.attributes &&\n                      choice.attributes.matchMax > 0 &&\n                      _countAssociations(interaction, choice) > choice.attributes.matchMax\n                  ) {\n                      onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                  } else if (responseCount < minAssociations) {\n                      this.setLevel('info');\n                  } else if (responseCount > maxAssociations) {\n                      onMaxChoicesReached(this, msg);\n                  } else if (responseCount >= minAssociations && responseCount <= maxAssociations) {\n                      this.setLevel('success');\n                  }\n              });\n          }\n      };\n\n      superClosure();\n  };\n\n  var destroy = function(interaction) {\n      var $container = containerHelper.get(interaction);\n      $container.off('.commonRenderer');\n\n      instructionMgr.removeInstructions(interaction);\n\n      //remove all references to a cache container\n      containerHelper.reset(interaction);\n  };\n\n  /**\n   * Set the interaction state. It could be done anytime with any state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @param {Object} state - the interaction state\n   */\n  var setState = function setState(interaction, state) {\n      var $container;\n\n      if (_.isObject(state)) {\n          //restore order of previously shuffled choices\n          if (_.isArray(state.order) && state.order.length === 2) {\n              $container = containerHelper.get(interaction);\n\n              $$1('thead .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[0], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[0], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .appendTo($$1('thead tr', $container));\n\n              $$1('tbody .qti-choice', $container)\n                  .sort(function(a, b) {\n                      var aIndex = _.indexOf(state.order[1], $$1(a).data('identifier'));\n                      var bIndex = _.indexOf(state.order[1], $$1(b).data('identifier'));\n                      if (aIndex > bIndex) {\n                          return 1;\n                      }\n                      if (aIndex < bIndex) {\n                          return -1;\n                      }\n                      return 0;\n                  })\n                  .detach()\n                  .each(function(index, elt) {\n                      $$1(elt).prependTo($$1('tbody tr', $container).eq(index));\n                  });\n          }\n\n          if (state.response) {\n              interaction.resetResponse();\n              interaction.setResponse(state.response);\n          }\n      }\n  };\n\n  /**\n   * Get the interaction state.\n   *\n   * @param {Object} interaction - the interaction instance\n   * @returns {Object} the interaction current state\n   */\n  var getState = function getState(interaction) {\n      var $container;\n      var state = {};\n      var response = interaction.getResponse();\n\n      if (response) {\n          state.response = response;\n      }\n\n      //we store also the choice order if shuffled\n      if (interaction.attr('shuffle') === true) {\n          $container = containerHelper.get(interaction);\n\n          state.order = [[], []];\n          $$1('thead .qti-choice', $container).each(function() {\n              state.order[0].push($$1(this).data('identifier'));\n          });\n          $$1('tbody .qti-choice', $container).each(function() {\n              state.order[1].push($$1(this).data('identifier'));\n          });\n      }\n      return state;\n  };\n\n  /**\n   * Expose the common renderer for the match interaction\n   * @exports qtiCommonRenderer/renderers/interactions/MatchInteraction\n   */\n  var MatchInteraction = {\n      qtiClass: 'matchInteraction',\n      template: tpl,\n      render: render,\n      getContainer: containerHelper.get,\n      setResponse: setResponse,\n      getResponse: getResponse,\n      resetResponse: resetResponse,\n      destroy: destroy,\n      setState: setState,\n      getState: getState,\n      inferValue: _inferValue\n  };\n\n  return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/mediaplayer'], function ($$1, _, Handlebars, Helpers0, pciResponse, containerHelper, mediaplayer) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    mediaplayer = mediaplayer && Object.prototype.hasOwnProperty.call(mediaplayer, 'default') ? mediaplayer['default'] : mediaplayer;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-mediaInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"media-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function template(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2018 (original work) Open Assessment Technlogies SA\n     *\n     */\n\n    const qtiClass = 'mediaInteraction';\n    const getContainer = containerHelper.get;\n\n    //some default values\n    const defaults = {\n        type: 'video/mp4'\n    };\n\n    //some patterns to match context in which disable the media preview\n    const reWebM = /.*\\.webm/i;\n    const reFirefoxVersion = /firefox\\/([0-9]+\\.*[0-9]*)/i;\n\n    /**\n     * Checks if a media can be previewed safely\n     * @param {String} type - The type of media\n     * @param {String} url - The URL to the media\n     * @returns {Boolean}\n     */\n    function canPreviewMedia(type, url) {\n        const firefox = reFirefoxVersion.exec(navigator.userAgent);\n        const webm = reWebM.test(url);\n        return !(webm && firefox && parseFloat(firefox[1]) >= 87);\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10391\n     *\n     * @param {Object} interaction\n     * @fires playerrendered when the player is at least rendered\n     * @fires playerready when the player is sucessfully loaded and configured\n     * @returns {Promise}\n     */\n    function render(interaction) {\n        return new Promise(resolve => {\n            const $container = getContainer(interaction);\n            const media = interaction.object;\n            const $item = $container.parents('.qti-item');\n            const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n\n            //check if the media can be played (using timesPlayed and maxPlays)\n            const canBePlayed = () => maxPlays === 0 || maxPlays > parseInt($container.data('timesPlayed'), 10);\n\n            /**\n             * Resize video player elements to fit container size\n             * @param {Object} mediaElement - player instance\n             * @param {jQueryElement} $container   - container element to adapt\n             */\n            const resize = _.debounce(() => {\n                // only resize when width in px\n                // new version has width in %\n                const  currentWidth = media.attr('width');\n                if (interaction.mediaElement && currentWidth && !currentWidth.includes('%')) {\n                    const height = $container.find('.media-container').height();\n                    const width = $container.find('.media-container').width();\n\n                    interaction.mediaElement.resize(width, height);\n                }\n            }, 200);\n\n            //intialize the player if not yet done\n            const initMediaPlayer = () => {\n                if (!interaction.mediaElement) {\n                    const type = media.attr('type') || defaults.type;\n                    const mediaUrl = media.attr('data') || '';\n                    const url = mediaUrl && this.resolveUrl(mediaUrl);\n                    const preview = canPreviewMedia(type, url);\n\n                    interaction.mediaElement = mediaplayer({\n                        url,\n                        type,\n                        preview,\n                        canPause: $container.hasClass('pause'),\n                        maxPlays: maxPlays,\n                        canSeek: !maxPlays,\n                        width: media.attr('width'),\n                        height: media.attr('height'),\n                        volume: 100,\n                        autoStart: !!interaction.attr('autostart') && canBePlayed(),\n                        loop: !!interaction.attr('loop'),\n                        renderTo: $$1('.media-container', $container)\n                    })\n                        .on('render', () => {\n                            resize();\n\n                            $$1(window)\n                                .off('resize.mediaInteraction')\n                                .on('resize.mediaInteraction', resize);\n\n                            $item.off('resize.gridEdit').on('resize.gridEdit', resize);\n                            /**\n                             * @event playerrendered\n                             */\n                            $container.trigger('playerrendered');\n                        })\n                        .on('ready', function () {\n                            /**\n                             * @event playerready\n                             */\n                            $container.trigger('playerready');\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n\n                            // on slow network the resize runs before ready, so it should be called again\n                            resize();\n\n                            // declare the item ready when player is ready to play.\n                            resolve();\n                        })\n                        .on('update', _.throttle(() => containerHelper.triggerResponseChangeEvent(interaction), 1000))\n                        .on('ended', function () {\n                            $container.data('timesPlayed', $container.data('timesPlayed') + 1);\n                            containerHelper.triggerResponseChangeEvent(interaction);\n\n                            if (!canBePlayed()) {\n                                this.disable();\n                            }\n                        });\n                }\n            };\n\n\n            //set up the number of times played\n            if (!$container.data('timesPlayed')) {\n                $container.data('timesPlayed', 0);\n            }\n\n            //initialize the component\n            $container.on('responseSet', initMediaPlayer);\n\n            //gives a small chance to the responseSet event before initializing the player\n            initMediaPlayer();\n        });\n    }\n\n    /**\n     * Destroy the current interaction\n     * @param {Object} interaction\n     */\n    function destroy(interaction) {\n        const $container = getContainer(interaction);\n\n        if (interaction.mediaElement) {\n            interaction.mediaElement.destroy();\n            interaction.mediaElement = null;\n        }\n\n        $$1('.instruction-container', $container).empty();\n        $$1('.media-container', $container).empty();\n\n        $container.removeData('timesPlayed');\n\n        $$1(window).off('resize.video');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    }\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    function _getRawResponse(interaction) {\n        return [getContainer(interaction).data('timesPlayed') || 0];\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    function setResponse(interaction, response) {\n        if (response) {\n            try {\n                const maxPlays = parseInt(interaction.attr('maxPlays'), 10) || 0;\n                const responseValues = pciResponse.unserialize(response, interaction);\n                const timesPlayed = parseInt(responseValues[0], 10) || 0;\n                getContainer(interaction).data('timesPlayed', timesPlayed);\n\n                if (interaction.mediaElement) {\n                    if (maxPlays !== 0 && maxPlays <= timesPlayed) {\n                        interaction.mediaElement.disable();\n                    } else if (interaction.mediaElement.is('disabled')) {\n                        interaction.mediaElement.enable();\n                    }\n                }\n            } catch (e) {\n                // something went wrong\n            }\n        }\n    }\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    function resetResponse(interaction) {\n        getContainer(interaction).data('timesPlayed', 0);\n    }\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    function getResponse(interaction) {\n        if (!getContainer(interaction).data('timesPlayed')) {\n            return { base: null };\n        }\n\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state) {\n        /**\n         * Restore the media player state\n         * @private\n         * @param {Object} [playerState]\n         * @param {Boolean} [playerState.muted] - is the player muted\n         * @param {Number} [playerState.volume] - the current volume\n         * @param {Number} [playerState.position] - the position to seek to\n         */\n        const restorePlayerState = playerState => {\n            if (playerState && interaction.mediaElement) {\n                //Volume\n                if (_.isNumber(playerState.volume)) {\n                    interaction.mediaElement.setVolume(playerState.volume);\n                }\n\n                //Muted state (always after the volume)\n                if (_.isBoolean(playerState.muted)) {\n                    interaction.mediaElement.mute(playerState.muted);\n                    interaction.mediaElement.startMuted = playerState.muted;\n                }\n\n                //Position\n                if (playerState.position && playerState.position > 0) {\n                    interaction.mediaElement.seek(playerState.position);\n                    if (!interaction.attr('autostart')) {\n                        interaction.mediaElement.pause();\n                    }\n                }\n            }\n        };\n\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            if (_.isPlainObject(state.player) && interaction.mediaElement) {\n                if (interaction.mediaElement.is('ready')) {\n                    restorePlayerState(state.player);\n                } else {\n                    interaction.mediaElement.on('ready.state', () => {\n                        interaction.mediaElement.off('ready.state');\n                        restorePlayerState(state.player);\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //collect player's state\n        if (interaction.mediaElement) {\n            state.player = {\n                position: interaction.mediaElement.getPosition(),\n                muted: interaction.mediaElement.is('muted'),\n                volume: interaction.mediaElement.getVolume()\n            };\n        }\n        return state;\n    }\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MediaInteraction\n     */\n    var MediaInteraction = {\n        qtiClass,\n        template,\n        render,\n        getContainer,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',['lodash', 'jquery', 'i18n', 'core/mouseEvent', 'services/features', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'interact', 'ui/interactUtils'], function (_, $$1, __, mouseEvent, features, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, interact, interactUtils) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    features = features && Object.prototype.hasOwnProperty.call(features, 'default') ? features['default'] : features;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    interact = interact && Object.prototype.hasOwnProperty.call(interact, 'default') ? interact['default'] : interact;\n    interactUtils = interactUtils && Object.prototype.hasOwnProperty.call(interactUtils, 'default') ? interactUtils['default'] : interactUtils;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      return \" qti-horizontal\";\n      }\n\n    function program5(depth0,data) {\n      \n      \n      return \" qti-vertical\";\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      \n      return \"horizontal\";\n      }\n\n    function program11(depth0,data) {\n      \n      \n      return \"vertical\";\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program15(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program17(depth0,data) {\n      \n      var stack1;\n      stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program19(depth0,data) {\n      \n      \n      return \"icon-down\";\n      }\n\n    function program21(depth0,data) {\n      \n      \n      return \"icon-right\";\n      }\n\n    function program23(depth0,data) {\n      \n      \n      return \"icon-up\";\n      }\n\n    function program25(depth0,data) {\n      \n      \n      return \"icon-left\";\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-orderInteraction\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n     data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n     data-qti-class=\\\"orderInteraction\\\"\\n     data-orientation=\\\"\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"order-interaction-area\\\">\\n        <ul class=\\\"choice-area square source solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n            \";\n      options={hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data};\n      if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n      else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n      if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data}); }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n        </ul>\\n        <div class=\\\"arrow-bar middle\\\">\\n            <span class=\\\"icon-add-to-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"></span>\\n            <span class=\\\"icon-remove-from-selection \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n        <ul class=\\\"drag-container block-listing\\\"></ul>\\n        <ul class=\\\"result-area decimal target solid block-listing \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\\n        </ul>\\n        <div class=\\\"arrow-bar\\\">\\n            <span class=\\\"icon-move-before \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(23, program23, data),fn:self.program(25, program25, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n            <span class=\\\"icon-move-after \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(19, program19, data),fn:self.program(21, program21, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" inactive\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const orientationSelectionEnabled = features.isVisible('taoQtiItem/creator/interaction/order/property/orientation');\n\n    const _freezeSize = function ($container) {\n        const $orderArea = $container.find('.order-interaction-area');\n        $orderArea.height($orderArea.height());\n    };\n\n    const _setInstructions = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container),\n            $resultArea = $$1('.result-area', $container),\n            min = parseInt(interaction.attr('minChoices'), 10),\n            max = parseInt(interaction.attr('maxChoices'), 10);\n\n        if (min) {\n            instructionMgr.appendInstruction(interaction, __('You must use at least %d choices', min), function () {\n                if ($resultArea.find('>li').length >= min) {\n                    this.setLevel('success');\n                } else {\n                    this.reset();\n                }\n            });\n        }\n\n        if (max && max < _.size(interaction.getChoices())) {\n            const instructionMax = instructionMgr.appendInstruction(\n                interaction,\n                __('You can use maximum %d choices', max),\n                function () {\n                    if ($resultArea.find('>li').length >= max) {\n                        $choiceArea.find('>li').addClass('deactivated');\n                        this.setMessage(__('Maximum choices reached'));\n                    } else {\n                        $choiceArea.find('>li').removeClass('deactivated');\n                        this.reset();\n                    }\n                }\n            );\n\n            interact(`${$choiceArea.selector} >li.deactivated`).on('tap', function (e) {\n                const $target = $$1(e.currentTarget);\n                $target.addClass('brd-error');\n                instructionMax.setLevel('warning', 2000);\n                setTimeout(function () {\n                    $target.removeClass('brd-error');\n                }, 150);\n            });\n\n            // we don't check for isDragAndDropEnabled on purpose, as this binding is not to allow dragging,\n            // but only to provide feedback in case of a drag action on an inactive choice\n            interact(`${$choiceArea.selector} >li.deactivated`)\n                .draggable({\n                    onstart: function (e) {\n                        const $target = $$1(e.target);\n                        $target.addClass('brd-error');\n                        instructionMax.setLevel('warning');\n                    },\n                    onend: function (e) {\n                        const $target = $$1(e.target);\n                        $target.removeClass('brd-error');\n                        instructionMax.setLevel('info');\n                    }\n                })\n                .styleCursor(false);\n        }\n    };\n\n    const resetResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const initialOrder = _.keys(interaction.getChoices());\n        const $choiceArea = $$1('.choice-area', $container).append($$1('.result-area>li', $container));\n        const $choices = $choiceArea.children('.qti-choice');\n\n        $container.find('.qti-choice.active').each(function deactivateChoice() {\n            interactUtils.tapOn(this);\n        });\n\n        $choices.detach().sort(function (choice1, choice2) {\n            return _.indexOf(initialOrder, $$1(choice1).data('serial')) - _.indexOf(initialOrder, $$1(choice2).data('serial'));\n        });\n        $choiceArea.prepend($choices);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    const render = function (interaction) {\n        const $container = containerHelper.get(interaction),\n            $choiceArea = $container.find('.choice-area'),\n            $resultArea = $container.find('.result-area'),\n            $iconAdd = $container.find('.icon-add-to-selection'),\n            $iconRemove = $container.find('.icon-remove-from-selection'),\n            $iconBefore = $container.find('.icon-move-before'),\n            $iconAfter = $container.find('.icon-move-after'),\n            choiceSelector = `${$choiceArea.selector} >li:not(.deactivated)`,\n            resultSelector = `${$resultArea.selector} >li`,\n            $dragContainer = $container.find('.drag-container'),\n            orientation =\n                interaction.attr('orientation') && orientationSelectionEnabled\n                    ? interaction.attr('orientation')\n                    : 'vertical';\n\n        let $activeChoice = null,\n            scaleX,\n            scaleY,\n            isDragAndDropEnabled,\n            dragOptions,\n            $dropzoneElement;\n\n        const _activeControls = function _activeControls() {\n            $iconAdd.addClass('inactive');\n            $iconRemove.removeClass('inactive').addClass('active');\n            $iconBefore.removeClass('inactive').addClass('active');\n            $iconAfter.removeClass('inactive').addClass('active');\n        };\n\n        const _resetControls = function _resetControls() {\n            $iconAdd.removeClass('inactive');\n            $iconRemove.removeClass('active').addClass('inactive');\n            $iconBefore.removeClass('active').addClass('inactive');\n            $iconAfter.removeClass('active').addClass('inactive');\n        };\n\n        const _setSelection = function _setSelection($choice) {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n            }\n            $activeChoice = $choice;\n            $activeChoice.addClass('active');\n        };\n\n        const _resetSelection = function _resetSelection() {\n            if ($activeChoice) {\n                $activeChoice.removeClass('active');\n                $activeChoice = null;\n            }\n            _resetControls();\n        };\n\n        const _addChoiceToSelection = function _addChoiceToSelection($target, position) {\n            const $results = $$1(resultSelector);\n            _resetSelection();\n\n            //move choice to the result list:\n            if (typeof position !== 'undefined' && position < $results.length) {\n                $results.eq(position).before($target);\n            } else {\n                $resultArea.append($target);\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            //update constraints :\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        const _toggleResultSelection = function _toggleResultSelection($target) {\n            if ($target.hasClass('active')) {\n                _resetSelection();\n            } else {\n                _setSelection($target);\n                _activeControls();\n            }\n        };\n\n        const _removeChoice = function _removeChoice() {\n            if ($activeChoice) {\n                //restore choice back to choice list\n                $choiceArea.append($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                //update constraints :\n                instructionMgr.validateInstructions(interaction);\n            }\n\n            _resetSelection();\n        };\n\n        const _moveResultBefore = function _moveResultBefore() {\n            const $prev = $activeChoice.prev();\n\n            if ($prev.length) {\n                $prev.before($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        const _moveResultAfter = function _moveResultAfter() {\n            const $next = $activeChoice.next();\n\n            if ($next.length) {\n                $next.after($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function () {\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n\n            $iconAdd.addClass('triggered');\n            setTimeout(function () {\n                $iconAdd.removeClass('triggered');\n            }, 150);\n\n            _addChoiceToSelection($target);\n        });\n\n        interact(resultSelector).on('tap', function (e) {\n            const $target = $$1(e.currentTarget);\n\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($target.closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _toggleResultSelection($target);\n        });\n\n        interact($iconRemove.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _removeChoice();\n        });\n\n        interact($iconBefore.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultBefore();\n        });\n\n        interact($iconAfter.selector).on('tap', function (e) {\n            //if tts component is loaded and click-to-speak function is activated - we should prevent this listener to go further\n            if ($$1(e.currentTarget).closest('.qti-item').hasClass('prevent-click-handler')) {\n                return;\n            }\n\n            e.stopPropagation();\n            _moveResultAfter();\n        });\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption('enableDragAndDrop') && this.getOption('enableDragAndDrop').order) {\n            isDragAndDropEnabled = this.getOption('enableDragAndDrop').order;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function () {\n                if (_isDropzoneVisible()) {\n                    interact($resultArea.selector).fire({\n                        type: 'drop',\n                        target: $dropzoneElement.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            $dropzoneElement = $$1('<li>', { class: 'dropzone qti-choice' });\n            $$1('<div>', { class: 'qti-block' }).appendTo($dropzoneElement);\n\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: '.qti-interaction',\n                    endOnly: false,\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _iFrameDragFix(choiceSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target);\n                            $target.removeClass('dragged');\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result draggables\n            interact(resultSelector)\n                .draggable(\n                    _.assign({}, dragOptions, {\n                        onstart: function (e) {\n                            const $target = $$1(e.target);\n                            let scale;\n                            $target.addClass('dragged');\n\n                            _setSelection($target);\n\n                            // move dragged result to drag container\n                            $dragContainer.show();\n                            $dragContainer.offset($target.offset());\n                            if (orientation === 'horizontal') {\n                                $dragContainer.width($$1(e.currentTarget).width());\n                            } else {\n                                $dragContainer.width($target.parent().width());\n                            }\n                            $dragContainer.append($target);\n\n                            _iFrameDragFix(resultSelector, e.target);\n                            scale = interactUtils.calculateScale(e.target);\n                            scaleX = scale[0];\n                            scaleY = scale[1];\n                        },\n                        onmove: function (e) {\n                            const $target = $$1(e.target);\n                            interactUtils.moveElement(e.target, e.dx / scaleX, e.dy / scaleY);\n                            if (_isDropzoneVisible()) {\n                                _adjustDropzonePosition($target);\n                            }\n                        },\n                        onend: function (e) {\n                            const $target = $$1(e.target),\n                                hasBeenDroppedInResultArea = $target.parent === $resultArea;\n\n                            $target.removeClass('dragged');\n                            $dragContainer.hide();\n\n                            if (!hasBeenDroppedInResultArea) {\n                                _removeChoice();\n                            }\n\n                            interactUtils.restoreOriginalPosition($target);\n                            interactUtils.iFrameDragFixOff();\n                        }\n                    })\n                )\n                .styleCursor(false);\n\n            // makes result area droppable\n            interact($resultArea.selector).dropzone({\n                overlap: 0.5,\n                ondragenter: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    _insertDropzone($dragged);\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function (e) {\n                    const $dragged = $$1(e.relatedTarget),\n                        dropzoneIndex = $$1(resultSelector).index($dropzoneElement);\n\n                    this.ondragleave(e);\n\n                    _addChoiceToSelection($dragged, dropzoneIndex);\n                    interactUtils.restoreOriginalPosition($dragged);\n                },\n                ondragleave: function (e) {\n                    const $dragged = $$1(e.relatedTarget);\n                    $dropzoneElement.remove();\n                    $dragged.removeClass('droppable');\n                }\n            });\n        }\n\n        function _isDropzoneVisible() {\n            return $$1.contains($container.get(0), $dropzoneElement.get(0));\n        }\n\n        function _insertDropzone($dragged) {\n            const draggedMiddle = _getMiddleOf($dragged),\n                previousMiddle = {\n                    x: 0,\n                    y: 0\n                };\n            let insertPosition;\n\n            // look for position where to insert dropzone\n            $$1(resultSelector).each(function (index) {\n                const currentMiddle = _getMiddleOf($$1(this));\n\n                if (orientation !== 'horizontal') {\n                    if (draggedMiddle.y > previousMiddle.y && draggedMiddle.y < currentMiddle.y) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.y = currentMiddle.y;\n                } else {\n                    if (draggedMiddle.x > previousMiddle.x && draggedMiddle.x < currentMiddle.x) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.x = currentMiddle.x;\n                }\n            });\n            // append dropzone to DOM\n            if (typeof insertPosition !== 'undefined') {\n                $$1(resultSelector).eq(insertPosition).before($dropzoneElement);\n            } else {\n                // no index found, we just append to the end\n                $resultArea.append($dropzoneElement);\n            }\n\n            // style dropzone\n            $dropzoneElement.height($dragged.height());\n            $dropzoneElement.find('div').text($dragged.text());\n        }\n\n        function _adjustDropzonePosition($dragged) {\n            const draggedBox = $dragged.get(0).getBoundingClientRect(),\n                $prevResult = $dropzoneElement.prev('.qti-choice'),\n                $nextResult = $dropzoneElement.next('.qti-choice'),\n                prevMiddle = $prevResult.length > 0 ? _getMiddleOf($prevResult) : false,\n                nextMiddle = $nextResult.length > 0 ? _getMiddleOf($nextResult) : false;\n\n            if (orientation !== 'horizontal') {\n                if (prevMiddle && draggedBox.top < prevMiddle.y) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.bottom > nextMiddle.y) {\n                    $nextResult.after($dropzoneElement);\n                }\n            } else {\n                if (prevMiddle && draggedBox.left < prevMiddle.x) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && draggedBox.right > nextMiddle.x) {\n                    $nextResult.after($dropzoneElement);\n                }\n            }\n        }\n\n        function _getMiddleOf($element) {\n            const elementBox = $element.get(0).getBoundingClientRect();\n            return {\n                x: elementBox.left + elementBox.width / 2,\n                y: elementBox.top + elementBox.height / 2\n            };\n        }\n\n        // rendering init\n\n        _setInstructions(interaction);\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function (e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'maxChoices' || data.key === 'minChoices') {\n                    instructionMgr.removeInstructions(interaction);\n                    _setInstructions(interaction);\n                    instructionMgr.validateInstructions(interaction);\n                }\n            }\n        });\n\n        _freezeSize($container);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    const setResponse = function (interaction, response) {\n        const $container = containerHelper.get(interaction);\n        const $choiceArea = $$1('.choice-area', $container);\n        const $resultArea = $$1('.result-area', $container);\n\n        if (response === null || _.isEmpty(response)) {\n            resetResponse(interaction);\n        } else {\n            try {\n                _.forEach(pciResponse.unserialize(response, interaction), function (identifier) {\n                    $resultArea.append($choiceArea.find(`[data-identifier=\"${identifier}\"]`));\n                });\n            } catch (e) {\n                throw new Error(`wrong response format in argument : ${e}`);\n            }\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    const _getRawResponse = function (interaction) {\n        const $container = containerHelper.get(interaction);\n        const response = [];\n        $$1('.result-area>li', $container).each(function () {\n            response.push($$1(this).data('identifier'));\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function (interaction) {\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Set additionnal data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    const getCustomData = function (interaction, data) {\n        return _.merge(data || {}, {\n            horizontal: interaction.attr('orientation') === 'horizontal' && orientationSelectionEnabled\n        });\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    const destroy = function (interaction) {\n        const $container = containerHelper.get(interaction);\n\n        //first, remove all events\n        const selectors = [\n            '.choice-area >li:not(.deactivated)',\n            '.result-area >li',\n            '.icon-add-to-selection',\n            '.icon-remove-from-selection',\n            '.icon-move-before',\n            '.icon-move-after'\n        ];\n        selectors.forEach(function unbindInteractEvents(selector) {\n            interact($container.find(selector).selector).unset();\n        });\n\n        $$1(document).off('.commonRenderer');\n\n        $container.find('.order-interaction-area').removeAttr('style');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if (_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())) {\n                const $container = containerHelper.get(interaction);\n\n                $$1('.choice-area .qti-choice', $container)\n                    .sort(function (a, b) {\n                        const aIndex = _.indexOf(state.order, $$1(a).data('identifier'));\n                        const bIndex = _.indexOf(state.order, $$1(b).data('identifier'));\n                        if (aIndex > bIndex) {\n                            return 1;\n                        }\n                        if (aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($$1('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if (interaction.attr('shuffle') === true) {\n            const $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $$1('.choice-area .qti-choice', $container).each(function () {\n                state.order.push($$1(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the order interaction\n     * @exports qtiCommonRenderer/renderers/interactions/OrderInteraction\n     */\n    var OrderInteraction = {\n        qtiClass: 'orderInteraction',\n        getData: getCustomData,\n        template: tpl,\n        render,\n        getContainer: containerHelper.get,\n        setResponse,\n        getResponse,\n        resetResponse,\n        destroy,\n        setState,\n        getState\n    };\n\n    return OrderInteraction;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2020 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('qtiCustomInteractionContext',['lodash'], function(_) {\n    'use strict';\n\n    //need a global reference to have pciHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._pciHooks = window._pciHooks || {};\n\n    /**\n     * Global object accessible by all PCIs\n     *\n     * @type Object\n     */\n    return {\n        /**\n         * register a custom interaction (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} pciHook\n         * @returns {undefined}\n         */\n        register(pciHook) {\n            const typeIdentifier =\n                typeof pciHook.getTypeIdentifier === 'function' ? pciHook.getTypeIdentifier() : pciHook.typeIdentifier;\n            if (typeIdentifier) {\n                window._pciHooks[typeIdentifier] = pciHook;\n            } else {\n                throw new Error('invalid PCI hook');\n            }\n        },\n        /**\n         * notify when a custom interaction is ready for test taker interaction\n         *\n         * @param {string} pciInstance\n         * @fires custominteractionready\n         */\n        notifyReady(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n        /**\n         * notify when a custom interaction is completed by test taker\n         *\n         * @param {string} pciInstance\n         * @fires custominteractiondone\n         */\n        notifyDone(pciInstance) {\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n\n        onready(customInteraction, state) {\n            //to be implemented in future story\n        },\n        ondone(customInteraction, response, state, status) {\n            //to be implemented in future story\n        },\n\n        /**\n         * Get a cloned object representing the PCI model\n         *\n         * @param {string} pciTypeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance(pciTypeIdentifier) {\n            const registeredPCI = window._pciHooks[pciTypeIdentifier];\n\n            if (!registeredPCI) {\n                throw new Error('no portable custom interaction hook found with the id ' + pciTypeIdentifier);\n            }\n\n            return _.cloneDeep(registeredPCI);\n        }\n    };\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator',['qtiCustomInteractionContext'], function (qtiCustomInteractionContext) { 'use strict';\n\n    qtiCustomInteractionContext = qtiCustomInteractionContext && Object.prototype.hasOwnProperty.call(qtiCustomInteractionContext, 'default') ? qtiCustomInteractionContext['default'] : qtiCustomInteractionContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var instanciator = {\n        /**\n         * Get the PCI instance associated to the interaction object\n         * If none exists, create a new one based on the PCI typeIdentifier\n         *\n         * @param {Object} interaction - the js object representing the interaction\n         * @returns {Object} PCI instance\n         */\n        getPci(interaction) {\n            let pciTypeIdentifier;\n            let pci = interaction.data('pci');\n\n            if (!pci) {\n                pciTypeIdentifier = interaction.typeIdentifier;\n                pci = qtiCustomInteractionContext.createPciInstance(pciTypeIdentifier);\n                if (pci) {\n                    //binds the PCI instance to TAO interaction object and vice versa\n                    interaction.data('pci', pci);\n                    pci._taoCustomInteraction = interaction;\n                } else {\n                    throw new Error('no custom interaction hook found for the type ' + pciTypeIdentifier);\n                }\n            }\n\n            return pci;\n        },\n\n        /**\n         * Associate a PCI instance to the interaction object\n         * @param {Object} interaction - the js object representing the interaction\n         * @param {Object} instance - PCI instance\n         */\n        setPci(interaction, instance) {\n            interaction.data('pci', instance);\n        }\n    };\n\n    return instanciator;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator'], function (_, containerHelper, instanciator) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    function commonPciRenderer(runtime) {\n        return {\n            getRequiredModules: function getRequiredModules() {\n                var requireEntries = [];\n                //load hook if applicable\n                if (runtime.hook) {\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                }\n                //load libs\n                _.forEach(runtime.libraries, function(lib) {\n                    requireEntries.push(lib.replace(/\\.js$/, ''));\n                });\n                //load stylesheets\n                _.forEach(runtime.stylesheets, function(stylesheet) {\n                    requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                });\n                return requireEntries;\n            },\n            createInstance: function(interaction, context) {\n                var id = interaction.attr('responseIdentifier');\n                var pci = instanciator.getPci(interaction);\n                var properties = _.clone(interaction.properties);\n                var assetManager = context.assetManager;\n                var pciAssetManager = {\n                    resolve: function pciAssetResolve(url) {\n                        var resolved = assetManager.resolveBy('portableElementLocation', url);\n                        if (resolved === url || _.isUndefined(resolved)) {\n                            return assetManager.resolve(url);\n                        } else {\n                            return resolved;\n                        }\n                    }\n                };\n                pci.initialize(\n                    id,\n                    containerHelper\n                        .get(interaction)\n                        .children()\n                        .get(0),\n                    properties,\n                    pciAssetManager\n                );\n                return Promise.resolve(pci);\n            },\n            /**\n             *\n             * @param {Object }interaction\n             * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n             */\n            destroy: function destroy(interaction) {\n                return instanciator.getPci(interaction).destroy();\n            },\n            setState: function setState(interaction, state) {\n                instanciator.getPci(interaction).setSerializedState(state);\n            },\n            getState: function getState(interaction) {\n                return instanciator.getPci(interaction).getSerializedState();\n            }\n        };\n    }\n\n    return commonPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims',['lodash', 'core/logger', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'context'], function (_, loggerFactory, containerHelper, instanciator, sharedContext) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    sharedContext = sharedContext && Object.prototype.hasOwnProperty.call(sharedContext, 'default') ? sharedContext['default'] : sharedContext;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2021 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims');\n\n    const pciDoneCallback = pci => {\n        //standard callback function to be implemented in a future story\n        logger.info('pciDoneCallback called on PCI ' + pci.typeIdentifier);\n    };\n\n    /**\n     * Key under the IMS PCI constructor is stored on interaction\n     */\n    const pciConstructorDataKey = 'pciConstructor';\n\n    function defaultPciRenderer(runtime) {\n        return {\n            getRequiredModules() {\n                const requireEntries = [];\n                // load modules\n                _.forEach(runtime.modules, function (module, name) {\n                    requireEntries.push(name);\n                });\n                return requireEntries;\n            },\n            /**\n             * Saves the original IMS PCI module to be able to reinstanciate later\n             * @param {Object} interaction\n             * @param {Object} pciConstructor\n             */\n            setPCIConstructor(interaction, pciConstructor) {\n                interaction.data(pciConstructorDataKey, pciConstructor);\n            },\n            /**\n             * Returns with original IMS PCI module\n             * @param {Object} interaction\n             */\n            getPCIConstructor(interaction) {\n                return interaction.data(pciConstructorDataKey);\n            },\n            createInstance(interaction, context) {\n                let pciConstructor = this.getPCIConstructor(interaction);\n\n                //get interaction xml:lang prop to put it into pci instance config\n                const contentLanguage = interaction.attributes && interaction.attributes.language;\n                const itemLanguage = interaction.rootElement && interaction.rootElement.attributes && interaction.rootElement.attributes['xml:lang'];\n                const language = contentLanguage || itemLanguage;\n                const userLanguage = sharedContext && sharedContext.locale;\n\n                const properties = _.assign(_.clone(interaction.properties), {language, userLanguage});\n\n                // save original IMS PCI module first time to be able to reinstanciate later if necessary\n                if (!pciConstructor) {\n                    pciConstructor = instanciator.getPci(interaction);\n                    this.setPCIConstructor(interaction, pciConstructor);\n                }\n\n                // serialize any array or object properties\n                _.forOwn(properties, function (propVal, propKey) {\n                    properties[propKey] = _.isArray(propVal) || _.isObject(propVal) ? JSON.stringify(propVal) : propVal;\n                });\n\n                let pciReadyCallback;\n                const readyPromise = new Promise(resolve => {\n                    pciReadyCallback = resolve;\n                });\n\n                const config = {\n                    properties,\n                    templateVariables: {}, //not supported yet\n                    boundTo: context.response || {},\n                    onready: pciReadyCallback,\n                    ondone: pciDoneCallback,\n                    status: 'interacting' //only support interacting state currently(TODO: solution, review),\n                };\n\n                pciConstructor.getInstance(containerHelper.get(interaction).get(0), config, context.state);\n\n                return readyPromise.then(instance => {\n                    instanciator.setPci(interaction, instance);\n                    return instance;\n                });\n            },\n            destroy: function destroy(interaction) {\n                instanciator.getPci(interaction).oncompleted();\n            },\n            /**\n             * IMS PCI does not have setState, so PCI should be destroyed and reinstanciated with response.\n             * This function should run only in review mode.\n             * @param {Object} interaction\n             * @param {Object} state - state that should be set\n             * @returns {Promise<Object>} - Resolves with newly created instance\n             */\n            setReviewState(interaction, state) {\n                this.destroy(interaction);\n                return this.createInstance(interaction, { response: { RESPONSE: state.response } });\n            },\n            setState: _.noop,\n            getState(interaction) {\n                return instanciator.getPci(interaction).getState();\n            }\n        };\n    }\n\n    return defaultPciRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/instanciator', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/common', 'taoQtiItem/qtiCommonRenderer/renderers/interactions/pci/ims', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/ciRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, instanciator, commonPciRenderer, imsPciRenderer, util, ciRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    instanciator = instanciator && Object.prototype.hasOwnProperty.call(instanciator, 'default') ? instanciator['default'] : instanciator;\n    commonPciRenderer = commonPciRenderer && Object.prototype.hasOwnProperty.call(commonPciRenderer, 'default') ? commonPciRenderer['default'] : commonPciRenderer;\n    imsPciRenderer = imsPciRenderer && Object.prototype.hasOwnProperty.call(imsPciRenderer, 'default') ? imsPciRenderer['default'] : imsPciRenderer;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"\\n    lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-customInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2021 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _setPciModel = function _setPciModel(interaction, runtime) {\n        var pciRenderer;\n        if (runtime.model === 'IMSPCI') {\n            pciRenderer = imsPciRenderer(runtime);\n        } else {\n            pciRenderer = commonPciRenderer(runtime);\n        }\n        interaction.data('pci-model', runtime.model);\n        interaction.data('pci-renderer', pciRenderer);\n    };\n\n    var _getPciRenderer = function _getPciRenderer(interaction) {\n        return interaction.data('pci-renderer');\n    };\n\n    /**\n     * Execute javascript codes to bring the interaction to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. configure the paths\n     * 2. require all required libs\n     * 3. create a pci instance based on the interaction model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable (state and/or response)\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction, options) {\n        var self = this;\n\n        options = options || {};\n        return new Promise(function (resolve, reject) {\n            var id = interaction.attr('responseIdentifier');\n            var typeIdentifier = interaction.typeIdentifier;\n            var assetManager = self.getAssetManager();\n            var state;\n            var response = {};\n\n            if (options.state && options.state[id]) {\n                state = options.state[id];\n            }\n            response[id] = { base: null };\n\n            ciRegistry\n                .loadRuntimes({ include: [typeIdentifier] })\n                .then(function () {\n                    var pciRenderer;\n                    var runtime = ciRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pci cannot be found : ' + typeIdentifier);\n                    }\n\n                    _setPciModel(interaction, runtime);\n\n                    pciRenderer = _getPciRenderer(interaction);\n\n                    window.require(\n                        pciRenderer.getRequiredModules(),\n                        function () {\n                            var pci = instanciator.getPci(interaction);\n                            if (pci) {\n                                pciRenderer.createInstance(interaction, {\n                                    response: response,\n                                    state: state,\n                                    assetManager: assetManager\n                                }).then(instance => {\n                                    //forward internal PCI event responseChange\n                                    if (_.isFunction(instance.on)) {\n                                        interaction.onPci('responseChange', function () {\n                                            containerHelper.triggerResponseChangeEvent(interaction);\n                                        });\n                                    }\n                                    resolve();\n                                });\n                            } else {\n                                reject('Unable to initialize pci \"' + id + '\"');\n                            }\n                        },\n                        reject\n                    );\n                })\n                .catch(function (error) {\n                    reject('Error loading runtime \"' + id + '\": ' + error);\n                });\n        });\n    };\n\n    /**\n     * Programmatically set the response following the json schema described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        instanciator.getPci(interaction).setResponse(response);\n    };\n\n    /**\n     * Get the response in the json format described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return instanciator.getPci(interaction).getResponse();\n    };\n\n    /**\n     * Remove the current response set in the interaction\n     * The state may not be restored at this point.\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function resetResponse(interaction) {\n        instanciator.getPci(interaction).resetResponse();\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} interaction\n     * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n     */\n    var destroy = function destroy(interaction) {\n        return _getPciRenderer(interaction).destroy(interaction);\n    };\n\n    /**\n     * Restore the state of the interaction from the serializedState.\n     *\n     * @param {Object} interaction\n     * @param {Object} serializedState - json format\n     */\n    var setState = function setState(interaction, serializedState) {\n        _getPciRenderer(interaction).setState(interaction, serializedState);\n    };\n\n    /**\n     * Get the current state of the interaction as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} interaction\n     * @returns {Object} json format\n     */\n    var getState = function getState(interaction) {\n        return _getPciRenderer(interaction).getState(interaction);\n    };\n\n    var getData = function getData(customInteraction, data) {\n        //remove ns + fix media file path\n        var markup = data.markup;\n        markup = util.removeMarkupNamespaces(markup);\n        markup = PortableElement.fixMarkupMediaSources(markup, this);\n        data.markup = markup;\n\n        return data;\n    };\n\n    var PortableCustomInteraction = {\n        qtiClass: 'customInteraction',\n        template: tpl,\n        getData: getData,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableCustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div\\n    class=\\\"qti-prompt-container\\\"\\n    data-html-editable-container\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    <div class=\\\"qti-prompt\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-html-editable id=\\\"prompt-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Prompt = {\n        qtiClass: 'prompt',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Prompt;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',['jquery', 'lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/Graphic', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'], function ($$1, _, Handlebars, Helpers0, graphic, pciResponse, containerHelper, instructionMgr) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    graphic = graphic && Object.prototype.hasOwnProperty.call(graphic, 'default') ? graphic['default'] : graphic;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-selectPointInteraction clearfix\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2023 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Get the responses from the interaction\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    const getRawResponse = function getRawResponse(interaction) {\n        if (interaction && interaction.paper && _.isArray(interaction.paper.points)) {\n            return _.map(interaction.paper.points, function(point) {\n                return [point.x, point.y];\n            });\n        }\n        return [];\n    };\n\n    /**\n     * Add a new point to the interaction\n     * @param {Object} interaction\n     * @param {Object} point - the x/y point\n     */\n    const addPoint = function addPoint(interaction, point) {\n        const maxChoices = interaction.attr('maxChoices');\n\n        const pointChange = function pointChange() {\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        if (maxChoices > 0 && getRawResponse(interaction).length >= maxChoices) {\n            instructionMgr.validateInstructions(interaction);\n        } else {\n            if (!_.isArray(interaction.paper.points)) {\n                interaction.paper.points = [];\n            }\n\n            graphic.createTarget(interaction.paper, {\n                point: point,\n                create: function create(target) {\n                    if (interaction.isTouch && target && target.getBBox) {\n                        graphic.createTouchCircle(interaction.paper, target.getBBox());\n                    }\n\n                    interaction.paper.points.push(point);\n\n                    pointChange();\n                },\n                remove: function remove() {\n                    _.remove(interaction.paper.points, point);\n\n                    pointChange();\n                }\n            });\n        }\n    };\n\n    /**\n     * Make the image clickable and place targets at the given position.\n     * @param {Object} interaction\n     */\n    const enableSelection = function enableSelection(interaction) {\n        const $container = containerHelper.get(interaction);\n        const $imageBox = $container.find('.main-image-box');\n        const isResponsive = $container.hasClass('responsive');\n        const image = interaction.paper.getById('bg-image-' + interaction.serial);\n\n        interaction.paper.isTouch = false;\n\n        //used to see if we are in a touch context\n        image.touchstart(function() {\n            interaction.paper.isTouch = true;\n            image.untouchstart();\n        });\n\n        //get the point on click\n        image.click(function imageClicked(event) {\n            addPoint(interaction, graphic.getPoint(event, interaction.paper, $imageBox, isResponsive));\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     */\n    const render = function render(interaction) {\n        const self = this;\n\n        return new Promise(function(resolve) {\n            const $container = containerHelper.get(interaction);\n            const background = interaction.object.attributes;\n\n            $container.off('resized.qti-widget.resolve').one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper('graphic-paper-' + interaction.serial, interaction.serial, {\n                width: background.width,\n                height: background.height,\n                img: self.resolveUrl(background.data),\n                imgId: 'bg-image-' + interaction.serial,\n                container: $container,\n                responsive  : $container.hasClass('responsive')\n            });\n\n            //enable to select the paper to position a target\n            enableSelection(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                choiceCount: false,\n                getResponse: getRawResponse,\n                onError: function(data) {\n                    if (data) {\n                        graphic.highlightError(data.target, 'success');\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    const setResponse = function(interaction, response) {\n        let responseValues;\n\n        if (response && interaction.paper) {\n            try {\n                responseValues = pciResponse.unserialize(response, interaction);\n\n                if (interaction.getResponseDeclaration().attr('cardinality') === 'single') {\n                    responseValues = [responseValues];\n                }\n                _(responseValues)\n                    .filter(function(point) {\n                        return _.isArray(point) && point.length === 2;\n                    })\n                    .forEach(function(point) {\n                        addPoint(interaction, {\n                            x: point[0],\n                            y: point[1]\n                        });\n                    });\n            } catch (err) {\n                return;\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    const resetResponse = function resetResponse(interaction) {\n        if (interaction && interaction.paper) {\n            interaction.paper.points = [];\n\n            interaction.paper.forEach(function(element) {\n                const point = element.data('point');\n                if (typeof point === 'object') {\n                    graphic.trigger(element, 'click');\n                }\n            });\n        }\n    };\n\n    /**\n         i* Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n         *\n         * @param {Object} interaction\n         * @returns {Object} the response\n         */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize(getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    const destroy = function destroy(interaction) {\n        if (interaction.paper) {\n            const $container = containerHelper.get(interaction);\n\n            $$1(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $$1('.main-image-box', $container)\n                .empty()\n                .removeAttr('style');\n            $$1('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    var SelectPointInteraction = {\n        qtiClass: 'selectPointInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'nouislider'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, pciResponse, nouislider) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n      buffer += \"<div \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-sliderInteraction\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"sliderInteraction\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\r\\n    \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n</div>\\r\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _slideTo = function(options) {\n        options.sliderCurrentValue.find('.qti-slider-cur-value').text(options.value);\n        options.sliderValue.val(options.value);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    const render = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            direction = window.getComputedStyle($container[0]).getPropertyValue('direction') || 'ltr',\n            $el = $$1('<div />').attr({ id: `${attributes.responseIdentifier}-qti-slider`, class: 'qti-slider' }), //slider element\n            $sliderLabels = $$1('<div />').attr({ class: 'qti-slider-values' }),\n            $sliderCurrentValue = $$1('<div />').attr({\n                id: `${attributes.responseIdentifier}-qti-slider-cur-value`,\n                class: 'qti-slider-cur-value'\n            }), //show the current selected value\n            $sliderValue = $$1('<input />').attr({ type: 'hidden', id: `${attributes.responseIdentifier}-qti-slider-value`, class: 'qti-slider-value' }); //the input that always holds the slider value\n\n        //getting the options\n        let orientation = 'horizontal';\n        const reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false, //setting the slider whether to be reverse or not\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            step = typeof attributes.step !== 'undefined' && attributes.step ? parseInt(attributes.step) : 1, //default value as per QTI standard\n            steps = (max - min) / step; //number of the steps\n\n        //add the containers\n        $sliderCurrentValue\n            .append(`<span class=\"qti-slider-cur-value-text\">${__('Current value:')}</span>`)\n            .append('<span class=\"qti-slider-cur-value\"></span>');\n\n        //setting the orientation of the slider\n        if (\n            typeof attributes.orientation !== 'undefined' &&\n            $$1.inArray(attributes.orientation, ['horizontal', 'vertical']) > -1\n        ) {\n            orientation = attributes.orientation;\n        }\n\n        let reversedLabels = false;\n        //for vertical only reverse matters\n        if(orientation === 'vertical') {\n            reversedLabels = reverse;\n        }else {\n            reversedLabels = ((!reverse && direction === 'rtl') || (reverse && direction !== 'rtl'));\n        }\n\n        $sliderLabels\n            .append(`<span class=\"slider-min\">${reversedLabels ? max : min }</span>`)\n            .append(`<span class=\"slider-max\">${reversedLabels ? min : max}</span>`);\n\n        interaction\n            .getContainer()\n            .append($el)\n            .append($sliderLabels)\n            .append($sliderCurrentValue)\n            .append($sliderValue);\n\n\n        let sliderSize = 0;\n\n        if (orientation === 'horizontal') {\n            $container.addClass('qti-slider-horizontal');\n        } else {\n            const maxHeight = 300;\n            sliderSize = steps * 20;\n            if (sliderSize > maxHeight) {\n                sliderSize = maxHeight;\n            }\n            $container.addClass('qti-slider-vertical');\n            $el.height(`${sliderSize}px`);\n            $sliderLabels.height(`${sliderSize}px`);\n        }\n\n        //set the middle value if the stepLabel attribute is enabled\n        if (typeof attributes.stepLabel !== 'undefined' && attributes.stepLabel) {\n            const middleStep = parseInt(steps / 2),\n                leftOffset = (100 / steps) * middleStep,\n                middleValue = reverse ? max - middleStep * step : min + middleStep * step;\n\n            if (orientation === 'horizontal') {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"left:'${leftOffset}%\">${middleValue}</span>`);\n            } else {\n                $sliderLabels\n                    .find('.slider-min')\n                    .after(`<span class=\"slider-middle\" style=\"top:${leftOffset}%\">${middleValue}</span>`);\n            }\n        }\n\n        //create the slider\n        $el.noUiSlider({\n            start: reverse ? max : min,\n            range: {\n                min: min,\n                max: max\n            },\n            step: step,\n            orientation,\n            direction\n        }).on('slide', function() {\n            let val = parseInt($$1(this).val());\n            if (interaction.attr('reverse')) {\n                val = max + min - val;\n            }\n            val = Math.round(val * 1000) / 1000;\n            _slideTo({\n                value: val,\n                sliderValue: $sliderValue,\n                sliderCurrentValue: $sliderCurrentValue\n            });\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n        });\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $$1(document).on('attributeChange.qti-widget.commonRenderer', function(e, data) {\n            if (data.element.getSerial() === interaction.getSerial()) {\n                if (data.key === 'responseIdentifier' && data.value) {\n                    const attributesNew = interaction.getAttributes();\n                    // data.value and attributesNew.responseIdentifier is the same\n                    $container.find('.qti-slider').attr({ id: `${attributesNew.responseIdentifier}-qti-slider`});\n                    $container.find('.qti-slider-cur-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-cur-value`});\n                    $container.find('.qti-slider-value').attr({ id: `${attributesNew.responseIdentifier}-qti-slider-value`});\n                }\n            }\n        });\n    };\n\n    var resetResponse = function(interaction) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false,\n            startValue = reverse ? max : min;\n\n        _slideTo({\n            value: min,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(startValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        const attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`),\n            $sliderCurrentValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-cur-value`),\n            $el = $container.find(`#${attributes.responseIdentifier}-qti-slider`),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound);\n        let value;\n\n        value = pciResponse.unserialize(response, interaction)[0];\n\n        _slideTo({\n            value: value,\n            sliderValue: $sliderValue,\n            sliderCurrentValue: $sliderCurrentValue\n        });\n\n        $el.val(interaction.attr('reverse') ? max + min - value : value);\n    };\n\n    var _getRawResponse = function(interaction) {\n        let value;\n        const attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            min = parseInt(attributes.lowerBound),\n            $container = interaction.getContainer(),\n            $sliderValue = $container.find(`#${attributes.responseIdentifier}-qti-slider-value`);\n\n        if (baseType === 'integer') {\n            value = parseInt($sliderValue.val());\n        } else if (baseType === 'float') {\n            value = parseFloat($sliderValue.val());\n        }\n\n        return isNaN(value) ? min : value;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    const getResponse = function(interaction) {\n        return pciResponse.serialize([_getRawResponse(interaction)], interaction);\n    };\n\n    const destroy = function(interaction) {\n        const $container = interaction.getContainer();\n\n        $container.empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    const setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    const getState = function getState(interaction) {\n        const state = {};\n        const response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    var SliderInteraction = {\n        qtiClass: 'sliderInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState\n    };\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',['jquery', 'lodash', 'i18n', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/PciResponse', 'taoQtiItem/qtiCommonRenderer/helpers/patternMask', 'util/locale', 'ui/tooltip', 'core/logger', 'util/converter'], function ($$1, _, __, Handlebars, Helpers0, containerHelper, instructionMgr, pciResponse, patternMaskHelper, locale, tooltip, loggerFactory, converter) { 'use strict';\n\n        $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n        _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n        __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n        Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n        Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n        containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n        instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n        pciResponse = pciResponse && Object.prototype.hasOwnProperty.call(pciResponse, 'default') ? pciResponse['default'] : pciResponse;\n        patternMaskHelper = patternMaskHelper && Object.prototype.hasOwnProperty.call(patternMaskHelper, 'default') ? patternMaskHelper['default'] : patternMaskHelper;\n        locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n        tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n        loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n        converter = converter && Object.prototype.hasOwnProperty.call(converter, 'default') ? converter['default'] : converter;\n\n        if (!Helpers0.__initialized) {\n          Helpers0(Handlebars);\n          Helpers0.__initialized = true;\n        }\n        var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n          this.compilerInfo = [4,'>= 1.0.0'];\n        helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n          var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n        function program1(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \"id=\\\"\"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n            + \"\\\"\";\n          return buffer;\n          }\n\n        function program3(depth0,data) {\n          \n          var buffer = \"\", stack1;\n          buffer += \" \"\n            + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n          return buffer;\n          }\n\n          buffer += \"<input\\n        \";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \"\\n        class=\\\"qti-interaction qti-inlineInteraction qti-textEntryInteraction\";\n          stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n          if(stack1 || stack1 === 0) { buffer += stack1; }\n          buffer += \"\\\"\\n        data-serial=\\\"\";\n          if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n          else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n          buffer += escapeExpression(stack1)\n            + \"\\\"\\n        data-qti-class=\\\"textEntryInteraction\\\"\\n        type=\\\"text\\\"\\n>\";\n          return buffer;\n          });\n        function tpl(data, options, asString) {\n          var html = Template(data, options);\n          return (asString || true) ? html : $(html);\n        }\n\n        /*\n         * This program is free software; you can redistribute it and/or\n         * modify it under the terms of the GNU General Public License\n         * as published by the Free Software Foundation; under version 2\n         * of the License (non-upgradable).\n         *\n         * This program is distributed in the hope that it will be useful,\n         * but WITHOUT ANY WARRANTY; without even the implied warranty of\n         * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n         * GNU General Public License for more details.\n         *\n         * You should have received a copy of the GNU General Public License\n         * along with this program; if not, write to the Free Software\n         * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n         *\n         * Copyright (c) 2014-2022 Open Assessment Technologies SA (under the project TAO-PRODUCT);\n         *\n         */\n\n        /**\n         * Create a logger\n         */\n        const logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js');\n\n        /**\n         * Hide the tooltip for the text input\n         * @param {jQuery} $input\n         */\n        function hideTooltip($input) {\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').hide();\n            }\n        }\n\n        /**\n         * Create/Show tooltip for the text input\n         * @param {jQuery} $input\n         * @param {String} theme\n         * @param {String} message\n         */\n        function showTooltip($input, theme, message) {\n            if ($input.data('$tooltip')) {\n                $input.data('$tooltip').updateTitleContent(message);\n            } else {\n                const textEntryTooltip = tooltip.create($input, message, {\n                    theme: theme,\n                    trigger: 'manual'\n                });\n\n                $input.data('$tooltip', textEntryTooltip);\n            }\n\n            $input.data('$tooltip').show();\n        }\n\n        /**\n         * Validate the input for decimal values.\n         *\n         * This function ensures that the input value is either empty or follows\n         * the rules for decimal numbers. It allows numbers with optional\n         * thousands separators (commas) and a mandatory decimal point (dot).\n         *\n         * @param {jQuery} $input\n         */\n        function validateDecimalInput($input) {\n            const separatorName = {\n                '.': __('(dot)'),\n                ',': __('(comma)'),\n                ' ': __('(space)')\n            };\n            const value = converter.convert($input.val());\n            const thousandsSeparator = locale.getThousandsSeparator();\n            const decimalSeparator = locale.getDecimalSeparator();\n            const thousandsSeparatorName = separatorName[thousandsSeparator] ? separatorName[thousandsSeparator] : '';\n            const decimalSeparatorName = separatorName[decimalSeparator] ? separatorName[decimalSeparator] : '';\n\n            const escapedThousandsSeparator = thousandsSeparator.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n            const escapedDecimalSeparator = decimalSeparator.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n            const regexPattern = thousandsSeparator\n                ? `^$|^-?\\\\d{1,3}(${escapedThousandsSeparator}\\\\d{3})*(${escapedDecimalSeparator}\\\\d+)?$|^-?\\\\d+(${escapedDecimalSeparator}\\\\d+)?$|^-?\\\\d*${escapedDecimalSeparator}$|^-?${escapedDecimalSeparator}\\\\d+$`\n                : `^$|^-?\\\\d+(${escapedDecimalSeparator}\\\\d+)?$|^-?\\\\d*${escapedDecimalSeparator}$|^-?${escapedDecimalSeparator}\\\\d+$`;\n\n            const regex = new RegExp(regexPattern);\n\n            if (!regex.test(value)) {\n                $input.addClass('invalid');\n                $input.addClass('error');\n                const decimalError = thousandsSeparator\n                    ? __(\n                          'Invalid value, use %s %s for decimal point and %s %s for thousands separator.',\n                          decimalSeparator,\n                          decimalSeparatorName,\n                          thousandsSeparator,\n                          thousandsSeparatorName\n                      )\n                    : __('Invalid value, use %s %s for decimal point.', decimalSeparator, decimalSeparatorName);\n                showTooltip($input, 'error', decimalError);\n            } else {\n                $input.removeClass('invalid');\n                $input.removeClass('error');\n                hideTooltip($input);\n            }\n        }\n\n        /**\n         * Init rendering, called after template injected into the DOM\n         * All options are listed in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * @param {object} interaction\n         */\n        function render(interaction) {\n            const attributes = interaction.getAttributes();\n            const baseType = interaction.getResponseDeclaration().attr('baseType');\n            const $input = interaction.getContainer();\n            const patternMask = interaction.attr('patternMask');\n            const maxChars = parseInt(patternMaskHelper.parsePattern(patternMask, 'chars'), 10);\n            let expectedLength;\n\n            // Setting up baseType\n            switch (baseType) {\n                case 'integer':\n                    $input.attr('inputmode', 'numeric');\n                    break;\n                case 'float':\n                    $input.attr('inputmode', 'decimal');\n\n                    $input\n                        .on('keyup.commonRenderer', () => validateDecimalInput($input))\n                        .on('focus.commonRenderer', () => validateDecimalInput($input))\n                        .on('blur.commonRenderer', () => hideTooltip($input));\n                    break;\n                default:\n                    $input.attr('inputmode', 'text');\n            }\n\n            //setting up the width of the input field\n            if (attributes.expectedLength) {\n                //adding 2 chars to include reasonable padding size\n                expectedLength = parseInt(attributes.expectedLength) + 2;\n                $input.css('width', expectedLength + 'ch');\n                $input.css('min-width', expectedLength + 'ch');\n            }\n\n            //checking if there's a placeholder for the input\n            if (attributes.placeholderText) {\n                $input.attr('placeholder', attributes.placeholderText);\n            }\n\n            if (maxChars) {\n                const updateMaxCharsTooltip = () => {\n                    const count = $input.val().length;\n                    let message;\n                    let messageType;\n\n                    if (count) {\n                        message = __('%d/%d', count, maxChars);\n                    } else {\n                        message = __('%d characters allowed', maxChars);\n                    }\n\n                    if (count >= maxChars) {\n                        $input.addClass('maxed');\n                        messageType = 'warning';\n                    } else {\n                        $input.removeClass('maxed');\n                        messageType = 'info';\n                    }\n\n                    showTooltip($input, messageType, message);\n                    if (count && messageType === 'warning') {\n                        hideTooltip($input);\n                    }\n                };\n\n                $input\n                    .attr('maxlength', maxChars)\n                    .on('focus.commonRenderer', function () {\n                        updateMaxCharsTooltip();\n                    })\n                    .on('keyup.commonRenderer', function () {\n                        updateMaxCharsTooltip();\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                    })\n                    .on('blur.commonRenderer', function () {\n                        hideTooltip($input);\n                    });\n            } else if (attributes.patternMask) {\n                const updatePatternMaskTooltip = () => {\n                    const regex = new RegExp(attributes.patternMask);\n\n                    hideTooltip($input);\n\n                    if ($input.val()) {\n                        if (regex.test($input.val())) {\n                            $input.removeClass('invalid');\n                        } else {\n                            $input.addClass('invalid');\n                            showTooltip($input, 'error', __('This is not a valid answer'));\n                        }\n                    }\n                };\n\n                $input\n                    .on('focus.commonRenderer', function () {\n                        updatePatternMaskTooltip();\n                    })\n                    .on('keyup.commonRenderer', function () {\n                        updatePatternMaskTooltip();\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                    })\n                    .on('blur.commonRenderer', function () {\n                        hideTooltip($input);\n                    });\n            } else {\n                $input.on('keyup.commonRenderer', function () {\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                });\n            }\n        }\n\n        function resetResponse(interaction) {\n            interaction.getContainer().val('');\n        }\n\n        /**\n         * Set the response to the rendered interaction.\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * Special value: the empty object value {} resets the interaction responses\n         *\n         * @param {object} interaction\n         * @param {object} response\n         */\n        function setResponse(interaction, response) {\n            let responseValue;\n\n            try {\n                responseValue = pciResponse.unserialize(response, interaction);\n            } catch (e) {\n                logger.warn(`setResponse error ${e}`);\n            }\n\n            if (responseValue && responseValue.length) {\n                interaction.getContainer().val(responseValue[0]);\n            }\n        }\n\n        /**\n         * Return the response of the rendered interaction\n         *\n         * The response format follows the IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * Available base types are defined in the QTI v2.1 information model:\n         * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n         *\n         * @param {object} interaction\n         * @returns {object}\n         */\n        function getResponse(interaction) {\n            const ret = { base: {} };\n            const $input = interaction.getContainer();\n            const attributes = interaction.getAttributes();\n            const baseType = interaction.getResponseDeclaration().attr('baseType');\n            const numericBase = attributes.base || 10;\n\n            const inputValue = $input.val();\n            let value;\n\n            if ($input.hasClass('invalid') || (attributes.placeholderText && inputValue === attributes.placeholderText)) {\n                //invalid response or response equals to the placeholder text are considered empty\n                value = '';\n            } else {\n                const convertedValue = converter.convert(inputValue.trim());\n                if (baseType === 'integer') {\n                    value = locale.parseInt(convertedValue, numericBase);\n                } else if (baseType === 'float') {\n                    value = locale.parseFloat(convertedValue);\n                } else if (baseType === 'string') {\n                    value = convertedValue;\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n\n            return ret;\n        }\n\n        function destroy(interaction) {\n            $$1('input.qti-textEntryInteraction').each(function (index, el) {\n                const $input = $$1(el);\n                if ($input.data('$tooltip')) {\n                    $input.data('$tooltip').dispose();\n                    $input.removeData('$tooltip');\n                }\n            });\n\n            //remove event\n            $$1(document).off('.commonRenderer');\n            containerHelper.get(interaction).off('.commonRenderer');\n\n            //remove instructions\n            instructionMgr.removeInstructions(interaction);\n\n            //remove all references to a cache container\n            containerHelper.reset(interaction);\n        }\n\n        /**\n         * Set the interaction state. It could be done anytime with any state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @param {Object} state - the interaction state\n         */\n        function setState(interaction, state) {\n            if (_.isObject(state)) {\n                if (state.response) {\n                    interaction.resetResponse();\n                    interaction.setResponse(state.response);\n                }\n            }\n        }\n\n        /**\n         * Get the interaction state.\n         *\n         * @param {Object} interaction - the interaction instance\n         * @returns {Object} the interaction current state\n         */\n        function getState(interaction) {\n            const state = {};\n            const response = interaction.getResponse();\n\n            if (response) {\n                state.response = response;\n            }\n            return state;\n        }\n\n        var TextEntryInteraction = {\n            qtiClass: 'textEntryInteraction',\n            template: tpl,\n            render: render,\n            getContainer: containerHelper.get,\n            setResponse: setResponse,\n            getResponse: getResponse,\n            resetResponse: resetResponse,\n            destroy: destroy,\n            setState: setState,\n            getState: getState\n        };\n\n        return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',['jquery', 'lodash', 'i18n', 'core/mimetype', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager', 'taoQtiItem/qtiCommonRenderer/helpers/uploadMime', 'ui/progressbar', 'ui/previewer', 'ui/modal', 'ui/waitForMedia'], function ($$1, _, __, mimetype, Handlebars, Helpers0, containerHelper, instructionMgr, uploadHelper, progressbar, previewer, modal, waitForMedia) { 'use strict';\n\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    mimetype = mimetype && Object.prototype.hasOwnProperty.call(mimetype, 'default') ? mimetype['default'] : mimetype;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    instructionMgr = instructionMgr && Object.prototype.hasOwnProperty.call(instructionMgr, 'default') ? instructionMgr['default'] : instructionMgr;\n    uploadHelper = uploadHelper && Object.prototype.hasOwnProperty.call(uploadHelper, 'default') ? uploadHelper['default'] : uploadHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var stack1, helper;\n      if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"accept=\\\"\";\n      if (helper = helpers.accept) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.accept); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-interaction qti-blockInteraction qti-uploadInteraction\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n\t\";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n\t<div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"file-upload fixed-grid-row lft\\\">\\n        <div class=\\\"progressbar\\\"></div>\\n        <span class=\\\"btn-info small col-4\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Browse...\", options) : helperMissing.call(depth0, \"__\", \"Browse...\", options)))\n        + \"</span>\\n        <span class=\\\"file-name placeholder col-8 truncate\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No file selected\", options) : helperMissing.call(depth0, \"__\", \"No file selected\", options)))\n        + \"</span>\\n        <input type=\\\"file\\\" \";\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.accept), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"/>\\n    </div>\\n    <div class=\\\"file-upload-preview lft visible-file-upload-preview runtime-visible-file-upload-preview\\\">\\n        <p class=\\\"nopreview\\\">\"\n        + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No preview available\", options) : helperMissing.call(depth0, \"__\", \"No preview available\", options)))\n        + \"</p>\\n    </div>\\n    <div class=\\\"file-upload-preview-popup modal\\\">\\n        <div class=\\\"modal-body\\\">\\n        </div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var _initialInstructions = __('Browse your computer and select the appropriate file.');\n\n    var _readyInstructions = __('The selected file is ready to be sent.');\n\n    /**\n     * Validate type of selected file\n     * @param file\n     * @param interaction\n     * @returns {boolean}\n     */\n    var validateFileType = function validateFileType(file, interaction) {\n        var expectedTypes = uploadHelper.getExpectedTypes(interaction, true);\n        var filetype = mimetype.getMimeType(file);\n        if (expectedTypes.length) {\n            return _.indexOf(expectedTypes, filetype) >= 0;\n        }\n        return true;\n    };\n\n    /**\n     * Compute the message to be displayed when an invalid file type has been selected\n     *\n     * @param {Object} interaction\n     * @param {Function} userSelectedType\n     * @param {Function} messageWrongType\n     * @returns {String}\n     */\n    var getMessageWrongType = function getMessageWrongType(interaction, userSelectedType, messageWrongType) {\n        var types = uploadHelper.getExpectedTypes(interaction);\n        var expectedTypeLabels = _.map(_.uniq(types), function (type) {\n            var mime = _.find(uploadHelper.getMimeTypes(), { mime: type });\n            if (mime) {\n                return mime.label;\n            } else {\n                return type;\n            }\n        });\n\n        if (messageWrongType && _.isFunction(messageWrongType)) {\n            return messageWrongType({\n                userSelectedType: userSelectedType,\n                types: expectedTypeLabels\n            });\n        } else {\n            return __(\n                'Wrong type of file. Expected %s. The selected file has the mimetype \"%s\".',\n                expectedTypeLabels.join(__(' or ')),\n                userSelectedType\n            );\n        }\n    };\n\n    var _handleSelectedFiles = function _handleSelectedFiles(interaction, file, messageWrongType) {\n        var reader;\n        var $container = containerHelper.get(interaction);\n\n        // Show information about the processed file to the candidate.\n        var filename = file.name;\n        var filetype = mimetype.getMimeType(file);\n        instructionMgr.removeInstructions(interaction);\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        if (!validateFileType(file, interaction)) {\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(\n                interaction,\n                getMessageWrongType(interaction, filetype, messageWrongType),\n                function () {\n                    this.setLevel('error');\n                    //clear preview\n                }\n            );\n            instructionMgr.validateInstructions(interaction);\n            return;\n        }\n\n        $container\n            .find('.file-name')\n            .empty()\n            .append(filename);\n\n        // Let's read the file to get its base64 encoded content.\n        reader = new FileReader();\n\n        // Update file processing progress.\n\n        reader.onload = function (e) {\n            var base64Data, commaPosition, base64Raw, $previewArea;\n\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(interaction, _readyInstructions, function () {\n                this.setLevel('success');\n            });\n            instructionMgr.validateInstructions(interaction);\n\n            $container.find('.progressbar').progressbar('value', 100);\n\n            base64Data = e.target.result;\n            commaPosition = base64Data.indexOf(',');\n\n            // Store the base64 encoded data for later use.\n            base64Raw = base64Data.substring(commaPosition + 1);\n            interaction.data('_response', { base: { file: { data: base64Raw, mime: filetype, name: filename } } });\n\n            $previewArea = $container.find('.file-upload-preview');\n            $previewArea.previewer({\n                url: base64Data,\n                name: filename,\n                mime: filetype\n            });\n\n            // we wait for the image to be completely loaded\n            $previewArea.waitForMedia(function () {\n                var $originalImg = $previewArea.find('img'),\n                    $largeDisplay = $$1('.file-upload-preview-popup'),\n                    $item = $$1('.qti-item'),\n                    itemWidth = $item.width(),\n                    winWidth = $$1(window).width() - 80,\n                    fullHeight = $$1('body').height(),\n                    imgNaturalWidth,\n                    isOversized,\n                    modalWidth;\n\n                if (!$originalImg.length) {\n                    return;\n                }\n\n                imgNaturalWidth = $originalImg[0].naturalWidth;\n                isOversized = imgNaturalWidth > itemWidth;\n                modalWidth = Math.min(winWidth, imgNaturalWidth);\n\n                $previewArea.toggleClass('clickable', isOversized);\n\n                if (!isOversized) {\n                    return;\n                }\n\n                $previewArea.on('click', function () {\n                    var $modalBody;\n\n                    $$1('.upload-ia-modal-bg').remove();\n\n                    // remove any previous unnecessary content before inserting the preview image\n                    $modalBody = $largeDisplay.find('.modal-body');\n                    $modalBody.empty().append($originalImg.clone());\n\n                    $largeDisplay\n                        .on('opened.modal', function () {\n                            // prevents the rest of the page from scrolling when modal is open\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'hidden');\n\n                            $largeDisplay.css({\n                                width: modalWidth,\n                                height: fullHeight,\n                                left: (modalWidth - itemWidth - 40) / -2\n                            });\n                        })\n                        .on('closed.modal', function () {\n                            // make the page scrollable again\n                            $$1('.tao-item-scope.tao-preview-scope').css('overflow', 'auto');\n                        })\n                        .modal({ modalOverlayClass: 'modal-bg upload-ia-modal-bg' });\n                });\n            });\n        };\n\n        reader.onloadstart = function onloadstart() {\n            instructionMgr.removeInstructions(interaction);\n            $container.find('.progressbar').progressbar('value', 0);\n        };\n\n        reader.onprogress = function onprogress(e) {\n            var percentProgress = Math.ceil((Math.round(e.loaded) / Math.round(e.total)) * 100);\n            $container.find('.progressbar').progressbar('value', percentProgress);\n        };\n\n        reader.readAsDataURL(file);\n    };\n\n    /**\n     * Resets the GUI state to the default display.\n     *\n     * @param {Object} interaction\n     */\n    function resetGui(interaction) {\n        var $container = containerHelper.get(interaction);\n        $container.find('.file-name').text(__('No file selected'));\n        $container.find('.btn-info').text(__('Browse...'));\n    }\n    function callResetGui(interaction) {\n        const renderer = interaction.getRenderer();\n        if (_.isFunction(renderer.resetGui)) {\n            renderer.resetGui(interaction);\n        }\n    }\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    function render(interaction) {\n        var changeListener,\n            self = this,\n            $input;\n        var $container = containerHelper.get(interaction);\n        callResetGui(interaction);\n\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        //init response\n        interaction.data('_response', { base: null });\n\n        changeListener = function (e) {\n            var file = e.target.files[0];\n\n            // Are you really sure something was selected\n            // by the user... huh? :)\n            if (typeof file !== 'undefined') {\n                _handleSelectedFiles(interaction, file, self.getCustomMessage('upload', 'wrongType'));\n            }\n        };\n\n        $input = $container.find('input');\n\n        $container.find('.progressbar').progressbar();\n\n        if (!window.FileReader) {\n            throw new Error('FileReader API not supported! Please use a compliant browser!');\n        }\n        $input.bind('change', changeListener);\n\n        // IE Specific hack, prevents button to slightly move on click\n        $input.bind('mousedown', function (e) {\n            e.preventDefault();\n            $$1(this).blur();\n            return false;\n        });\n    }\n    var resetResponse = function resetResponse(interaction) {\n        callResetGui(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        var filename,\n            $container = containerHelper.get(interaction);\n\n        if (response.base !== null) {\n            filename =\n                typeof response.base.file.name !== 'undefined' ? response.base.file.name : 'previously-uploaded-file';\n            $container\n                .find('.file-name')\n                .empty()\n                .text(filename);\n        }\n\n        interaction.data('_response', response);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return interaction.data('_response');\n    };\n\n    var destroy = function destroy(interaction) {\n        //remove event\n        $$1(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     * This way we could cover a lot more types. How could this be matched with the preview templates\n     * in tao/views/js/ui/previewer.js\n     */\n    var getCustomData = function getCustomData(interaction, data) {\n        return _.merge(data || {}, {\n            accept: uploadHelper.getExpectedTypes(interaction, true).join(',')\n        });\n    };\n\n    var UploadInteraction = {\n        qtiClass: 'uploadInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        getData: getCustomData,\n\n        // Exposed private methods for qtiCreator\n        resetGui: resetGui\n    };\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Item',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler'], function (Handlebars, Helpers0, containerHelper, itemStylesheetHandler) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    itemStylesheetHandler = itemStylesheetHandler && Object.prototype.hasOwnProperty.call(itemStylesheetHandler, 'default') ? itemStylesheetHandler['default'] : itemStylesheetHandler;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" id=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-item tao-scope runtime\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" class=\\\"qti-itemBody \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    <div id=\\\"modalFeedbacks\\\"></div>\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     */\n\n    var Item = {\n        qtiClass: 'assessmentItem',\n        template: tpl,\n        getContainer: containerHelper.get,\n\n        /**\n         * Rendering initializations for the item\n         * @param {Object} item - the item model\n         */\n        render: function render(item) {\n            //target blank for all <a>\n            containerHelper.targetBlank(containerHelper.get(item));\n\n            //add stylesheets\n            itemStylesheetHandler.attach(item.stylesheets);\n        },\n\n        /**\n         * Unrender\n         * @param {Object} item - the item model\n         */\n        destroy: function destroy(item) {\n            //clear the container cache\n            containerHelper.clear();\n\n            //detach stylesheets\n            if (item.stylesheets) {\n                itemStylesheetHandler.detach(item.stylesheets);\n            }\n        }\n    };\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Math',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'mathJax', 'jquery'], function (Handlebars, Helpers0, containerHelper, MathJax, $$1) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    MathJax = MathJax && Object.prototype.hasOwnProperty.call(MathJax, 'default') ? MathJax['default'] : MathJax;\n    $$1 = $$1 && Object.prototype.hasOwnProperty.call($$1, 'default') ? $$1['default'] : $$1;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math display=\\\"block\\\">\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"math\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"><math>\";\n      if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</math></span>\";\n      return buffer;\n      }\n\n      stack1 = helpers['if'].call(depth0, (depth0 && depth0.block), {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    // Do not wait between rendering each individual math element\n    // http://docs.mathjax.org/en/latest/api/hub.html\n    if (typeof MathJax !== 'undefined' && MathJax) {\n        MathJax.Hub.processSectionDelay = 0;\n    }\n\n    var _Math = {\n        qtiClass: 'math',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(math) {\n            $$1('body').on('mathjaxRendered', function (event, reference) {\n                if ($$1(reference).find('math').length !== 0) {\n                    $$1(reference).closest('.qti-choice').addClass('flexible-choice-width');\n                }\n            });\n\n            return new Promise(function (resolve) {\n                const $self = containerHelper.get(math);\n                if (typeof MathJax !== 'undefined' && MathJax) {\n                    //MathJax needs to be exported globally to integrate with tools like TTS, it's weird...\n                    if (!window.MathJax) {\n                        window.MathJax = MathJax;\n                    }\n                    //defer execution fix some rendering issue in chrome\n                    if ($self.length) {\n                        MathJax.Hub.Queue(['Typeset', MathJax.Hub, $self[0]]);\n                        MathJax.Hub.Queue(function () {\n                            $$1('body').trigger('mathjaxRendered', [$self[0]]);\n                            resolve();\n                        });\n                    } else {\n                        resolve();\n                    }\n                } else {\n                    resolve();\n                }\n            });\n        }\n    };\n\n    return _Math;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n     **/\n\n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n\n    /**\n     * Check if the element is of a qti container type\n     *\n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element) {\n        if (_.isFunction(element.initContainer) && _.isFunction(element.body)) {\n            return true;\n        } else {\n            throw 'the element is not of a container type';\n        }\n    }\n\n    /**\n     * Get the body element of the container\n     *\n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element) {\n        if (_checkContainerType(element)) {\n            return $('<div>')\n                .html(element.body())\n                .find('.x-tao-wrapper');\n        }\n    }\n\n    /**\n     * Add a class to the body element of the qti container\n     *\n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass) {\n        if (_checkContainerType(element) && (oldClass || newClass)) {\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n\n    /**\n     * Switch class to the wrapped DOM\n     *\n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass) {\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if (!$bodyDom.length) {\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if (oldClass) {\n            $bodyDom.removeClass(oldClass);\n        }\n        if (newClass) {\n            $bodyDom.addClass(newClass);\n        }\n    }\n\n    /**\n     * Add manually the encoded information to a dom element\n     *\n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue) {\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n\n    /**\n     * Get the full variable name for the data store\n     *\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value) {\n        if (dataName && value) {\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n\n    /**\n     * Set a data string to the element identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue) {\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(\n            element,\n            _getEncodedDataString(dataName, newValue),\n            _getEncodedDataString(dataName, oldValue)\n        );\n    }\n\n    /**\n     * Remove the stored data from the element by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName) {\n        var oldValue = getEncodedData(element, dataName);\n        if (dataName && oldValue) {\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value) {\n        var $body = _getBodyDom(element);\n        if ($body && $body.length && dataName && value) {\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n\n    /**\n     * Get the encoded data identified by its dataName\n     *\n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName) {\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if (dataName && $body && $body.length && $body.attr('class')) {\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9-._]*)');\n            matches = $body.attr('class').match(regex);\n            if (matches) {\n                return matches[1];\n            }\n        }\n    }\n\n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    var container = {\n        setEncodedData: setEncodedData,\n        hasEncodedData: hasEncodedData,\n        getEncodedData: getEncodedData,\n        removeEncodedData: removeEncodedData,\n        setEncodedDataToDom: setEncodedDataToDom\n    };\n\n    return container;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiItem/helper/container', 'ui/waitForMedia', 'ui/modal'], function (_, Handlebars, Helpers0, containerHelper, coreContainerHelper, waitForMedia, modal) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    coreContainerHelper = coreContainerHelper && Object.prototype.hasOwnProperty.call(coreContainerHelper, 'default') ? coreContainerHelper['default'] : coreContainerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      return \"modal \";\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"<h2 class=\\\"qti-title modal-title\\\">\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"</h2>\";\n      return buffer;\n      }\n\n      buffer += \"<div id=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-identifier=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" class=\\\"\";\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.inline), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"qti-modalFeedback \";\n      if (helper = helpers.feedbackStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.feedbackStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    <div class=\\\"modal-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var modalFeedbackRenderer = {\n        qtiClass: 'modalFeedback',\n        template: tpl,\n        getContainer: containerHelper.get,\n        width: 600,\n        getData: function(fb, data) {\n            data.feedbackStyle = coreContainerHelper.getEncodedData(fb, 'modalFeedback');\n            return data;\n        },\n        render: function(modalFeedback, data) {\n            var $modal = containerHelper.get(modalFeedback);\n\n            $modal.waitForMedia(function() {\n                //when we are sure that media is loaded:\n                $modal\n                    .on('opened.modal', function() {\n                        //set item body height\n                        var $itemBody = containerHelper.get(modalFeedback.getRootElement()).children('.qti-itemBody');\n                        var requiredHeight = $modal.outerHeight() + parseInt($modal.css('top'));\n                        if (requiredHeight > $itemBody.height()) {\n                            $itemBody.height(requiredHeight);\n                        }\n                    })\n                    .on('closed.modal', function() {\n                        data = data || {};\n\n                        if (_.isFunction(data.callback)) {\n                            data.callback.call(this);\n                        }\n                    })\n                    .modal({\n                        startClosed: false,\n                        minHeight: modalFeedbackRenderer.minHeight,\n                        width: modalFeedbackRenderer.width\n                    });\n            });\n        }\n    };\n\n    return modalFeedbackRenderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Object',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/previewer'], function (Handlebars, Helpers0, containerHelper, previewer) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-object-container\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \" >\\n</div>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA\n     */\n\n    var _Object = {\n        qtiClass: 'object',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function(obj) {\n            var $container = containerHelper.get(obj);\n            var previewOptions = {\n                url: obj.renderer.resolveUrl(obj.attr('data')),\n                mime: obj.attr('type')\n            };\n            if (obj.attr('height')) {\n                previewOptions.height = obj.attr('height');\n            }\n            if (obj.attr('width')) {\n                previewOptions.width = obj.attr('width');\n            }\n            if (previewOptions.url && previewOptions.mime) {\n                $container.previewer(previewOptions);\n            }\n        }\n    };\n\n    return _Object;\n\n});\n\n","define('qtiInfoControlContext',[],function(){\n\n    //need a global reference to have picHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._picHooks = window._picHooks || {};\n\n    /**\n     * Global object accessible by all PICs\n     *\n     * @type Object\n     */\n    var taoQtiInfoControlContext = {\n        /**\n         * register a info control (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} picHook\n         * @returns {undefined}\n         */\n        register : function(picHook){\n            //@todo check picHook validity\n            window._picHooks[picHook.getTypeIdentifier()] = picHook;\n        },\n        /**\n         * notify when a info control is ready for test taker interaction\n         *\n         * @param {string} picInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(picInstance){\n            //@todo add pciInstance as event data and notify event to delivery engine\n        },\n        /**\n         * Get a cloned object representing the PIC model\n         *\n         * @param {string} typeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(typeIdentifier){\n\n            if(window._picHooks[typeIdentifier]){\n\n                var instance = {},\n                    proto = window._picHooks[typeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable info control hook found with the id ' + typeIdentifier;\n            }\n        }\n    };\n\n\n    return taoQtiInfoControlContext;\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',['lodash', 'handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'taoQtiItem/qtiCommonRenderer/helpers/PortableElement', 'qtiInfoControlContext', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/portableElementRegistry/icRegistry'], function (_, Handlebars, Helpers0, containerHelper, PortableElement, qtiInfoControlContext, util, icRegistry) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    PortableElement = PortableElement && Object.prototype.hasOwnProperty.call(PortableElement, 'default') ? PortableElement['default'] : PortableElement;\n    qtiInfoControlContext = qtiInfoControlContext && Object.prototype.hasOwnProperty.call(qtiInfoControlContext, 'default') ? qtiInfoControlContext['default'] : qtiInfoControlContext;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<div class=\\\"qti-infoControl\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</div>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * Get the PIC instance associated to the infoControl object\n     * If none exists, create a new one based on the PIC typeIdentifier\n     *\n     * @param {Object} infoControl - the js object representing the infoControl\n     * @returns {Object} PIC instance\n     */\n    var _getPic = function(infoControl) {\n        var typeIdentifier,\n            pic = infoControl.data('pic') || undefined;\n\n        if (!pic) {\n            typeIdentifier = infoControl.typeIdentifier;\n            pic = qtiInfoControlContext.createPciInstance(typeIdentifier);\n\n            if (pic) {\n                //binds the PIC instance to TAO infoControl object and vice versa\n                infoControl.data('pic', pic);\n                pic._taoInfoControl = infoControl;\n            } else {\n                throw 'no custom infoControl hook found for the type ' + typeIdentifier;\n            }\n        }\n\n        return pic;\n    };\n\n    /**\n     * Execute javascript codes to bring the infoControl to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. ensure the context is configured correctly\n     * 2. require all required libs\n     * 3. create a pic instance based on the infoControl model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable\n     *\n     * @param {Object} infoControl\n     * @param {Object} [options]\n     */\n    var render = function(infoControl, options) {\n        var self = this;\n        return new Promise(function(resolve, reject) {\n            var state = {}; //@todo pass state and response to renderer here:\n            var id = infoControl.attr('id');\n            var typeIdentifier = infoControl.typeIdentifier;\n            var config = infoControl.properties;\n            var $dom = containerHelper.get(infoControl).children();\n            var assetManager = self.getAssetManager();\n\n            icRegistry\n                .loadRuntimes()\n                .then(function() {\n                    var requireEntries = [];\n                    var runtime = icRegistry.getRuntime(typeIdentifier);\n\n                    if (!runtime) {\n                        return reject('The runtime for the pic cannot be found : ' + typeIdentifier);\n                    }\n\n                    //load the entrypoint, becomes optional per IMS PCI v1\n                    if (runtime.hook) {\n                        requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                    }\n\n                    //load required libraries\n                    _.forEach(runtime.libraries, function(module) {\n                        requireEntries.push(module.replace(/\\.js$/, ''));\n                    });\n\n                    //load stylesheets\n                    _.forEach(runtime.stylesheets, function(stylesheet) {\n                        requireEntries.push('css!' + stylesheet.replace(/\\.css$/, ''));\n                    });\n\n                    //load the entrypoint\n                    window.require(requireEntries, function() {\n                        var pic = _getPic(infoControl);\n                        var picAssetManager = {\n                            resolve: function resolve(url) {\n                                var resolved = assetManager.resolveBy('portableElementLocation', url);\n                                if (resolved === url) {\n                                    return assetManager.resolveBy('baseUrl', url);\n                                } else {\n                                    return resolved;\n                                }\n                            }\n                        };\n\n                        if (pic) {\n                            //call pic initialize() to render the pic\n                            pic.initialize(id, $dom[0], config, picAssetManager);\n                            //restore context (state + response)\n                            pic.setSerializedState(state);\n\n                            return resolve();\n                        }\n\n                        return reject('Unable to initialize pic : ' + id);\n                    }, reject);\n                })\n                .catch(function(error) {\n                    reject('Error loading runtime : ' + id);\n                });\n        });\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} infoControl\n     */\n    var destroy = function destroy(infoControl) {\n        _getPic(infoControl).destroy();\n    };\n\n    /**\n     * Restore the state of the infoControl from the serializedState.\n     *\n     * @param {Object} infoControl - the element instance\n     * @param {Object} state - the state to set\n     */\n    var setState = function setState(infoControl, state) {\n        _getPic(infoControl).setSerializedState(state);\n    };\n\n    /**\n     * Get the current state of the infoControl as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} infoControl - the element instance\n     * @returns {Object} the state\n     */\n    var getState = function getState(infoControl) {\n        return _getPic(infoControl).getSerializedState();\n    };\n\n    var PortableInfoControl = {\n        qtiClass: 'infoControl',\n        template: tpl,\n        getData: function(infoControl, data) {\n            //remove ns + fix media file path\n            var markup = data.markup;\n            markup = util.removeMarkupNamespaces(markup);\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\n            data.markup = markup;\n            return data;\n        },\n        render: render,\n        getContainer: containerHelper.get,\n        destroy: destroy,\n        getState: getState,\n        setState: setState\n    };\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"printedVariable\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    \";\n      if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\n</span>\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var PrintedVariable = {\n        qtiClass: 'printedVariable',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function (_, Element) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * Common helper functions\n     */\n    var interactionHelper = {\n        convertChoices: function (choices, outputType) {\n            var ret = [],\n                _this = this;\n\n            _.forEach(choices, function (c) {\n                if (Element.isA(c, 'choice')) {\n                    switch (outputType) {\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices: function (interaction, choices, inputType) {\n            var ret = [],\n                _this = this;\n\n            _.forEach(choices, function (c) {\n                var choice;\n                if (_.isString(c)) {\n                    if (inputType === 'serial') {\n                        choice = interaction.getChoice(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else if (inputType === 'identifier') {\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if (choice) {\n                            ret.push(choice);\n                        }\n                    } else {\n                        ret.push(c);\n                    }\n                } else if (_.isArray(c)) {\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                } else {\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices: function (choices) {\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for (var i in choices) {\n                if (Element.isA(choices[i], 'choice')) {\n                    var choice = choices[i];\n                    if (choice.attr('fixed')) {\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                } else {\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for (var n = 0; n < r.length - 1; n++) {\n                if (f[n]) {\n                    continue;\n                }\n                var k = -1;\n                do {\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                } while (f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier: function (interaction, choiceSerial) {\n            var choice = interaction.getChoice(choiceSerial);\n            if (choice) {\n                return choice.id();\n            } else {\n                return '';\n            }\n        }\n    };\n\n    return interactionHelper;\n\n});\n\n","define('taoQtiItem/qtiRunner/core/Renderer',['lodash', 'jquery', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/interactionHelper', 'ui/themeLoader', 'ui/themes', 'core/moduleLoader', 'handlebars'], function (_, $, Element, interactionHelper, themeLoader, themesHelper, moduleLoader, Handlebars) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    interactionHelper = interactionHelper && Object.prototype.hasOwnProperty.call(interactionHelper, 'default') ? interactionHelper['default'] : interactionHelper;\n    themeLoader = themeLoader && Object.prototype.hasOwnProperty.call(themeLoader, 'default') ? themeLoader['default'] : themeLoader;\n    themesHelper = themesHelper && Object.prototype.hasOwnProperty.call(themesHelper, 'default') ? themesHelper['default'] : themesHelper;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2022 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    //webpack trick : handlebar is usale only from cjs.\n    //but anyway we should deprecate the practice to invoke\n    //directly Handlebars at runtimej\n    let hb = Handlebars;\n    if (typeof hb.compile !== 'function') {\n        hb = require('handlebars');\n    }\n\n    const _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'figure',\n        'img',\n        'figcaption',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    const _dependencies = {\n        assessmentItem: ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock: ['_container'],\n        associateInteraction: ['simpleAssociableChoice'],\n        choiceInteraction: ['simpleChoice'],\n        gapMatchInteraction: ['gap', 'gapText'],\n        graphicAssociateInteraction: ['associableHotspot'],\n        graphicGapMatchInteraction: ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction: ['hotspotChoice'],\n        hotspotInteraction: ['hotspotChoice'],\n        hottextInteraction: ['hottext'],\n        inlineChoiceInteraction: ['inlineChoice'],\n        matchInteraction: ['simpleAssociableChoice'],\n        orderInteraction: ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    const _renderableSubclasses = {\n        simpleAssociableChoice: ['associateInteraction', 'matchInteraction'],\n        simpleChoice: ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    const _defaults = {\n        shuffleChoices: true\n    };\n\n    const _isValidRenderer = function (renderer) {\n        let valid = true;\n\n        if (typeof renderer !== 'object') {\n            return false;\n        }\n\n        let classCorrect = false;\n        if (renderer.qtiClass) {\n            if (_.indexOf(_renderableClasses, renderer.qtiClass) >= 0) {\n                classCorrect = true;\n            } else {\n                const pos = renderer.qtiClass.indexOf('.');\n                if (pos > 0) {\n                    const qtiClass = renderer.qtiClass.slice(0, pos);\n                    const subClass = renderer.qtiClass.slice(pos + 1);\n                    if (_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0) {\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if (!classCorrect) {\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if (!renderer.template) {\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl() {\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    const Renderer = function (options) {\n        /**\n         * Store the registered renderer location\n         */\n        const _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        const _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        const _getClassRenderer = function (qtiClass) {\n            let ret = null;\n            if (_renderers[qtiClass]) {\n                ret = _renderers[qtiClass];\n            } else {\n                const pos = qtiClass.indexOf('.');\n                if (pos > 0) {\n                    qtiClass = qtiClass.slice(0, pos);\n                    if (_renderers[qtiClass]) {\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            let success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function (key, value) {\n            if (typeof key === 'string') {\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function (opts) {\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function (key) {\n            if (typeof key === 'string' && options[key]) {\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey) {\n            const messages = this.getOption('messages');\n            if (messages && elementName && messages[elementName] && _.isString(messages[elementName][messageKey])) {\n                //currently not translatable but potentially could be if the need raises\n                return hb.compile(messages[elementName][messageKey]);\n            } else {\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager() {\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader() {\n            return this.themeLoader;\n        };\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function (element, data, qtiSubclass) {\n            let res;\n            let ret = '';\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n            const decorators = this.getOption('decorators');\n\n            if (!renderer || !_.isFunction(renderer.template)) {\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.before)) {\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n            //post rendering decoration\n            if (_.isObject(decorators) && _.isFunction(decorators.after)) {\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if (_.isString(res)) {\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function (element, data, qtiSubclass) {\n            let ret = data;\n            const qtiClass = qtiSubclass || element.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getData === 'function') {\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function (tpl, data) {\n            return hb.compile(tpl)(data);\n        };\n\n        this.getContainer = function (qtiElement, $scope, qtiSubclass) {\n            let ret = null;\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                ret = renderer.getContainer(qtiElement, $scope);\n            } else {\n                throw new Error('no renderer found for the class : ' + qtiElement.qtiClass);\n            }\n            return ret;\n        };\n\n        this.postRender = function (qtiElement, data, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiElement.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer && typeof renderer.render === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function (qtiInteraction, response, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.setResponse === 'function') {\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    const $container = renderer.getContainer.call(this, qtiInteraction);\n                    if ($container instanceof $ && $container.length) {\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getResponse = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.getResponse === 'function') {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.resetResponse = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (typeof renderer.resetResponse === 'function') {\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState = function (qtiInteraction, state, qtiSubclass) {\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function (qtiInteraction, qtiSubclass) {\n            let ret = false;\n            const qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            const renderer = _getClassRenderer(qtiClass);\n\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            } else {\n                throw new Error('no renderer registered under the name : ' + qtiClass);\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function () {\n            return _renderers;\n        };\n\n        this.register = function (renderersLocations) {\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function (callback, requiredClasses) {\n            const self = this;\n            let required = [];\n\n            const themeData = themesHelper.getCurrentThemeData();\n            if (themeData) {\n                options.themes = themeData;\n            }\n            if (options.themes) {\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function (theme, index) {\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load(options.preload);\n            }\n\n            if (requiredClasses) {\n                if (_.isArray(requiredClasses)) {\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.forEach(requiredClasses, function (reqClass) {\n                        const deps = _dependencies[reqClass];\n                        if (deps) {\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function (qtiClass) {\n                        let requiredSubClasses;\n                        if (_renderableSubclasses[qtiClass]) {\n                            requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.forEach(requiredSubClasses, function (subclass) {\n                                if (\n                                    !registerRendererClass(qtiClass + '.' + subclass, required) &&\n                                    !registerRendererClass(qtiClass, required)\n                                ) {\n                                    throw new Error(\n                                        self.name +\n                                            ' : missing qti class location declaration: ' +\n                                            qtiClass +\n                                            ', subclass: ' +\n                                            subclass\n                                    );\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n            } else {\n                required = _.values(_locations);\n            }\n\n            moduleLoader([], () => true)\n                .addList(required.map(module => ({ module, category: 'qti' })))\n                .load()\n                .then(loaded => {\n                    loaded.forEach(clazz => {\n                        if (_isValidRenderer(clazz)) {\n                            _renderers[clazz.qtiClass] = clazz;\n                        }\n                    });\n                    if (typeof callback === 'function') {\n                        callback.call(self, _renderers);\n                    }\n                });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload() {\n            if (this.themeLoader) {\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function (interaction, choices, identificationType) {\n            if (Element.isA(interaction, 'interaction')) {\n                this.shuffledChoices[interaction.getSerial()] = interactionHelper\n                    .findChoices(interaction, choices, identificationType)\n                    .map(val => val.serial);\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function (interaction, reshuffle, returnedType) {\n            let choices = [];\n            let serial, i;\n\n            if (Element.isA(interaction, 'interaction')) {\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if (!this.shuffledChoices[serial] || reshuffle) {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        this.shuffledChoices[serial] = [];\n                        for (i = 0; i < 2; i++) {\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = choices[i].map(val => val.serial);\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = choices.map(val => val.serial);\n                    }\n\n                    //otherwise get the choices from the serials\n                } else {\n                    if (Element.isA(interaction, 'matchInteraction')) {\n                        _.forEach(choices, function (choice, index) {\n                            if (index < 2) {\n                                _.forEach(this.shuffledChoices[serial][i], function (choiceSerial) {\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function (choiceSerial) {\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if (returnedType === 'serial' || returnedType === 'identifier') {\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function () {\n            return _renderers;\n        };\n\n        this.getLocations = function () {\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url) {\n            if (!options.assetManager) {\n                return url;\n            }\n            if (typeof url === 'string' && url.length > 0) {\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function (relUrl) {\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if (this.getOption('userRelativeUrl')) {\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if (/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)) {\n                //already absolute or base64 encoded\n                return relUrl;\n            } else {\n                let absUrl = '';\n                const runtimeLocations = this.getOption('runtimeLocations');\n\n                if (runtimeLocations && _.size(runtimeLocations)) {\n                    _.forIn(runtimeLocations, function (runtimeLocation, typeIdentifier) {\n                        if (relUrl.indexOf(typeIdentifier) === 0) {\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false; //break\n                        }\n                    });\n                }\n\n                if (absUrl) {\n                    return absUrl;\n                } else {\n                    const baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    var Renderer$1 = {\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build: function (renderersLocations, name, defaultOptions) {\n            const NewRenderer = function () {\n                const options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n\n    return Renderer$1;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiCommonRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/**\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/rendererProvider',['taoQtiItem/qtiCommonRenderer/renderers/Renderer'], function (QtiRenderer) { 'use strict';\n\n    QtiRenderer = QtiRenderer && Object.prototype.hasOwnProperty.call(QtiRenderer, 'default') ? QtiRenderer['default'] : QtiRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for qtiCommonRenderer\n     */\n    var rendererProvider = {\n        name: 'commonRenderer',\n        init: () => {},\n        getRenderer: () => QtiRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1, helper;\n      buffer += \"\\n<div class=\\\"grid-row qti-rubricBlock\\\" data-use=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.use)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" data-qti-class=\\\"rubricBlock\\\"\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"qti-rubricBlock-body\\\">\";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"</div>\\n    </div>\\n</div>\\n\";\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      stack1 = helpers.unless.call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { return stack1; }\n      else { return ''; }\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var RubricBlock = {\n        qtiClass: 'rubricBlock',\n        getContainer: containerHelper.get,\n        template: tpl,\n        getData: function getData(rubric, data) {\n            if (rubric.isEmpty()) {\n                data.empty = true;\n            }\n            return data;\n        }\n    };\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"media=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<link \\n    href=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    type=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\" \\n    rel=\\\"stylesheet\\\" \\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\" \\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    />\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Stylesheet = {\n        qtiClass: 'stylesheet',\n        template: tpl,\n        getContainer: containerHelper.get\n    };\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Table',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container'], function (Handlebars, Helpers0, containerHelper) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" \"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"summary=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \" lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<table\\n    class=\\\"qti-table\";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\\"\\n    data-qti-class=\\\"table\\\"\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n    >\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</table>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = {\n        qtiClass: 'table',\n        getContainer: containerHelper.get,\n        template: tpl\n    };\n\n    return Table;\n\n});\n\n","define('taoQtiItem/qtiCommonRenderer/renderers/Tooltip',['handlebars', 'lib/handlebars/helpers', 'taoQtiItem/qtiCommonRenderer/helpers/container', 'ui/tooltip'], function (Handlebars, Helpers0, containerHelper, tooltip) { 'use strict';\n\n    Handlebars = Handlebars && Object.prototype.hasOwnProperty.call(Handlebars, 'default') ? Handlebars['default'] : Handlebars;\n    Helpers0 = Helpers0 && Object.prototype.hasOwnProperty.call(Helpers0, 'default') ? Helpers0['default'] : Helpers0;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n    tooltip = tooltip && Object.prototype.hasOwnProperty.call(tooltip, 'default') ? tooltip['default'] : tooltip;\n\n    if (!Helpers0.__initialized) {\n      Helpers0(Handlebars);\n      Helpers0.__initialized = true;\n    }\n    var Template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {\n      this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n      var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \"\", stack1;\n      buffer += \"lang=\\\"\"\n        + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n        + \"\\\"\";\n      return buffer;\n      }\n\n      buffer += \"<span\\n    data-serial=\\\"\";\n      if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      buffer += escapeExpression(stack1)\n        + \"\\\"\\n    data-qti-class=\\\"_tooltip\\\"\\n    data-role=\\\"tooltip-target\\\"\\n    \";\n      stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['xml:lang']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n>\\n    \";\n      if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n      else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n      if(stack1 || stack1 === 0) { buffer += stack1; }\n      buffer += \"\\n</span>\\n\";\n      return buffer;\n      });\n    function tpl(data, options, asString) {\n      var html = Template(data, options);\n      return (asString || true) ? html : $(html);\n    }\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Tooltip = {\n        qtiClass: '_tooltip',\n        template: tpl,\n        getContainer: containerHelper.get,\n        render: function render(tooltipDOM) {\n            var $container = containerHelper.get(tooltipDOM);\n            var renderedTooltip = tooltip.create($container, tooltipDOM.content(), {\n                theme: 'default',\n                placement: 'top'\n            });\n\n            if ($container.data('$tooltip')) {\n                $container.data('$tooltip').dispose();\n                $container.removeData('$tooltip');\n            }\n            $container.data('$tooltip', renderedTooltip);\n        }\n    };\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/IdentifiedElement',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/util'], function (Element, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    /**\n     * IdentifiedElement model\n     */\n    var IdentifiedElement = Element.extend({\n        /**\n         * Generates and assign an identifier\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {Object} for chaining\n         */\n        buildIdentifier: function buildIdentifier(prefix, useSuffix) {\n            var item = this.getRootElement();\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\n            if (id) {\n                this.attr('identifier', id);\n            }\n            return this;\n        },\n\n        /**\n         * Get/set and identifier. It will be generated if it doesn't exists.\n         * @param {String} [value] - set the value or get it if not set.\n         * @returns {String} the identifier\n         */\n        id: function id(value) {\n            if (!value && !this.attr('identifier')) {\n                this.buildIdentifier(this.qtiClass, true);\n            }\n            return this.attr('identifier', value);\n        }\n    });\n\n    return IdentifiedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Choice',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Choice = IdentifiedElement.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'choice' || this._super(qtiClass);\n        },\n        getInteraction: function() {\n            var found,\n                ret = null,\n                item = this.getRootElement();\n            if (item) {\n                found = item.find(this.serial);\n                if (found) {\n                    ret = found.parent;\n                }\n            }\n            return ret;\n        }\n    });\n\n    return Choice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hotspot',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n\tQtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n\tvar QtiHotspot = QtiChoice.extend({});\n\n\treturn QtiHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/AssociableHotspot',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiAssociableHotspot = QtiHotspot.extend({\n        qtiClass: 'associableHotspot'\n    });\n\n    return QtiAssociableHotspot;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function () { 'use strict';\n\n    //@todo : need refactoring of qti item mixin with lodash.mixin()\n    var Mixin = {\n        augment: function(targetClass, methods, options) {\n            if (typeof targetClass === 'function' && typeof methods === 'object') {\n                for (var methodName in methods) {\n                    if (!Object.hasOwnProperty(targetClass.prototype, methodName)) {\n                        targetClass.prototype[methodName] = methods[methodName];\n                    } else {\n                        if (options && options.append) {\n                            var _parent = targetClass.prototype[methodName];\n                            targetClass.prototype[methodName] = function() {\n                                methods[methodName].apply(this, arguments);\n                                return _parent.apply(this, arguments);\n                            };\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    return Mixin;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Container',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, Element, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     */\n\n    var Container = Element.extend({\n        qtiClass: '_container',\n        init: function (body) {\n            this._super(); //generate serial, attributes array always empty\n            if (body && typeof body !== 'string') {\n                throw 'the body of a container must be a string';\n            }\n            this.bdy = body || '';\n            this.elements = {};\n        },\n        body: function (body) {\n            if (typeof body === 'undefined') {\n                return this.bdy;\n            } else {\n                if (typeof body === 'string') {\n                    this.bdy = body;\n                    $(document).trigger('containerBodyChange', {\n                        body: body,\n                        container: this,\n                        parent: this.parent()\n                    });\n                } else {\n                    throw 'body must be a string';\n                }\n            }\n        },\n        setElements: function (elements, body) {\n            var returnValue = false;\n\n            for (var i in elements) {\n                var elt = elements[i];\n                if (elt instanceof Element) {\n                    body = body || this.bdy;\n                    if (body.indexOf(elt.placeholder()) === -1) {\n                        body += elt.placeholder(); //append the element if no placeholder found\n                    }\n\n                    elt.setRootElement(this.getRootElement() || null);\n                    this.elements[elt.getSerial()] = elt;\n                    $(document).trigger('containerElementAdded', {\n                        element: elt,\n                        container: this\n                    });\n\n                    returnValue = true;\n                } else {\n                    returnValue = false;\n                    throw 'expected a qti element';\n                }\n            }\n\n            this.body(body);\n\n            return returnValue;\n        },\n        setElement: function (element, body) {\n            return this.setElements([element], body);\n        },\n        removeElement: function (element) {\n            var serial = '';\n            if (typeof element === 'string') {\n                serial = element;\n            } else if (element instanceof Element) {\n                serial = element.getSerial();\n            }\n            delete this.elements[serial];\n            this.body(this.body().replace('{{' + serial + '}}', ''));\n            return this;\n        },\n        getElements: function (qtiClass) {\n            var elts = {};\n            if (typeof qtiClass === 'string') {\n                for (var serial in this.elements) {\n                    if (Element.isA(this.elements[serial], qtiClass)) {\n                        elts[serial] = this.elements[serial];\n                    }\n                }\n            } else {\n                elts = _.clone(this.elements);\n            }\n            return elts;\n        },\n        getElement: function (serial) {\n            return this.elements[serial] ? this.elements[serial] : null;\n        },\n        getComposingElements: function () {\n            var elements = this.getElements();\n            var elts = {};\n            for (var serial in elements) {\n                elts[serial] = elements[serial]; //pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, elements[serial].getComposingElements());\n            }\n            return elts;\n        },\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                elementsData = [],\n                tpl = this.body();\n\n            for (var serial in this.elements) {\n                var elt = this.elements[serial];\n                if (typeof elt.render === 'function') {\n                    if (elt.qtiClass === '_container') {\n                        //@todo : container rendering merging, to be tested\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\n                    } else {\n                        tpl = tpl.replace(elt.placeholder(), '{{{' + serial + '}}}');\n                        elementsData[serial] = elt.render(renderer);\n                    }\n                } else {\n                    throw 'render() is not defined for the qti element: ' + serial;\n                }\n            }\n\n            if (renderer.isRenderer) {\n                return this._super(\n                    {\n                        body: renderer.renderDirect(tpl, elementsData),\n                        contentModel: this.contentModel || 'flow'\n                    },\n                    renderer,\n                    args.placeholder\n                );\n            } else {\n                throw 'invalid qti renderer for qti container';\n            }\n        },\n        postRender: function (data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n\n            var res = _(this.elements)\n                .filter(function (elt) {\n                    return typeof elt.postRender === 'function';\n                })\n                .map(function (elt) {\n                    return elt.postRender(data, '', renderer);\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n            return res;\n        },\n        toArray: function () {\n            var arr = {\n                serial: this.serial,\n                body: this.bdy,\n                elements: {}\n            };\n\n            for (var serial in this.elements) {\n                arr.elements[serial] = this.elements[serial].toArray();\n            }\n\n            return arr;\n        },\n        find: function (serial, parent) {\n            var found = null;\n\n            if (this.elements[serial]) {\n                found = { parent: parent || this, element: this.elements[serial], location: 'body' };\n            } else {\n                _.forEach(this.elements, function (elt) {\n                    found = elt.find(serial);\n                    if (found) {\n                        return false; //break loop\n                    }\n                });\n            }\n\n            return found;\n        },\n        isEmpty: function () {\n            return !this.bdy;\n        }\n    });\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function (Mixin, Container$1) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container$1 = Container$1 && Object.prototype.hasOwnProperty.call(Container$1, 'default') ? Container$1['default'] : Container$1;\n\n    var methods = {\n        initContainer: function(body) {\n            this.bdy = new Container$1(body || '');\n            this.bdy.setRootElement(this.getRootElement() || null);\n            this.bdy.contentModel = 'blockStatic';\n        },\n        getBody: function() {\n            return this.bdy;\n        },\n        body: function(body) {\n            var ret = this.bdy.body(body);\n            return body ? this : ret; //for method chaining on get\n        },\n        setElement: function(element, body) {\n            this.bdy.setElement(element, body);\n            return this;\n        },\n        removeElement: function(element) {\n            return this.bdy.removeElement(element);\n        },\n        getElements: function(qtiClass) {\n            return this.bdy.getElements(qtiClass);\n        },\n        getElement: function(serial) {\n            return this.bdy.getElement(serial);\n        }\n    };\n\n    var Container = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return Container;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/Container'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerInline',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'inlineStatic';\n        }\n    });\n\n    var ContainerInline = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/ContainerInlineChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ContainerChoice = Choice.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'containerChoice' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ContainerChoice);\n\n    return ContainerChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Gap',['taoQtiItem/qtiItem/core/choices/Choice'], function (QtiChoice) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n\n    var QtiGap = QtiChoice.extend({\n        qtiClass: 'gap'\n    });\n\n    return QtiGap;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Object',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiObject = Element.extend({\n        qtiClass: 'object',\n        getMediaType: function() {\n            var type = 'undefined';\n            var mimetype = this.attr('type');\n            if (mimetype) {\n                if (mimetype.indexOf('video') === 0) {\n                    type = 'video';\n                } else if (mimetype.indexOf('audio') === 0) {\n                    type = 'audio';\n                } else if (mimetype.indexOf('image') === 0) {\n                    type = 'image';\n                } else if (mimetype.indexOf('text/html') === 0) {\n                    type = 'html';\n                } else {\n                    type = 'object';\n                }\n            }\n            return type;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            switch (this.getMediaType()) {\n                case 'video':\n                    defaultData.video = true;\n                    break;\n                case 'audio':\n                    defaultData.audio = true;\n                    break;\n                case 'html':\n                    defaultData.html = true;\n                    break;\n                case 'image':\n                default:\n                    defaultData.object = true;\n            }\n\n            defaultData.attributes = { data: renderer.resolveUrl(this.attr('data')) };\n            defaultData.body = this._alt;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('data');\n        }\n    });\n\n    return QtiObject;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapImg',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/core/Object'], function (QtiChoice, QtiObject) { 'use strict';\n\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiGapImg = QtiChoice.extend({\n        qtiClass: 'gapImg',\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiGapImg;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapText',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var QtiGapText = QtiContainerChoice.extend({\n        qtiClass: 'gapText'\n    });\n\n    return QtiGapText;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/HotspotChoice',['taoQtiItem/qtiItem/core/choices/Hotspot'], function (QtiHotspot) { 'use strict';\n\n    QtiHotspot = QtiHotspot && Object.prototype.hasOwnProperty.call(QtiHotspot, 'default') ? QtiHotspot['default'] : QtiHotspot;\n\n    var QtiHotspotChoice = QtiHotspot.extend({\n        qtiClass: 'hotspotChoice'\n    });\n\n    return QtiHotspotChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/Hottext',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Choice, Container) { 'use strict';\n\n    Choice = Choice && Object.prototype.hasOwnProperty.call(Choice, 'default') ? Choice['default'] : Choice;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var Hottext = Choice.extend({\n        qtiClass: 'hottext'\n    });\n\n    Container.augment(Hottext);\n\n    return Hottext;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/InlineChoice',['taoQtiItem/qtiItem/core/choices/ContainerInlineChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiInlineChoice = QtiContainerChoice.extend({\n        qtiClass: 'inlineChoice'\n    });\n\n    return QtiInlineChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleAssociableChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleAssociableChoice'\n    });\n\n    return QtiSimpleAssociableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function (QtiContainerChoice) { 'use strict';\n\n    QtiContainerChoice = QtiContainerChoice && Object.prototype.hasOwnProperty.call(QtiContainerChoice, 'default') ? QtiContainerChoice['default'] : QtiContainerChoice;\n\n    var QtiSimpleChoice = QtiContainerChoice.extend({\n        qtiClass: 'simpleChoice'\n    });\n\n    return QtiSimpleChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextVariableChoice',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/helper/rendererConfig'], function ($, _, QtiChoice, rendererConfig) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    QtiChoice = QtiChoice && Object.prototype.hasOwnProperty.call(QtiChoice, 'default') ? QtiChoice['default'] : QtiChoice;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiTextVariableChoice = QtiChoice.extend({\n        init: function(serial, attributes, text) {\n            this._super(serial, attributes);\n            this.val(text || '');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'textVariableChoice' || this._super(qtiClass);\n        },\n        val: function(text) {\n            if (typeof text === 'undefined') {\n                return this.text;\n            } else {\n                if (typeof text === 'string') {\n                    this.text = text;\n                    $(document).trigger('choiceTextChange', {\n                        choice: this,\n                        text: text\n                    });\n                } else {\n                    throw 'text must be a string';\n                }\n            }\n            return this;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    body: this.text\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiTextVariableChoice;\n\n});\n\n","define('taoQtiItem/qtiItem/core/choices/TextEntry',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function (QtiTextVariableChoice) { 'use strict';\n\n    QtiTextVariableChoice = QtiTextVariableChoice && Object.prototype.hasOwnProperty.call(QtiTextVariableChoice, 'default') ? QtiTextVariableChoice['default'] : QtiTextVariableChoice;\n\n    var QtiTextEntry = QtiTextVariableChoice.extend({\r\n        qtiClass: 'textEntry'\r\n    });\n\n    return QtiTextEntry;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/Feedback',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    var Feedback = IdentifiedElement.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    return Feedback;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackBlock = Feedback.extend({});\n\n\treturn FeedbackBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function (Feedback) { 'use strict';\n\n\tFeedback = Feedback && Object.prototype.hasOwnProperty.call(Feedback, 'default') ? Feedback['default'] : Feedback;\n\n\tvar FeedbackInline = Feedback.extend({});\n\n\treturn FeedbackInline;\n\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function (IdentifiedElement, Container) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var ModalFeedback = IdentifiedElement.extend({\n        qtiClass: 'modalFeedback',\n        is: function(qtiClass) {\n            return qtiClass === 'feedback' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(ModalFeedback);\n\n    return ModalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigcaption',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figcaption';\n        }\n    });\n\n    var ContainerFigcaption = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/NamespacedElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    var methods = {\n        getNamespace: function() {\n            var relatedItem;\n            var namespaces;\n            var ns;\n\n            if (this.ns && (this.ns.name || this.ns.uri)) {\n                return _.clone(this.ns);\n            } else {\n                relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    namespaces = relatedItem.getNamespaces();\n                    for (ns in namespaces) {\n                        if (namespaces[ns].indexOf(this.nsUriFragment) > 0) {\n                            return {\n                                name: ns,\n                                uri: namespaces[ns]\n                            };\n                        }\n                    }\n                    //if no ns found in the item, set the default one!\n                    relatedItem.namespaces[this.defaultNsName] = this.defaultNsUri;\n                    return {\n                        name: this.defaultNsName,\n                        uri: this.defaultNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setNamespace: function(name, uri) {\n            this.ns = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var NamespacedElement = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return NamespacedElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figcaption',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigcaption', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figcaption = Element.extend({\n        qtiClass: 'figcaption',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figcaption' || this._super(qtiClass);\n        }\n    });\n\n    Container.augment(Figcaption);\n    NamespacedElement.augment(Figcaption);\n\n    return Figcaption;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerFigure',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function (body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'figure';\n        }\n    });\n\n    var ContainerFigure = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerFigure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Figure',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerFigure', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2022 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    const Figure = Element.extend({\n        qtiClass: 'figure',\n        defaultNsName: 'qh5',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/imsqtiv2p2_html5_v1p0',\n        nsUriFragment: 'imsqtiv2p2_html5_v1p0',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'figure' || this._super(qtiClass);\n        },\n        isEmpty: function () {\n            const imgElements = this.getElements('img');\n            if (imgElements && Object.values(imgElements).length) {\n                return Object.values(imgElements)[0].isEmpty();\n            } else {\n                return true;\n            }\n        }\n    });\n    Container.augment(Figure);\n    NamespacedElement.augment(Figure);\n\n    return Figure;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Img',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Img = Element.extend({\n        qtiClass: 'img',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {\n                src: renderer.resolveUrl(this.attr('src'))\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return !this.attr('src');\n        }\n    });\n\n    return Img;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Include',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function (Element, Container, NamespacedElement) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Include = Element.extend({\n        qtiClass: 'include',\n        defaultNsName: 'xi',\n        defaultNsUri: 'http://www.w3.org/2001/XInclude',\n        nsUriFragment: 'XInclude',\n        isEmpty: function() {\n            return !this.attr('href') || this.getBody().isEmpty();\n        }\n    });\n    Container.augment(Include);\n    NamespacedElement.augment(Include);\n\n    return Include;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Interaction',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util'], function (Element, _, rendererConfig, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    var QtiInteraction = Element.extend({\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = {};\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'interaction' || this._super(qtiClass);\n        },\n        addChoice: function (choice) {\n            choice.setRootElement(this.getRootElement() || null);\n            this.choices[choice.getSerial()] = choice;\n            return this;\n        },\n        getChoices: function () {\n            var choices = {};\n            for (var i in this.choices) {\n                //prevent passing the whole array by ref\n                choices[i] = this.choices[i];\n            }\n            return choices;\n        },\n        getChoice: function (serial) {\n            var ret = null;\n            if (this.choices[serial]) {\n                ret = this.choices[serial];\n            }\n            return ret;\n        },\n        getChoiceByIdentifier: function (identifier) {\n            for (var i in this.choices) {\n                if (this.choices[i].id() === identifier) {\n                    return this.choices[i];\n                }\n            }\n            return null;\n        },\n        getComposingElements: function () {\n            var elts = this._super();\n            //recursive to choices:\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    elts[serial] = this.choices[serial];\n                    elts = _.extend(elts, this.choices[serial].getComposingElements());\n                }\n            }\n            return elts;\n        },\n        find: function (serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, 'choices', serial);\n            }\n            return found;\n        },\n        getResponseDeclaration: function () {\n            var response = null;\n            var responseId = this.attr('responseIdentifier');\n            if (responseId) {\n                var item = this.getRootElement();\n                if (item) {\n                    response = item.getResponseDeclaration(responseId);\n                } else {\n                    throw 'cannot get response of an interaction out of its item context';\n                }\n            }\n            return response;\n        },\n        /**\n         * Render the interaction to the view.\n         * The optional argument \"subClass\" allows distinguishing customInteraction: e.g. customInteraction.matrix, customInteraction.likertScale ...\n         */\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    _type: this.qtiClass.replace(/([A-Z])/g, function ($1) {\n                        return '_' + $1.toLowerCase();\n                    }),\n                    choices: [],\n                    choiceShuffle: true\n                };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            var choices =\n                this.attr('shuffle') && renderer.getOption('shuffleChoices')\n                    ? renderer.getShuffledChoices(this)\n                    : this.getChoices();\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n            var _this = this;\n            _.forEach(choices, function (choice) {\n                if (Element.isA(choice, 'choice')) {\n                    try {\n                        var renderedChoice = choice.render(\n                            _.clone(interactionData, true),\n                            null,\n                            choice.qtiClass + '.' + _this.qtiClass,\n                            renderer\n                        ); //use interaction type as choice subclass\n                        defaultData.choices.push(renderedChoice);\n                    } catch (e) {\n                        //leave choices empty in case of error\n                    }\n                }\n            });\n\n            var tplName = args.subclass ? this.qtiClass + '.' + args.subclass : this.qtiClass;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, tplName, renderer);\n        },\n        postRender: function (data, altClassName, renderer) {\n            var self = this;\n            renderer = renderer || this.getRenderer();\n\n            return _(this.getChoices())\n                .filter(function (elt) {\n                    return Element.isA(elt, 'choice');\n                })\n                .map(function (choice) {\n                    return choice.postRender({}, choice.qtiClass + '.' + self.qtiClass, renderer);\n                })\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        setResponse: function (values) {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.setResponse(this, values);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        getResponse: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.getResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        resetResponse: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                ret = renderer.resetResponse(this);\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state is provided by the interaction's renderer.\n         *\n         * @returns {Object} the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        getState: function () {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.getState)) {\n                    ret = renderer.getState(this);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state will be given to the interaction's renderer.\n         *\n         * @param {Object} state - the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        setState: function (state) {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.setState)) {\n                    renderer.setState(this, state);\n                }\n            } else {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n        },\n\n        /**\n         * Clean up an interaction rendering.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         * @returns {Promise?} the interaction destroy step can be async and can return an optional Promise\n         */\n        clear: function () {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.destroy)) {\n                return renderer.destroy(this);\n            }\n        },\n\n        toArray: function () {\n            var arr = this._super();\n            arr.choices = {};\n            for (var serial in this.choices) {\n                if (Element.isA(this.choices[serial], 'choice')) {\n                    arr.choices[serial] = this.choices[serial].toArray();\n                }\n            }\n            return arr;\n        },\n\n        getNormalMaximum: function getNormalMaximum() {\n            //by default\n            return false;\n        }\n    });\n\n    return QtiInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Prompt',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function (Element, Container) { 'use strict';\n\n\tElement = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar Prompt = Element.extend({ qtiClass: 'prompt' });\n\tContainer.augment(Prompt);\n\n\treturn Prompt;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/BlockInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/core/interactions/Prompt', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Interaction, Prompt, _, rendererConfig) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    Prompt = Prompt && Object.prototype.hasOwnProperty.call(Prompt, 'default') ? Prompt['default'] : Prompt;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var BlockInteraction = Interaction.extend({\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.prompt = new Prompt('');\n        },\n        is: function(qtiClass) {\n            return qtiClass === 'blockInteraction' || this._super(qtiClass);\n        },\n        getComposingElements: function() {\n            var elts = this._super();\n            elts = _.extend(elts, this.prompt.getComposingElements());\n            elts[this.prompt.getSerial()] = this.prompt;\n            return elts;\n        },\n        find: function(serial) {\n            return this._super(serial) || this.prompt.find(serial);\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    promptId: `prompt-${this.prompt.getSerial()}`,\n                    prompt: this.prompt.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return [].concat(this.prompt.postRender({}, '', renderer)).concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function() {\n            var arr = this._super();\n            arr.prompt = this.prompt.toArray();\n            return arr;\n        }\n    });\n\n    return BlockInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/responseRules',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n    var responseRules = {\n        MATCH_CORRECT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'match',\n                    expressions: [\n                        {\n                            qtiClass: 'variable',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                        {\n                            qtiClass: 'correct',\n                            attributes: {\n                                identifier: responseIdentifier,\n                            },\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    },\n                                },\n                                {\n                                    qtiClass: 'baseValue',\n                                    attributes: {\n                                        baseType: 'integer'\n                                    },\n                                    value: '1',\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponse',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n        MAP_RESPONSE_POINT: (responseIdentifier, outcomeIdentifier) => ({\n            qtiClass: 'responseCondition',\n            responseIf: {\n                qtiClass: 'responseIf',\n                expression: {\n                    qtiClass: 'not',\n                    expressions: [\n                        {\n                            qtiClass: 'isNull',\n                            expressions: [{\n                                qtiClass: 'variable',\n                                attributes: {\n                                    identifier: responseIdentifier,\n                                },\n                            }],\n                        },\n                    ],\n                },\n                responseRules: [\n                    {\n                        qtiClass: 'setOutcomeValue',\n                        attributes: {\n                            identifier: outcomeIdentifier,\n                        },\n                        expression: {\n                            qtiClass: 'sum',\n                            expressions: [\n                                {\n                                    qtiClass: 'variable',\n                                    attributes: {\n                                        identifier: outcomeIdentifier,\n                                    }\n                                },\n                                {\n                                    qtiClass: 'mapResponsePoint',\n                                    attributes: {\n                                        identifier: responseIdentifier,\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        }),\n    };\n\n    return responseRules;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/response',['lodash', 'taoQtiItem/qtiItem/helper/responseRules'], function (_, responseRulesHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    responseRulesHelper = responseRulesHelper && Object.prototype.hasOwnProperty.call(responseRulesHelper, 'default') ? responseRulesHelper['default'] : responseRulesHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const _templateNames = {\n        MATCH_CORRECT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        MAP_RESPONSE: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        MAP_RESPONSE_POINT: 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        NONE: 'no_response_processing'\n    };\n\n\n    var response = {\n        isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName(tplName) {\n            return _templateNames[tplName] || '';\n        },\n        getTemplateNameFromUri(tplUri) {\n            let tplName = '';\n\n            _.forIn(_templateNames, (uri, name) => {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n\n            return tplName;\n        },\n        getTemplateNameFromResponseRules(responseIdentifier, responseRules) {\n            if (!responseRules) {\n                return 'NONE';\n            }\n\n            const {\n                responseIf: {\n                    responseRules: [outcomeRules = {}] = [],\n                } = {}\n            } = responseRules;\n            const {\n                attributes: {\n                    identifier: outcomeIdentifier,\n                } = {},\n            } = outcomeRules;\n\n            if (!outcomeIdentifier) {\n                return '';\n            }\n\n            return Object.keys(responseRulesHelper).find(\n                (key) => _.isEqual(responseRules, responseRulesHelper[key](responseIdentifier, outcomeIdentifier))\n            );\n        }\n    };\n\n    return response;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function (IdentifiedElement) { 'use strict';\n\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    /**\n     * It is the top abstract class for all variable classes\n     * (so not renderable and qtiClass undefined)\n     */\n    var VariableDeclaration = IdentifiedElement.extend({\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.defaultValue = null;\n        },\n        is: function is(qtiClass) {\n            return qtiClass === 'variableDeclaration' || this._super(qtiClass);\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            arr.defaultValue = this.defaultValue;\n            return arr;\n        },\n        setDefaultValue: function setDefaultValue(value) {\n            this.defaultValue = value;\n        },\n        getDefaultValue: function getDefaultValue() {\n            return this.defaultValue;\n        }\n    });\n\n    return VariableDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function (VariableDeclaration) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n\n    var OutcomeDeclaration = VariableDeclaration.extend({\n        qtiClass: 'outcomeDeclaration'\n    });\n\n    return OutcomeDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/maxScore',['lodash', 'lib/gamp/gamp', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function (_, gamp, responseHelper, OutcomeDeclaration) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    gamp = gamp && Object.prototype.hasOwnProperty.call(gamp, 'default') ? gamp['default'] : gamp;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    OutcomeDeclaration = OutcomeDeclaration && Object.prototype.hasOwnProperty.call(OutcomeDeclaration, 'default') ? OutcomeDeclaration['default'] : OutcomeDeclaration;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var pairExists = function pairExists(collection, pair) {\n        if (pair.length !== 2) {\n            return false;\n        }\n        return collection[pair[0] + ' ' + pair[1]] || collection[pair[1] + ' ' + pair[0]];\n    };\n    const externalScoredValues = ['human', 'externalMachine'];\n\n    var maxScore = {\n        /**\n         * Set the normal maximum to the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setNormalMaximum: function setNormalMaximum(item) {\n            var normalMaximum,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (\n                scoreOutcome &&\n                item.responseProcessing &&\n                item.responseProcessing.processingType === 'templateDriven' &&\n                !externalScoredValues.includes(scoreOutcome.attr('externalScored'))\n            ) {\n                const interactions = item.getInteractions();\n                normalMaximum = _.reduce(\n                    interactions,\n                    function (acc, interaction) {\n                        var interactionMaxScore = interaction.getNormalMaximum();\n                        if (_.isNumber(interactionMaxScore)) {\n                            return gamp.add(acc, interactionMaxScore);\n                        } else {\n                            return false;\n                        }\n                    },\n                    0\n                );\n\n                if (_.isNumber(normalMaximum)) {\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\n                } else {\n                    scoreOutcome.removeAttr('normalMaximum');\n                }\n            }\n        },\n\n        /**\n         * Set the maximum score of the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setMaxScore: function setMaxScore(item) {\n            var hasInvalidInteraction = false,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\n                customOutcomes,\n                maxScore,\n                maxScoreOutcome;\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                const interactions = item.getInteractions();\n                if (externalScoredValues.includes(scoreOutcome.attr('externalScored'))) {\n                    maxScore = scoreOutcome.attr('normalMaximum') || 0;\n                } else {\n                    maxScore = _.reduce(\n                        interactions,\n                        function (acc, interaction) {\n                            var interactionMaxScore = interaction.getNormalMaximum();\n                            if (_.isNumber(interactionMaxScore)) {\n                                return gamp.add(acc, interactionMaxScore);\n                            } else {\n                                hasInvalidInteraction = true;\n                                return acc;\n                            }\n                        },\n                        0\n                    );\n                    customOutcomes = _(item.getOutcomes()).filter(function (outcome) {\n                        return outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE';\n                    });\n\n                    if (customOutcomes.size()) {\n                        maxScore = customOutcomes.reduce(function (acc, outcome) {\n                            return gamp.add(acc, parseFloat(outcome.attr('normalMaximum') || 0));\n                        }, maxScore);\n                    }\n                }\n\n                maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\n                if (!hasInvalidInteraction || customOutcomes.size()) {\n                    if (!maxScoreOutcome) {\n                        //add new outcome\n                        maxScoreOutcome = new OutcomeDeclaration({\n                            cardinality: 'single',\n                            baseType: 'float'\n                        });\n\n                        //attach the outcome to the item before generating item-level unique id\n                        item.addOutcomeDeclaration(maxScoreOutcome);\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\n                    }\n                    maxScoreOutcome.setDefaultValue(maxScore);\n                }\n\n                //handle special case when MAXSCORE is set up manually for some interaction like ExtendedText\n                if (hasInvalidInteraction && maxScoreOutcome) {\n                    if (maxScoreOutcome.attributes && maxScoreOutcome.attributes.externalScored) {\n                        if (_.isUndefined(maxScoreOutcome.defaultValue)) {\n                            maxScoreOutcome.setDefaultValue(1);\n                        }\n                    } else {\n                        item.removeOutcome('MAXSCORE');\n                    }\n                }\n\n                const isAllResponseProcessingRulesNone = !interactions.some(interaction => {\n                    const responseDeclaration = interaction.getResponseDeclaration();\n                    const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n                    return template !== 'NONE';\n                });\n                // remove MAXSCORE and SCORE outcome variables when all interactions are configured with none response processing rule,\n                // and the externalScored property of the SCORE variable is set to None\n                if (!scoreOutcome.attr('externalScored') && isAllResponseProcessingRulesNone) {\n                    item.removeOutcome('MAXSCORE');\n                    item.removeOutcome('SCORE');\n                }\n            }\n        },\n\n        /**\n         * Sort an array of associable choices by its matchMax attr value\n         * @param {Array} choiceCollection\n         * @returns {Array}\n         */\n        getMatchMaxOrderedChoices: function getMatchMaxOrderedChoices(choiceCollection) {\n            return _(choiceCollection)\n                .map(function (choice) {\n                    var matchMax = parseInt(choice.attr('matchMax'), 10);\n                    if (_.isNaN(matchMax)) {\n                        matchMax = 0;\n                    }\n                    return {\n                        matchMax: matchMax === 0 ? Infinity : matchMax,\n                        id: choice.id()\n                    };\n                })\n                .sortBy('matchMax')\n                .reverse()\n                .valueOf();\n        },\n\n        /**\n         * Compute the maximum score of a \"choice\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        choiceInteractionBased: function choiceInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max,\n                maxChoice,\n                minChoice,\n                scoreMaps,\n                requiredChoiceCount,\n                totalAnswerableResponse,\n                sortedMapEntries,\n                missingMapsCount;\n\n            options = _.defaults(options || {}, { maxChoices: 0, minChoices: 0 });\n            maxChoice = parseInt(interaction.attr('maxChoices') || options.maxChoices, 10);\n            minChoice =  0 ;\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    maxChoice &&\n                    _.isArray(responseDeclaration.correctResponse) &&\n                    (responseDeclaration.correctResponse.length > maxChoice ||\n                        responseDeclaration.correctResponse.length < minChoice)\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //prepare constraint params\n                requiredChoiceCount = minChoice;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                //sort the score map entries by the score\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n\n                sortedMapEntries = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse);\n\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\n                missingMapsCount = minChoice - sortedMapEntries.length;\n                _.times(missingMapsCount, function () {\n                    sortedMapEntries.push(mapDefault);\n                });\n\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\n                if (mapDefault && mapDefault > 0) {\n                    if (maxChoice) {\n                        missingMapsCount = maxChoice - sortedMapEntries.length;\n                    } else {\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.length;\n                    }\n                    if (missingMapsCount > 0) {\n                        _.times(missingMapsCount, function () {\n                            sortedMapEntries.push(mapDefault);\n                        });\n                    }\n                }\n\n                //calculate the maximum reachable score by choice map\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v;\n                    if (score < 0 && requiredChoiceCount <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredChoiceCount--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //map point response processing does not work on choice based interaction\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"order\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        orderInteractionBased: function orderInteractionBased(interaction) {\n            var minChoice =  0 ;\n            var maxChoice = parseInt(interaction.attr('maxChoices') || 0, 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max;\n\n            if (maxChoice && minChoice && maxChoice < minChoice) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        maxChoice &&\n                        responseDeclaration.correctResponse.length > maxChoice) ||\n                    (minChoice )\n                ) {\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                } else if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\n                //map response processing does not work on order based interaction\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"associate\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        associateInteractionBased: function associateInteractionBased(interaction, options) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = parseInt(interaction.attr('maxAssociations') || 0, 10);\n            var minAssoc =  0 ;\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                requiredAssoc,\n                totalAnswerableResponse,\n                usedChoices,\n                choicesIdentifiers,\n                sortedMapEntries,\n                i,\n                allPossibleMapEntries,\n                infiniteScoringPair;\n\n            options = _.defaults(options || {}, { possiblePairs: [], checkInfinitePair: false });\n\n            if (maxAssoc && minAssoc && maxAssoc < minAssoc) {\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) &&\n                        (!responseDeclaration.correctResponse.length ||\n                            (maxAssoc && responseDeclaration.correctResponse.length > maxAssoc) ||\n                            (minAssoc )))\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n\n                    //get the list of choices used in map entries\n                    choicesIdentifiers = [];\n                    _.forEach(responseDeclaration.correctResponse, function (pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choicesIdentifiers.push(choices[0].trim());\n                            choicesIdentifiers.push(choices[1].trim());\n                        }\n                    });\n\n                    //check if the choices usage are possible within the constraint defined in the interaction\n                    _.forEach(_.countBy(choicesIdentifiers), function (count, identifier) {\n                        var matchMax;\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        if (!choice) {\n                            max = 0;\n                            return false;\n                        }\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                requiredAssoc = minAssoc;\n                totalAnswerableResponse = maxAssoc === 0 ? Infinity : maxAssoc;\n                usedChoices = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(options.possiblePairs, function (pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                //get the sorted list of mapentries ordered by the score\n                sortedMapEntries = _(allPossibleMapEntries)\n                    .map(function (score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function (mapEntry) {\n                        var pair = mapEntry.pair;\n                        var choices, choiceId, choice, _usedChoices;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        //check that the pair is possible in term of matchMax\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            //clone the global used choices array to brings the changes in that object first before storing in the actual object\n                            _usedChoices = _.cloneDeep(usedChoices);\n\n                            for (i = 0; i < 2; i++) {\n                                choiceId = choices[i];\n\n                                //collect choices usage to check if the pair is possible\n                                if (!_usedChoices[choiceId]) {\n                                    choice = interaction.getChoiceByIdentifier(choiceId);\n                                    if (!choice) {\n                                        //unexisting choice, skip\n                                        return false;\n                                    }\n                                    _usedChoices[choiceId] = {\n                                        used: 0,\n                                        max: parseInt(choice.attr('matchMax'), 10)\n                                    };\n                                }\n                                if (\n                                    _usedChoices[choiceId].max &&\n                                    _usedChoices[choiceId].used === _usedChoices[choiceId].max\n                                ) {\n                                    //skip\n                                    return false;\n                                } else {\n                                    _usedChoices[choiceId].used++;\n                                }\n                            }\n\n                            //identify the edge case when we can get infinite association pair that create an infinite score\n                            infiniteScoringPair =\n                                infiniteScoringPair ||\n                                (options.checkInfinitePair &&\n                                    mapEntry.score > 0 &&\n                                    _usedChoices[choices[0]].max === 0 &&\n                                    _usedChoices[choices[1]].max === 0);\n\n                            //update the global used choices array\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse);\n\n                //infinite score => no normalMaximum should be generated for it\n                if (infiniteScoringPair) {\n                    return false;\n                }\n\n                //reduce the ordered list of map entries to calculate the max score\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v.score;\n                    if (v.score < 0 && requiredAssoc <= 0) {\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredAssoc--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"gap match\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        gapMatchInteractionBased: function gapMatchInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue || 0);\n            var max,\n                skippableWrongResponse,\n                totalAnswerableResponse,\n                usedChoices,\n                usedGaps,\n                group1,\n                group2,\n                allPossibleMapEntries;\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection) {\n                return _(choiceCollection)\n                    .map(function (choice) {\n                        return {\n                            matchMax: choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\n                            id: choice.id()\n                        };\n                    })\n                    .sortBy('matchMax')\n                    .reverse()\n                    .valueOf();\n            };\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\n\n                _.forEach(matchSet1, function (choice1) {\n                    _.forEach(matchSet2, function (choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1; //is possible until proven otherwise\n                    group1 = [];\n                    group2 = [];\n                    _.forEach(responseDeclaration.correctResponse, function (pair) {\n                        var choices;\n                        if (!_.isString(pair)) {\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            group1.push(choices[0].trim());\n                            group2.push(choices[1].trim());\n                        }\n                    });\n\n                    _.forEach(_.countBy(group1), function (count, identifier) {\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if (matchMax && matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n\n                    _.forEach(_.countBy(group2), function (count) {\n                        var matchMax = 1; //match max for a gap is always 1\n                        if ( matchMax < count) {\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse =  Infinity ;\n                usedChoices = {};\n                usedGaps = {};\n\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if (mapDefault && mapDefault > 0) {\n                    _.forEachRight(calculatePossiblePairs(interaction), function (pair) {\n                        if (!pairExists(allPossibleMapEntries, pair)) {\n                            allPossibleMapEntries[pair[0] + ' ' + pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                max = _(allPossibleMapEntries)\n                    .map(function (score, pair) {\n                        return {\n                            score: parseFloat(score),\n                            pair: pair\n                        };\n                    })\n                    .sortBy('score')\n                    .reverse()\n                    .filter(function (mapEntry) {\n                        var pair = mapEntry.pair;\n                        var _usedChoices = _.cloneDeep(usedChoices);\n                        var choices, choiceId, gapId, choice;\n\n                        if (!_.isString(pair)) {\n                            return false;\n                        }\n\n                        choices = pair.trim().split(' ');\n                        if (_.isArray(choices) && choices.length === 2) {\n                            choiceId = choices[0];\n                            gapId = choices[1];\n                            if (!_usedChoices[choiceId]) {\n                                choice = interaction.getChoiceByIdentifier(choiceId);\n                                if (!choice) {\n                                    //inexisting choice, skip\n                                    return false;\n                                }\n                                _usedChoices[choiceId] = {\n                                    used: 0,\n                                    max: parseInt(choice.attr('matchMax'), 10)\n                                };\n                            }\n                            if (_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max) {\n                                //skip\n                                return false;\n                            }\n                            _usedChoices[choiceId].used++;\n\n                            if (!usedGaps[gapId]) {\n                                usedGaps[gapId] = {\n                                    used: 0,\n                                    max: 1\n                                };\n                            }\n                            if (usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max) {\n                                //skip\n                                return false;\n                            }\n                            usedGaps[gapId].used++;\n\n                            //if an only if it is ok, we merge the temporary used choices array into the global one\n                            _.assign(usedChoices, _usedChoices);\n                            return true;\n                        } else {\n                            //is not a correct response pair\n                            return false;\n                        }\n                    })\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse)\n                    .reduce(function (acc, v) {\n                        var score = v.score;\n                        if (score >= 0) {\n                            return acc + score;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + score;\n                        }\n                    }, 0);\n\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = false;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"select point\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        selectPointInteractionBased: function selectPointInteractionBased(interaction) {\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, skippableWrongResponse, totalAnswerableResponse;\n\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\n                //such templates are not allowed\n                return 0;\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                //calculate the maximum reachable score by choice map\n                skippableWrongResponse =  Infinity ;\n                totalAnswerableResponse = maxChoice === 0 ? Infinity : maxChoice;\n\n                max = _(responseDeclaration.mapEntries)\n                    .map(function (v) {\n                        return parseFloat(v.mappedValue);\n                    })\n                    .sortBy()\n                    .reverse()\n                    .valueOf()\n                    .slice(0, totalAnswerableResponse)\n                    .reduce(function (acc, v) {\n                        if (v >= 0) {\n                            return acc + v;\n                        } else if (skippableWrongResponse > 0) {\n                            skippableWrongResponse--;\n                            return acc;\n                        } else {\n                            return acc + v;\n                        }\n                    }, 0);\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"slider\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        sliderInteractionBased: function sliderInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = 1;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                max = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"text entry\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        textEntryInteractionBased: function textEntryInteractionBased(interaction) {\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            /**\n             * Check that a response is possible or not according to the defined patternmask\n             * @param {String} value\n             * @returns {Boolean}\n             */\n            var isPossibleResponse = function isPossibleResponse(value) {\n                var patternMask = interaction.attr('patternMask');\n                if (patternMask) {\n                    return !!value.match(new RegExp(patternMask));\n                } else {\n                    //no restriction by pattern so always possible\n                    return true;\n                }\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if (\n                    !responseDeclaration.correctResponse ||\n                    (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)\n                ) {\n                    //no correct response defined -> score always zero\n                    max = 0;\n                } else {\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(\n                    _.filter(responseDeclaration.mapEntries, function (score, key) {\n                        return isPossibleResponse(key);\n                    })\n                );\n                max = _(scoreMaps)\n                    .map(function (v) {\n                        return parseFloat(v);\n                    })\n                    .max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'MAP_RESPONSE_POINT') {\n                max = 0;\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"custom\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        customInteractionBased(interaction) {\n            const responseDeclaration = interaction.getResponseDeclaration();\n            const template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            let max;\n            if (template === 'MATCH_CORRECT') {\n                if (Array.isArray(responseDeclaration.correctResponse) && responseDeclaration.correctResponse.length) {\n                    max = 1;\n                } else {\n                    max = 0;\n                }\n            } else if (template === 'MAP_RESPONSE') {\n                //at least a map entry is required to be valid QTI\n                if (!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)) {\n                    return 0;\n                }\n\n                const values = _.values(responseDeclaration.mapEntries).map(function (v) {\n                    return parseFloat(v);\n                });\n                max = _.max(values);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound || 0));\n                }\n            } else if (template === 'NONE') {\n                // set max to zero\n                max = 0;\n            } else {\n                max = 0;\n            }\n            return max;\n        }\n    };\n\n    return maxScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/AssociateInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var AssociateInteraction = BlockInteraction.extend({\n        qtiClass: 'associateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        pairs.push([choices[i].id, choices[j].id]);\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return AssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ChoiceInteraction = BlockInteraction.extend({\n        qtiClass: 'choiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return ChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ContainerInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/mixin/Container'], function (BlockInteraction, Container) { 'use strict';\n\n\tBlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n\tContainer = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n\tvar ContainerInteraction = BlockInteraction.extend({});\n\tContainer.augment(ContainerInteraction);\n\n\treturn ContainerInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/CustomElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function (Mixin, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {\n        prop: function (name, value) {\n            if (name) {\n                if (value !== undefined) {\n                    this.properties[name] = value;\n                } else {\n                    if (typeof name === 'object') {\n                        for (var prop in name) {\n                            this.prop(prop, name[prop]);\n                        }\n                    } else if (typeof name === 'string') {\n                        if (this.properties[name] === undefined) {\n                            return undefined;\n                        } else {\n                            return this.properties[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeProp: function (propNames) {\n            var _this = this;\n            if (typeof propNames === 'string') {\n                propNames = [propNames];\n            }\n            _.forEach(propNames, function (propName) {\n                delete _this.attributes[propName];\n            });\n            return this;\n        },\n        getProperties: function () {\n            return _.clone(this.properties);\n        },\n        getMarkupNamespace: function () {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function (name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        }\n    };\n\n    var CustomElement = {\n        augment: function (targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return CustomElement;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/CustomInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/Interaction', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, Interaction, CustomElement, NamespacedElement, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    var CustomInteraction = Interaction.extend({\n        qtiClass: 'customInteraction',\n        defaultNsName: 'pci',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableCustomInteraction',\n        nsUriFragment: 'portableCustomInteraction',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            this.pciReadyCallbacks = [];\n        },\n        is: function (qtiClass) {\n            return qtiClass === 'customInteraction' || this._super(qtiClass);\n        },\n        render: function () {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pci: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function () {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n        getMarkupNamespace: function () {\n            if (this.markupNs && this.markupNs.name && this.markupNs.uri) {\n                return _.clone(this.markupNs);\n            } else {\n                var relatedItem = this.getRootElement();\n                if (relatedItem) {\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name: this.defaultMarkupNsName,\n                        uri: this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace: function (name, uri) {\n            this.markupNs = {\n                name: name,\n                uri: uri\n            };\n        },\n        onPciReady: function (callback) {\n            this.pciReadyCallbacks.push(callback);\n\n            if (this.data('pci')) {\n                //if pci is already ready, call it immediately\n                this.triggerPciReady();\n            }\n        },\n        triggerPciReady: function () {\n            var _this = this,\n                pci = this.data('pci');\n\n            if (pci) {\n                _.forEach(this.pciReadyCallbacks, function (fn) {\n                    fn.call(_this, pci);\n                });\n\n                //empty the stack of ready callbacks\n                this.pciReadyCallbacks = [];\n\n                //mark the interaction as ready\n                this.data('pciReady', true);\n            } else {\n                throw 'cannot trigger pci ready when no pci is actually attached to the interaction';\n            }\n        },\n        onPci: function (event, callback) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.on)) {\n                    pci.on(event, callback);\n                } else {\n                    throw 'the pci does not implement on() function';\n                }\n            });\n            return this;\n        },\n        offPci: function (event) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.off(event);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        triggerPci: function (event, args) {\n            this.onPciReady(function (pci) {\n                if (_.isFunction(pci.off)) {\n                    pci.trigger(event, args);\n                } else {\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        getNormalMaximum() {\n            return maxScore.customInteractionBased(this);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(CustomInteraction);\n    NamespacedElement.augment(CustomInteraction);\n\n    return CustomInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction'], function (Interaction) { 'use strict';\n\n    Interaction = Interaction && Object.prototype.hasOwnProperty.call(Interaction, 'default') ? Interaction['default'] : Interaction;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n     *\n     */\n\n    var InlineInteraction = Interaction.extend({\n        is: function(qtiClass) {\n            return qtiClass === 'inlineInteraction' || this._super(qtiClass);\n        }\n    });\n\n    return InlineInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var EndAttemptInteraction = InlineInteraction.extend({\n        qtiClass: 'endAttemptInteraction',\n        getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return EndAttemptInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (_, BlockInteraction, rendererConfig, maxScore) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var ExtendedTextInteraction = BlockInteraction.extend({\n        qtiClass: 'extendedTextInteraction',\n        render: function render() {\n            var i,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    multiple: false,\n                    maxStringLoop: []\n                },\n                response = this.getResponseDeclaration();\n\n            if (\n                this.attr('maxStrings') &&\n                (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')\n            ) {\n                defaultData.multiple = true;\n                for (i = 0; i < this.attr('maxStrings'); i++) {\n                    defaultData.maxStringLoop.push(i + ''); //need to convert to string. The tpl engine fails otherwise\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return ExtendedTextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GapMatchInteraction = ContainerInteraction.extend({\n        qtiClass: 'gapMatchInteraction',\n        getGaps: function getGaps() {\n            return this.getBody().getElements('gap');\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.gapMatchInteractionBased(this);\n        }\n    });\n\n    return GapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/ObjectInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/Object'], function (QtiBlockInteraction, QtiObject) { 'use strict';\n\n    QtiBlockInteraction = QtiBlockInteraction && Object.prototype.hasOwnProperty.call(QtiBlockInteraction, 'default') ? QtiBlockInteraction['default'] : QtiBlockInteraction;\n    QtiObject = QtiObject && Object.prototype.hasOwnProperty.call(QtiObject, 'default') ? QtiObject['default'] : QtiObject;\n\n    var QtiObjectInteraction = QtiBlockInteraction.extend({\n        //common methods to object containers (start)\n        initObject: function(object) {\n            this.object = object || new QtiObject();\n        },\n        getObject: function() {\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n\n    return QtiObjectInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicInteraction',['taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (QtiObjectInteraction, _, rendererConfig) { 'use strict';\n\n    QtiObjectInteraction = QtiObjectInteraction && Object.prototype.hasOwnProperty.call(QtiObjectInteraction, 'default') ? QtiObjectInteraction['default'] : QtiObjectInteraction;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var QtiGraphicInteraction = QtiObjectInteraction.extend({\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    backgroundImage: this.object.getAttributes(),\n                    object: this.object.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiGraphicInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicAssociateInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicAssociateInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction) {\n                var i,\n                    j,\n                    pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for (i = 0; i < choices.length; i++) {\n                    for (j = i; j < choices.length; j++) {\n                        if (i !== j) {\n                            pairs.push([choices[i].id, choices[j].id]);\n                        }\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return GraphicAssociateInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, Element, _, rendererConfig, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicGapMatchInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicGapMatchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.gapImgs = {};\n        },\n        addGapImg: function addGapImg(gapImg) {\n            if (Element.isA(gapImg, 'gapImg')) {\n                gapImg.setRootElement(this.getRootElement() || null);\n                this.gapImgs[gapImg.getSerial()] = gapImg;\n            }\n        },\n        removeGapImg: function removeGapImg(gapImg) {\n            var serial = '';\n            if (typeof gapImg === 'string') {\n                serial = gapImg;\n            } else if (Element.isA(gapImg, 'gapImg')) {\n                serial = gapImg.getSerial();\n            }\n            delete this.gapImgs[serial];\n            return this;\n        },\n        getGapImgs: function getGapImgs() {\n            return _.clone(this.gapImgs);\n        },\n        getGapImg: function getGapImg(serial) {\n            return this.gapImgs[serial];\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var choice = this._super(identifier);\n            if (!choice) {\n                //if not found among the choices, search the gapImgs\n                choice = _.find(this.gapImgs, function(elt) {\n                    return elt && elt.id() === identifier;\n                });\n            }\n            return choice;\n        },\n        getComposingElements: function getComposingElements() {\n            var serial,\n                elts = this._super();\n            //recursive to choices:\n            for (serial in this.gapImgs) {\n                elts[serial] = this.gapImgs[serial];\n                elts = _.extend(elts, this.gapImgs[serial].getComposingElements());\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                if (this.gapImgs[serial]) {\n                    found = { parent: this, element: this.gapImgs[serial] };\n                }\n            }\n            return found;\n        },\n        render: function render() {\n            var serial,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    gapImgs: []\n                };\n\n            //note: no choice shuffling option available for graphic gap match\n            var gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                if (Element.isA(gapImgs[serial], 'choice')) {\n                    defaultData.gapImgs.push(gapImgs[serial].render({}, null, '', renderer));\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray: function toArray() {\n            var serial,\n                gapImgs,\n                arr = this._super();\n            arr.gapImgs = {};\n            gapImgs = this.getGapImgs();\n            for (serial in gapImgs) {\n                arr.gapImgs[serial] = gapImgs[serial].toArray();\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(graphicGapInteraction) {\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getGapImgs());\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getChoices());\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {\n                possiblePairs: calculatePossiblePairs(this),\n                checkInfinitePair: true\n            });\n        }\n    });\n\n    return GraphicGapMatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var GraphicOrderInteraction = GraphicInteraction.extend({\n        qtiClass: 'graphicOrderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return GraphicOrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HotspotInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HotspotInteraction = GraphicInteraction.extend({\n        qtiClass: 'hotspotInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HotspotInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/HottextInteraction',['taoQtiItem/qtiItem/core/interactions/ContainerInteraction', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/maxScore'], function (ContainerInteraction, Element, maxScore) { 'use strict';\n\n    ContainerInteraction = ContainerInteraction && Object.prototype.hasOwnProperty.call(ContainerInteraction, 'default') ? ContainerInteraction['default'] : ContainerInteraction;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var HottextInteraction = ContainerInteraction.extend({\n        qtiClass: 'hottextInteraction',\n        getChoices: function() {\n            return this.getBody().getElements('hottext');\n        },\n        getChoice: function(serial) {\n            var element = this.getBody().getElement(serial);\n            return Element.isA(element, 'choice') ? element : null;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n\n    return HottextInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var InlineChoiceInteraction = InlineInteraction.extend({\n        qtiClass: 'inlineChoiceInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.choiceInteractionBased(this, { maxChoices: 1 });\n        }\n    });\n\n    return InlineChoiceInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MatchInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, SimpleAssociableChoice, _, rendererConfig, util, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    SimpleAssociableChoice = SimpleAssociableChoice && Object.prototype.hasOwnProperty.call(SimpleAssociableChoice, 'default') ? SimpleAssociableChoice['default'] : SimpleAssociableChoice;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var MatchInteraction = BlockInteraction.extend({\n        qtiClass: 'matchInteraction',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.choices = [{}, {}];\n        },\n        addChoice: function addChoice(choice, matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                choice.setRootElement(this.getRootElement() || null);\n                this.choices[matchSet][choice.getSerial()] = choice;\n            }\n        },\n        getChoices: function getChoices(matchSet) {\n            matchSet = parseInt(matchSet);\n            if (this.choices[matchSet]) {\n                return _.clone(this.choices[matchSet]);\n            } else {\n                return _.clone(this.choices);\n            }\n        },\n        getChoice: function getChoice(serial) {\n            return this.choices[0][serial] || this.choices[1][serial] || null;\n        },\n        getChoiceByIdentifier: function getChoiceByIdentifier(identifier) {\n            var i, matchSet, serial;\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice && matchSet[serial].id() === identifier) {\n                        return matchSet[serial];\n                    }\n                }\n            }\n            return null;\n        },\n        getComposingElements: function getComposingElements() {\n            var i, matchSet, serial;\n            var elts = this._super();\n            //recursive to both match sets:\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        elts[serial] = matchSet[serial];\n                        elts = _.extend(elts, matchSet[serial].getComposingElements());\n                    }\n                }\n            }\n\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n            if (!found) {\n                found = util.findInCollection(this, ['choices.0', 'choices.1'], serial);\n            }\n            return found;\n        },\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var renderer = args.renderer || this.getRenderer();\n            var defaultData = {\n                matchSet1: [],\n                matchSet2: []\n            };\n            var choices, i, matchSet, serial;\n            var interactionData = { interaction: { serial: this.serial, attributes: this.attributes } };\n\n            if (!renderer) {\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            if (this.attr('shuffle') && renderer.getOption('shuffleChoices')) {\n                choices = renderer.getShuffledChoices(this);\n            } else {\n                choices = this.getChoices();\n            }\n\n            for (i = 0; i < 2; i++) {\n                matchSet = choices[i];\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        defaultData['matchSet' + (i + 1)].push(\n                            matchSet[serial].render(\n                                _.clone(interactionData, true),\n                                null,\n                                'simpleAssociableChoice.matchInteraction',\n                                renderer\n                            )\n                        );\n                    }\n                }\n            }\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender: function postRender(data, altClassName, renderer) {\n            renderer = renderer || this.getRenderer();\n            return _(this.getChoices())\n                .map(function(choices) {\n                    return _(choices)\n                        .filter(function(choice) {\n                            return choice instanceof SimpleAssociableChoice;\n                        })\n                        .map(function(choice) {\n                            return choice.postRender({}, 'simpleAssociableChoice.matchInteraction', renderer);\n                        })\n                        .value();\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        toArray: function toArray() {\n            var i, matchSet, serial;\n            var arr = this._super();\n            arr.choices = { 0: {}, 1: {} };\n            for (i = 0; i < 2; i++) {\n                matchSet = this.getChoices(i);\n                for (serial in matchSet) {\n                    if (matchSet[serial] instanceof SimpleAssociableChoice) {\n                        arr.choices[i][serial] = matchSet[serial].toArray();\n                    }\n                }\n            }\n            return arr;\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            var calculatePossiblePairs = function calculatePossiblePairs(matchInteraction) {\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(0));\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(1));\n\n                _.forEach(matchSet1, function(choice1) {\n                    _.forEach(matchSet2, function(choice2) {\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, { possiblePairs: calculatePossiblePairs(this) });\n        }\n    });\n\n    return MatchInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/MediaInteraction',['lodash', 'taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, ObjectInteraction, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    ObjectInteraction = ObjectInteraction && Object.prototype.hasOwnProperty.call(ObjectInteraction, 'default') ? ObjectInteraction['default'] : ObjectInteraction;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA ;\n     */\n\n    var MediaInteraction = ObjectInteraction.extend({\n        qtiClass: 'mediaInteraction',\n        render: function render() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    object: this.object.render({}, null, '', renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        getNormalMaximum: function getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return MediaInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/OrderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var OrderInteraction = BlockInteraction.extend({\n        qtiClass: 'orderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n\n    return OrderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',['taoQtiItem/qtiItem/core/interactions/GraphicInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (GraphicInteraction, maxScore) { 'use strict';\n\n    GraphicInteraction = GraphicInteraction && Object.prototype.hasOwnProperty.call(GraphicInteraction, 'default') ? GraphicInteraction['default'] : GraphicInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SelectPointInteraction = GraphicInteraction.extend({\n        qtiClass: 'selectPointInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.selectPointInteractionBased(this);\n        }\n    });\n\n    return SelectPointInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/SliderInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (BlockInteraction, maxScore) { 'use strict';\n\n    BlockInteraction = BlockInteraction && Object.prototype.hasOwnProperty.call(BlockInteraction, 'default') ? BlockInteraction['default'] : BlockInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var SliderInteraction = BlockInteraction.extend({\n        qtiClass: 'sliderInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.sliderInteractionBased(this);\n        }\n    });\n\n    return SliderInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction', 'taoQtiItem/qtiItem/helper/maxScore'], function (InlineInteraction, maxScore) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n    maxScore = maxScore && Object.prototype.hasOwnProperty.call(maxScore, 'default') ? maxScore['default'] : maxScore;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var TextEntryInteraction = InlineInteraction.extend({\n        qtiClass: 'textEntryInteraction',\n        getNormalMaximum: function getNormalMaximum() {\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n\n    return TextEntryInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/UploadInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction'], function (InlineInteraction) { 'use strict';\n\n    InlineInteraction = InlineInteraction && Object.prototype.hasOwnProperty.call(InlineInteraction, 'default') ? InlineInteraction['default'] : InlineInteraction;\n\n    var UploadInteraction = InlineInteraction.extend({\n        qtiClass: 'uploadInteraction',\n        getNormalMaximum() {\n            return 0;\n        }\n    });\n\n    return UploadInteraction;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'itemBody';\n        }\n    });\n\n    var ContainerItemBody = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerItemBody;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Item',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/ContainerItemBody', 'lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util'], function (Element, IdentifiedElement, Container, _, $, util) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    IdentifiedElement = IdentifiedElement && Object.prototype.hasOwnProperty.call(IdentifiedElement, 'default') ? IdentifiedElement['default'] : IdentifiedElement;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var Item = IdentifiedElement.extend({\n        qtiClass: 'assessmentItem',\n        init: function init(serial, attributes) {\n            this._super(serial, attributes);\n            this.rootElement = this;\n            this.stylesheets = {};\n            this.responses = {};\n            this.outcomes = {};\n            this.modalFeedbacks = {};\n            this.namespaces = {};\n            this.schemaLocations = {};\n            this.responseProcessing = null;\n            this.apipAccessibility = null;\n        },\n        getInteractions: function getInteractions() {\n            var interactions = [];\n            var elts = this.getComposingElements();\n            for (var serial in elts) {\n                if (Element.isA(elts[serial], 'interaction')) {\n                    interactions.push(elts[serial]);\n                }\n            }\n            return interactions;\n        },\n        addResponseDeclaration: function addResponseDeclaration(response) {\n            if (Element.isA(response, 'responseDeclaration')) {\n                response.setRootElement(this);\n                this.responses[response.getSerial()] = response;\n            } else {\n                throw 'is not a qti response declaration';\n            }\n            return this;\n        },\n        getResponseDeclaration: function getResponseDeclaration(identifier) {\n            for (var i in this.responses) {\n                if (this.responses[i].attr('identifier') === identifier) {\n                    return this.responses[i];\n                }\n            }\n            return null;\n        },\n        addOutcomeDeclaration: function addOutcomeDeclaration(outcome) {\n            if (Element.isA(outcome, 'outcomeDeclaration')) {\n                outcome.setRootElement(this);\n                this.outcomes[outcome.getSerial()] = outcome;\n            } else {\n                throw 'is not a qti outcome declaration';\n            }\n            return this;\n        },\n        getOutcomeDeclaration: function getOutcomeDeclaration(identifier) {\n            var found;\n            _.forEach(this.outcomes, function(outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        getOutcomes: function getOutcomes() {\n            return _.clone(this.outcomes);\n        },\n        removeOutcome: function removeOutcome(identifier) {\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if (outcome) {\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        addModalFeedback: function addModalFeedback(feedback) {\n            if (Element.isA(feedback, 'modalFeedback')) {\n                feedback.setRootElement(this);\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\n            } else {\n                throw 'is not a qti modal feedback';\n            }\n            return this;\n        },\n        getComposingElements: function getComposingElements() {\n            var elts = this._super(),\n                _this = this;\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection) {\n                for (var i in _this[elementCollection]) {\n                    var elt = _this[elementCollection][i];\n                    elts[i] = elt;\n                    elts = _.extend(elts, elt.getComposingElements());\n                }\n            });\n            if (this.responseProcessing instanceof Element) {\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\n            }\n            return elts;\n        },\n        find: function find(serial) {\n            var found = this._super(serial);\n\n            if (!found) {\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\n            }\n\n            return found;\n        },\n        getResponses: function getResponses() {\n            return _.clone(this.responses);\n        },\n        getRootElement: function getRootElement() {\n            return this;\n        },\n        addNamespace: function addNamespace(name, uri) {\n            this.namespaces[name] = uri;\n        },\n        setNamespaces: function setNamespaces(namespaces) {\n            this.namespaces = namespaces;\n        },\n        getNamespaces: function getNamespaces() {\n            return _.clone(this.namespaces);\n        },\n        setSchemaLocations: function setSchemaLocations(locations) {\n            this.schemaLocations = locations;\n        },\n        getSchemaLocations: function getSchemaLocations() {\n            return _.clone(this.schemaLocations);\n        },\n        setApipAccessibility: function setApipAccessibility(apip) {\n            this.apipAccessibility = apip || null;\n        },\n        getApipAccessibility: function getApipAccessibility() {\n            return this.apipAccessibility;\n        },\n        addStylesheet: function addStylesheet(stylesheet) {\n            if (Element.isA(stylesheet, 'stylesheet')) {\n                stylesheet.setRootElement(this);\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\n            } else {\n                throw 'is not a qti stylesheet declaration';\n            }\n            return this;\n        },\n        removeStyleSheet: function removeStyleSheet(stylesheet) {\n            delete this.stylesheets[stylesheet.getSerial()];\n            return this;\n        },\n        stylesheetExists: function stylesheetExists(href) {\n            var exists = false;\n            _.forEach(this.stylesheets, function(stylesheet) {\n                if (stylesheet.attr('href') === href) {\n                    exists = true;\n                    return false; //break each loop\n                }\n            });\n            return exists;\n        },\n        setResponseProcessing: function setResponseProcessing(rp) {\n            if (Element.isA(rp, 'responseProcessing')) {\n                rp.setRootElement(this);\n                this.responseProcessing = rp;\n            } else {\n                throw 'is not a response processing';\n            }\n            return this;\n        },\n        toArray: function toArray() {\n            var arr = this._super();\n            var toArray = function(elt) {\n                return elt.toArray();\n            };\n            arr.namespaces = this.namespaces;\n            arr.schemaLocations = this.schemaLocations;\n            arr.outcomes = _.map(this.outcomes, toArray);\n            arr.responses = _.map(this.responses, toArray);\n            arr.stylesheets = _.map(this.stylesheets, toArray);\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\n            arr.responseProcessing = this.responseProcessing.toArray();\n            return arr;\n        },\n        isEmpty: function isEmpty() {\n            var body = this.body().trim();\n\n            if (body) {\n                //hack to fix #2652\n                var $dummy = $('<div>').html(body),\n                    $children = $dummy.children();\n\n                if ($children.length === 1 && $children.hasClass('empty')) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        },\n\n        /**\n         * Clean up an item rendering.\n         * Ask the renderer to run destroy if exists.\n         */\n        clear: function clear() {\n            var renderer = this.getRenderer();\n            if (renderer) {\n                if (_.isFunction(renderer.destroy)) {\n                    renderer.destroy(this);\n                }\n            }\n        }\n    });\n\n    Container.augment(Item);\n\n    return Item;\n\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[],function () { 'use strict';\n\n    var qtiClasses = {\n        _container: 'taoQtiItem/qtiItem/core/Container',\n        assessmentItem: 'taoQtiItem/qtiItem/core/Item',\n        responseProcessing: 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        _simpleFeedbackRule: 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        stylesheet: 'taoQtiItem/qtiItem/core/Stylesheet',\n        math: 'taoQtiItem/qtiItem/core/Math',\n        figure: 'taoQtiItem/qtiItem/core/Figure',\n        img: 'taoQtiItem/qtiItem/core/Img',\n        figcaption: 'taoQtiItem/qtiItem/core/Figcaption',\n        object: 'taoQtiItem/qtiItem/core/Object',\n        outcomeDeclaration: 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        responseDeclaration: 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        rubricBlock: 'taoQtiItem/qtiItem/core/RubricBlock',\n        associableHotspot: 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        gap: 'taoQtiItem/qtiItem/core/choices/Gap',\n        gapImg: 'taoQtiItem/qtiItem/core/choices/GapImg',\n        gapText: 'taoQtiItem/qtiItem/core/choices/GapText',\n        hotspotChoice: 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        hottext: 'taoQtiItem/qtiItem/core/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        simpleAssociableChoice: 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        simpleChoice: 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        associateInteraction: 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        choiceInteraction: 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        endAttemptInteraction: 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        extendedTextInteraction: 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        gapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        graphicOrderInteraction: 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        hotspotInteraction: 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        hottextInteraction: 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        matchInteraction: 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        mediaInteraction: 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        orderInteraction: 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        prompt: 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        selectPointInteraction: 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        sliderInteraction: 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        textEntryInteraction: 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        uploadInteraction: 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        feedbackBlock: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        feedbackInline: 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        modalFeedback: 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        customInteraction: 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        infoControl: 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        include: 'taoQtiItem/qtiItem/core/Include',\n        table: 'taoQtiItem/qtiItem/core/Table',\n        printedVariable: 'taoQtiItem/qtiItem/core/PrintedVariable',\n        _tooltip: 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n\n    return qtiClasses;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xmlNsHandler',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA\n     */\n\n    /**\n     * XML namespace handling\n     */\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    const prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        let key;\n        for (key in namespaces) {\n            if (namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    var xmlNsHandler = {\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs: function stripNs(body) {\n            const pattern = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            const openRegEx = new RegExp('(<' + pattern + ')', 'gi');\n            const closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs: function restoreNs(xml, namespaces, ignoreMarkup = false) {\n            let xmlCopy = xml;\n            if (ignoreMarkup) {\n                // cut from xmlCopy <markup...>...</markup>\n                // because markup should be html without namespace qh5\n                xmlCopy = xml.replace(/((?=<markup)(.|\\n)*?(?:<\\/markup>)+)/gim, '');\n            }\n            const xmlRe = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            const tagRe = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            const xmlMatch = xmlCopy.match(xmlRe);\n            const imsXsd = 'http://www.imsglobal.org/xsd';\n            const html5Ns = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            const prefix = getPrefix(namespaces, html5Ns);\n            const prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            let i = xmlMatch ? xmlMatch.length : 0;\n\n            if (!xmlMatch) {\n                return xml;\n            }\n\n            while (i--) {\n                const tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(\n                    xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if (xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n\n    return xmlNsHandler;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/itemScore',[],function () { 'use strict';\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * Returns iteraction score response rule object\n     *\n     * @param {String} responseIdentifiers interactions reponse indentifiers\n     * @returns {Obeject}\n     */\n    var itemScore = (responseIdentifiers) => {\n        const outcomeExpressions = responseIdentifiers.map((outcomeIdentifier) => ({\n            qtiClass: 'variable',\n            attributes: {\n                identifier: `SCORE_${outcomeIdentifier}`,\n            },\n        }));\n\n        return {\n            qtiClass: 'setOutcomeValue',\n            attributes: {\n                identifier: 'SCORE',\n            },\n            expression: {\n                qtiClass: 'sum',\n                expressions: outcomeExpressions,\n            },\n        };\n    };\n\n    return itemScore;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/xmlNsHandler', 'core/moduleLoader', 'taoQtiItem/qtiItem/helper/response', 'taoQtiItem/qtiItem/helper/itemScore'], function (_, _class, qtiClasses, Element, xmlNsHandler, moduleLoader, responseHelper, itemScoreHelper) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    qtiClasses = qtiClasses && Object.prototype.hasOwnProperty.call(qtiClasses, 'default') ? qtiClasses['default'] : qtiClasses;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    xmlNsHandler = xmlNsHandler && Object.prototype.hasOwnProperty.call(xmlNsHandler, 'default') ? xmlNsHandler['default'] : xmlNsHandler;\n    moduleLoader = moduleLoader && Object.prototype.hasOwnProperty.call(moduleLoader, 'default') ? moduleLoader['default'] : moduleLoader;\n    responseHelper = responseHelper && Object.prototype.hasOwnProperty.call(responseHelper, 'default') ? responseHelper['default'] : responseHelper;\n    itemScoreHelper = itemScoreHelper && Object.prototype.hasOwnProperty.call(itemScoreHelper, 'default') ? itemScoreHelper['default'] : itemScoreHelper;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA ;\n     *\n     */\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    const loadPortableCustomElementProperties = (portableElement, rawProperties) => {\n        var properties = {};\n\n        _.forOwn(rawProperties, (value, key) => {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    };\n\n    const loadPortableCustomElementData = (portableElement, data) => {\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    };\n\n    var Loader = Class.extend({\n        init(item, classesLocation) {\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n            this.item = item || null; //starts either from scratch or with an existing item object\n\n            this.setClassesLocation(classesLocation || qtiClasses); //load default location for qti classes model\n        },\n        setClassesLocation(qtiClassesList) {\n            _.extend(this.classesLocation, qtiClassesList);\n\n            return this;\n        },\n        getRequiredClasses(data) {\n            let ret = [];\n\n            for (let i in data) {\n                if (i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement') {\n                    //although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                } else if (typeof data[i] === 'object' && i !== 'responseRules') {\n                    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n\n            return ret;\n        },\n        loadRequiredClasses(data, callback, reload) {\n            let requiredClass;\n            const requiredClasses = this.getRequiredClasses(data, reload);\n            const required = [];\n\n            for (let i in requiredClasses) {\n                requiredClass = requiredClasses[i];\n                if (this.classesLocation[requiredClass]) {\n                    required.push({\n                        module: this.classesLocation[requiredClass],\n                        category: 'qti'\n                    });\n                } else {\n                    throw new Error(`missing qti class location declaration : ${requiredClass}`);\n                }\n            }\n\n            moduleLoader([], () => true).addList(required).load().then(loadeded => {\n                loadeded.forEach(QtiClass => {\n                    this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(this, this.qti);\n            });\n        },\n        getLoadedClasses() {\n            return _.keys(this.qti);\n        },\n        loadItemData(data, callback) {\n            this.loadRequiredClasses(data, Qti => {\n                if (typeof data === 'object' && data.qtiClass === 'assessmentItem') {\n                    //unload an item from it's serial (in case of a reload)\n                    if (data.serial) {\n                        Element.unsetElement(data.serial);\n                    }\n\n                    this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    this.loadContainer(this.item.getBody(), data.body);\n\n                    for (let i in data.outcomes) {\n                        const outcome = this.buildOutcome(data.outcomes[i]);\n\n                        if (outcome) {\n                            this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n\n                    for (let i in data.feedbacks) {\n                        const feedback = this.buildElement(data.feedbacks[i]);\n\n                        if (feedback) {\n                            this.item.addModalFeedback(feedback);\n                        }\n                    }\n\n                    for (let i in data.stylesheets) {\n                        const stylesheet = this.buildElement(data.stylesheets[i]);\n\n                        if (stylesheet) {\n                            this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    let responseRules = data.responseProcessing && data.responseProcessing.responseRules\n                        ? [...data.responseProcessing.responseRules]\n                        : [];\n                    for (let i in data.responses) {\n                        const responseIdentifier = data.responses[i].identifier;\n                        const responseRuleItemIndex = responseRules.findIndex(({ responseIf: {\n                            expression: {\n                                expressions: [expression = {}] = [],\n                            } = {}\n                        } = {} }) => expression.attributes\n                        && expression.attributes.identifier === responseIdentifier\n                            || (\n                                expression.expressions\n                                && expression.expressions[0]\n                                && expression.expressions[0].attributes\n                                && expression.expressions[0].attributes.identifier === responseIdentifier\n                            )\n                        );\n                        const [responseRule] = responseRuleItemIndex !== -1\n                            ? responseRules.splice(responseRuleItemIndex, 1)\n                            : [];\n\n                        const response = this.buildResponse(\n                            data.responses[i],\n                            responseRule\n                        );\n\n                        if (response) {\n                            this.item.addResponseDeclaration(response);\n\n                            const feedbackRules = data.responses[i].feedbackRules;\n\n                            if (feedbackRules) {\n                                _.forIn(feedbackRules, (fbData, serial) => {\n                                    const {\n                                        attributes: {\n                                            identifier: feedbackOutcomeIdentifier,\n                                        } = {}\n                                    } = data.outcomes[fbData.feedbackOutcome] || {};\n                                    response.feedbackRules[serial] = this.buildSimpleFeedbackRule(fbData, response);\n\n                                    // remove feedback response rule from response rules array\n                                    const feedbackResponseRuleIndex = responseRules.findIndex(({\n                                        responseIf: {\n                                            responseRules: [setOutcomeResponseRule = {}] = [],\n                                        } = {}\n                                    }) => {\n                                        const { attributes = {}, qtiClass } = setOutcomeResponseRule;\n                                        const outcomeIdentifier = attributes.identifier;\n\n                                        return feedbackOutcomeIdentifier === outcomeIdentifier\n                                            && qtiClass === 'setOutcomeValue';\n                                    });\n\n                                    if (feedbackResponseRuleIndex !== -1) {\n                                        responseRules.splice(feedbackResponseRuleIndex, 1);\n                                    }\n                                });\n                            }\n                        }\n                    }\n\n                    const responseIdentifiers = Object.keys(this.item.responses || {})\n                        .map((responseKey) => this.item.responses[responseKey].attributes.identifier);\n\n                    if (data.responseProcessing) {\n                        const customResponseProcessing =\n                            (\n                                responseRules.length > 0\n                                && !(\n                                    responseRules.length === 1\n                                    && _.isEqual(\n                                        responseRules[0],\n                                        itemScoreHelper(\n                                            responseIdentifiers\n                                        )\n                                    )\n                                )\n                            )\n                            || (\n                                this.item.responses\n                                && Object.keys(this.item.responses)\n                                    .some((responseKey) => !this.item.responses[responseKey].template)\n                            );\n\n                        this.item.setResponseProcessing(this.buildResponseProcessing(data.responseProcessing, customResponseProcessing));\n                    }\n                    this.item.setNamespaces(data.namespaces);\n                    this.item.setSchemaLocations(data.schemaLocations);\n                    this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        loadAndBuildElement(data, callback) {\n            this.loadRequiredClasses(data, () => {\n                const element = this.buildElement(data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        loadElement(element, data, callback) {\n            this.loadRequiredClasses(data, () => {\n                this.loadElementData(element, data);\n\n                if (typeof callback === 'function') {\n                    callback.call(this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements(data, callback) {\n            if (!this.item) {\n                throw new Error('QtiLoader : cannot load elements in empty item');\n            }\n\n            this.loadRequiredClasses(data, () => {\n                const allElements = this.item.getComposingElements();\n\n                for (let i in data) {\n                    const elementData = data[i];\n\n                    if (elementData && elementData.qtiClass && elementData.serial) {\n                        //find and update element\n                        if (allElements[elementData.serial]) {\n                            this.loadElementData(allElements[elementData.serial], elementData);\n                        }\n                    }\n                }\n\n                if (typeof callback === 'function') {\n                    callback.call(this, this.item);\n                }\n            });\n        },\n        buildResponse(data, responseRule) {\n            const response = this.buildElement(data);\n\n            response.template = responseHelper.getTemplateUriFromName(\n                responseHelper.getTemplateNameFromResponseRules(data.identifier, responseRule)\n            )\n                || data.howMatch\n                || null;\n\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if (_.size(data.mapping)) {\n                response.mapEntries = data.mapping;\n            } else if (_.size(data.areaMapping)) {\n                response.mapEntries = data.areaMapping;\n            } else {\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule(data, response) {\n            const feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n            //            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            const comparedOutcome = feedbackRule.comparedOutcome;\n\n            if (feedbackRule.feedbackThen) {\n                feedbackRule.feedbackThen.data('relatedResponse', comparedOutcome);\n            }\n\n            if (feedbackRule.feedbackElse) {\n                feedbackRule.feedbackElse.data('relatedResponse', comparedOutcome);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome(data) {\n            const outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n\n            return outcome;\n        },\n        buildResponseProcessing(data, customResponseProcessing) {\n            const rp = this.buildElement(data);\n\n            if (customResponseProcessing) {\n                rp.xml = data.data;\n                rp.processingType = 'custom';\n            } else {\n                rp.processingType = 'templateDriven';\n            }\n\n            return rp;\n        },\n        loadContainer(bodyObject, bodyData) {\n            if (!Element.isA(bodyObject, '_container')) {\n                throw new Error('bodyObject must be a QTI Container');\n            }\n\n            if (!(bodyData && typeof bodyData.body === 'string' && typeof bodyData.elements === 'object')) {\n                throw new Error('wrong bodydata format');\n            }\n            //merge attributes when loading element data\n            const attributes = _.defaults(bodyData.attributes || {}, bodyObject.attributes || {});\n            bodyObject.setAttributes(attributes);\n\n            for (let serial in bodyData.elements) {\n                const eltData = bodyData.elements[serial];\n                const element = this.buildElement(eltData);\n\n                //check if class is loaded:\n                if (element) {\n                    bodyObject.setElement(element, bodyData.body);\n                }\n            }\n\n            bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n        },\n        buildElement(elementData) {\n            if (!(elementData && elementData.qtiClass && elementData.serial)) {\n                throw new Error('wrong elementData format');\n            }\n\n            const className = elementData.qtiClass;\n\n            if (!this.qti[className]) {\n                throw new Error(`the qti element class does not exist: ${className}`);\n            }\n\n            const elt = new this.qti[className](elementData.serial);\n            this.loadElementData(elt, elementData);\n\n            return elt;\n        },\n        loadElementData(element, data) {\n            //merge attributes when loading element data\n            const attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            let body = data.body;\n            if (!body && data.text && data.qtiClass === 'inlineChoice') {\n                body = { body: data.text, elements: {} };\n            }\n            if (element.body && body) {\n                if (element.bdy) {\n                    this.loadContainer(element.getBody(), body);\n                }\n            }\n\n            if (element.object && data.object) {\n                if (element.object) {\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if (Element.isA(element, 'interaction')) {\n                this.loadInteractionData(element, data);\n            } else if (Element.isA(element, 'choice')) {\n                this.loadChoiceData(element, data);\n            } else if (Element.isA(element, 'math')) {\n                this.loadMathData(element, data);\n            } else if (Element.isA(element, 'infoControl')) {\n                this.loadPicData(element, data);\n            } else if (Element.isA(element, '_tooltip')) {\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData(interaction, data) {\n            if (Element.isA(interaction, 'blockInteraction')) {\n                if (data.prompt) {\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if (Element.isA(interaction, 'customInteraction')) {\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices(interaction, data) {\n            // note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if (data.choices) {\n                if (Element.isA(interaction, 'matchInteraction')) {\n                    for (let set = 0; set < 2; set++) {\n                        if (!data.choices[set]) {\n                            throw new Error(`missing match set #${set}`);\n                        }\n\n                        const matchSet = data.choices[set];\n\n                        for (let serial in matchSet) {\n                            const choice = this.buildElement(matchSet[serial]);\n\n                            if (choice) {\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                } else {\n                    for (let serial in data.choices) {\n                        const choice = this.buildElement(data.choices[serial]);\n\n                        if (choice) {\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if (Element.isA(interaction, 'graphicGapMatchInteraction')) {\n                    if (data.gapImgs) {\n                        for (let serial in data.gapImgs) {\n                            const gapImg = this.buildElement(data.gapImgs[serial]);\n\n                            if (gapImg) {\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loadChoiceData(choice, data) {\n            if (Element.isA(choice, 'textVariableChoice')) {\n                choice.val(data.text);\n            } else if (Element.isA(choice, 'gapImg')) ; else if (Element.isA(choice, 'gapText')) {\n                // this ensure compatibility of Qti 2.1 items\n                if (!choice.body()) {\n                    choice.body(data.text);\n                }\n            } else if (Element.isA(choice, 'containerChoice')) ;\n        },\n        loadObjectData(object, data) {\n            object.setAttributes(data.attributes);\n\n            //@todo: manage object like a container\n            if (data._alt) {\n                if (data._alt.qtiClass === 'object') {\n                    object._alt = Loader.buildElement(data._alt);\n                } else {\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData(math, data) {\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, (value, encoding) => {\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData(tooltip, data) {\n            tooltip.content(data.content);\n        },\n        loadPciData(pci, data) {\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData(pic, data) {\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    return Loader;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Math',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/helper/rendererConfig', 'taoQtiItem/qtiItem/mixin/NamespacedElement'], function ($, _, Element, rendererConfig, NamespacedElement) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n\n    var Math;\n\n    /**\n     * Remove the closing MathML tags and remove useless line breaks before and after it\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripMathTags(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : '') + 'math[^>]*>', 'g');\n        return mathML\n            .replace(regex, '')\n            .replace(/^\\s*[\\r\\n]/gm, '') //remove first blank line\n            .replace(/\\s*[\\r\\n]$/gm, ''); //last blank line\n    }\n\n    /**\n     * Remove mathML ns name prefix from the mathML\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripNamespace(mathML, nsName) {\n        var regex = new RegExp('<(/)?' + (nsName ? nsName + ':' : ''), 'g');\n        return mathML.replace(regex, '<$1');\n    }\n\n    /**\n     * Check if the mathML string is to be considered empty\n     *\n     * @param {String} mathStr\n     * @returns {Boolean}\n     */\n    function _isEmptyMathML(mathStr) {\n        var $math,\n            mathText,\n            hasContent = false;\n\n        if (mathStr && mathStr.trim()) {\n            $math = $($.parseHTML(mathStr));\n            mathText = $math.text();\n            hasContent = _.isString(mathText) && !!mathText.trim();\n        }\n\n        return !hasContent;\n    }\n\n    Math = Element.extend({\n        qtiClass: 'math',\n        defaultNsName: 'm',\n        defaultNsUri: 'http://www.w3.org/1998/Math/MathML',\n        nsUriFragment: 'MathML',\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n            this.ns = null;\n            this.mathML = '';\n            this.annotations = {};\n        },\n        setAnnotation: function(encoding, value) {\n            this.annotations[encoding] = _.unescape(value);\n        },\n        getAnnotation: function(encoding) {\n            return this.annotations[encoding];\n        },\n        removeAnnotation: function(encoding) {\n            delete this.annotations[encoding];\n        },\n        setMathML: function(mathML) {\n            var ns = this.getNamespace(),\n                nsName = ns.name && ns.uri ? ns.name : '';\n\n            mathML = _stripMathTags(mathML, nsName);\n            if (ns) {\n                mathML = _stripNamespace(mathML, nsName);\n            }\n            this.mathML = mathML;\n        },\n        getMathML: function() {\n            return this.mathML;\n        },\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                tag = this.qtiClass,\n                raw = this.mathML,\n                body = raw,\n                ns = this.getNamespace(),\n                annotations = '',\n                encoding,\n                defaultData;\n\n            for (encoding in this.annotations) {\n                annotations +=\n                    '<annotation encoding=\"' + encoding + '\">' + _.escape(this.annotations[encoding]) + '</annotation>';\n            }\n\n            if (annotations) {\n                if (raw.indexOf('</semantics>') > 0) {\n                    raw = raw.replace('</semantics>', annotations + '</semantics>');\n                } else {\n                    raw = '<semantics>' + raw + annotations + '</semantics>';\n                }\n            }\n\n            if (ns && ns.name) {\n                body = raw.replace(/<(\\/)?([^!<])/g, '<$1' + ns.name + ':$2');\n                tag = ns.name + ':' + tag;\n            }\n\n            body = body.replace(/<!--.*?-->/g, ''); // remove Mathjax-generated comments\n            body = body.replace(/&lt;!--.*?--&gt;/g, ''); // fix for broken items because of Mathjax comments\n\n            defaultData = {\n                block: this.attr('display') === 'block' ? true : false,\n                body: body,\n                raw: raw,\n                tag: tag,\n                ns: ns\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty: function() {\n            return _isEmptyMathML(this.mathML) && (!this.annotations.latex || !this.annotations.latex.trim());\n        }\n    });\n\n    NamespacedElement.augment(Math);\n\n    var Math$1 = Math;\n\n    return Math$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PortableInfoControl',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/CustomElement', 'taoQtiItem/qtiItem/mixin/NamespacedElement', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, CustomElement, NamespacedElement, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    CustomElement = CustomElement && Object.prototype.hasOwnProperty.call(CustomElement, 'default') ? CustomElement['default'] : CustomElement;\n    NamespacedElement = NamespacedElement && Object.prototype.hasOwnProperty.call(NamespacedElement, 'default') ? NamespacedElement['default'] : NamespacedElement;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var PortableInfoControl = Element.extend({\n        qtiClass: 'infoControl',\n        defaultNsName: 'pic',\n        defaultNsUri: 'http://www.imsglobal.org/xsd/portableInfoControl',\n        nsUriFragment: 'portableInfoControl',\n        defaultMarkupNsName: 'html5',\n        defaultMarkupNsUri: 'html5',\n\n        init: function(serial, attributes) {\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            //stack of callback waiting to be ready\n            this.readyStack = [];\n        },\n\n        is: function(qtiClass) {\n            return qtiClass === 'infoControl' || this._super(qtiClass);\n        },\n\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier: this.typeIdentifier,\n                    markup: this.markup,\n                    properties: this.properties,\n                    libraries: this.libraries,\n                    entryPoint: this.entryPoint,\n                    ns: {\n                        pic: this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n\n        /**\n         * Retrieve the state of the infoControl\n         * The call will be delegated to the infoControl's renderer.\n         *\n         * @returns {Object} the state\n         */\n        getState: function getState() {\n            var ret = null;\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                ret = renderer.getState(this);\n            }\n            return ret;\n        },\n\n        /**\n         * Set the state of the infoControl\n         * The state will be set to the infoControl's renderer.\n         *\n         * @param {Object} state - the infoControl's state\n         */\n        setState: function setState(state) {\n            var renderer = this.getRenderer();\n            if (renderer && _.isFunction(renderer.getState)) {\n                renderer.setState(this, state);\n            }\n        },\n\n        toArray: function() {\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n\n        /**\n         * Execute a callback when the PIC is ready (ie. registered, loaded and rendererd)\n         * @param {Function} cb - the function to execute once ready\n         */\n        onReady: function onReady(cb) {\n            this.readyStack.push(cb);\n\n            //if we are ready this will pop the stack\n            if (this.data('_ready') && this.data('pic')) {\n                this.triggerReady();\n            }\n        },\n\n        /**\n         * Define the PIC as ready and consume the waiting functions in the stack.\n         */\n        triggerReady: function triggerReady() {\n            var self = this;\n            _.forEach(this.readyStack, function(cb) {\n                cb.call(self, self.data('pic'));\n            });\n\n            //empty the stack\n            this.readyStack = [];\n\n            //mark the infoControl as ready\n            this.data('_ready', true);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(PortableInfoControl);\n    NamespacedElement.augment(PortableInfoControl);\n\n    return PortableInfoControl;\n\n});\n\n","define('taoQtiItem/qtiItem/core/PrintedVariable',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var PrintedVariable = Element.extend({\n        qtiClass: 'printedVariable'\n    });\n\n    return PrintedVariable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',['taoQtiItem/qtiItem/core/Element', 'lodash'], function (Element, _) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var SimpleFeedbackRule = Element.extend({\n        qtiClass: '_simpleFeedbackRule',\n        serial: '',\n        rootElement: null,\n        init: function (serial, feedbackOutcome, feedbackThen, feedbackElse) {\n            this._super(serial, {});\n\n            this.condition = 'correct';\n            this.comparedOutcome = null;\n            this.comparedValue = 0.0;\n\n            this.feedbackOutcome = feedbackOutcome;\n            if (Element.isA(feedbackThen, 'feedback')) {\n                this.feedbackThen = feedbackThen;\n            } else {\n                this.feedbackThen = null;\n            }\n            if (Element.isA(feedbackElse, 'feedback')) {\n                this.feedbackElse = feedbackThen;\n            } else {\n                this.feedbackElse = null;\n            }\n        },\n        setCondition: function (comparedOutcome, condition, comparedValue) {\n            var _comparedValues = [];\n            if (Element.isA(comparedOutcome, 'variableDeclaration')) {\n                switch (condition) {\n                    case 'correct':\n                    case 'incorrect':\n                        if (Element.isA(comparedOutcome, 'responseDeclaration')) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                        } else {\n                            throw 'invalid outcome type: must be a responseDeclaration';\n                        }\n                        break;\n                    case 'lt':\n                    case 'lte':\n                    case 'equal':\n                    case 'gte':\n                    case 'gt':\n                        if (comparedValue !== null && comparedValue !== undefined) {\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            this.comparedValue = comparedValue;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    case 'choices':\n                        if (\n                            Element.isA(comparedOutcome, 'responseDeclaration') &&\n                            comparedValue !== null &&\n                            _.isArray(comparedValue)\n                        ) {\n                            var choices = _.values(comparedOutcome.getInteraction().getChoices());\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            _.forEach(comparedValue, function (v) {\n                                if (v instanceof Element) {\n                                    _comparedValues.push(v);\n                                } else if (_.isString(v)) {\n                                    _.forEach(choices, function (c) {\n                                        if (c.attr('identifier') === v) {\n                                            _comparedValues.push(c);\n                                            return false; //break\n                                        }\n                                    });\n                                }\n                            });\n\n                            this.comparedValue = _comparedValues;\n                        } else {\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    default:\n                        throw 'unknown condition type : '.condition;\n                }\n            } else {\n                throw 'invalid outcome type: must be a variableDeclaration';\n            }\n\n            return this;\n        },\n        setFeedbackElse: function (feedback) {\n            if (Element.isA(feedback, 'feedback')) {\n                this.feedbackElse = feedback;\n            }\n        },\n        toArray: function () {\n            var val = this.comparedValue;\n            var _toString = function (v) {\n                if (val instanceof Element) {\n                    return val.attr('identifier');\n                } else {\n                    return val + '';\n                }\n            };\n            if (_.isArray(val)) {\n                val = _.map(val, _toString);\n            } else {\n                val = _toString();\n            }\n            return {\n                condition: this.condition,\n                comparedOutcome: this.comparedOutcome.id(),\n                comparedValue: val\n            };\n        }\n    });\n\n    return SimpleFeedbackRule;\n\n});\n\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element'], function (Element) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    var ResponseProcessing = Element.extend({\n        qtiClass: 'responseProcessing',\n        processingType: '',\n        xml: '',\n        toArray: function() {\n            var arr = this._super();\n            arr.processingType = this.processingType;\n            arr.xml = this.xml;\n            return arr;\n        }\n    });\n\n    return ResponseProcessing;\n\n});\n\n","define('taoQtiItem/qtiItem/core/RubricBlock',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/Container'], function (Element, Container) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    var RubricBlock = Element.extend({\n        qtiClass: 'rubricBlock',\n        isEmpty: function isEmpty() {\n            return !(this.bdy && this.bdy.body());\n        }\n    });\n\n    Container.augment(RubricBlock);\n\n    return RubricBlock;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (Element, _, rendererConfig) { 'use strict';\n\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    var Stylesheet = Element.extend({\n        qtiClass: 'stylesheet',\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = { href: renderer.resolveUrl(this.attr('href')) };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return Stylesheet;\n\n});\n\n","define('taoQtiItem/qtiItem/mixin/ContainerTable',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function (Mixin, Container, _) { 'use strict';\n\n    Mixin = Mixin && Object.prototype.hasOwnProperty.call(Mixin, 'default') ? Mixin['default'] : Mixin;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer: function(body) {\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'table';\n        }\n    });\n\n    var ContainerTable = {\n        augment: function(targetClass) {\n            Mixin.augment(targetClass, methods);\n        },\n        methods: methods\n    };\n\n    return ContainerTable;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Table',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerTable'], function (_, Element, Container) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    Container = Container && Object.prototype.hasOwnProperty.call(Container, 'default') ? Container['default'] : Container;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Table = Element.extend({\n        qtiClass: 'table'\n    });\n\n    Container.augment(Table);\n\n    Table = Table.extend({\n        // on table creation, we might get a body wrapped in a table element, that we need to get rid of\n        body: function(newBody) {\n            if (_.isString(newBody)) {\n                newBody = newBody.replace('<table>', '').replace('</table>', '');\n            }\n            return this._super(newBody);\n        }\n    });\n\n    var Table$1 = Table;\n\n    return Table$1;\n\n});\n\n","define('taoQtiItem/qtiItem/core/Tooltip',['lodash', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline', 'taoQtiItem/qtiItem/helper/rendererConfig'], function (_, Element, ContainerInline, rendererConfig) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ContainerInline = ContainerInline && Object.prototype.hasOwnProperty.call(ContainerInline, 'default') ? ContainerInline['default'] : ContainerInline;\n    rendererConfig = rendererConfig && Object.prototype.hasOwnProperty.call(rendererConfig, 'default') ? rendererConfig['default'] : rendererConfig;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n     */\n\n    var Tooltip = Element.extend({\n        qtiClass: '_tooltip',\n\n        init: function(serial, attributes, newContent) {\n            this._super(serial, attributes);\n            this.content(newContent || '');\n        },\n\n        /**\n         * Set/get the content of the tooltip\n         * @param {String} newContent - as HTML\n         * @returns {Element|String}\n         */\n        content: function content(newContent) {\n            if (typeof newContent === 'undefined') {\n                return this.tooltipContent;\n            } else {\n                if (typeof newContent === 'string') {\n                    this.tooltipContent = newContent;\n                } else {\n                    throw new Error('newContent must be a string');\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Adds the tooltip content to the template data\n         */\n        render: function() {\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    content: this.tooltipContent\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    ContainerInline.augment(Tooltip);\n\n    return Tooltip;\n\n});\n\n","define('taoQtiItem/qtiItem/core/variables/ResponseDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration', 'lodash'], function (VariableDeclaration, _) { 'use strict';\n\n    VariableDeclaration = VariableDeclaration && Object.prototype.hasOwnProperty.call(VariableDeclaration, 'default') ? VariableDeclaration['default'] : VariableDeclaration;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n     *\n     */\n\n    var ResponseDeclaration = VariableDeclaration.extend({\n        qtiClass: 'responseDeclaration',\n        init: function (serial, attributes) {\n            this._super(serial, attributes);\n\n            //MATCH_CORRECT, MAP_RESPONSE, MAP_RESPONSE_POINT\n            this.template = ''; //previously called 'howMatch'\n\n            //when template equals ont of the \"map\" one (MAP_RESPONSE, MAP_RESPONSE_POINT)\n            this.mappingAttributes = {};\n            this.mapEntries = {};\n\n            //correct response [0..*]\n            this.correctResponse = null;\n\n            //tao internal usage:\n            this.feedbackRules = {};\n        },\n        getFeedbackRules: function () {\n            return _.values(this.feedbackRules);\n        },\n        getComposingElements: function () {\n            var elts = this._super();\n            elts = _.extend(elts, this.feedbackRules);\n            return elts;\n        },\n        toArray: function () {\n            var arr = this._super();\n            arr.howMatch = this.template;\n            arr.correctResponses = this.correctResponse;\n            arr.mapping = this.mapEntries;\n            arr.mappingAttributes = this.mappingAttributes;\n            arr.feedbackRules = _.map(this.feedbackRules, function (rule) {\n                return rule.toArray();\n            });\n            return arr;\n        },\n        getInteraction: function () {\n            var interaction = null;\n            var responseId = this.id();\n            var item = this.getRootElement();\n            var interactions = item.getInteractions();\n            _.forEach(interactions, function (i) {\n                if (i.attributes.responseIdentifier === responseId) {\n                    interaction = i;\n                    return false; //break\n                }\n            });\n            return interaction;\n        },\n        isCardinality: function (cardinalities) {\n            var comparison;\n            if (_.isArray(cardinalities)) {\n                comparison = cardinalities;\n            } else if (_.isString(cardinalities)) {\n                cardinalities = [cardinalities];\n            } else {\n                return false;\n            }\n            return _.indexOf(comparison, this.attr('cardinality')) >= 0;\n        }\n    });\n\n    return ResponseDeclaration;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/EventMgr',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    //@todo : complete with namespace managements\n    function EventMgr() {\n        var events = {};\n\n        this.get = function (event) {\n            if (event && events[event]) {\n                return _.clone(events[event]);\n            } else {\n                return [];\n            }\n        };\n\n        this.on = function (event, callback) {\n            var tokens = event.split('.');\n            if (tokens[0]) {\n                var name = tokens.shift();\n                events[name] = events[name] || [];\n                events[name].push({\n                    ns: tokens,\n                    callback: callback\n                });\n            }\n        };\n\n        this.off = function (event) {\n            if (event && events[event]) {\n                events[event] = [];\n            }\n        };\n\n        this.trigger = function (event, data) {\n            if (events[event]) {\n                _.forEach(events[event], function (e) {\n                    //@todo check ns:\n                    e.callback.apply(\n                        {\n                            type: event,\n                            ns: []\n                        },\n                        data\n                    );\n                });\n            }\n        };\n    }\n\n    return EventMgr;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/pci',['lodash'], function (_) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n\n    var pci = {\n        getRawValues: function (pciVar) {\n            if (_.isPlainObject(pciVar)) {\n                if (typeof pciVar.base !== 'undefined') {\n                    return _.values(pciVar.base);\n                } else if (pciVar.list) {\n                    return _.values(pciVar.list);\n                }\n            }\n            throw new Error('unsupported type ');\n        }\n    };\n\n    return pci;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/modalFeedback',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/pci', 'taoQtiItem/qtiItem/helper/container'], function ($, _, pci, containerHelper) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    pci = pci && Object.prototype.hasOwnProperty.call(pci, 'default') ? pci['default'] : pci;\n    containerHelper = containerHelper && Object.prototype.hasOwnProperty.call(containerHelper, 'default') ? containerHelper['default'] : containerHelper;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\n     *\n     * @author Alexander Zagovorichev <zagovorichev@1pt.com>\n     */\n\n    /**\n     * Provide the feedbackMessage signature to check if the feedback contents should be considered equals\n     *\n     * @param {type} feedback\n     * @returns {String}\n     */\n    var getFeedbackMessageSignature = function getFeedbackMessageSignature(feedback) {\n        return ('' + feedback.body() + feedback.attr('title'))\n            .toLowerCase()\n            .trim()\n            .replace(/x-tao-[a-zA-Z0-9\\-._\\s]*/g, '');\n    };\n\n    /**\n     * Extract the display information for an interaction-related feedback\n     *\n     * @private\n     * @param {Object} interaction - a qti interaction object\n     * @returns {Object} Object containing useful display information\n     */\n    var extractDisplayInfo = function extractDisplayInfo(interaction) {\n        var $interactionContainer = interaction.getContainer();\n        var responseIdentifier = interaction.attr('responseIdentifier');\n        var messageGroupId, $displayContainer;\n\n        if (interaction.is('inlineInteraction')) {\n            $displayContainer = $interactionContainer.closest('[class*=\" col-\"], [class^=\"col-\"]');\n            messageGroupId = $displayContainer.attr('data-messageGroupId');\n            if (!messageGroupId) {\n                //generate a messageFromId\n                messageGroupId = _.uniqueId('inline_message_group_');\n                $displayContainer.attr('data-messageGroupId', messageGroupId);\n            }\n        } else {\n            messageGroupId = responseIdentifier;\n            $displayContainer = $interactionContainer;\n        }\n\n        return {\n            responseIdentifier: responseIdentifier,\n            interactionContainer: $interactionContainer,\n            displayContainer: $displayContainer,\n            messageGroupId: messageGroupId,\n            order: -1\n        };\n    };\n\n    /**\n     * Get interaction display information sorted in the order of appearance within the item\n     *\n     * @param {Object} item\n     * @returns {Array}\n     */\n    var getInteractionsDisplayInfo = function getInteractionsDisplayInfo(item) {\n        var interactionsDisplayInfo = [];\n        var $itemContainer = item.getContainer();\n        var interactionOrder = 0;\n\n        //extract all interaction related information needed to display their\n        _.forEach(item.getComposingElements(), function (element) {\n            if (element.is('interaction')) {\n                interactionsDisplayInfo.push(extractDisplayInfo(element));\n            }\n        });\n\n        //sort interactionsDisplayInfo on the item level\n        $itemContainer.find('.qti-interaction').each(function () {\n            var self = this;\n            _.forEach(interactionsDisplayInfo, function (_interactionInfo) {\n                if (_interactionInfo.interactionContainer[0] === self) {\n                    _interactionInfo.order = interactionOrder;\n                    return false;\n                }\n            });\n            interactionOrder++;\n        });\n        interactionsDisplayInfo = _.sortBy(interactionsDisplayInfo, 'order');\n\n        return interactionsDisplayInfo;\n    };\n\n    /**\n     * Returns feedbacks according to the given itemSession variables\n     *\n     * @param {Object} item - the standard tao qti item object\n     * @param {Object} itemSession - session information containing the list of feedbacks to display\n     * @returns {Array} renderingFeedbacks - feedbacks to be displayed\n     */\n    var getFeedbacks = function getFeedbacks(item, itemSession) {\n        var messages = {};\n        var $itemContainer = item.getContainer();\n        var $itemBody = $('.qti-itemBody', $itemContainer);\n        var interactionsDisplayInfo = getInteractionsDisplayInfo(item);\n        var renderingQueue = [];\n\n        _.forEach(item.modalFeedbacks, function (feedback) {\n            var feedbackIds, message, $container, comparedOutcome, _currentMessageGroupId, interactionInfo;\n            var outcomeIdentifier = feedback.attr('outcomeIdentifier');\n            var order = -1;\n\n            //verify if the feedback should be displayed\n            if (itemSession[outcomeIdentifier]) {\n                //is the feedback in the list of feedbacks to be displayed ?\n                feedbackIds = pci.getRawValues(itemSession[outcomeIdentifier]);\n                if (!feedbackIds.includes(feedback.id())) {\n                    return true; //continue with next feedback\n                }\n\n                //which group of feedbacks (interaction related) the feedback belongs to ?\n                message = getFeedbackMessageSignature(feedback);\n                comparedOutcome = containerHelper.getEncodedData(feedback, 'relatedOutcome');\n                interactionInfo = _.find(interactionsDisplayInfo, { responseIdentifier: comparedOutcome });\n                if (comparedOutcome && interactionInfo) {\n                    $container = interactionInfo.displayContainer;\n                    _currentMessageGroupId = interactionInfo.messageGroupId;\n                    order = interactionInfo.order;\n                } else {\n                    $container = $itemBody;\n                    _currentMessageGroupId = '__item__';\n                }\n                //is this message already displayed ?\n                if (!messages[_currentMessageGroupId]) {\n                    messages[_currentMessageGroupId] = [];\n                }\n\n                if (messages[_currentMessageGroupId] && messages[_currentMessageGroupId].includes(message)) {\n                    return true; //continue\n                } else {\n                    messages[_currentMessageGroupId].push(message);\n                }\n\n                //ok, display feedback\n                renderingQueue.push({\n                    feedback: feedback,\n                    $container: $container,\n                    order: order\n                });\n            }\n        });\n\n        renderingQueue = _.sortBy(renderingQueue, 'order');\n\n        return renderingQueue;\n    };\n\n    /**\n     * Provide helper function for collecting feedbacks\n     */\n    var modalFeedback = {\n        getFeedbacks: getFeedbacks\n    };\n\n    return modalFeedback;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/Parser',['jquery'], function ($) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n    /**\n     * Experimental parser\n     *\n     */\n\n    var Parser = function() {\n        var _$xml = null;\n        this.loadXML = function(xml) {\n            _$xml = $.parseXML(xml);\n        };\n        this.getDOM = function() {\n            return _$xml;\n        };\n    };\n\n    return Parser;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/simpleParser',['lodash', 'jquery', 'taoQtiItem/qtiItem/helper/util', 'taoQtiItem/qtiItem/core/Loader'], function (_, $, util, Loader) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    util = util && Object.prototype.hasOwnProperty.call(util, 'default') ? util['default'] : util;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2021 (original work) Open Assessment Technologies SA\n     **/\n\n    const _parsableElements = ['img', 'object', 'printedVariable'];\n    const _qtiClassNames = {\n        rubricblock: 'rubricBlock',\n        printedvariable: 'printedVariable'\n    };\n    const _qtiAttributesNames = {\n        powerform: 'powerForm',\n        mappingindicator: 'mappingIndicator'\n    };\n\n    const _defaultOptions = {\n        ns: {\n            math: '',\n            include: 'xi',\n            table: 'table',\n            image: 'img',\n            object: '',\n            figure: 'qh5',\n            figcaption: 'qh5'\n        },\n        loaded: null,\n        model: null\n    };\n\n    let parser;\n\n    function _getElementSelector(qtiClass, ns) {\n        return ns ? ns + '\\\\:' + qtiClass + ',' + qtiClass : qtiClass;\n    }\n\n    function getQtiClassFromXmlDom($node) {\n        let qtiClass = $node.prop('tagName').toLowerCase();\n\n        //remove ns :\n        qtiClass = qtiClass.replace(/.*:/, '');\n\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\n    }\n\n    function buildElement($elt) {\n        const qtiClass = getQtiClassFromXmlDom($elt);\n\n        const elt = {\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {}\n        };\n\n        $.each($elt[0].attributes, function () {\n            let attrName;\n            if (this.specified) {\n                attrName = _qtiAttributesNames[this.name] || this.name;\n                elt.attributes[attrName] = this.value;\n            }\n        });\n\n        return elt;\n    }\n\n    function buildMath($elt, options) {\n        const elt = buildElement($elt);\n\n        //set annotations:\n        elt.annotations = {};\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function () {\n            const $annotation = $(this);\n            const encoding = $annotation.attr('encoding');\n            if (encoding) {\n                elt.annotations[encoding] = _.unescape($annotation.html());\n            }\n            $annotation.remove();\n        });\n\n        //set math xml\n        elt.mathML = $elt.html();\n\n        //set ns:\n        elt.ns = {\n            name: 'm',\n            uri: 'http://www.w3.org/1998/Math/MathML' //@todo : remove hardcoding there\n        };\n\n        return elt;\n    }\n\n    function buildTooltip(targetHtml, contentId, contentHtml) {\n        const qtiClass = '_tooltip';\n\n        return {\n            elements: {},\n            qtiClass: qtiClass,\n            serial: util.buildSerial(qtiClass + '_'),\n            attributes: {\n                'aria-describedby': contentId\n            },\n            content: contentHtml,\n            body: {\n                elements: {},\n                serial: util.buildSerial('container'),\n                body: targetHtml\n            }\n        };\n    }\n\n    function parseTable($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedTable = parseContainer($elt, options);\n        elt.body.body = $parsedTable.body;\n        elt.body.elements = $parsedTable.elements;\n        return elt;\n    }\n\n    function parseFigure($elt, elt, options) {\n        elt.body = {\n            body: '',\n            elements: {}\n        };\n\n        const $parsedFigure = parseContainer($elt, options);\n        elt.body.body = $parsedFigure.body;\n        elt.body.elements = $parsedFigure.elements;\n        const $figcaption = $elt.find(_getElementSelector('figcaption', options.ns.figcaption));\n        if ($figcaption.length) {\n            const element = buildElement($figcaption);\n            element.body = {\n                body: $figcaption.html(),\n                elements: {}\n            };\n            elt.body.elements[element.serial] = element;\n            $figcaption.replaceWith(_placeholder(element));\n        }\n        elt.body.body = $elt.html();\n        return elt;\n    }\n\n    function parseContainer($container, options) {\n        const ret = {\n            serial: util.buildSerial('_container_'),\n            body: '',\n            elements: {}\n        };\n        // table should be in top as it needs to be parsed first\n        $container.find('table').each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseTable($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        // figure should be in top as it needs to be parsed first\n        $container.find(_getElementSelector('figure', options.ns.figure)).each(function () {\n            const $qtiElement = $(this);\n            let element = buildElement($qtiElement);\n\n            element = parseFigure($qtiElement, element, options);\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('math', options.ns.math)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildMath($qtiElement, options);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find(_getElementSelector('include', options.ns.include)).each(function () {\n            const $qtiElement = $(this);\n            const element = buildElement($qtiElement);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n        });\n\n        $container.find('[data-role=\"tooltip-target\"]').each(function () {\n            let element,\n                $target = $(this),\n                $content,\n                contentId = $target.attr('aria-describedBy'),\n                contentHtml;\n\n            if (contentId) {\n                $content = $container.find('#' + contentId);\n                if ($content.length) {\n                    contentHtml = $content.html();\n\n                    element = buildTooltip($target.html(), contentId, contentHtml);\n\n                    ret.elements[element.serial] = element;\n                    $target.replaceWith(_placeholder(element));\n                    $content.remove();\n                }\n            }\n        });\n\n        _.forEach(_parsableElements, function (qtiClass) {\n            $container.find(qtiClass).each(function () {\n                const $qtiElement = $(this);\n                const element = buildElement($qtiElement);\n                ret.elements[element.serial] = element;\n                $qtiElement.replaceWith(_placeholder(element));\n            });\n        });\n\n        ret.body = $container.html();\n        return ret;\n    }\n\n    function _placeholder(element) {\n        return '{{' + element.serial + '}}';\n    }\n\n    parser = {\n        parse: function (xmlStr, opts) {\n            const options = _.merge(_.clone(_defaultOptions), opts || {});\n\n            const $container = $(xmlStr);\n\n            const element = buildElement($container);\n\n            const data = parseContainer($container, options);\n\n            let loader;\n\n            if (!_.isUndefined(data.body)) {\n                element.body = data;\n            }\n\n            if (_.isFunction(options.loaded) && options.model) {\n                loader = new Loader().setClassesLocation(options.model);\n                loader.loadAndBuildElement(element, options.loaded);\n            }\n\n            return element;\n        }\n    };\n\n    var parser$1 = parser;\n\n    return parser$1;\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xincludeLoader',['jquery', 'lodash', 'taoQtiItem/qtiItem/helper/simpleParser', 'taoQtiItem/qtiItem/core/Loader'], function ($, _, simpleParser, Loader) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    simpleParser = simpleParser && Object.prototype.hasOwnProperty.call(simpleParser, 'default') ? simpleParser['default'] : simpleParser;\n    Loader = Loader && Object.prototype.hasOwnProperty.call(Loader, 'default') ? Loader['default'] : Loader;\n\n    function load(xinclude, baseUrl, callback) {\n        const href = xinclude.attr('href');\n        if (href && baseUrl) {\n            const fileUrl = `text!${baseUrl}${href}`;\n            // reset the previous definition of the XML, to receive updated passage\n            require.undef(fileUrl);\n            // require xml\n            require([fileUrl], function (stimulusXml) {\n                const $wrapper = $.parseXML(stimulusXml);\n                const $sampleXMLrootNode = $wrapper.children;\n                const $stimulus = $('<include>').append($sampleXMLrootNode);\n                const mathNs = 'm'; //for 'http://www.w3.org/1998/Math/MathML'\n                const data = simpleParser.parse($stimulus, {\n                    ns: {\n                        math: mathNs\n                    }\n                });\n\n                new Loader().loadElement(xinclude, data, function () {\n                    if (_.isFunction(callback)) {\n                        const loadedClasses = this.getLoadedClasses();\n                        loadedClasses.push('_container'); //the _container class is always required\n                        callback(xinclude, data, loadedClasses);\n                    }\n                });\n            }, function () {\n                //in case the file does not exist\n                callback(xinclude, false, []);\n            });\n        }\n    }\n\n    var xincludeLoader = {\n        load\n    };\n\n    return xincludeLoader;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/picManager',['jquery', 'lodash', 'taoQtiItem/qtiItem/core/Element'], function ($, _, Element) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n     */\n\n    /**\n     * The template of a PicManager instance\n     * @type {picManager}\n     */\n    var picManager = {\n        /**\n         * Creates a manager for a particular PIC\n         *\n         * @param {Object} pic\n         * @param {QtiItem} item\n         * @returns {picManager}\n         */\n        init: function init(pic, item) {\n            if (Element.isA(pic, 'infoControl')) {\n                this._pic = pic;\n            }\n\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the managed PIC\n         *\n         * @returns {Object} the descriptor of the PIC\n         */\n        getPic: function getPic() {\n            return this._pic;\n        },\n\n        /**\n         * Gets the related Item\n         *\n         * @returns {QtiItem} the Item\n         */\n        getItem: function getItem() {\n            return this._item;\n        },\n\n        /**\n         * Gets the PIC serial\n         * @returns {String}\n         */\n        getSerial: function getSerial() {\n            return this._pic && this._pic.serial;\n        },\n\n        /**\n         * Gets the PIC type identifier\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return this._pic && this._pic.typeIdentifier;\n        },\n\n        /**\n         * Gets the underlying DOM element of the managed PIC\n         * @returns {{pic: (jQuery), tool: (jQuery), button: (jQuery), broken: (Boolean))}|*} An object providing the underlying DOM elements of the PIC and its tool\n         */\n        getDom: function getDom() {\n            if (!this._dom) {\n                var serial = this.getSerial();\n                var pic, tool;\n\n                if (serial) {\n                    pic = $('[data-serial=\"' + serial + '\"]');\n                    if (pic.length) {\n                        tool = $('[data-pic-serial=\"' + serial + '\"]');\n\n                        if (!tool.length) {\n                            tool = pic.children().first();\n                        }\n\n                        this._dom = {\n                            pic: pic,\n                            tool: tool,\n                            button: tool.find('.sts-button'),\n                            broken: pic.is(':empty') // tells if the tool has been moved outside of the PIC\n                        };\n                    }\n                }\n            }\n\n            return this._dom;\n        },\n\n        /**\n         * Enables the PIC.\n         * @fires enable\n         * @returns {picManager}\n         */\n        enable: function enable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            if (dom) {\n                // just remove the disabled state and destroy the disable mask\n                dom.button.removeClass('disabled');\n                dom.tool.find('.sts-button-disable-mask').remove();\n\n                this.disabled = false;\n                this.trigger('enable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Disables the PIC\n         * @fires disable\n         * @returns {picManager}\n         */\n        disable: function disable() {\n            // @todo: find a better solution for disabling/enabling a PIC\n            var dom = this.getDom();\n            var button;\n            if (dom) {\n                // set a disabled state by adding a CSS class, then mask the button with a top-level element\n                button = dom.button.addClass('disabled');\n\n                $('<div class=\"sts-button-disable-mask\" style=\"position:absolute;z-index:10000000000000\"></div>')\n                    .appendTo(dom.tool)\n                    .offset(button.offset())\n                    .width(button.outerWidth())\n                    .height(button.outerHeight());\n\n                // also hide any sub component\n                dom.tool.find('.sts-container, .sts-menu-container').addClass('sts-hidden-container');\n\n                this.disabled = true;\n                this.trigger('disable');\n            }\n\n            return this;\n        },\n\n        /**\n         * Shows the PIC\n         * @fires show\n         * @returns {picManager}\n         */\n        show: function show() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.show();\n\n                this.trigger('show');\n            }\n\n            return this;\n        },\n\n        /**\n         * Hides the PIC\n         * @fires hide\n         * @returns {picManager}\n         */\n        hide: function hide() {\n            var dom = this.getDom();\n            if (dom) {\n                dom.tool.hide();\n\n                this.trigger('hide');\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @returns {picManager}\n         */\n        trigger: function trigger(eventName) {\n            var dom = this.getDom();\n            var args = _.rest(arguments, 1);\n\n            args.unshift(this);\n\n            if (dom) {\n                // trigger the event, if the tool has been moved outside of the PIC, trigger also the event on the PIC\n                dom.tool.trigger(eventName, args);\n                if (dom.broken) {\n                    dom.pic.trigger(eventName, args);\n                }\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * The template of a PicManagerCollection instance\n     * @type {picManagerCollection}\n     */\n    var picManagerCollection = {\n        /**\n         * Creates the collection of PIC from an Item\n         *\n         * @param {QtiItem} item\n         * @returns {picManagerCollection}\n         */\n        init: function init(item) {\n            if (Element.isA(item, 'assessmentItem')) {\n                this._item = item;\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets the list of PIC managers for the PIC provided by the running item.\n         *\n         * @param {Boolean} [force] Force a list rebuild\n         * @returns {Array} Returns the list of managers for the provided PIC\n         */\n        getList: function getList(force) {\n            var self = this;\n\n            // build the list if empty\n            if (force || !self._list) {\n                self._map = {};\n                self._list = [];\n                if (self._item) {\n                    _.forEach(self._item.getElements(), function(element) {\n                        var manager;\n\n                        if (Element.isA(element, 'infoControl')) {\n                            manager = managerFactory(element, self._item);\n                            self._list.push(manager);\n                            self._map[element.serial] = manager;\n                            self._map[element.typeIdentifier] = manager;\n                        }\n                    });\n                }\n            }\n\n            return this._list;\n        },\n\n        /**\n         * Gets the manager of the first PIC matching the identifier from the list provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {Object} The manager of the PIC\n         */\n        getPic: function getPic(picId) {\n            this.getList();\n            return this._map[picId];\n        },\n\n        /**\n         * Executes an action on a particular PIC from the running item.\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @param {String} action The name of the action to call\n         * @returns {*} Returns the action result\n         */\n        execute: function execute(picId, action) {\n            var pic = this.getPic(picId);\n            if (pic && pic[action]) {\n                return pic[action].apply(pic, _.rest(arguments, 2));\n            }\n        },\n\n        /**\n         * Executes an action on each PIC provided by the running item.\n         * @param {String} action The name of the action to call\n         * @param {Function} [filter] An optional filter to reduce the list\n         * @returns {picManagerCollection}\n         */\n        executeAll: function executeAll(action, filter) {\n            var args = _.rest(arguments, 2);\n            var cb;\n\n            if (typeof filter === 'function') {\n                cb = function(pic) {\n                    if (filter.call(pic, pic) && pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            } else {\n                cb = function(pic) {\n                    if (pic[action]) {\n                        pic[action].apply(pic, args);\n                    }\n                };\n            }\n\n            return this.each(cb);\n        },\n\n        /**\n         * Calls a callback function on each listed PIC from the running item.\n         * @param {Function} cb The callback function to apply on each listed PIC\n         * @returns {picManagerCollection}\n         */\n        each: function each(cb) {\n            _.forEach(this.getList(), cb);\n            return this;\n        },\n\n        /**\n         * Enables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        enablePic: function enablePic(picId) {\n            this.execute(picId, 'enable');\n            return this;\n        },\n\n        /**\n         * Disables a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        disablePic: function disablePic(picId) {\n            this.execute(picId, 'disable');\n            return this;\n        },\n\n        /**\n         * Shows a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        showPic: function showPic(picId) {\n            this.execute(picId, 'show');\n            return this;\n        },\n\n        /**\n         * Hides a PIC provided by the running item.\n         *\n         * @param {String} picId The PIC typeIdentifier or serial\n         * @returns {picManagerCollection}\n         */\n        hidePic: function hidePic(picId) {\n            this.execute(picId, 'hide');\n            return this;\n        },\n\n        /**\n         * Enables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to enable\n         * @returns {picManagerCollection}\n         */\n        enableAll: function enableAll(filter) {\n            this.executeAll('enable', filter);\n            return this;\n        },\n\n        /**\n         * Disables all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to disable\n         * @returns {picManagerCollection}\n         */\n        disableAll: function disableAll(filter) {\n            this.executeAll('disable', filter);\n            return this;\n        },\n\n        /**\n         * Shows all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to show\n         * @returns {picManagerCollection}\n         */\n        showAll: function showAll(filter) {\n            this.executeAll('show', filter);\n            return this;\n        },\n\n        /**\n         * Hides all PIC provided by the running item.\n         *\n         * @param {Function} [filter] An optional filter to reduce the list of PIC to hide\n         * @returns {picManagerCollection}\n         */\n        hideAll: function hideAll(filter) {\n            this.executeAll('hide', filter);\n            return this;\n        }\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {Object} pic\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var managerFactory = function managerFactory(pic, item) {\n        var manager = _.clone(picManager, true);\n        return manager.init(pic, item);\n    };\n\n    /**\n     * Creates a PIC manager for a particular Item.\n     * @param {QtiItem} item\n     * @returns {picManager} Returns the instance of the PIC manager\n     */\n    var collectionFactory = function collectionFactory(item) {\n        var collection = _.clone(picManagerCollection, true);\n        return collection.init(item);\n    };\n\n    var picManager$1 = {\n        collection: collectionFactory,\n        manager: managerFactory\n    };\n\n    return picManager$1;\n\n});\n\n","define('taoQtiItem/runner/provider/manager/userModules',['lodash', 'module'], function (_, module) { 'use strict';\n\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n\n    /**\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n     */\n\n    var userModules = {\n        /**\n         * Load user modules defined in the module config\n         * @param {Array} [userModules] - manually specify user modules to load instead of getting them from the module config\n         * @returns {Promise}\n         */\n        load: function load(userModules) {\n            var config = module.config();\n\n            if (!userModules || !_.isArray(userModules)) {\n                if (config && config.userModules && _.isArray(config.userModules)) {\n                    userModules = config.userModules;\n                } else {\n                    userModules = [];\n                }\n            }\n            if(!userModules.length){\n                return Promise.resolve();\n            }\n            return new Promise(function(resolve, reject) {\n                window.require(userModules, function() {\n                    _.forEach(arguments, function(dependency) {\n                        if (dependency && _.isFunction(dependency.exec)) {\n                            dependency.exec();\n                        }\n                    });\n                    resolve();\n                }, function(err) {\n                    reject(err.message);\n                });\n            });\n        }\n    };\n\n    return userModules;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory',[],function(){\n    'use strict';\n\n    /**\n     * Generic portable element provider than loads portable elements directly on the client side\n     *\n     * Sample usage :\n     * var pciProvider = sideLoadingProviderFactory(pciManifestArray);\n     * pciProvider.add('anotherPciXYZ', anotherPciXYZObject);\n     *\n     */\n    return function sideLoadingProviderFactory(portableElements){\n\n        var _registry = portableElements;\n\n        return {\n            /**\n             * Side load the portable element here\n             * @param id\n             * @param pathToManifest\n             */\n            add : function add(id, portableElement){\n                _registry[id] = portableElement;\n                return this;\n            },\n            /**\n             * Implementation of the mandatory method load() of a portable element provider\n             *\n             * @returns {Promise} resolved when the added pci registered through their manifest are loaded\n             */\n            load : function load(){\n                return _registry;\n            }\n        };\n    };\n});\n","define('taoQtiItem/reviewRenderer/renderers/config',['lodash', 'context', 'ui/themes', 'taoItems/assets/manager', 'taoItems/assets/strategies', 'module', 'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'], function (lodash, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy) { 'use strict';\n\n    lodash = lodash && Object.prototype.hasOwnProperty.call(lodash, 'default') ? lodash['default'] : lodash;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    themes = themes && Object.prototype.hasOwnProperty.call(themes, 'default') ? themes['default'] : themes;\n    assetManagerFactory = assetManagerFactory && Object.prototype.hasOwnProperty.call(assetManagerFactory, 'default') ? assetManagerFactory['default'] : assetManagerFactory;\n    assetStrategies = assetStrategies && Object.prototype.hasOwnProperty.call(assetStrategies, 'default') ? assetStrategies['default'] : assetStrategies;\n    module = module && Object.prototype.hasOwnProperty.call(module, 'default') ? module['default'] : module;\n    portableAssetStrategy = portableAssetStrategy && Object.prototype.hasOwnProperty.call(portableAssetStrategy, 'default') ? portableAssetStrategy['default'] : portableAssetStrategy;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const itemThemes = themes.get('items');\n    const moduleConfig = module.config();\n\n    //Create asset manager stack\n    const assetManager = assetManagerFactory(\n        [\n            {\n                name: 'theme',\n                handle: url => {\n                    if (\n                        itemThemes &&\n                        url.path &&\n                        (url.path === itemThemes.base ||\n                            (itemThemes.available && itemThemes.available.map(val => val.path).includes(url.path)))\n                    ) {\n                        return context.root_url + url.toString();\n                    }\n                }\n            },\n            assetStrategies.taomedia,\n            assetStrategies.external,\n            assetStrategies.base64,\n            assetStrategies.itemCssNoCache,\n            assetStrategies.baseUrl,\n            portableAssetStrategy\n        ],\n        { baseUrl: '' }\n    ); //baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    const locations = {\n        assessmentItem: 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        _container: 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        _simpleFeedbackRule: false,\n        _tooltip: 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        stylesheet: 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        outcomeDeclaration: false,\n        responseDeclaration: false,\n        responseProcessing: false,\n        figure: 'taoQtiItem/qtiCommonRenderer/renderers/Figure',\n        img: 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        figcaption: 'taoQtiItem/qtiCommonRenderer/renderers/Figcaption',\n        math: 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        object: 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        table: 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        printedVariable: 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        rubricBlock: 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        modalFeedback: 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        prompt: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        infoControl: 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        include: 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n\n        // Interactions/Choices customised for reviewRenderer\n\n        choiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ChoiceInteraction',\n        extendedTextInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/ExtendedTextInteraction',\n        orderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/OrderInteraction',\n        associateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/AssociateInteraction',\n        matchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MatchInteraction',\n        textEntryInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/TextEntryInteraction',\n        sliderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SliderInteraction',\n        inlineChoiceInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction': 'taoQtiItem/reviewRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        hottext: 'taoQtiItem/reviewRenderer/renderers/choices/Hottext',\n        inlineChoice: 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        hottextInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        hotspotInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/HotspotInteraction',\n        hotspotChoice: false,\n        associableHotspot: false,\n        gapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GapMatchInteraction',\n        selectPointInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/SelectPointInteraction',\n        graphicOrderInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicOrderInteraction',\n        graphicAssociateInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicAssociateInteraction',\n        graphicGapMatchInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        uploadInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/UploadInteraction',\n        customInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/PortableCustomInteraction',\n        mediaInteraction: 'taoQtiItem/reviewRenderer/renderers/interactions/MediaInteraction',\n\n        // Interactions/Choices inherited from qtiCommonRenderer\n\n        gap: 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        gapText: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleChoice.orderInteraction': 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'simpleAssociableChoice.matchInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction':\n            'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        gapImg: 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        endAttemptInteraction: 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    var config = {\n        name: 'reviewRenderer',\n        locations,\n        options: {\n            assetManager,\n            themes: itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages: moduleConfig.messages\n        }\n    };\n\n    return config;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/reviewRenderer/renderers/config'], function (Renderer$1, config) { 'use strict';\n\n\tRenderer$1 = Renderer$1 && Object.prototype.hasOwnProperty.call(Renderer$1, 'default') ? Renderer$1['default'] : Renderer$1;\n\tconfig = config && Object.prototype.hasOwnProperty.call(config, 'default') ? config['default'] : config;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\tvar Renderer = Renderer$1.build(config.locations, config.name, config.options);\n\n\treturn Renderer;\n\n});\n\n","define('taoQtiItem/reviewRenderer/renderers/rendererProvider',['taoQtiItem/reviewRenderer/renderers/Renderer'], function (ReviewRenderer) { 'use strict';\n\n    ReviewRenderer = ReviewRenderer && Object.prototype.hasOwnProperty.call(ReviewRenderer, 'default') ? ReviewRenderer['default'] : ReviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    /**\n     * This is a provider wrapper for reviewRenderer\n     */\n    var rendererProvider = {\n        name: 'reviewRenderer',\n        init: () => {},\n        getRenderer: () => ReviewRenderer\n    };\n\n    return rendererProvider;\n\n});\n\n","define('taoQtiItem/runner/rendererStrategies',['core/logger', 'core/providerRegistry', 'taoQtiItem/qtiCommonRenderer/renderers/rendererProvider', 'taoQtiItem/reviewRenderer/renderers/rendererProvider'], function (loggerFactory, providerRegistry, qtiRenderer, reviewRenderer) { 'use strict';\n\n    loggerFactory = loggerFactory && Object.prototype.hasOwnProperty.call(loggerFactory, 'default') ? loggerFactory['default'] : loggerFactory;\n    providerRegistry = providerRegistry && Object.prototype.hasOwnProperty.call(providerRegistry, 'default') ? providerRegistry['default'] : providerRegistry;\n    qtiRenderer = qtiRenderer && Object.prototype.hasOwnProperty.call(qtiRenderer, 'default') ? qtiRenderer['default'] : qtiRenderer;\n    reviewRenderer = reviewRenderer && Object.prototype.hasOwnProperty.call(reviewRenderer, 'default') ? reviewRenderer['default'] : reviewRenderer;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    const logger = loggerFactory('taoQtiItem/runner/rendererStrategies');\n\n    /**\n     * The default renderer provider. It should be the QTI common renderer.\n     * @type string\n     */\n    const defaultRenderer = qtiRenderer.name;\n\n    /**\n     * Alias mapping for particular names.\n     * Gives the appropriate renderer based on the IMS view property.\n     * Read more about IMS view here:\n     * https://www.imsglobal.org/question/qtiv2p2p2/QTIv2p2p2-ASI-InformationModelv1p0/imsqtiv2p2p2_asi_v1p0_InfoModelv1p0.html#FigEnumeratedListClass_DataModel_View\n     *\n     * @type {Object}\n     */\n    const alias = {\n        author: qtiRenderer.name,\n        candidate: qtiRenderer.name,\n        proctor: reviewRenderer.name,\n        scorer: reviewRenderer.name,\n        testConstructor: qtiRenderer.name,\n        tutor: reviewRenderer.name\n    };\n\n    /**\n     * Gets the name of an existing renderer.\n     * If the wanted renderer does not exist, it will fallback to the default one.\n     * A warning will be issue for unknown names.\n     * @param {String} name\n     * @returns {String}\n     */\n    function getProviderName(name) {\n        const providers = rendererStrategies.getAvailableProviders();\n\n        if (providers.includes(name)) {\n            return name;\n        }\n\n        if (alias[name]) {\n            return alias[name];\n        }\n\n        if (name) {\n            logger.warn(`Unknown QTI Item Runner renderer ${name}!`);\n        }\n\n        return defaultRenderer;\n    }\n\n    /**\n     * This renderer manager registers two different renderers at the moment:\n     * - qtiCommonRenderer: Standard renderer used for test taker view\n     * - reviewRenderer: This renderer is meant to render items in review mode (which is ready-only with some enhancement)\n     *\n     * @param {string} rendererName\n     * @returns {*|{init(): *, getRenderer(): *}|init}\n     */\n    function rendererStrategies(rendererName) {\n        const providerName = getProviderName(rendererName);\n        const provider = rendererStrategies.getProvider(providerName);\n        const renderer = {\n            /**\n             * Initializes the renderer.\n             * @returns {renderer}\n             */\n            init() {\n                provider.init.call(this);\n                return this;\n            },\n\n            /**\n             * Gets the renderer's name\n             * @returns {String}\n             */\n            getName() {\n                return provider.name;\n            },\n\n            /**\n             * Gets the renderer\n             * @returns {renderer}\n             */\n            getRenderer() {\n                return provider.getRenderer();\n            }\n        };\n\n        return renderer.init();\n    }\n\n    providerRegistry(rendererStrategies);\n\n    rendererStrategies.registerProvider(qtiRenderer.name, qtiRenderer);\n    rendererStrategies.registerProvider(reviewRenderer.name, reviewRenderer);\n\n    return rendererStrategies;\n\n});\n\n","define('taoQtiItem/runner/provider/qti',['jquery', 'lodash', 'i18n', 'context', 'taoQtiItem/qtiItem/core/Loader', 'taoQtiItem/qtiItem/core/Element', 'taoQtiItem/portableElementRegistry/ciRegistry', 'taoQtiItem/portableElementRegistry/icRegistry', 'taoQtiItem/portableElementRegistry/provider/sideLoadingProviderFactory', 'taoQtiItem/runner/rendererStrategies', 'taoQtiItem/runner/provider/manager/picManager', 'taoQtiItem/runner/provider/manager/userModules', 'taoQtiItem/qtiItem/helper/modalFeedback', 'taoItems/assets/manager', 'util/locale'], function ($, _, __, context, QtiLoader, Element, ciRegistry, icRegistry, sideLoadingProviderFactory, rendererStrategies, picManager, userModules, modalFeedbackHelper, manager, locale) { 'use strict';\n\n    $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n    _ = _ && Object.prototype.hasOwnProperty.call(_, 'default') ? _['default'] : _;\n    __ = __ && Object.prototype.hasOwnProperty.call(__, 'default') ? __['default'] : __;\n    context = context && Object.prototype.hasOwnProperty.call(context, 'default') ? context['default'] : context;\n    QtiLoader = QtiLoader && Object.prototype.hasOwnProperty.call(QtiLoader, 'default') ? QtiLoader['default'] : QtiLoader;\n    Element = Element && Object.prototype.hasOwnProperty.call(Element, 'default') ? Element['default'] : Element;\n    ciRegistry = ciRegistry && Object.prototype.hasOwnProperty.call(ciRegistry, 'default') ? ciRegistry['default'] : ciRegistry;\n    icRegistry = icRegistry && Object.prototype.hasOwnProperty.call(icRegistry, 'default') ? icRegistry['default'] : icRegistry;\n    sideLoadingProviderFactory = sideLoadingProviderFactory && Object.prototype.hasOwnProperty.call(sideLoadingProviderFactory, 'default') ? sideLoadingProviderFactory['default'] : sideLoadingProviderFactory;\n    rendererStrategies = rendererStrategies && Object.prototype.hasOwnProperty.call(rendererStrategies, 'default') ? rendererStrategies['default'] : rendererStrategies;\n    picManager = picManager && Object.prototype.hasOwnProperty.call(picManager, 'default') ? picManager['default'] : picManager;\n    userModules = userModules && Object.prototype.hasOwnProperty.call(userModules, 'default') ? userModules['default'] : userModules;\n    modalFeedbackHelper = modalFeedbackHelper && Object.prototype.hasOwnProperty.call(modalFeedbackHelper, 'default') ? modalFeedbackHelper['default'] : modalFeedbackHelper;\n    locale = locale && Object.prototype.hasOwnProperty.call(locale, 'default') ? locale['default'] : locale;\n\n    /*\n     * This program is free software; you can redistribute it and/or\n     * modify it under the terms of the GNU General Public License\n     * as published by the Free Software Foundation; under version 2\n     * of the License (non-upgradable).\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program; if not, write to the Free Software\n     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n     *\n     * Copyright (c) 2014-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n     *\n     */\n\n    var timeout = (context.timeout > 0 ? context.timeout + 1 : 30) * 1000;\n\n    /**\n     * @exports taoQtiItem/runner/provider/qti\n     */\n    var qtiItemRuntimeProvider = {\n        init: function (itemData, done) {\n            var self = this;\n\n            var rendererOptions = _.merge(\n                {\n                    assetManager: this.assetManager\n                },\n                _.pick(this.options, ['themes', 'preload', 'view'])\n            );\n\n            const Renderer = rendererStrategies(rendererOptions.view).getRenderer();\n\n            this._renderer = new Renderer(rendererOptions);\n\n            this._loader = new QtiLoader();\n\n            this._loader.loadItemData(itemData, function (item) {\n                if (!item) {\n                    return self.trigger('error', __('Unable to load item from the given data.'));\n                }\n\n                self._item = item;\n                self._renderer.load(function () {\n                    self._item.setRenderer(this);\n\n                    done();\n                }, this.getLoadedClasses());\n            });\n        },\n\n        render: function (elt, done, options) {\n            var self = this;\n\n            options = _.defaults(options || {}, { state: {} });\n\n            if (this._item) {\n                try {\n                    //render item html\n                    elt.innerHTML = this._item.render({});\n\n                    // apply RTL layout according to item language\n                    const $item = $(elt).find('.qti-item');\n                    const $itemBody = $item.find('.qti-itemBody');\n                    const itemDir = $itemBody.attr('dir');\n                    if (!itemDir) {\n                        const itemLang = $item.attr('lang');\n                        $itemBody.attr('dir', locale.getLanguageDirection(itemLang));\n                    }\n                } catch (e) {\n                    self.trigger('error', __('Error in template rendering: %s', e.message));\n                }\n                try {\n                    if (options.portableElements) {\n                        //if the option to directly load portable elements is provided, use only this one\n                        if (options.portableElements.pci) {\n                            ciRegistry.resetProviders();\n                            ciRegistry.registerProvider(\n                                'pciDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pci)\n                            );\n                        }\n                        if (options.portableElements.pic) {\n                            icRegistry.resetProviders();\n                            icRegistry.registerProvider(\n                                'picDeliveryProvider',\n                                sideLoadingProviderFactory(options.portableElements.pic)\n                            );\n                        }\n                    }\n\n                    // Race between postRendering and timeout\n                    // postRendering waits for everything to be resolved or one reject\n                    Promise.race([\n                        Promise.all(this._item.postRender(options)),\n                        new Promise(function (resolve, reject) {\n                            _.delay(\n                                reject,\n                                timeout,\n                                new Error(__('It seems that there is an error during item loading. The error has been reported. The test will be paused.'))\n                            );\n                        })\n                    ])\n                        .then(function () {\n                            $(elt)\n                                .off('responseChange')\n                                .on('responseChange', function () {\n                                    self.trigger('statechange', self.getState());\n                                    self.trigger('responsechange', self.getResponses());\n                                })\n                                .off('endattempt')\n                                .on('endattempt', function (e, responseIdentifier) {\n                                    self.trigger('endattempt', responseIdentifier || e.originalEvent.detail);\n                                })\n                                .off('themechange')\n                                .on('themechange', function (e, themeName) {\n                                    var themeLoader = self._renderer.getThemeLoader();\n                                    themeName = themeName || e.originalEvent.detail;\n                                    if (themeLoader) {\n                                        themeLoader.change(themeName);\n                                    }\n                                });\n\n                            /**\n                             * Lists the PIC provided by this item.\n                             * @event qti#listpic\n                             */\n                            self.trigger('listpic', picManager.collection(self._item));\n\n                            return userModules.load().then(done);\n                        })\n                        .catch(function (renderingError) {\n                            done(); // in case of postRendering issue, we are also done\n                            const errorMsg = renderingError instanceof Error\n                                ? renderingError.message\n                                : renderingError;\n                            const error = new Error(__('Error in post rendering: %s', errorMsg));\n                            error.unrecoverable = true;\n                            self.trigger('error', error);\n                        });\n                } catch (err) {\n                    self.trigger('error', __('Error in post rendering: %s', err.message));\n                }\n            }\n        },\n\n        /**\n         * Clean up stuffs\n         */\n        clear: function (elt, done) {\n            var self = this;\n\n            if (self._item) {\n                Promise.all(\n                    this._item.getInteractions().map(function (interaction) {\n                        return interaction.clear();\n                    })\n                )\n                    .then(function () {\n                        self._item.clear();\n\n                        $(elt).off('responseChange').off('endattempt').off('themechange').off('feedback').empty();\n\n                        if (self._renderer) {\n                            self._renderer.unload();\n                        }\n\n                        self._item = null;\n                    })\n                    .then(done)\n                    .catch(function (err) {\n                        self.trigger('error', __('Something went wrong while destroying an interaction: %s', err.message));\n                    });\n            } else {\n                done();\n            }\n        },\n\n        /**\n         * Get state implementation.\n         * @returns {Object} that represents the state\n         */\n        getState: function getState() {\n            var state = {};\n            if (this._item) {\n                //get the state from interactions\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    state[interaction.attr('responseIdentifier')] = interaction.getState();\n                });\n\n                //get the state from infoControls\n                _.forEach(this._item.getElements(), function (element) {\n                    if (Element.isA(element, 'infoControl') && element.attr('id')) {\n                        state.pic = state.pic || {};\n                        state.pic[element.attr('id')] = element.getState();\n                    }\n                });\n            }\n            return state;\n        },\n\n        /**\n         * Set state implementation.\n         * @param {Object} state - the state\n         */\n        setState: function setState(state) {\n            if (this._item && state) {\n                //set interaction state\n                _.forEach(this._item.getInteractions(), function (interaction) {\n                    var id = interaction.attr('responseIdentifier');\n                    if (id && state[id]) {\n                        interaction.setState(state[id]);\n                    }\n                });\n\n                //set info control state\n                if (state.pic) {\n                    _.forEach(this._item.getElements(), function (element) {\n                        if (Element.isA(element, 'infoControl') && state.pic[element.attr('id')]) {\n                            element.setState(state.pic[element.attr('id')]);\n                        }\n                    });\n                }\n            }\n        },\n\n        getResponses: function () {\n            var responses = {};\n            if (this._item) {\n                _.reduce(\n                    this._item.getInteractions(),\n                    function (res, interaction) {\n                        responses[interaction.attr('responseIdentifier')] = interaction.getResponse();\n                        return responses;\n                    },\n                    responses\n                );\n            }\n            return responses;\n        },\n\n        renderFeedbacks: function (feedbacks, itemSession, done) {\n            var self = this;\n\n            var _renderer = self._item.getRenderer();\n            var _loader = new QtiLoader(self._item);\n\n            // loading feedbacks from response into the current item\n            _loader.loadElements(feedbacks, function (item) {\n                _renderer.load(function () {\n                    var renderingQueue = modalFeedbackHelper.getFeedbacks(item, itemSession);\n\n                    done(renderingQueue);\n                }, this.getLoadedClasses());\n            });\n        }\n    };\n\n    return qtiItemRuntimeProvider;\n\n});\n\n","define('taoQtiItem/runner/qtiItemRunner',['taoItems/runner/api/itemRunner', 'taoQtiItem/runner/provider/qti'], function (itemRunner, qtiRuntimeProvider) { 'use strict';\n\n\titemRunner = itemRunner && Object.prototype.hasOwnProperty.call(itemRunner, 'default') ? itemRunner['default'] : itemRunner;\n\tqtiRuntimeProvider = qtiRuntimeProvider && Object.prototype.hasOwnProperty.call(qtiRuntimeProvider, 'default') ? qtiRuntimeProvider['default'] : qtiRuntimeProvider;\n\n\t/*\n\t * This program is free software; you can redistribute it and/or\n\t * modify it under the terms of the GNU General Public License\n\t * as published by the Free Software Foundation; under version 2\n\t * of the License (non-upgradable).\n\t *\n\t * This program is distributed in the hope that it will be useful,\n\t * but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t * GNU General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU General Public License\n\t * along with this program; if not, write to the Free Software\n\t * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\t *\n\t * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n\t *\n\t */\n\n\t//register the QTI Provider\n\titemRunner.register('qti', qtiRuntimeProvider);\n\n\treturn itemRunner;\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2024 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Helper for loading xinclude elements for PCI\n */\ndefine('taoQtiItem/qtiCreator/helper/xincludeLoader',[],function () {\n    'use strict';\n\n    function convertXMLToHTML(xmlNode) {\n        const htmlNode = document.createElement(xmlNode.nodeName);\n        Array.from(xmlNode.attributes).forEach(attr => {\n            htmlNode.setAttribute(attr.name, attr.value);\n        });\n        xmlNode.childNodes.forEach(childNode => {\n            if (childNode.nodeType === Node.ELEMENT_NODE) {\n                htmlNode.appendChild(convertXMLToHTML(childNode));\n            } else if (childNode.nodeType === Node.TEXT_NODE) {\n                htmlNode.appendChild(document.createTextNode(childNode.nodeValue));\n            }\n        });\n\n        return htmlNode;\n    }\n\n    function parseXmlToDom(xmlString) {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\n\n        return convertXMLToHTML(xmlDoc.documentElement);\n    }\n\n    function loadXIncludeElement(xiIncludeElementHref, baseUrl) {\n        if (!xiIncludeElementHref || !baseUrl) {\n            return Promise.reject(new Error('href or baseUrl is missing'));\n        }\n        return new Promise((resolve, reject) => {\n            const fileUrl = `text!${baseUrl}${xiIncludeElementHref}`;\n            require.undef(fileUrl);\n            require([fileUrl], stimulusXml => {\n                const data = parseXmlToDom(stimulusXml);\n                resolve(data);\n            }, () => {\n                reject(new Error('File not found'));\n            });\n        });\n    }\n\n    function processContentItem(contentItem, baseUrl) {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = contentItem;\n        const xiIncludeElements = tempDiv.querySelectorAll('xi\\\\:include');\n\n        const xiIncludePromises = Array.from(xiIncludeElements).flatMap(xiElement => {\n            const xiIncludeElementHref = xiElement.getAttribute('href')\n            if (!xiIncludeElementHref) {\n                return [];\n            }\n            return loadXIncludeElement(xiIncludeElementHref, baseUrl).then(newContent => {\n                xiElement.replaceWith(newContent);\n            });\n        });\n\n        return Promise.all(xiIncludePromises).then(() => tempDiv.innerHTML);\n    }\n\n    return {\n        name: 'xincludeLoader',\n        loadXIncludeElement,\n        parseXmlToDom,\n        loadByElementPages(pages, baseUrl) {\n            if (!baseUrl) {\n                return Promise.reject(new Error('baseUrl is missing'));\n            }\n            function containsXIInclude(contentItem) {\n                const tempDiv = document.createElement('div');\n                tempDiv.innerHTML = contentItem;\n                const xiIncludeElements = tempDiv.querySelectorAll('xi\\\\:include');\n                return xiIncludeElements.length > 0;\n            }\n            const pageUpdatePromises = pages.map(page => {\n                const hasXIInclude = page.content.some(containsXIInclude);\n                if (!hasXIInclude) {\n                    return Promise.resolve(page);\n                }\n                const contentPromises = page.content.map(contentItem => processContentItem(contentItem, baseUrl));\n                return Promise.all(contentPromises).then(updatedContentItems => {\n                    page.content = updatedContentItems;\n                    return page;\n                });\n            });\n\n            return Promise.all(pageUpdatePromises);\n        }\n    };\n});\n\n","\ndefine(\"taoQtiItem/loader/taoQtiItemRunner.bundle\", function(){});\n","define(\"taoQtiItem/loader/taoQtiItemRunner.min\", [\"taoItems/loader/taoItemsRunner.min\"], function(){});\n"],"mappings":"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"}