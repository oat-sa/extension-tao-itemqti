{"version":3,"sources":["../../../taoQtiItem/views/js/qtiItem/helper/util.js","../../../taoQtiItem/views/js/qtiItem/helper/rendererConfig.js","../../../taoQtiItem/views/js/qtiItem/core/Element.js","../../../taoQtiItem/views/js/qtiItem/core/IdentifiedElement.js","../../../taoQtiItem/views/js/qtiItem/core/choices/Choice.js","../../../taoQtiItem/views/js/qtiItem/core/choices/Hotspot.js","../../../taoQtiItem/views/js/qtiItem/core/choices/AssociableHotspot.js","../../../taoQtiItem/views/js/qtiItem/mixin/Mixin.js","../../../taoQtiItem/views/js/qtiItem/core/Container.js","../../../taoQtiItem/views/js/qtiItem/mixin/Container.js","../../../taoQtiItem/views/js/qtiItem/core/choices/ContainerChoice.js","../../../taoQtiItem/views/js/qtiItem/core/choices/Gap.js","../../../taoQtiItem/views/js/qtiItem/core/Object.js","../../../taoQtiItem/views/js/qtiItem/core/choices/GapImg.js","../../../taoQtiItem/views/js/qtiItem/core/choices/GapText.js","../../../taoQtiItem/views/js/qtiItem/core/choices/HotspotChoice.js","../../../taoQtiItem/views/js/qtiItem/mixin/ContainerInline.js","../../../taoQtiItem/views/js/qtiItem/core/choices/Hottext.js","../../../taoQtiItem/views/js/qtiItem/core/choices/TextVariableChoice.js","../../../taoQtiItem/views/js/qtiItem/core/choices/InlineChoice.js","../../../taoQtiItem/views/js/qtiItem/core/choices/SimpleAssociableChoice.js","../../../taoQtiItem/views/js/qtiItem/core/choices/SimpleChoice.js","../../../taoQtiItem/views/js/qtiItem/core/choices/TextEntry.js","../../../taoQtiItem/views/js/qtiItem/core/feedbacks/Feedback.js","../../../taoQtiItem/views/js/qtiItem/core/feedbacks/FeedbackBlock.js","../../../taoQtiItem/views/js/qtiItem/core/feedbacks/FeedbackInline.js","../../../taoQtiItem/views/js/qtiItem/core/feedbacks/ModalFeedback.js","../../../taoQtiItem/views/js/qtiItem/core/Img.js","../../../taoQtiItem/views/js/qtiItem/mixin/NamespacedElement.js","../../../taoQtiItem/views/js/qtiItem/core/Include.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/Interaction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/Prompt.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/BlockInteraction.js","../../../taoQtiItem/views/js/qtiItem/helper/response.js","../../../taoQtiItem/views/js/qtiCreator/model/helper/event.js","../../../taoQtiItem/views/js/qtiCreator/model/helper/invalidator.js","../../../taoQtiItem/views/js/qtiCreator/model/mixin/editable.js","../../../taoQtiItem/views/js/qtiItem/core/variables/VariableDeclaration.js","../../../taoQtiItem/views/js/qtiItem/core/variables/OutcomeDeclaration.js","../../../taoQtiItem/views/js/qtiCreator/model/variables/OutcomeDeclaration.js","../../../taoQtiItem/views/js/qtiItem/helper/maxScore.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/AssociateInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/ChoiceInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/ContainerInteraction.js","../../../taoQtiItem/views/js/qtiItem/mixin/CustomElement.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/CustomInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/InlineInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/EndAttemptInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/ExtendedTextInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/GapMatchInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/ObjectInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/GraphicInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/GraphicAssociateInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/GraphicGapMatchInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/GraphicOrderInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/HotspotInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/HottextInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/InlineChoiceInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/MatchInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/MediaInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/OrderInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/SelectPointInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/SliderInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/TextEntryInteraction.js","../../../taoQtiItem/views/js/qtiItem/core/interactions/UploadInteraction.js","../../../taoQtiItem/views/js/qtiItem/mixin/ContainerItemBody.js","../../../taoQtiItem/views/js/qtiItem/core/Item.js","../../../taoQtiItem/views/js/qtiItem/core/qtiClasses.js","../../../taoQtiItem/views/js/qtiItem/core/Loader.js","../../../taoQtiItem/views/js/qtiItem/core/Math.js","../../../taoQtiItem/views/js/qtiItem/core/PortableInfoControl.js","../../../taoQtiItem/views/js/qtiItem/core/response/SimpleFeedbackRule.js","../../../taoQtiItem/views/js/qtiItem/core/ResponseProcessing.js","../../../taoQtiItem/views/js/qtiItem/core/RubricBlock.js","../../../taoQtiItem/views/js/qtiItem/core/Stylesheet.js","../../../taoQtiItem/views/js/qtiItem/mixin/ContainerTable.js","../../../taoQtiItem/views/js/qtiItem/core/Table.js","../../../taoQtiItem/views/js/qtiItem/core/variables/ResponseDeclaration.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/choices/gap!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/container.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/Gap.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/choices/gapImg!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/GapImg.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/choices/choice!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/GapText.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/choices/hottext!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/Hottext.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/choices/inlineChoice!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/InlineChoice.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/choices/simpleAssociableChoice.matchInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/choices/simpleChoice.choiceInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction.js","../../../taoQtiItem/views/js/portableElementRegistry/factory/factory.js","../../../taoQtiItem/views/js/qtiCreator/helper/qtiElements.js","../../../taoQtiItem/views/js/portableElementRegistry/factory/ciRegistry.js","../../../taoQtiItem/views/js/portableElementRegistry/ciRegistry.js","../../../taoQtiItem/views/js/portableElementRegistry/factory/icRegistry.js","../../../taoQtiItem/views/js/portableElementRegistry/icRegistry.js","../../../taoQtiItem/views/js/portableElementRegistry/assetManager/portableAssetStrategy.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/config.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/container!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Container.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/img!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Img.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/include!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Include.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/associateInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/associateInteraction.pair!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/instruction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/instructions/Instruction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/notification!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/instructions/instructionManager.js","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/PciPrettyPrint.js","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/PciResponse.js","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/sizeAdapter.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/AssociateInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/choiceInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/ChoiceInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/endAttemptInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/extendedTextInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/ckConfigurator.js","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/patternMask.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/gapMatchInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/GapMatchInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/graphicAssociateInteraction!tpl","lib/raphael/raphael.js","lib/raphael/scale.raphael.js","json!taoQtiItem/qtiCommonRenderer/renderers/graphic-style.json","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/Graphic.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/graphicGapMatchInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/graphicOrderInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/hotspotInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/HotspotInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/hottextInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/HottextInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/inlineChoiceInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/matchInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/MatchInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/mediaInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/MediaInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/orderInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/OrderInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/customInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/PortableElement.js","../../../taoQtiItem/views/js/runtime/qtiCustomInteractionContext.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/prompt!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/Prompt.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/selectPointInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/SelectPointInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/sliderInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/SliderInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/textEntryInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/TextEntryInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/interactions/uploadInteraction!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/uploadMime.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/interactions/UploadInteraction.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/item!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/helpers/itemStylesheetHandler.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Item.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/math!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Math.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/modalFeedback!tpl","../../../taoQtiItem/views/js/qtiItem/helper/container.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/ModalFeedback.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/object!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Object.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/infoControl!tpl","../../../taoQtiItem/views/js/runtime/qtiInfoControlContext.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/PortableInfoControl.js","../../../taoQtiItem/views/js/qtiItem/helper/interactionHelper.js","../../../taoQtiItem/views/js/qtiRunner/core/Renderer.js","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Renderer.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/rubricBlock!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/RubricBlock.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/stylesheet!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Stylesheet.js","../../../taoQtiItem/views/js/qtiCommonRenderer/tpl/table!tpl","../../../taoQtiItem/views/js/qtiCommonRenderer/renderers/Table.js"],"names":["define","_","buildSerial","prefix","id","chars","i","charAt","Math","floor","random","length","buildId","item","usedIds","suffix","exists","TypeError","getUsedIds","contains","buildIdentifier","useSuffix","getUsedIdentifiers","isUndefined","replace","findInCollection","element","collectionNames","searchedSerial","found","isString","isArray","Error","each","collectionName","collection","split","nameToken","elt","parent","isFunction","find","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","indexOf","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","original","slash","node","push","uniq","$","rendererConfigHelper","getOptionsFromArguments","args","options","data","placeholder","subclass","renderer","arg","isRenderer","isPlainObject","console","log","Class","loggerFactory","util","rendererConfig","logger","_instances","Element","extend","qtiClass","serial","rootElement","init","attributes","this","metaData","match","setAttributes","initContainer","arguments","initObject","is","getSerial","elts","getComposingElements","attr","forEach","name","value","undefined","prop","document","trigger","key","removeData","removeAttr","removeAttributes","warn","getAttributes","clone","attrNames","append","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","object","location","getRootElement","setRelatedItem","setRootElement","getRelatedItem","setRenderer","getRenderer","render","_renderer","tplData","defaultData","tag","body","resolveUrl","merge","getData","rendering","renderTpl","replaceWith","postRender","altClassName","postRenderers","compact","getContainer","$scope","toArray","arr","type","isEmpty","addClass","className","clazz","_containClass","hasClass","removeClass","regex","RegExp","trim","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","test","qtiElement","getElementBySerial","composingElements","IdentifiedElement","_super","getInteraction","QtiChoice","QtiHotspot","augment","targetClass","methods","methodName","Object","hasOwnProperty","prototype","_parent","apply","bdy","elements","container","setElements","returnValue","setElement","removeElement","getElements","getElement","elementsData","tpl","renderDirect","contentModel","filter","map","flatten","concat","Mixin","Container","Choice","ContainerChoice","getMediaType","mimetype","video","audio","html","_alt","QtiObject","QtiContainerChoice","call","Hottext","text","val","choice","QtiTextVariableChoice","Feedback","ModalFeedback","src","getNamespace","uri","relatedItem","getNamespaces","nsUriFragment","defaultNsName","defaultNsUri","setNamespace","NamespacedElement","Include","choices","addChoice","getChoices","getChoice","getChoiceByIdentifier","identifier","getResponseDeclaration","response","responseId","_type","toLowerCase","choiceShuffle","getOption","getShuffledChoices","interactionData","interaction","_this","renderedChoice","e","tplName","self","setResponse","values","getResponse","resetResponse","getState","setState","clear","destroy","getNormalMaximum","Prompt","Interaction","prompt","_templateNames","MATCH_CORRECT","MAP_RESPONSE","MAP_RESPONSE_POINT","NONE","isUsingTemplate","template","isValidTemplateName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","forIn","_ns","eventList","event","choiceCreated","deleted","off","getList","addedNamespace","events","initElementToWidgetListeners","on","join","$container","getNs","getNsModel","completelyValid","invalidElements","valid","size","invalid","message","stateName","isValid","invalidator","url","_removeSelf","removed","related","removeGapImg","removeChoice","beforeRemove","_removeElement","containerPropName","eltToBeRemoved","targetElt","targetSerial","getDefaultAttributes","encodeAsXmlAttr","remove","defaultValue","setDefaultValue","getDefaultValue","VariableDeclaration","editable","OutcomeDeclaration","gamp","responseHelper","pairExists","pair","setNormalMaximum","normalMaximum","scoreOutcome","getOutcomeDeclaration","responseProcessing","processingType","reduce","getInteractions","acc","interactionMaxScore","isNumber","add","setMaxScore","customOutcomes","maxScore","maxScoreOutcome","hasInvalidInteraction","getOutcomes","outcome","parseFloat","cardinality","baseType","addOutcomeDeclaration","removeOutcome","getMatchMaxOrderedChoices","choiceCollection","matchMax","parseInt","isNaN","Infinity","sortBy","reverse","valueOf","choiceInteractionBased","max","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","responseDeclaration","mapDefault","mappingAttributes","defaults","maxChoices","minChoices","correctResponse","mapEntries","first","times","score","upperBound","min","orderInteractionBased","associateInteractionBased","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","maxAssoc","possiblePairs","checkInfinitePair","countBy","count","forEachRight","mapEntry","choiceId","_usedChoices","cloneDeep","used","assign","gapMatchInteractionBased","skippableWrongResponse","usedGaps","group1","group2","gapMatchInteraction","pairs","matchSet1","matchSet2","getGaps","choice1","choice2","gapId","selectPointInteractionBased","mappedValue","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","patternMask","BlockInteraction","associateInteraction","j","ContainerInteraction","properties","removeProp","propNames","propName","getProperties","getMarkupNamespace","markupNs","defaultMarkupNsName","defaultMarkupNsUri","setMarkupNamespace","CustomElement","CustomInteraction","typeIdentifier","libraries","entryPoint","pciReadyCallbacks","pci","onPciReady","callback","triggerPciReady","fn","onPci","offPci","triggerPci","InlineInteraction","multiple","maxStringLoop","QtiBlockInteraction","QtiObjectInteraction","backgroundImage","GraphicInteraction","gapImgs","addGapImg","gapImg","getGapImgs","getGapImg","graphicGapInteraction","SimpleAssociableChoice","matchSet","0","1","matchInteraction","ObjectInteraction","Item","stylesheets","responses","outcomes","modalFeedbacks","schemaLocations","apipAccessibility","interactions","addResponseDeclaration","omit","addModalFeedback","feedback","elementCollection","getResponses","addNamespace","setNamespaces","setSchemaLocations","locations","getSchemaLocations","setApipAccessibility","apip","getApipAccessibility","addStylesheet","stylesheet","removeStyleSheet","stylesheetExists","href","setResponseProcessing","rp","$dummy","$children","children","_container","assessmentItem","_simpleFeedbackRule","math","img","outcomeDeclaration","rubricBlock","associableHotspot","gap","gapText","hotspotChoice","hottext","inlineChoice","simpleAssociableChoice","simpleChoice","choiceInteraction","endAttemptInteraction","extendedTextInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","mediaInteraction","orderInteraction","selectPointInteraction","sliderInteraction","textEntryInteraction","uploadInteraction","feedbackBlock","feedbackInline","modalFeedback","customInteraction","infoControl","include","table","qtiClasses","loadPortableCustomElementData","portableElement","Loader","classesLocation","qti","setClassesLocation","getRequiredClasses","union","loadRequiredClasses","reload","requiredClasses","required","requiredClass","require","QtiClass","getLoadedClasses","keys","loadItemData","Qti","loadContainer","buildOutcome","feedbacks","buildElement","buildResponse","feedbackRules","fbData","buildSimpleFeedbackRule","buildResponseProcessing","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","howMatch","correctResponses","mapping","areaMapping","feedbackRule","setCondition","condition","comparedValue","feedbackOutcome","feedbackThen","feedbackElse","comparedOutcome","xml","bodyObject","bodyData","eltData","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","buildInteractionChoices","loadPciData","set","setMathML","mathML","annotations","encoding","setAnnotation","pic","_stripMathTags","nsName","_stripNamespace","_isEmptyMathML","mathStr","$math","mathText","hasContent","parseHTML","unescape","getAnnotation","removeAnnotation","getMathML","raw","escape","block","latex","PortableInfoControl","readyStack","onReady","cb","triggerReady","_comparedValues","c","setFeedbackElse","_toString","RubricBlock","Table","getFeedbackRules","rule","responseIdentifier","isCardinality","cardinalities","comparison","hb","Handlebars","depth0","helpers","partials","compilerInfo","stack1","helper","buffer","escapeExpression","hash","_containers","_$containerContext","_getSelector","selector","setContext","get","reset","eventType","triggerResponseChangeEvent","extraData","targetBlank","preventDefault","window","open","containerHelper","program1","objetLabel","functionType","width","height","objectLabel","inverse","noop","program","program3","helperMissing","unique","__","Promise","eventifier","_requirejs","_defaultLoadingOptions","enabledOnly","runtimeOnly","loadModuleConfig","manifest","resolve","reject","baseUrl","requireConfigAliases","reqConfigs","modules","runtime","config","pciConfig","paths","file","runtimeModules","model","conf","path","_loaded","__providers","_registry","version","last","registerProvider","moduleName","resetProviders","loadProviders","providerLoadingStack","provider","slice","load","shift","getAllVersions","all","versions","getRuntime","label","getCreator","creator","getBaseUrl","loadRuntimes","loadPromise","then","loadStack","results","configLoadingStack","_pcis","moduleConfigs","catch","err","loadCreators","requiredCreatorHooks","requiredCreators","pciModel","hook","enabled","creators","creatorHook","getTypeIdentifier","findIndex","module","enable","disable","isEnabled","QtiElements","classes","itemBody","parents","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","div","dl","dt","dd","hr","li","ol","ul","param","tbody","tfoot","thead","td","th","tr","a","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","p","pre","br","textRun","blockInteraction","inlineInteraction","printedVariable","templateElement","templateBlock","templateInline","drawingInteraction","graphicInteraction","cache","containable","getAllowedContainersElements","getAllowedContainers","jqSelector","substring","getParentClasses","aClass","intersection","getChildClasses","getAllowedContents","recursive","checked","contain","child","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","getAvailableAuthoringElements","description","icon","short","tags","portableElementRegistry","qtiElements","getAuthoringData","ciRegistry","registry","providers","icRegistry","getBaseUrlByIdentifier","handle","source","relative","fullmatch","relPath","runtimeLocation","context","themes","assetManagerFactory","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","simpleChoice.choiceInteraction","simpleChoice.orderInteraction","simpleAssociableChoice.matchInteraction","simpleAssociableChoice.associateInteraction","assetManager","base","pluck","available","root_url","toString","taomedia","external","base64","itemCssNoCache","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","order","orderDragAndDrop","messages","equal","program5","program7","alt","waitForMedia","blockHelperMissing","empty","instructionTpl","_notificationLevels","Instruction","defaultMessage","currentMessage","level","$dom","isValidLevel","checkState","getId","create","update","timeout","start","stop","timer","setTimeout","setLevel","getLevel","setMessage","validate","notifTpl","_instructions","validateInstructions","instruction","appendInstruction","validateCallback","removeInstructions","resetInstructions","minMaxChoiceInstructions","msg","onError","choiceCount","minInstructionSet","appendNotification","prepend","$notif","_remove","fadeOut","removeNotifications","printBase","withType","print","_formatters","formatter","printList","list","printRecord","record","JSON","stringify","boolean","integer","float","string","point","directedPair","duration","intOrIdentifier","pciPrettyPrint","_qtiModelPciResponseCardinalities","single","ordered","unserialize","mappedCardinality","responseValues","isObject","serialize","prettyPrint","adaptSize","target","$elements","pairTpl","instructionMgr","pciResponse","sizeAdapter","interact","interactUtils","setChoice","$choice","$target","choiceSerial","usage","_setChoice","responseMappingMode","siblings","$resultArea","$pair","thisPairSerial","$otherRepeatedPair","not","$otherPair","otherPairSerial","fadeIn","show","css","color","border","unsetChoice","$filledChoice","animate","triggerChange","$parent","$sibling","swapping","renderEmptyPairs","_iFrameDragFix","draggableSelector","iFrameDragFixOn","$activeDrop","resultSelector","fire","eq","relatedTarget","choiceSelector","isDragAndDropEnabled","dragOptions","dropOptions","$choiceArea","$activeChoice","$bin","class","title","binSelector","_getChoice","_resetSelection","_unsetChoice","_isInsertionMode","_isModeEditing","_handleChoiceActivate","_activateChoice","_handleResultActivate","_activateResult","currentTarget","stopPropagation","_setInstructions","inertia","autoScroll","restrict","restriction","endOnly","elementRect","top","left","bottom","right","draggable","onstart","onmove","moveElement","dx","dy","onend","restoreOriginalPosition","iFrameDragFixOff","styleCursor","overlap","ondragenter","ondragleave","dropzone","ondrop","_getRawResponse","tapOn","_setPairs","addedPairs","$emptyPair","$divs","next","sort","aIndex","bIndex","detach","appendTo","program9","listStyle","program11","horizontal","_triggerInput","$choiceBox","$input","$choiceBoxes","isBoolean","_pseudoLabel","inputSelector","$qtiChoice","closest","keyCode","charCode","prev","focus","eliminator","dataset","eliminable","input","querySelector","originalEvent","classList","toggle","setAttribute","removeAttribute","highlightInvalidInput","$li","$icon","clearTimeout","isEliminable","getCustomData","listStyles","pop","eliminated","_setVal","change","program12","program8","format","expectedLength","program16","maxLength","program18","maxWords","program20","program10","program13","program14","program22","program25","program23","program27","ckConfigurator","getConfig","editor","toolbarType","underline","regexChar","regexWords","parsePattern","pattern","result","createMaxWordPattern","createMaxCharPattern","ckEditor","patternMaskHelper","$el","minStrings","placeholderType","_isMultiple","limiter","inputLimiter","placeholderText","ckOptions","extraPlugins","language","defaultLanguage","resize_enabled","secure","protocol","forceCustomDomain","_getNumStrings","$element","num","_setPattern","_getFormat","_setUpCKEditor","delay","status","defer","listenKeyPress","_getCKEditor","setData","setText","numericBase","maxStrings","_getTextareaValue","$textarea","$charsCounter","$wordsCounter","expectedLines","ignoreKeyCodes","triggerKeyCodes","limitHandler","which","getWordsCount","getCharsCount","cancel","stopImmediatePropagation","updateCounter","_ckEditorData","patt","_destroyCkEditor","instances","_stripTags","str","tempNode","createElement","innerHTML","textContent","setReadOnly","readOnly","clearText","error","_choiceUsages","getGap","gapSelector","_handleChoiceSelect","_handleFilledGapSelect","_handleGapSelect","$flowContainer","filledGapSelector","$dragged","glob","current_event","has","separator","fun","numsort","n","eve","scope","String","l","oldstop","Array","listeners","z","indexed","queue","out","ce","ii","zIndex","_events","items","k","jj","nes","names","es","f","attrs","nt","subname","nts","unbind","splice","cur","funcs","once","f2","exports","factory","amd","R","loaded","array","_engine","nu","obj","res","constructor","repush","cacher","postprocessor","newf","clrToString","hex","catmullRom2bezier","crp","d","iLen","x","y","base3","t","p1","p2","p3","p4","bezlen","x1","y1","x2","y2","x3","y3","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","sqrt","getTatLen","ll","step","t2","abs","intersect","mmax","mmin","nx","ny","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","di","di1","dj","dj1","ci","cj","t1","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","Matrix","x_y_w_h","S","CubicBezierAtTime","p1x","p1y","p2x","p2y","sampleCurveX","ax","bx","cx","solveCurveX","epsilon","t0","d2","cy","by","ay","Animation","anim","ms","percents","newAnim","toFloat","sortByNumber","runAnimation","percent","totalOrigin","params","isInAnim","isInAnimSet","timestamp","from","to","diff","animationElements","el","initstatus","Date","availableAnimAttrs","paper","customAttributes","availableAttrs","getRGB","toColour","r","g","pathes","path2curve","toPath","equaliseTransform","real","m","matrix","to2","transform","getBBox","extractTransform","Str","from2","easing","easyeasy","easing_formulas","bezierrg","curve","pipe","del","repeat","origin","animation","requestAnimFrame","stopAnimation","paperproto","circle","rect","ellipse","image","formatrg","doc","win","oldRaphael","was","Raphael","Paper","ca","supportsTouch","DocumentTouch","E","touchMap","mousedown","mousemove","mouseup","lowerCase","pow","PI","objectToString","colourRegExp","_ISURL","isnan","NaN","-Infinity","round","toInt","upperCase","toUpperCase","_availableAttrs","arrow-end","arrow-start","blur","clip-rect","cursor","fill","fill-opacity","font","font-family","font-size","font-style","font-weight","gradient","letter-spacing","opacity","rx","ry","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","bbox","_getBBox","mapPath","pathi","_g","SVGAngle","implementation","hasFeature","firstChild","style","behavior","adj","svg","vml","_Paper","_id","_oid","o","angle","atan2","rad","deg","snapTo","tolerance","rem","createUUID","uuidRegEx","uuidReplacer","setWindow","newwin","initWin","toHex","bod","docum","ActiveXObject","write","close","createPopup","range","createTextRange","queryCommandValue","display","appendChild","computedStyle","defaultView","getComputedStyle","getPropertyValue","hsbtoString","s","hsltoString","rgbtoString","prepareRGB","clr","packageRGB","rgb","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","G","B","X","C","H","V","L","M","_path2string","_preload","cssText","onload","removeChild","onerror","colour","red","green","blue","hsb","hsl","getColor","parsePathString","pathString","pth","pathClone","paramCounts","parseTransformString","TString","ps","sleep","c1x","c1y","c2x","c2y","t13","t12","t3","mx","my","alpha","end","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","a2c","large_arc_flag","sweep_flag","_120","rotate","cos","sin","f1","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","qx","qy","attrs2","processPath","pcom","tq","T","Q","fixArc","pp","fixM","a1","a2","seg","seg2","seglen","seg2len","tear","_parseDots","par","offset","_tear","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","transformPath","_extractTransform","tstr","tdata","sx","sy","tlen","command","absolute","inver","invert","translate","scale","dirtyT","getEmpty","_equaliseTransform","tt1","tt2","maxlength","_getContainer","getElementById","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","me","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","navigator","userAgent","vendor","platform","safari","preventTouch","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","addEventListener","pos","_f","olde","targetTouches","removeEventListener","attachEvent","detachEvent","drag","dragMove","dragi","touches","touch","_drag","nextSibling","parentNode","opera","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","shape","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","onDragOver","undrag","unmousedown","__set__","itemsArray","Set","setStart","setFinish","setSize","setViewBox","fit","raphael","getOffset","elem","box","getBoundingClientRect","ownerDocument","docElem","clientTop","clientLeft","pageYOffset","pageXOffset","canvas","elementFromPoint","so","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","bot","thisArg","getElementsByPoint","isPointInside","realPath","isWithoutTransform","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","getLengthFactory","istotal","subpath","onlystart","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","linear","<",">","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Now","paused","now","time","that","upto255","animateWith","onAnimation","json","100","setTime","pause","resume","setproto","method","index","insertion","tail","todel","arglen","exclude","collector","insertAfter","glowConfig","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","fontName","thefont","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","fullfill","tokenRegex","objNotationRegex","replacer","quote","quotedName","isFunc","ninja","st","isLoaded","readyState","xlink","markers","classic","diamond","oval","markerCounter","setAttributeNS","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","dir","vector","defs","gradientTransform","stop-color","fillOpacity","updatePosition","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","","none","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","createTextNode","pn","hl","clip","rc","clip-path","getAttribute","startString","endString","_vbSize","isURL","ig","patternUnits","stops","stop-opacity","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","sw","hide","def","subkey","toFront","toBack","fltr","stdDeviation","_blur","preserveAspectRatio","_viewBox","con","isFloating","cnvs","xmlns","_left","_top","renderfix","vb","aspectRatio","viewBox","getScreenCTM","createSVGMatrix","desc","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","path2vml","total","vals","isMove","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","position","newpath","isOval","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","createNode","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","brect","W","dirtyattrs","bbx","fxfy","color2","clrs","colors","focussize","focusposition","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","runtimeStyle","margin","Path","textpathok","cs","createStyleSheet","addRule","rvml","wrapper","nestedWrapper","vmlDiv","changeSize","center","clipping","ratioW","ratioH","newHeight","newWidth","txt","_fontSize","mod","_font","newSize","overflow","scaleAll","amount","basic","selectable","active","success","layer","imageset-rect-stroke","imageset-rect-no-stroke","imageset-img","order-text","score-text-default","score-text","small-text","layer-pos-text","target-hover","target-success","assoc","assoc-layer","assoc-bullet","close-bg","touch-circle","scaleRaphael","gstyle","shapeMap","default","poly","coordsValidator","qti2raphCoordsMapper","coords","raph2qtiCoordsMapper","_style","setStyle","responsivePaper","resizePaper","givenWidth","maxWidth","containerWidth","containerHeight","factor","$editor","outerWidth","$body","innerWidth","imgWidth","imgHeight","resize","resizer","throttle","innerHeight","imgId","shaper","shapeCoords","qtiCoords","raphaelCoords","flashing","updateElementState","touchEffect","touchstart","createTouchCircle","createTarget","baseSize","half","tBBox","targetSize","click","select","coord","mapper","radius","tCircle","createText","scaledFontSize","content","updateTitle","createShapeText","shapeClick","createBorderedImage","padding","halfPad","rw","rh","ix","iy","iw","ih","shadow","move","nodeName","highlightError","restoredState","evt","where","getPoint","clickPoint","pw","cw","ph","pageX","pageY","graphic","background","_vsets","one","partial","_renderChoice","_paperUnSelect","maxAssociations","assocs","_shapesUnSelectable","_getActiveElement","_createPath","_isMatchable","_shapesSelectable","srcElement","destElement","onRemove","showCloser","closerBg","removeSet","closer","hideCloser","unclick","invoke","vset","without","dest","srcBullet","destBullet","midPath","matching","matchable","responseValue","el1","toRemove","triggerMouseEvent","activeDrop","isDirectedPairFlipped","flipDirectedPair","tooltip","gapFillers","gapFiller","$gapImages","bgImage","usages","_selectShape","trackResponse","$img","$clone","shapeOffset","activeOffset","currentCount","$gapList","$active","$imageBox","boxOffset","z-index","gapFillerImage","rElement","handleShapeSelect","_renderGapList","toggleActiveGapState","_setInactiveGapState","_setActiveGapState","gapFillersSelector","responseChoice","responseGap","$orderList","_renderOrderList","_unselectShape","$orderers","$orderer","_createTexts","_showText","number","_hideText","transf","pseudoLabel","$inupt","_defaultOptions","allowEmpty","opts","select2","minimumResultsForSearch","dropdownCssClass","qtip","theme","choiceIdentifier","depth1","programWithDepth","inWarning","_onCheckboxSelected","_filterResponse","_inferValue","currentResponse","_countChoices","_maxMatchReached","association","_getChoiceDefinitionByIdentifier","matchMin","_countAssociations","rawResponse","_getRawChoices","rawChoices","matchset","minAssociations","onMaxChoicesReached","report","onMatchMaxReached","originalBackgroundColor","originalColor","backgroundColor","responseCount","prependTo","inferValue","mediaplayer","media","$item","maxPlays","canBePlayed","current","debounce","mediaElement","initMediaPlayer","canPause","canSeek","volume","autoStart","loop","renderTo","program15","program17","program19","program21","_isDropzoneVisible","$dropzoneElement","_insertDropzone","insertPosition","draggedMiddle","_getMiddleOf","previousMiddle","currentMiddle","orientation","before","_adjustDropzonePosition","draggedBox","$prevResult","$nextResult","prevMiddle","nextMiddle","after","elementBox","$iconAdd","$iconRemove","$iconBefore","$iconAfter","$dragContainer","_activeControls","_resetControls","_setSelection","_addChoiceToSelection","$results","_toggleResultSelection","_removeChoice","_moveResultBefore","$prev","_moveResultAfter","$next","hasBeenDroppedInResultArea","dropzoneIndex","_freezeSize","$orderArea","instructionMax","initialOrder","$choices","fixMarkupMediaSources","imgSrcPattern","substr","_pciHooks","register","pciHook","notifyReady","pciInstance","notifyDone","onready","ondone","createPciInstance","pciTypeIdentifier","instance","proto","PortableElement","qtiCustomInteractionContext","pciReadyCallback","info","pciDoneCallback","_getPci","_taoCustomInteraction","_isPciModel","getAssetManager","requireEntries","lib","pciAssetManager","resolved","resolveBy","templateVariables","boundTo","getInstance","initialize","serializedState","setSerializedState","getSerializedState","getRawResponse","points","addPoint","pointChange","isTouch","enableSelection","isResponsive","untouchstart","_slideTo","sliderCurrentValue","sliderValue","$sliderLabels","$sliderCurrentValue","$sliderValue","lowerBound","steps","inArray","sliderSize","stepLabel","middleStep","leftOffset","middleValue","noUiSlider","startValue","locale","createTooltip","forceCreation","hidden","updateConstraintTooltip","maxChars","accept","uploadMime","getMimeTypes","mime","equivalent","setExpectedTypes","types","selectedType","getExpectedTypes","includeEquivalents","mimes","equivalents","mimeData","uploadHelper","_initialInstructions","_readyInstructions","validateFileType","expectedTypes","filetype","getMimeType","getMessageWrongType","userSelectedType","messageWrongType","expectedTypeLabels","_handleSelectedFiles","reader","filename","FileReader","base64Data","commaPosition","base64Raw","$previewArea","progressbar","previewer","imgNaturalWidth","isOversized","modalWidth","$originalImg","$largeDisplay","itemWidth","winWidth","fullHeight","naturalWidth","$modalBody","modal","modalOverlayClass","onloadstart","onprogress","percentProgress","ceil","readAsDataURL","_resetGui","changeListener","files","getCustomMessage","bind","resetGui","informLoaded","leading","attach","$head","$link","itemStylesheetHandler","MathJax","Hub","processSectionDelay","Queue","unless","inline","feedbackStyle","_checkContainerType","_getBodyDom","_setBodyDomClass","newClass","oldClass","$wrapper","_setDomClass","$bodyDom","wrapInner","setEncodedDataToDom","dataName","newValue","oldValue","_getEncodedDataString","_prefix","setEncodedData","getEncodedData","removeEncodedData","hasEncodedData","matches","coreContainerHelper","modalFeedbackRenderer","minHeight","fb","$modal","$itemBody","requiredHeight","outerHeight","startClosed","previewOptions","_picHooks","picHook","picInstance","qtiInfoControlContext","_getPic","_taoInfoControl","picAssetManager","convertChoices","outputType","findChoices","inputType","shuffleChoices","tmp","serialToIdentifier","interactionHelper","themeLoader","getDocumentBaseUrl","host","pathname","_isValidRenderer","classCorrect","_renderableClasses","subClass","_renderableSubclasses","_dependencies","_defaults","Renderer","registerRendererClass","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","elementName","messageKey","compile","getThemeLoader","qtiSubclass","decorators","qtiInteraction","getLoadedRenderers","renderersLocations","reqClass","deps","requiredSubClasses","unload","setShuffledChoices","identificationType","reshuffle","returnedType","getRenderers","getLocations","getAbsoluteUrl","relUrl","absUrl","runtimeLocations","setAreaBroker","areaBroker","_areaBroker","getAreaBroker","build","defaultOptions","NewRenderer","rubric","summary"],"mappings":"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","file":"qtiBootstrap.min.js","sourcesContent":["/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\n\n/**\n * Common basic util functions\n */\ndefine('taoQtiItem/qtiItem/helper/util',['lodash'], function(_){\n    'use strict';\n\n    var util = {\n\n        buildSerial : function buildSerial(prefix){\n            var id = prefix || '';\n            var chars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n            for(var i = 0; i < 22; i++){\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId : function buildId(item, prefix){\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds   = item.getUsedIds();\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(_.contains(usedIds, id)){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier : function buildIdentifier(item, prefix, useSuffix){\n\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if(!prefix){\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds   = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if(prefix){\n                prefix = prefix.replace(/_[0-9]+$/ig, '_') //detect incremental id of type choice_12, response_3, etc.\n                               .replace(/[^a-zA-Z0-9_]/ig, '_')\n                               .replace(/(_)+/ig, '_');\n                if(useSuffix){\n                    suffix = '_' + i;\n                }\n            }\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(usedIds[id]){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n        findInCollection : function findInCollection(element, collectionNames, searchedSerial){\n\n            var found = null;\n\n            if(_.isString(collectionNames)){\n                collectionNames = [collectionNames];\n            }\n\n            if(_.isArray(collectionNames)){\n\n                _.each(collectionNames, function(collectionName){\n\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken){\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if(elt){\n                        found = {'parent' : element, 'element' : elt};\n                        return false;//break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt){\n\n                        if(_.isFunction(elt.find)){\n                            found = elt.find(searchedSerial);\n                            if(found){\n                                return false;//break the each loop\n                            }\n                        }\n\n                    });\n\n                    if(found){\n                        return false;//break the each loop\n                    }\n\n                });\n\n            }else{\n\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace : function addMarkupNamespace(markup, ns){\n            if(ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4){\n                    if($2.indexOf(':')>0){\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<'+ $1 + ns + ':'+$2+$3+$4+'>';\n                });\n                return markup;\n            }\n            return markup;\n\n        },\n        removeMarkupNamespaces : function removeMarkupNamespace(markup){\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces : function getMarkupUsedNamespaces(markup){\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node){\n                namespaces.push(ns);\n                return '<'+slash+node+'>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function(_, $){\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args){\n\n        var options = {\n            data : {},\n            placeholder : null,\n            subclass : '',\n            renderer : null\n        };\n        \n        _.each(args, function(arg){\n            if(arg){\n                if(arg.isRenderer){\n                    options.renderer = arg;\n                }else if(arg instanceof $ && arg.length){\n                    options.placeholder = arg;\n                }else if(_.isString(arg)){\n                    options.subclass = arg;\n                }else if(_.isPlainObject(arg)){\n                    options.data = arg;\n                }else{\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n        \n        return options;\n    };\n    \n    return rendererConfigHelper;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiItem/core/Element',[\n    'jquery',\n    'lodash',\n    'class',\n    'core/logger',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function($, _, Class, loggerFactory, util, rendererConfig){\n    'use strict';\n\n    var logger = loggerFactory('taoQtiItem/core/Element');\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass : '',\n        serial : '',\n        rootElement : null,\n        init : function(serial, attributes){\n\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if(typeof (serial) === 'object'){\n                attributes = serial;\n                serial = '';\n            }\n\n            if(!serial){\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if(serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))){\n                throw 'invalid QTI serial : (' + (typeof serial) + ') ' + serial;\n            }\n\n            if(!_instances[serial]){\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            }else{\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                this.initContainer(arguments[2] || '');\n            }\n            if(typeof this.initObject === 'function'){\n                this.initObject();\n            }\n        },\n        is : function(qtiClass){\n            return (qtiClass === this.qtiClass);\n        },\n        placeholder : function(){\n            return '{{' + this.serial + '}}';\n        },\n        getSerial : function(){\n            return this.serial;\n        },\n        getUsedIdentifiers : function(){\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for(var i in elts){\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if(id){\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds : function getUsedIds(){\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt){\n                var id = elt.attr('id');\n                if(id && !_.contains(usedIds, id)){\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.attributes[name] = value;\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.attr(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.attributes[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', {element : this, key : name, value : value});\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.data(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.metaData[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData : function(name){\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr : function(name){\n            return this.removeAttributes(name);\n        },\n        setAttributes : function(attributes){\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes : function(){\n            return _.clone(this.attributes);\n        },\n        removeAttributes : function(attrNames){\n            if(typeof (attrNames) === 'string'){\n                attrNames = [attrNames];\n            }\n            for(var i in attrNames){\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements : function(){\n            var elts = {};\n            function append(element){\n                elts[element.getSerial()] = element;//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if(typeof this.initContainer === 'function'){\n                append(this.getBody());\n            }\n            if(typeof this.initObject === 'function'){\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v){\n                if(Element.isA(v, '_container')){\n                    append(v);\n                }else if(_.isArray(v)){\n                    _.each(v, function(v){\n                        if(Element.isA(v, '_container')){\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses : function(){\n\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt){\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find : function(serial){\n\n            var found = null;\n\n            if(typeof this.initObject === 'function'){\n                var object = this.getObject();\n                if(object.serial === serial){\n                    found = {'parent' : this, 'element' : object, 'location' : 'object'};\n                }\n            }\n\n            if(!found && typeof this.initContainer === 'function'){\n                found = this.getBody().find(serial, this);\n            }\n\n            return found;\n        },\n        parent : function(){\n            var item = this.getRootElement();\n            if(item){\n                var found = item.find(this.getSerial());\n                if(found){\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem : function(item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement : function(item){\n            var composingElts,\n                i;\n\n            if(Element.isA(item, 'assessmentItem')){\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for(i in composingElts){\n                    composingElts[i].setRootElement(item);\n                }\n            }\n\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem : function(){\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement : function(){\n            var ret = null;\n            if(Element.isA(this.rootElement, 'assessmentItem')){\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer : function(renderer){\n            if(renderer && renderer.isRenderer){\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for(var serial in elts){\n                    elts[serial].setRenderer(renderer);\n                }\n            }else{\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer : function(){\n            return this.renderer;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n\n            var tplData = {},\n                defaultData = {\n                    'tag' : this.qtiClass,\n                    'serial' : this.serial,\n                    'attributes' : this.getAttributes()\n                };\n\n            if(!_renderer){\n                throw 'render: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if(typeof this.initObject === 'function'){\n                defaultData.object = {\n                    attributes : this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            var rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if(args.placeholder){\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender : function(data, altClassName, renderer){\n\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if(_renderer){\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            }else{\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer : function($scope, subclass){\n            var renderer = this.getRenderer();\n            if(renderer){\n                return renderer.getContainer(this, $scope, subclass);\n            }else{\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray : function(){\n            var arr = {\n                serial : this.serial,\n                type : this.qtiClass,\n                attributes : this.getAttributes()\n            };\n\n            if(typeof this.initContainer === 'function'){\n                arr.body = this.getBody().toArray();\n            }\n            if(typeof this.initObject === 'function'){\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty : function(){\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass : function(className){\n            var clazz = this.attr('class') || '';\n            if(!_containClass(clazz, className)){\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass : function(className){\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass : function(className){\n\n            var clazz = this.attr('class') || '';\n            if(clazz){\n\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if(clazz){\n                    this.attr('class', clazz);\n                }else{\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass : function(className, state) {\n\n            if(typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if(this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset : function(){\n            return Element.issetElement(this.serial);\n        },\n        unset : function(){\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className){\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass){\n        return (qtiElement instanceof Element && qtiElement.is(qtiClass));\n    };\n\n    Element.getElementBySerial = function(serial){\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial){\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial){\n\n        var element = Element.getElementBySerial(serial);\n\n        if(element){\n\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt){\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\n\n/**\n * IdentifiedElement model\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiItem/core/IdentifiedElement',[\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/util'\n], function(Element, util){\n    'use strict';\n\n    /**\n     * IdentifiedElement model\n     */\n    var IdentifiedElement = Element.extend({\n\n        /**\n         * Generates and assign an identifier\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {Object} for chaining\n         */\n        buildIdentifier : function buildIdentifier(prefix, useSuffix){\n            var item = this.getRootElement();\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\n            if(id){\n                this.attr('identifier', id);\n            }\n            return this;\n        },\n\n        /**\n         * Get/set and identifier. It will be generated if it doesn't exists.\n         * @param {String} [value] - set the value or get it if not set.\n         * @returns {String} the identifier\n         */\n        id : function id(value){\n            if(!value && !this.attr('identifier')){\n                this.buildIdentifier(this.qtiClass, true);\n            }\n            return this.attr('identifier', value);\n        }\n    });\n\n    /**\n     * @exports taoQtiItem/qtiItem/core/IdentifiableElement\n     */\n    return IdentifiedElement;\n});\n\n\n","define('taoQtiItem/qtiItem/core/choices/Choice',['taoQtiItem/qtiItem/core/IdentifiedElement'], function(IdentifiedElement){\n\n    var Choice = IdentifiedElement.extend({\n        init : function(serial, attributes){\n            this._super(serial, attributes);\n        },\n        is : function(qtiClass){\n            return (qtiClass === 'choice') || this._super(qtiClass);\n        },\n        getInteraction : function(){\n            var found, ret = null, item = this.getRootElement();\n            if(item){\n                found = item.find(this.serial);\n                if(found){\n                    ret = found.parent;\n                }\n            }\n            return ret;\n        }\n    });\n\n    return Choice;\n});\n","define('taoQtiItem/qtiItem/core/choices/Hotspot',['taoQtiItem/qtiItem/core/choices/Choice'], function(QtiChoice){\n    var QtiHotspot = QtiChoice.extend({});\n    return QtiHotspot;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/AssociableHotspot',['taoQtiItem/qtiItem/core/choices/Hotspot'], function(QtiHotspot){\n    var QtiAssociableHotspot = QtiHotspot.extend({\n        qtiClass : 'associableHotspot'\n    });\n    return QtiAssociableHotspot;\n});\n\n\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function(){\n    \n    //@todo : need refactoring of qti item mixin with lodash.mixin()\n    return {\n        augment : function(targetClass, methods, options){\n            if(typeof(targetClass) === 'function' && typeof(methods) === 'object'){\n                for(var methodName in methods){\n                    if(!Object.hasOwnProperty(targetClass.prototype, methodName)){\n                        targetClass.prototype[methodName] = methods[methodName];\n                    }else{\n                        if(options && options.append){\n                            var _parent = targetClass.prototype[methodName];\n                            targetClass.prototype[methodName] = function(){\n                                methods[methodName].apply(this, arguments);\n                                return _parent.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiItem/core/Container',[\n    'jquery',\n    'lodash',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function($, _, Element, rendererConfig){\n    'use strict';\n\n    var Container = Element.extend({\n        qtiClass : '_container',\n        init : function(body){\n            this._super();//generate serial, attributes array always empty\n            if(body && typeof body !== 'string'){\n                throw 'the body of a container must be a string';\n            }\n            this.bdy = body || '';\n            this.elements = {};\n        },\n        body : function(body){\n            if(typeof body === 'undefined'){\n                return this.bdy;\n            }else{\n                if(typeof body === 'string'){\n                    this.bdy = body;\n                    $(document).trigger('containerBodyChange', {\n                        body : body,\n                        container : this\n                    });\n                }else{\n                    throw 'body must be a string';\n                }\n            }\n        },\n        setElements : function(elements, body){\n            var returnValue = false;\n\n            for(var i in elements){\n                var elt = elements[i];\n                if(elt instanceof Element){\n\n                    body = body || this.bdy;\n                    if(body.indexOf(elt.placeholder()) === -1){\n                        body += elt.placeholder();//append the element if no placeholder found\n                    }\n\n                    elt.setRootElement(this.getRootElement() || null);\n                    this.elements[elt.getSerial()] = elt;\n                    $(document).trigger('containerElementAdded', {\n                        element : elt,\n                        container : this\n                    });\n\n                    returnValue = true;\n                }else{\n                    returnValue = false;\n                    throw 'expected a qti element';\n                }\n            }\n\n            this.body(body);\n\n            return returnValue;\n        },\n        setElement : function(element, body){\n            return this.setElements([element], body);\n        },\n        removeElement : function(element){\n            var serial = '';\n            if(typeof(element) === 'string'){\n                serial = element;\n            }else if(element instanceof Element){\n                serial = element.getSerial();\n            }\n            delete this.elements[serial];\n            this.body(this.body().replace('{{' + serial + '}}', ''));\n            return this;\n        },\n        getElements : function(qtiClass){\n            var elts = {};\n            if(typeof(qtiClass) === 'string'){\n                for(var serial in this.elements){\n                    if(Element.isA(this.elements[serial], qtiClass)){\n                        elts[serial] = this.elements[serial];\n                    }\n                }\n            }else{\n                elts = _.clone(this.elements);\n            }\n            return elts;\n        },\n        getElement : function(serial){\n            return this.elements[serial] ? this.elements[serial] : null;\n        },\n        getComposingElements : function(){\n            var elements = this.getElements();\n            var elts = {};\n            for(var serial in elements){\n                elts[serial] = elements[serial];//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, elements[serial].getComposingElements());\n            }\n            return elts;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                elementsData = [],\n                tpl = this.body();\n\n            for(var serial in this.elements){\n                var elt = this.elements[serial];\n                if(typeof elt.render === 'function'){\n                    if(elt.qtiClass === '_container'){\n                        //@todo : container rendering merging, to be tested\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\n                    }else{\n                        tpl = tpl.replace(elt.placeholder(), '{{{' + serial + '}}}');\n                        elementsData[serial] = elt.render(renderer);\n                    }\n                }else{\n                    throw 'render() is not defined for the qti element: ' + serial;\n                }\n            }\n\n            if(renderer.isRenderer){\n                return this._super({\n                    body : renderer.renderDirect(tpl, elementsData),\n                    contentModel : this.contentModel || 'flow'\n                }, renderer, args.placeholder);\n            }else{\n                throw 'invalid qti renderer for qti container';\n            }\n        },\n        postRender : function(data, altClassName, renderer){\n            renderer = renderer || this.getRenderer();\n\n            var res = _(this.elements)\n                .filter( function(elt){\n                    return typeof elt.postRender === 'function';\n                })\n                .map(function(elt){\n                    return elt.postRender(data, '', renderer);\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n            return res;\n        },\n        toArray : function(){\n            var arr = {\n                serial : this.serial,\n                body : this.bdy,\n                elements : {}\n            };\n\n            for(var serial in this.elements){\n                arr.elements[serial] = this.elements[serial].toArray();\n            }\n\n            return arr;\n        },\n        find : function(serial, parent){\n\n            var found = null;\n\n            if(this.elements[serial]){\n\n                found = {parent : parent || this, element : this.elements[serial], location : 'body'};\n\n            }else{\n\n                _.each(this.elements, function(elt){\n\n                    found = elt.find(serial);\n                    if(found){\n                        return false;//break loop\n                    }\n                });\n            }\n\n            return found;\n        },\n        isEmpty : function(){\n            return !this.bdy;\n        }\n    });\n\n    return Container;\n});\n\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function(Mixin, Container){\n\n    var methods = {\n        initContainer : function(body){\n            this.bdy = new Container(body || '');\n            this.bdy.setRootElement(this.getRootElement() || null);\n            this.bdy.contentModel = 'blockStatic';\n        },\n        getBody : function(){\n            return this.bdy;\n        },\n        body : function(body){\n            var ret = this.bdy.body(body);\n            return (body) ? this : ret;//for method chaining on get\n        },\n        setElement : function(element, body){\n            this.bdy.setElement(element, body);\n            return this;\n        },\n        removeElement : function(element){\n            return this.bdy.removeElement(element);\n        },\n        getElements : function(qtiClass){\n            return this.bdy.getElements(qtiClass);\n        },\n        getElement : function(serial){\n            return this.bdy.getElement(serial);\n        }\n    };\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n","define('taoQtiItem/qtiItem/core/choices/ContainerChoice',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/Container'], function(Choice, Container){\n\n    var ContainerChoice = Choice.extend({\n        init : function(serial, attributes){\n            this._super(serial, attributes);\n        },\n        is : function(qtiClass){\n            return (qtiClass === 'containerChoice') || this._super(qtiClass);\n        }\n    });\n    \n    Container.augment(ContainerChoice);\n    \n    return ContainerChoice;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/Gap',['taoQtiItem/qtiItem/core/choices/Choice'], function(QtiChoice){\n    var QtiGap = QtiChoice.extend({\n        qtiClass : 'gap'\n    });\n    return QtiGap;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/Object',[\n    'taoQtiItem/qtiItem/core/Element',\n    'lodash',\n    'taoQtiItem/qtiItem/helper/rendererConfig',\n    'taoQtiItem/qtiItem/helper/util'\n], function(Element, _, rendererConfig, util){\n\n    var QtiObject = Element.extend({\n        qtiClass : 'object',\n        getMediaType : function(){\n            var type = 'undefined';\n            var mimetype = this.attr('type');\n            if(mimetype){\n                if(mimetype.indexOf('video') === 0){\n                    type = 'video';\n                }else if(mimetype.indexOf('audio') === 0){\n                    type = 'audio';\n                }else if(mimetype.indexOf('image') === 0){\n                    type = 'image';\n                }else if(mimetype.indexOf('text/html') === 0){\n                    type = 'html';\n                }else{\n                    type = 'object';\n                }\n            }\n            return type;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            switch(this.getMediaType()){\n                case 'video':\n                    defaultData.video = true;\n                    break;\n                case 'audio':\n                    defaultData.audio = true;\n                    break;\n                case 'html':\n                    defaultData.html = true;\n                    break;\n                case 'image':\n                default:\n                    defaultData.object = true;\n            }\n\n            defaultData.attributes = {data : renderer.resolveUrl(this.attr('data'))};\n            defaultData.body = this._alt;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty : function(){\n            return (!this.attr('data'));\n        }\n    });\n\n    return QtiObject;\n});\n\n","define('taoQtiItem/qtiItem/core/choices/GapImg',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/core/Object'], function(QtiChoice, QtiObject){\n    var QtiGapImg = QtiChoice.extend({\n        qtiClass : 'gapImg',\n        //common methods to object containers (start)\n        initObject : function(object){\n            this.object = object || new QtiObject();\n        },\n        getObject : function(){\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n    return QtiGapImg;\n});\n\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiItem/qtiItem/core/choices/GapText',[\n    'taoQtiItem/qtiItem/core/choices/ContainerChoice'\n], function(QtiContainerChoice) {\n    'use strict';\n    var QtiGapText = QtiContainerChoice.extend({\n        qtiClass : 'gapText'\n    });\n    return QtiGapText;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/HotspotChoice',['taoQtiItem/qtiItem/core/choices/Hotspot'], function(QtiHotspot){\n    var QtiHotspotChoice = QtiHotspot.extend({\n        qtiClass : 'hotspotChoice'\n    });\n    return QtiHotspotChoice;\n});\n\n\n\n","define('taoQtiItem/qtiItem/mixin/ContainerInline',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function(Mixin, Container, _){\n    \n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer:function(body){\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'inlineStatic';\n        }\n    });\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n","define('taoQtiItem/qtiItem/core/choices/Hottext',['taoQtiItem/qtiItem/core/choices/Choice', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function(Choice, Container){\n    \n    var Hottext = Choice.extend({\n        qtiClass : 'hottext'\n    });\n    \n    Container.augment(Hottext);\n    \n    return Hottext;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/TextVariableChoice',[\n    'jquery',\n    'lodash',\n    'taoQtiItem/qtiItem/core/choices/Choice',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function($, _, QtiChoice, rendererConfig){\n\n    var QtiTextVariableChoice = QtiChoice.extend({\n        init : function(serial, attributes, text){\n            this._super(serial, attributes);\n            this.val(text || '');\n        },\n        is : function(qtiClass){\n            return (qtiClass === 'textVariableChoice') || this._super(qtiClass);\n        },\n        val : function(text){\n            if(typeof text === 'undefined'){\n                return this.text;\n            }else{\n                if(typeof text === 'string'){\n                    this.text = text;\n                    $(document).trigger('choiceTextChange', {\n                        choice: this,\n                        text: text\n                    });\n                }else{\n                    throw 'text must be a string';\n                }\n            }\n            return this;\n        },\n        render : function(){\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer||this.getRenderer(),\n                defaultData = {\n                    body : this.text\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiTextVariableChoice;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/InlineChoice',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function(QtiTextVariableChoice){\n    var QtiInlineChoice = QtiTextVariableChoice.extend({\n        qtiClass : 'inlineChoice'\n    });\n    return QtiInlineChoice;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function(QtiContainerChoice){\n\n    var QtiSimpleAssociableChoice = QtiContainerChoice.extend({\n        qtiClass : 'simpleAssociableChoice'\n    });\n    \n    return QtiSimpleAssociableChoice;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/SimpleChoice',['taoQtiItem/qtiItem/core/choices/ContainerChoice'], function(QtiContainerChoice){\n\n    var QtiSimpleChoice = QtiContainerChoice.extend({\n        qtiClass : 'simpleChoice'\n    });\n\n    return QtiSimpleChoice;\n\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/choices/TextEntry',['taoQtiItem/qtiItem/core/choices/TextVariableChoice'], function(QtiTextVariableChoice){\r\n    var QtiTextEntry = QtiTextVariableChoice.extend({\r\n        qtiClass : 'textEntry'\r\n    });\r\n    return QtiTextEntry;\r\n});\r\n\r\n\r\n\n","define('taoQtiItem/qtiItem/core/feedbacks/Feedback',['taoQtiItem/qtiItem/core/IdentifiedElement'], function(IdentifiedElement){\n    var Feedback = IdentifiedElement.extend({\n        is : function(qtiClass){\n            return (qtiClass === 'feedback') || this._super(qtiClass);\n        }\n    });\n    return Feedback;\n});\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function(Feedback){\n    var FeedbackBlock = Feedback.extend({});\n    return FeedbackBlock;\n});\n","define('taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',['taoQtiItem/qtiItem/core/feedbacks/Feedback'], function(Feedback){\n    var FeedbackInline = Feedback.extend({});\n    return FeedbackInline;\n});\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function(IdentifiedElement, Container){\n    \n    var ModalFeedback = IdentifiedElement.extend({\n        'qtiClass' : 'modalFeedback',\n        is : function(qtiClass){\n            return (qtiClass === 'feedback') || this._super(qtiClass);\n        }\n    });\n    \n    Container.augment(ModalFeedback);\n    \n    return ModalFeedback;\n});\n","define('taoQtiItem/qtiItem/core/Img',[\n    'taoQtiItem/qtiItem/core/Element',\n    'lodash',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function(Element, _, rendererConfig){\n\n    var Img = Element.extend({\n        qtiClass : 'img',\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {\n                src : renderer.resolveUrl(this.attr('src'))\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty : function(){\n            return (!this.attr('src'));\n        }\n    });\n\n    return Img;\n});\n\n","define('taoQtiItem/qtiItem/mixin/NamespacedElement',['taoQtiItem/qtiItem/mixin/Mixin', 'lodash'], function(Mixin, _){\n\n    var methods = {\n        getNamespace : function(){\n\n            if(this.ns && this.ns.name && this.ns.uri){\n                return _.clone(this.ns);\n            }else{\n\n                var relatedItem = this.getRootElement();\n                if(relatedItem){\n                    var namespaces = relatedItem.getNamespaces();\n                    for(var ns in namespaces){\n                        if(namespaces[ns].indexOf(this.nsUriFragment) > 0){\n                            return {\n                                name : ns,\n                                uri : namespaces[ns]\n                            };\n                        }\n                    }\n                    //if no ns found in the item, set the default one!\n                    relatedItem.namespaces[this.defaultNsName] = this.defaultNsUri;\n                    return {\n                        name : this.defaultNsName,\n                        uri : this.defaultNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setNamespace : function(name, uri){\n            this.ns = {\n                name : name,\n                uri : uri\n            };\n        }\n    };\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n","define('taoQtiItem/qtiItem/core/Include',[\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/mixin/ContainerInline',\n    'taoQtiItem/qtiItem/mixin/NamespacedElement'\n], function(Element, Container, NamespacedElement){\n    \n    var Include = Element.extend({\n        qtiClass : 'include',\n        defaultNsName : 'xi',\n        defaultNsUri : 'http://www.w3.org/2001/XInclude',\n        nsUriFragment : 'XInclude',\n        isEmpty : function(){\n            return (!this.attr('href') || this.getBody().isEmpty());\n        }\n    });\n    Container.augment(Include);\n    NamespacedElement.augment(Include);\n    return Include;\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Interaction',[\n    'taoQtiItem/qtiItem/core/Element',\n    'lodash',\n    'taoQtiItem/qtiItem/helper/rendererConfig',\n    'taoQtiItem/qtiItem/helper/util'\n], function(Element, _, rendererConfig, util){\n    'use strict';\n\n    var QtiInteraction = Element.extend({\n        init : function(serial, attributes){\n            this._super(serial, attributes);\n            this.choices = {};\n        },\n        is : function(qtiClass){\n            return (qtiClass === 'interaction') || this._super(qtiClass);\n        },\n        addChoice : function(choice){\n            choice.setRootElement(this.getRootElement() || null);\n            this.choices[choice.getSerial()] = choice;\n            return this;\n        },\n        getChoices : function(){\n            var choices = {};\n            for(var i in this.choices){//prevent passing the whole array by ref\n                choices[i] = this.choices[i];\n            }\n            return choices;\n        },\n        getChoice : function(serial){\n            var ret = null;\n            if(this.choices[serial]){\n                ret = this.choices[serial];\n            }\n            return ret;\n        },\n        getChoiceByIdentifier : function(identifier){\n            for(var i in this.choices){\n                if(this.choices[i].id() === identifier){\n                    return this.choices[i];\n                }\n            }\n            return null;\n        },\n        getComposingElements : function(){\n            var elts = this._super();\n            //recursive to choices:\n            for(var serial in this.choices){\n                if(Element.isA(this.choices[serial], 'choice')){\n                    elts[serial] = this.choices[serial];\n                    elts = _.extend(elts, this.choices[serial].getComposingElements());\n                }\n            }\n            return elts;\n        },\n        find : function(serial){\n            var found = this._super(serial);\n            if(!found){\n                found = util.findInCollection(this, 'choices', serial);\n            }\n            return found;\n        },\n        getResponseDeclaration : function(){\n            var response = null;\n            var responseId = this.attr('responseIdentifier');\n            if(responseId){\n                var item = this.getRootElement();\n                if(item){\n                    response = item.getResponseDeclaration(responseId);\n                }else{\n                    throw 'cannot get response of an interaction out of its item context';\n                }\n            }\n            return response;\n        },\n        /**\n         * Render the interaction to the view.\n         * The optional argument \"subClass\" allows distinguishing customInteraction: e.g. customInteraction.matrix, customInteraction.likertScale ...\n         */\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    '_type' : this.qtiClass.replace(/([A-Z])/g, function($1){\n                        return \"_\" + $1.toLowerCase();\n                    }),\n                    'choices' : [],\n                    'choiceShuffle' : true\n                };\n\n            if(!renderer){\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            var choices = (this.attr('shuffle') && renderer.getOption('shuffleChoices')) ? renderer.getShuffledChoices(this) : this.getChoices();\n            var interactionData = {'interaction' : {'serial' : this.serial, 'attributes' : this.attributes}};\n            var _this = this;\n            _.each(choices, function(choice){\n                if(Element.isA(choice, 'choice')){\n                    try{\n                        var renderedChoice = choice.render(_.clone(interactionData, true), null, choice.qtiClass + '.' + _this.qtiClass, renderer); //use interaction type as choice subclass\n                        defaultData.choices.push(renderedChoice);\n                    }catch(e){\n                        //leave choices empty in case of error\n                    }\n                }\n            });\n\n            var tplName = args.subclass ? this.qtiClass + '.' + args.subclass : this.qtiClass;\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, tplName, renderer);\n        },\n        postRender : function(data, altClassName, renderer){\n            var self = this;\n            renderer = renderer || this.getRenderer();\n\n            return _(this.getChoices())\n                .filter(function(elt){\n                    return Element.isA(elt, 'choice');\n                })\n                .map(function(choice){\n                    return choice.postRender({}, choice.qtiClass + '.' + self.qtiClass, renderer);\n                })\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        setResponse : function(values){\n            var ret = null;\n            var renderer = this.getRenderer();\n            if(renderer){\n                ret = renderer.setResponse(this, values);\n            }else{\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        getResponse : function(){\n            var ret = null;\n            var renderer = this.getRenderer();\n            if(renderer){\n                ret = renderer.getResponse(this);\n            }else{\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n        resetResponse : function(){\n            var ret = null;\n            var renderer = this.getRenderer();\n            if(renderer){\n                ret = renderer.resetResponse(this);\n            }else{\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state is provided by the interaction's renderer.\n         *\n         * @returns {Object} the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        getState : function(){\n            var ret = null;\n            var renderer = this.getRenderer();\n            if(renderer){\n                if(_.isFunction(renderer.getState)){\n                    ret = renderer.getState(this);\n                }\n            }else{\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n            return ret;\n        },\n\n        /**\n         * Retrieve the state of the interaction.\n         * The state will be given to the interaction's renderer.\n         *\n         * @param {Object} state - the interaction's state\n         * @throws {Error} if no renderer is found\n         */\n        setState : function(state){\n            var renderer = this.getRenderer();\n            if(renderer){\n                if(_.isFunction(renderer.setState)){\n                    renderer.setState(this, state);\n                }\n            }else{\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n        },\n\n        /**\n         * Clean up an interaction rendering.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        clear : function(){\n            var renderer = this.getRenderer();\n            if(renderer && _.isFunction(renderer.destroy)){\n                renderer.destroy(this);\n            }\n        },\n\n        toArray : function(){\n            var arr = this._super();\n            arr.choices = {};\n            for(var serial in this.choices){\n                if(Element.isA(this.choices[serial], 'choice')){\n                    arr.choices[serial] = this.choices[serial].toArray();\n                }\n            }\n            return arr;\n        },\n\n        getNormalMaximum : function getNormalMaximum(){\n            //by default\n            return false;\n        }\n    });\n    return QtiInteraction;\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/Prompt',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/ContainerInline'], function(Element, Container){\n    var Prompt = Element.extend({qtiClass : 'prompt'});\n    Container.augment(Prompt);\n    return Prompt;\n});\n","define('taoQtiItem/qtiItem/core/interactions/BlockInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/Interaction',\n    'taoQtiItem/qtiItem/core/interactions/Prompt',\n    'lodash',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function(Interaction, Prompt, _, rendererConfig){\n    'use strict';\n\n    var BlockInteraction = Interaction.extend({\n        init : function(serial, attributes){\n            this._super(serial, attributes);\n            this.prompt = new Prompt('');\n        },\n        is : function(qtiClass){\n            return (qtiClass === 'blockInteraction') || this._super(qtiClass);\n        },\n        getComposingElements : function(){\n            var elts = this._super();\n            elts = _.extend(elts, this.prompt.getComposingElements());\n            elts[this.prompt.getSerial()] = this.prompt;\n            return elts;\n        },\n        find : function(serial){\n            return this._super(serial) || this.prompt.find(serial);\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    'prompt' : this.prompt.render(renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender : function(data, altClassName, renderer){\n            renderer = renderer || this.getRenderer();\n            return []\n                    .concat(this.prompt.postRender({}, '', renderer))\n                    .concat(this._super(data, altClassName, renderer));\n        },\n        toArray : function(){\n            var arr = this._super();\n            arr.prompt = this.prompt.toArray();\n            return arr;\n        }\n    });\n    return BlockInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/helper/response',['lodash'], function(_) {\n    'use strict';\n\n    var _templateNames = {\n        'MATCH_CORRECT': 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        'MAP_RESPONSE': 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        'MAP_RESPONSE_POINT': 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        'NONE': 'no_response_processing'\n    };\n\n    return {\n        isUsingTemplate: function isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isValidTemplateName: function isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName: function getTemplateUriFromName(tplName) {\n            if (_templateNames[tplName]) {\n                return _templateNames[tplName];\n            }\n            return '';\n        },\n        getTemplateNameFromUri: function getTemplateNameFromUri(tplUri) {\n            var tplName = '';\n            _.forIn(_templateNames, function (uri, name) {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n            return tplName;\n        }\n    };\n});\n","define('taoQtiItem/qtiCreator/model/helper/event',['jquery', 'lodash'], function($, _){\n    \"use strict\";\n    var _ns = '.qti-creator';\n    var _ns_model = '.qti-creator';\n    var eventList = [\n        'containerBodyChange',\n        'containerElementAdded',\n        'elementCreated.qti-widget',\n        'attributeChange.qti-widget',\n        'choiceCreated.qti-widget',\n        'correctResponseChange.qti-widget',\n        'mapEntryChange.qti-widget',\n        'mapEntryRemove.qti-widget',\n        'deleted.qti-widget',\n        'choiceTextChange.qti-widget',\n        'responseTemplateChange.qti-widget',\n        'mappingAttributeChange.qti-widget',\n        'feedbackRuleConditionChange.qti-widget',\n        'feedbackRuleCreated.qti-widget',\n        'feedbackRuleRemoved.qti-widget',\n        'feedbackRuleElseCreated.qti-widget',\n        'feedbackRuleElseRemoved.qti-widget'\n    ];\n\n    var event = {\n        choiceCreated : function(choice, interaction){\n            $(document).trigger('choiceCreated.qti-widget', {choice : choice, interaction : interaction});\n        },\n        deleted : function(element, parent){\n\n            if(element.isset()){\n                element.unset();\n            }\n\n            $(document).off('.' + element.getSerial());\n            $(document).trigger('deleted.qti-widget', {element : element, parent : parent});\n        },\n        getList : function(addedNamespace){\n            var events = _.clone(eventList);\n            if(addedNamespace){\n                return _.map(events, function(e){\n                    return e + '.' + addedNamespace;\n                });\n            }else{\n                return events;\n            }\n        },\n        initElementToWidgetListeners : function(){\n\n            var ns = '.widget-container';\n\n            //forward all event to the widget $container\n            $(document).off(ns).on(event.getList(ns).join(' '), function(e, data){\n                var element = data.element || data.container || null;\n                if(data && element && element.data('widget')){\n                    element.data('widget').$container.trigger(e.type + _ns + _ns_model, data);\n                }\n            });\n\n        },\n        getNs : function(){\n            return _ns;\n        },\n        getNsModel : function(){\n            return _ns_model;\n        }\n    };\n\n    return event;\n});\n","define('taoQtiItem/qtiCreator/model/helper/invalidator',['lodash'], function(_){\n    \"use strict\";\n    var invalidator = {\n        completelyValid : function(element){\n\n            var item = element.getRootElement();\n            var serial, invalidElements;\n            if(item){\n                serial = element.getSerial();\n                invalidElements = item.data('invalid') || {};\n\n                delete invalidElements[serial];\n                item.data('invalid', invalidElements);\n            }\n        },\n        valid : function(element, key){\n\n            var item = element.getRootElement();\n            var serial = element.getSerial();\n            var invalidElements;\n\n            if(item){\n                invalidElements = item.data('invalid') || {};\n\n                if(key){\n\n                    if(invalidElements[serial] && invalidElements[serial][key]){\n                        delete invalidElements[serial][key];\n                        if(!_.size(invalidElements[serial])){\n                            delete invalidElements[serial];\n                        }\n\n                        item.data('invalid', invalidElements);\n                    }\n\n                }else{\n                    throw new Error('missing required argument \"key\"');\n                }\n            }\n        },\n        invalid : function(element, key, message, stateName){\n\n            var item = element.getRootElement();\n            var serial = element.getSerial();\n            var invalidElements;\n\n            if(item){\n                invalidElements = item.data('invalid') || {};\n\n                if(key){\n\n                    if(!invalidElements[serial]){\n                        invalidElements[serial] = {};\n                    }\n\n                    invalidElements[serial][key] = {\n                        message : message || '',\n                        stateName : stateName || 'active'\n                    };\n                    item.data('invalid', invalidElements);\n\n                }else{\n                    throw new Error('missing required arguments \"key\"');\n                }\n            }\n        },\n        isValid : function(element){\n\n            var item = element.getRootElement();\n            var serial = element.getSerial();\n            var invalidElements;\n\n            if(item){\n                invalidElements = item.data('invalid') || {};\n                return !invalidElements[serial];\n            }\n            return true;\n        }\n    };\n\n    return invalidator;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiCreator/model/mixin/editable',[\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiCreator/model/helper/event',\n    'taoQtiItem/qtiCreator/model/helper/invalidator',\n    'util/url'\n], function(_, $, Element, event, invalidator, url){\n    \"use strict\";\n\n    var _removeSelf = function(element){\n\n        var removed = false,\n            related = element.getRootElement();\n\n        if(related){\n\n            var found = related.find(element.getSerial());\n\n            if(found){\n\n                var parent = found.parent;\n                if(Element.isA(parent, 'interaction')){\n\n                    if(element.qtiClass === 'gapImg'){\n                        parent.removeGapImg(element);\n                    }else if(Element.isA(element, 'choice')){\n                        parent.removeChoice(element);\n                    }\n                    removed = true;\n\n                }else if(found.location === 'body' && _.isFunction(parent.initContainer)){\n\n                    if(_.isFunction(element.beforeRemove)){\n                        element.beforeRemove();\n                    }\n\n                    parent.getBody().removeElement(element);\n                    removed = true;\n\n                }else if(Element.isA(parent, '_container')){\n\n                    if(_.isFunction(element.beforeRemove)){\n                        element.beforeRemove();\n                    }\n\n                    parent.removeElement(element);\n                    removed = true;\n                }\n\n                if(removed){\n                    //mark it instantly as removed in case its is being used somewhere else\n                    element.data('removed', true);\n                    invalidator.completelyValid(element);\n                    event.deleted(element, parent);\n                }\n            }\n        }else{\n            throw 'no related item found';\n        }\n\n        return removed;\n    };\n\n    var _removeElement = function(element, containerPropName, eltToBeRemoved){\n\n        if(element[containerPropName]){\n\n            var targetSerial = '',\n                targetElt;\n\n            if(typeof (eltToBeRemoved) === 'string'){\n                targetSerial = eltToBeRemoved;\n                targetElt = Element.getElementBySerial(targetSerial);\n            }else if(eltToBeRemoved instanceof Element){\n                targetSerial = eltToBeRemoved.getSerial();\n                targetElt = eltToBeRemoved;\n            }\n\n            if(targetSerial){\n                invalidator.completelyValid(targetElt);\n                delete element[containerPropName][targetSerial];\n                Element.unsetElement(targetSerial);\n            }\n        }\n\n        return element;\n    };\n\n    var methods = {\n        init : function(serial, attributes){\n\n            //init call in the format init(attributes)\n            if(typeof (serial) === 'object'){\n                attributes = serial;\n                serial = '';\n            }\n\n            var attr = {};\n\n            if(_.isFunction(this.getDefaultAttributes)){\n                _.extend(attr, this.getDefaultAttributes());\n            }\n            _.extend(attr, attributes);\n\n            this._super(serial, attr);\n        },\n        attr : function(key, value){\n            var ret = this._super(key, value);\n            if(key !== undefined && value !== undefined){\n                $(document).trigger('attributeChange.qti-widget', {'element' : this, 'key' : key, 'value' : value});\n            }\n            return url.encodeAsXmlAttr(ret);\n        },\n        removeAttr : function(key){\n            var ret = this._super(key);\n            $(document).trigger('attributeChange.qti-widget', {'element' : this, 'key' : key, 'value' : null});\n            return ret;\n        },\n        remove : function(){\n            if(arguments.length === 0){\n                return _removeSelf(this);\n            }else if(arguments.length === 2){\n                return _removeElement(this, arguments[0], arguments[1]);\n            }else{\n                throw 'invalid number of argument given';\n            }\n        }\n    };\n\n    return methods;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function(IdentifiedElement){\n    'use strict';\n    /**\n     * It is the top abstract class for all variable classes\n     * (so not renderable and qtiClass undefined)\n     */\n    var VariableDeclaration = IdentifiedElement.extend({\n        init : function init(serial, attributes){\n            this._super(serial, attributes);\n            this.defaultValue = null;\n        },\n        is : function is(qtiClass){\n            return (qtiClass === 'variableDeclaration') || this._super(qtiClass);\n        },\n        toArray : function toArray(){\n            var arr = this._super();\n            arr.defaultValue = this.defaultValue;\n            return arr;\n        },\n        setDefaultValue : function setDefaultValue(value){\n            this.defaultValue = value;\n        },\n        getDefaultValue : function getDefaultValue(){\n            return this.defaultValue;\n        },\n    });\n\n    return VariableDeclaration;\n});\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function(VariableDeclaration){\n    return  VariableDeclaration.extend({\n        qtiClass : 'outcomeDeclaration'\n    });\n});\n","define('taoQtiItem/qtiCreator/model/variables/OutcomeDeclaration',['lodash', 'taoQtiItem/qtiCreator/model/mixin/editable', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function(_, editable, OutcomeDeclaration){\n    \"use strict\";\n    var methods = {};\n    _.extend(methods, editable);\n    return OutcomeDeclaration.extend(methods);\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiItem/helper/maxScore',[\n    'lodash',\n    'lib/gamp/gamp',\n    'taoQtiItem/qtiItem/helper/response',\n    'taoQtiItem/qtiCreator/model/variables/OutcomeDeclaration'\n], function(_, gamp, responseHelper, OutcomeDeclaration) {\n    'use strict';\n\n    /**\n     * This variable allow to globally define if the minCHoice needs to be taken into consideration.\n     * Standard-wise, it must definitely be considered.\n     * However, the item delivery lifecycle currently does not consider the minChoice constraint during delivery.\n     * It is thus currently set to true. After the correct behaviour is implemented, we should remove this variables.\n     * @type {boolean}\n     * @private\n     */\n    var _ignoreMinChoice = true;\n\n    var pairExists = function pairExists(collection, pair){\n        if(pair.length !== 2){\n            return false;\n        }\n        return (collection[pair[0]+' '+pair[1]] || collection[pair[1]+' '+pair[0]]);\n    };\n\n    return {\n        /**\n         * Set the normal maximum to the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setNormalMaximum : function setNormalMaximum(item) {\n            var normalMaximum,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                normalMaximum = _.reduce(item.getInteractions(), function (acc, interaction) {\n                    var interactionMaxScore = interaction.getNormalMaximum();\n                    if(_.isNumber(interactionMaxScore)){\n                        return gamp.add(acc, interactionMaxScore);\n                    }else{\n                        return false;\n                    }\n                }, 0);\n\n                if(_.isNumber(normalMaximum)){\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\n                }else{\n                    scoreOutcome.removeAttr('normalMaximum');\n                }\n            }\n        },\n\n        /**\n         * Set the maximum score of the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setMaxScore : function setMaxScore(item) {\n            var hasInvalidInteraction = false,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\n                customOutcomes,\n                maxScore,\n                maxScoreOutcome;\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n\n                maxScore = _.reduce(item.getInteractions(), function (acc, interaction) {\n                    var interactionMaxScore = interaction.getNormalMaximum();\n                    if(_.isNumber(interactionMaxScore)){\n                        return gamp.add(acc, interactionMaxScore);\n                    }else{\n                        hasInvalidInteraction = true;\n                        return acc;\n                    }\n                }, 0);\n\n                customOutcomes =  _(item.getOutcomes()).filter(function(outcome){\n                    return (outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE');\n                });\n\n                if(customOutcomes.size()){\n                    maxScore = customOutcomes.reduce(function (acc, outcome) {\n                        return gamp.add(acc, parseFloat(outcome.attr('normalMaximum')||0));\n                    }, maxScore);\n                }\n\n                if(!hasInvalidInteraction || customOutcomes.size()){\n                    maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\n                    if(!maxScoreOutcome){\n                        //add new outcome\n                        maxScoreOutcome = new OutcomeDeclaration({\n                            cardinality : 'single',\n                            baseType : 'float'\n                        });\n\n                        //attach the outcome to the item before generating item-level unique id\n                        item.addOutcomeDeclaration(maxScoreOutcome);\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\n                    }\n                    maxScoreOutcome.setDefaultValue(maxScore);\n                }else{\n                    //remove MAXSCORE:\n                    item.removeOutcome('MAXSCORE');\n                }\n            }\n        },\n\n        /**\n         * Sort an array of associable choices by its matchMax attr value\n         * @param {Array} choiceCollection\n         * @returns {Array}\n         */\n        getMatchMaxOrderedChoices : function getMatchMaxOrderedChoices(choiceCollection){\n            return _(choiceCollection).map(function(choice){\n                var matchMax = parseInt(choice.attr('matchMax'), 10);\n                if(_.isNaN(matchMax)){\n                    matchMax = 0;\n                }\n                return {\n                    matchMax : matchMax === 0 ? Infinity : matchMax,\n                    id: choice.id()\n                };\n            }).sortBy('matchMax').reverse().valueOf();\n        },\n\n        /**\n         * Compute the maximum score of a \"choice\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        choiceInteractionBased : function choiceInteractionBased(interaction, options){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue||0);\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, maxChoice, minChoice, scoreMaps, requiredChoiceCount, totalAnswerableResponse, sortedMapEntries, i, missingMapsCount;\n\n            options = _.defaults(options || {}, {maxChoices : 0, minChoices: 0});\n            maxChoice = parseInt(interaction.attr('maxChoices')||options.maxChoices, 10);\n            minChoice = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minChoices')||options.minChoices, 10);\n            if(maxChoice && minChoice && maxChoice < minChoice){\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if(maxChoice && _.isArray(responseDeclaration.correctResponse) && (responseDeclaration.correctResponse.length > maxChoice || responseDeclaration.correctResponse.length < minChoice)){\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                }else if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                //prepare constraint params\n                requiredChoiceCount = minChoice;\n                totalAnswerableResponse = (maxChoice === 0) ? Infinity : maxChoice;\n\n                //sort the score map entries by the score\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                sortedMapEntries = _(scoreMaps).map(function (v) {\n                    return parseFloat(v);\n                }).sortBy().reverse().first(totalAnswerableResponse);\n\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\n                missingMapsCount = minChoice - sortedMapEntries.size();\n                _.times(missingMapsCount, function(){\n                    sortedMapEntries.push(mapDefault);\n                });\n\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\n                if(mapDefault && mapDefault > 0){\n                    if(maxChoice){\n                        missingMapsCount = maxChoice - sortedMapEntries.size();\n                    }else{\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.size();\n                    }\n                    if(missingMapsCount > 0){\n                        _.times(missingMapsCount, function(){\n                            sortedMapEntries.push(mapDefault);\n                        });\n                    }\n                }\n\n                //calculate the maximum reachable score by choice map\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v;\n                    if(score < 0 && requiredChoiceCount <= 0){\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredChoiceCount--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                //map point response processing does not work on choice based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"order\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        orderInteractionBased : function orderInteractionBased(interaction){\n            var minChoice = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minChoices')||0, 10);\n            var maxChoice = parseInt(interaction.attr('maxChoices')||0, 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max;\n\n            if(maxChoice && minChoice && maxChoice < minChoice){\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if(_.isArray(responseDeclaration.correctResponse) && (maxChoice && responseDeclaration.correctResponse.length > maxChoice) || (minChoice && responseDeclaration.correctResponse.length < minChoice)){\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                }else if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;\n                }\n            }else if(template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\n                //map response processing does not work on order based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"associate\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        associateInteractionBased : function associateInteractionBased(interaction, options){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = parseInt(interaction.attr('maxAssociations')||0, 10);\n            var minAssoc = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minAssociations')||0, 10);\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue||0);\n            var max, requiredAssoc, totalAnswerableResponse, usedChoices, choicesIdentifiers, sortedMapEntries, i, allPossibleMapEntries, infiniteScoringPair;\n\n            options = _.defaults(options || {}, {possiblePairs : [], checkInfinitePair: false});\n\n            if(maxAssoc && minAssoc && maxAssoc < minAssoc){\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse\n                    || (_.isArray(responseDeclaration.correctResponse)\n                    && (!responseDeclaration.correctResponse.length || maxAssoc && responseDeclaration.correctResponse.length > maxAssoc || minAssoc && responseDeclaration.correctResponse.length < minAssoc) )){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;//is possible until proven otherwise\n\n                    //get the list of choices used in map entries\n                    choicesIdentifiers = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair){\n                        var choices;\n                        if(!_.isString(pair)){\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if(_.isArray(choices) && choices.length === 2){\n                            choicesIdentifiers.push(choices[0].trim());\n                            choicesIdentifiers.push(choices[1].trim());\n                        }\n                    });\n\n                    //check if the choices usage are possible within the constraint defined in the interaction\n                    _.forEach(_.countBy(choicesIdentifiers), function(count, identifier){\n                        var matchMax;\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        if(!choice){\n                            max = 0;\n                            return false;\n                        }\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if(matchMax && matchMax < count){\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                requiredAssoc = minAssoc;\n                totalAnswerableResponse = (maxAssoc === 0) ? Infinity : maxAssoc;\n                usedChoices = {};\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if(mapDefault && mapDefault > 0){\n                    _.forEachRight(options.possiblePairs, function(pair){\n                        if(!pairExists(allPossibleMapEntries, pair)){\n                            allPossibleMapEntries[pair[0]+' '+pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                //get the sorted list of mapentries ordered by the score\n                sortedMapEntries = _(allPossibleMapEntries).map(function(score, pair){\n                    return {\n                        score : parseFloat(score),\n                        pair : pair\n                    };\n                }).sortBy('score').reverse().filter(function(mapEntry){\n                    var pair = mapEntry.pair;\n                    var choices, choiceId, choice, _usedChoices;\n\n                    if(!_.isString(pair)){\n                        return false;\n                    }\n\n                    //check that the pair is possible in term of matchMax\n                    choices = pair.trim().split(' ');\n                    if(_.isArray(choices) && choices.length === 2){\n                        //clone the global used choices array to brings the changes in that object first before storing in the actual object\n                        _usedChoices = _.cloneDeep(usedChoices);\n\n                        for(i = 0; i < 2; i++){\n                            choiceId = choices[i];\n\n                            //collect choices usage to check if the pair is possible\n                            if(!_usedChoices[choiceId]){\n                                choice = interaction.getChoiceByIdentifier(choiceId);\n                                if(!choice){\n                                    //unexisting choice, skip\n                                    return false;\n                                }\n                                _usedChoices[choiceId] = {\n                                    used : 0,\n                                    max: parseInt(choice.attr('matchMax'), 10)\n                                };\n                            }\n                            if(_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max){\n                                //skip\n                                return false;\n                            }else{\n                                _usedChoices[choiceId].used ++;\n                            }\n                        }\n\n                        //identify the edge case when we can get infinite association pair that create an infinite score\n                        infiniteScoringPair = infiniteScoringPair || (options.checkInfinitePair\n                            && mapEntry.score > 0\n                            && _usedChoices[choices[0]].max === 0\n                            && _usedChoices[choices[1]].max === 0);\n\n                        //update the global used choices array\n                        _.assign(usedChoices, _usedChoices);\n                        return true;\n                    }else{\n                        //is not a correct response pair\n                        return false;\n                    }\n                }).first(totalAnswerableResponse);\n\n                //infinite score => no normalMaximum should be generated for it\n                if(infiniteScoringPair){\n                    return false;\n                }\n\n                //reduce the ordered list of map entries to calculate the max score\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v.score;\n                    if(v.score < 0 && requiredAssoc <= 0){\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredAssoc--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"gap match\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        gapMatchInteractionBased : function gapMatchInteractionBased(interaction){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = 0;\n            var minAssoc = 0;\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue||0);\n            var max, skippableWrongResponse, totalAnswerableResponse, usedChoices, usedGaps, group1, group2, allPossibleMapEntries;\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection){\n                return _(choiceCollection).map(function(choice){\n                    return {\n                        matchMax : choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\n                        id: choice.id()\n                    };\n                }).sortBy('matchMax').reverse().valueOf();\n            };\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction){\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\n\n                _.forEach(matchSet1, function(choice1){\n                    _.forEach(matchSet2, function(choice2){\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;//is possible until proven otherwise\n                    group1 = [];\n                    group2 = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair){\n                        var choices;\n                        if(!_.isString(pair)){\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if(_.isArray(choices) && choices.length === 2){\n                            group1.push(choices[0].trim());\n                            group2.push(choices[1].trim());\n                        }\n                    });\n\n                    _.forEach(_.countBy(group1), function(count, identifier){\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if(matchMax && matchMax < count){\n                            max = 0;\n                            return false;\n                        }\n                    });\n\n                    _.forEach(_.countBy(group2), function(count){\n                        var matchMax = 1;//match max for a gap is always 1\n                        if(matchMax && matchMax < count){\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                skippableWrongResponse = (minAssoc === 0) ? Infinity : minAssoc;\n                totalAnswerableResponse = (maxAssoc === 0) ? Infinity : maxAssoc;\n                usedChoices = {};\n                usedGaps = {};\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if(mapDefault && mapDefault > 0){\n                    _.forEachRight(calculatePossiblePairs(interaction), function(pair){\n                        if(!pairExists(allPossibleMapEntries, pair)){\n                            allPossibleMapEntries[pair[0]+' '+pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                max = _(allPossibleMapEntries).map(function(score, pair){\n                    return {\n                        score : parseFloat(score),\n                        pair : pair\n                    };\n                }).sortBy('score').reverse().filter(function(mapEntry){\n                    var pair = mapEntry.pair;\n                    var _usedChoices = _.cloneDeep(usedChoices);\n                    var choices, choiceId, gapId, choice;\n\n                    if(!_.isString(pair)){\n                        return false;\n                    }\n\n                    choices = pair.trim().split(' ');\n                    if(_.isArray(choices) && choices.length === 2){\n                        choiceId = choices[0];\n                        gapId = choices[1];\n                        if(!_usedChoices[choiceId]){\n                            choice = interaction.getChoiceByIdentifier(choiceId);\n                            if(!choice){\n                                //inexisting choice, skip\n                                return false;\n                            }\n                            _usedChoices[choiceId] = {\n                                used : 0,\n                                max: parseInt(choice.attr('matchMax'), 10)\n                            };\n                        }\n                        if(_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max){\n                            //skip\n                            return false;\n                        }\n                        _usedChoices[choiceId].used ++;\n\n                        if(!usedGaps[gapId]){\n                            usedGaps[gapId] = {\n                                used : 0,\n                                max: 1\n                            };\n                        }\n                        if(usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max){\n                            //skip\n                            return false;\n                        }\n                        usedGaps[gapId].used ++;\n\n                        //if an only if it is ok, we merge the temporary used choices array into the global one\n                        _.assign(usedChoices, _usedChoices);\n                        return true;\n                    }else{\n                        //is not a correct response pair\n                        return false;\n                    }\n                }).first(totalAnswerableResponse).reduce(function (acc, v) {\n                    var score = v.score;\n                    if (score >= 0) {\n                        return acc + score;\n                    } else if (skippableWrongResponse > 0) {\n                        skippableWrongResponse--;\n                        return acc;\n                    } else {\n                        return acc + score;\n                    }\n                }, 0);\n\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = false;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"select point\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        selectPointInteractionBased : function selectPointInteractionBased(interaction){\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\n            var minChoice = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minChoices'), 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, skippableWrongResponse, totalAnswerableResponse;\n\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\n                //such templates are not allowed\n                return 0;\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                //calculate the maximum reachable score by choice map\n                skippableWrongResponse = (minChoice === 0) ? Infinity : minChoice;\n                totalAnswerableResponse = (maxChoice === 0) ? Infinity : maxChoice;\n\n                max = _(responseDeclaration.mapEntries).map(function (v) {\n                    return parseFloat(v.mappedValue);\n                }).sortBy().reverse().first(totalAnswerableResponse).reduce(function (acc, v) {\n                    if (v >= 0) {\n                        return acc + v;\n                    } else if (skippableWrongResponse > 0) {\n                        skippableWrongResponse--;\n                        return acc;\n                    } else {\n                        return acc + v;\n                    }\n                }, 0);\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"slider\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        sliderInteractionBased : function sliderInteractionBased(interaction){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                max = _(scoreMaps).map(function (v) {\n                    return parseFloat(v);\n                }).max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"text entry\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        textEntryInteractionBased : function textEntryInteractionBased(interaction){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            /**\n             * Check that a response is possible or not according to the defined patternmask\n             * @param {String} value\n             * @returns {Boolean}\n             */\n            var isPossibleResponse = function isPossibleResponse(value){\n                var patternMask = interaction.attr('patternMask');\n                if(patternMask){\n                    return !!value.match(new RegExp(patternMask));\n                }else{\n                    //no restriction by pattern so always possible\n                    return true;\n                }\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(_.filter(responseDeclaration.mapEntries, function(score, key){\n                    return isPossibleResponse(key);\n                }));\n                max = _(scoreMaps).map(function (v) {\n                    return parseFloat(v);\n                }).max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = 0;\n            }\n            return max;\n        }\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/AssociateInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/BlockInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(BlockInteraction, maxScore){\n    'use strict';\n\n    var AssociateInteraction = BlockInteraction.extend({\n        qtiClass : 'associateInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction){\n                var i, j, pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for(i=0; i < choices.length; i++){\n                    for(j=i; j < choices.length; j++){\n                        pairs.push([choices[i].id, choices[j].id]);\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {possiblePairs: calculatePossiblePairs(this)});\n        }\n    });\n    return AssociateInteraction;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/BlockInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(BlockInteraction, maxScore){\n    'use strict';\n    var ChoiceInteraction = BlockInteraction.extend({\n        qtiClass : 'choiceInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n    return ChoiceInteraction;\n});\n\n\n\n","define('taoQtiItem/qtiItem/core/interactions/ContainerInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/mixin/Container'], function(BlockInteraction, Container){\n    var ContainerInteraction = BlockInteraction.extend({});\n    Container.augment(ContainerInteraction);\n    return ContainerInteraction;\n});\n","define('taoQtiItem/qtiItem/mixin/CustomElement',[\n    'taoQtiItem/qtiItem/mixin/Mixin',\n    'lodash'\n], function(Mixin, _){\n\n    var methods = {\n        prop : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.properties[name] = value;\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.prop(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.properties[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.properties[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeProp : function(propNames){\n            var _this = this;\n            if(typeof (propNames) === 'string'){\n                propNames = [propNames];\n            }\n            _.each(propNames, function(propName){\n                delete _this.attributes[propName];\n            });\n            return this;\n        },\n        getProperties : function(){\n            return _.clone(this.properties);\n        },\n        getMarkupNamespace : function(){\n\n            if(this.markupNs && this.markupNs.name && this.markupNs.uri){\n                return _.clone(this.markupNs);\n            }else{\n                var relatedItem = this.getRootElement();\n                if(relatedItem){\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name : this.defaultMarkupNsName,\n                        uri : this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace : function(name, uri){\n            this.markupNs = {\n                name : name,\n                uri : uri\n            };\n        }\n    };\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n\n","define('taoQtiItem/qtiItem/core/interactions/CustomInteraction',[\n    'lodash',\n    'taoQtiItem/qtiItem/core/interactions/Interaction',\n    'taoQtiItem/qtiItem/mixin/CustomElement',\n    'taoQtiItem/qtiItem/mixin/NamespacedElement',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function(_, Interaction, CustomElement, NamespacedElement, rendererConfig){\n\n    var CustomInteraction = Interaction.extend({\n        qtiClass : 'customInteraction',\n        defaultNsName : 'pci',\n        defaultNsUri : 'http://www.imsglobal.org/xsd/portableCustomInteraction',\n        nsUriFragment : 'portableCustomInteraction',\n        defaultMarkupNsName : 'html5',\n        defaultMarkupNsUri : 'html5',\n        init : function(serial, attributes){\n\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            this.pciReadyCallbacks = [];\n        },\n        is : function(qtiClass){\n            return (qtiClass === 'customInteraction') || this._super(qtiClass);\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier : this.typeIdentifier,\n                    markup : this.markup,\n                    properties : this.properties,\n                    libraries : this.libraries,\n                    entryPoint : this.entryPoint,\n                    ns : {\n                        pci : this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray : function(){\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n        getMarkupNamespace : function(){\n\n            if(this.markupNs && this.markupNs.name && this.markupNs.uri){\n                return _.clone(this.markupNs);\n            }else{\n                var relatedItem = this.getRootElement();\n                if(relatedItem){\n                    //set the default one:\n                    relatedItem.namespaces[this.defaultMarkupNsName] = this.defaultMarkupNsUri;\n                    return {\n                        name : this.defaultMarkupNsName,\n                        uri : this.defaultMarkupNsUri\n                    };\n                }\n            }\n\n            return {};\n        },\n        setMarkupNamespace : function(name, uri){\n            this.markupNs = {\n                name : name,\n                uri : uri\n            };\n        },\n        onPciReady : function(callback){\n\n            this.pciReadyCallbacks.push(callback);\n\n            if(this.data('pci')){\n                //if pci is already ready, call it immediately\n                this.triggerPciReady();\n            }\n        },\n        triggerPciReady : function(){\n\n            var _this = this,\n                pci = this.data('pci');\n\n            if(pci){\n                _.each(this.pciReadyCallbacks, function(fn){\n                    fn.call(_this, pci);\n                });\n\n                //empty the stack of ready callbacks\n                this.pciReadyCallbacks = [];\n\n                //mark the interaction as ready\n                this.data('pciReady', true);\n\n            }else{\n                throw 'cannot trigger pci ready when no pci is actually attached to the interaction';\n            }\n\n        },\n        onPci : function(event, callback){\n            this.onPciReady(function(pci){\n                if(_.isFunction(pci.on)){\n                    pci.on(event, callback);\n                }else{\n                    throw 'the pci does not implement on() function';\n                }\n            });\n            return this;\n        },\n        offPci : function(event){\n            this.onPciReady(function(pci){\n                if(_.isFunction(pci.off)){\n                    pci.off(event);\n                }else{\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        },\n        triggerPci : function(event, args){\n            this.onPciReady(function(pci){\n                if(_.isFunction(pci.off)){\n                    pci.trigger(event, args);\n                }else{\n                    throw 'the pci does not implement off() function';\n                }\n            });\n            return this;\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(CustomInteraction);\n    NamespacedElement.augment(CustomInteraction);\n\n    return CustomInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/InlineInteraction',['taoQtiItem/qtiItem/core/interactions/Interaction'], function(Interaction){\n    'use strict';\n    return Interaction.extend({\n        is : function(qtiClass){\n            return (qtiClass === 'inlineInteraction') || this._super(qtiClass);\n        }\n    });\n});\n","define('taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',['taoQtiItem/qtiItem/core/interactions/InlineInteraction'], function(InlineInteraction){\n    return InlineInteraction.extend({\n        'qtiClass' : 'endAttemptInteraction'\n    });\n});\n\n\n","define('taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function(BlockInteraction, _, rendererConfig){\n    \n    var ExtendedTextInteraction = BlockInteraction.extend({\n        qtiClass : 'extendedTextInteraction',\n        render : function(){\n            \n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    'multiple' : false,\n                    'maxStringLoop' : []\n                },\n                response = this.getResponseDeclaration();\n        \n            if(this.attr('maxStrings') && (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered')){\n                defaultData.multiple = true;\n                for(var i = 0; i < this.attr('maxStrings'); i++){\n                    defaultData.maxStringLoop.push(i + '');//need to convert to string. The tpl engine fails otherwise\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n    \n    return ExtendedTextInteraction;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/ContainerInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(ContainerInteraction, maxScore){\n    'use strict';\n    var GapMatchInteraction = ContainerInteraction.extend({\n        qtiClass : 'gapMatchInteraction',\n        getGaps : function getGaps(){\n            return this.getBody().getElements('gap');\n        },\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.gapMatchInteractionBased(this);\n        }\n    });\n    return GapMatchInteraction;\n});\n","define('taoQtiItem/qtiItem/core/interactions/ObjectInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction', 'taoQtiItem/qtiItem/core/Object'], function(QtiBlockInteraction, QtiObject){\n    var QtiObjectInteraction = QtiBlockInteraction.extend({\n        //common methods to object containers (start)\n        initObject : function(object){\n            this.object = object || new QtiObject();\n        },\n        getObject : function(){\n            return this.object;\n        }\n        //common methods to object containers (end)\n    });\n    \n    return QtiObjectInteraction;\n});\n\n\n","define('taoQtiItem/qtiItem/core/interactions/GraphicInteraction',['taoQtiItem/qtiItem/core/interactions/ObjectInteraction', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function(QtiObjectInteraction, _, rendererConfig){\n    var QtiGraphicInteraction = QtiObjectInteraction.extend({\n        render : function(){\n            \n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    'backgroundImage' : this.object.getAttributes(),\n                    'object' : this.object.render(renderer)\n                };\n                \n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return QtiGraphicInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/GraphicInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(GraphicInteraction, maxScore){\n    'use strict';\n    var GraphicAssociateInteraction = GraphicInteraction.extend({\n        qtiClass : 'graphicAssociateInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            var calculatePossiblePairs = function calculatePossiblePairs(associateInteraction){\n                var i, j, pairs = [];\n                var choices = maxScore.getMatchMaxOrderedChoices(associateInteraction.getChoices());\n                for(i=0; i < choices.length; i++){\n                    for(j=i; j < choices.length; j++){\n                        if(i !== j){\n                            pairs.push([choices[i].id, choices[j].id]);\n                        }\n                    }\n                }\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {possiblePairs: calculatePossiblePairs(this)});\n        }\n    });\n    return GraphicAssociateInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/GraphicInteraction',\n    'taoQtiItem/qtiItem/core/Element',\n    'lodash',\n    'taoQtiItem/qtiItem/helper/rendererConfig',\n    'taoQtiItem/qtiItem/helper/maxScore',\n    'taoQtiItem/qtiItem/helper/response'\n], function(GraphicInteraction, Element, _, rendererConfig, maxScore, responseHelper){\n    'use strict';\n\n    var GraphicGapMatchInteraction = GraphicInteraction.extend({\n        qtiClass : 'graphicGapMatchInteraction',\n        init : function init(serial, attributes){\n            this._super(serial, attributes);\n            this.gapImgs = {};\n        },\n        addGapImg : function addGapImg(gapImg){\n            if(Element.isA(gapImg, 'gapImg')){\n                gapImg.setRootElement(this.getRootElement() || null);\n                this.gapImgs[gapImg.getSerial()] = gapImg;\n            }\n        },\n        removeGapImg : function removeGapImg(gapImg){\n            var serial = '';\n            if(typeof(gapImg) === 'string'){\n                serial = gapImg;\n            }else if(Element.isA(gapImg, 'gapImg')){\n                serial = gapImg.getSerial();\n            }\n            delete this.gapImgs[serial];\n            return this;\n        },\n        getGapImgs : function getGapImgs(){\n            return _.clone(this.gapImgs);\n        },\n        getGapImg : function getGapImg(serial){\n            return this.gapImgs[serial];\n        },\n        getChoiceByIdentifier : function getChoiceByIdentifier(identifier){\n            var choice = this._super(identifier);\n            if(!choice){\n                //if not found among the choices, search the gapImgs\n                choice = _.find(this.gapImgs, function(elt){\n                    return (elt && elt.id() === identifier);\n                });\n            }\n            return choice;\n        },\n        getComposingElements : function getComposingElements(){\n            var serial, elts = this._super();\n            //recursive to choices:\n            for(serial in this.gapImgs){\n                elts[serial] = this.gapImgs[serial];\n                elts = _.extend(elts, this.gapImgs[serial].getComposingElements());\n            }\n            return elts;\n        },\n        find : function find(serial){\n            var found = this._super(serial);\n            if(!found){\n                if(this.gapImgs[serial]){\n                    found = {'parent' : this, 'element' : this.gapImgs[serial]};\n                }\n            }\n            return found;\n        },\n        render : function render(){\n            var serial,\n                args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    'gapImgs' : []\n                };\n\n            //note: no choice shuffling option available for graphic gap match\n            var gapImgs = this.getGapImgs();\n            for(serial in gapImgs){\n                if(Element.isA(gapImgs[serial], 'choice')){\n                    defaultData.gapImgs.push(gapImgs[serial].render({}, null, '', renderer));\n                }\n            }\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        toArray : function toArray(){\n            var serial, gapImgs, arr = this._super();\n            arr.gapImgs = {};\n            gapImgs = this.getGapImgs();\n            for(serial in gapImgs){\n                arr.gapImgs[serial] = gapImgs[serial].toArray();\n            }\n            return arr;\n        },\n        getNormalMaximum : function getNormalMaximum(){\n            var calculatePossiblePairs = function calculatePossiblePairs(graphicGapInteraction){\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getGapImgs());\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(graphicGapInteraction.getChoices());\n\n                _.forEach(matchSet1, function(choice1){\n                    _.forEach(matchSet2, function(choice2){\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {possiblePairs : calculatePossiblePairs(this), checkInfinitePair : true});\n        }\n    });\n\n    return GraphicGapMatchInteraction;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/GraphicInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(GraphicInteraction, maxScore){\n    'use strict';\n    var GraphicOrderInteraction = GraphicInteraction.extend({\n        qtiClass : 'graphicOrderInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n    return GraphicOrderInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/HotspotInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/GraphicInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(GraphicInteraction, maxScore){\n    'use strict';\n    var HotspotInteraction = GraphicInteraction.extend({\n        qtiClass : 'hotspotInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n    return HotspotInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/HottextInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/ContainerInteraction',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(ContainerInteraction, Element, maxScore){\n    'use strict';\n    var HottextInteraction = ContainerInteraction.extend({\n        qtiClass : 'hottextInteraction',\n        getChoices : function(){\n            return this.getBody().getElements('hottext');\n        },\n        getChoice : function(serial){\n            var element = this.getBody().getElement(serial);\n            return Element.isA(element, 'choice') ? element : null;\n        },\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.choiceInteractionBased(this);\n        }\n    });\n    return HottextInteraction;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/InlineInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(InlineInteraction, maxScore){\n    'use strict';\n    var InlineChoiceInteraction = InlineInteraction.extend({\n        'qtiClass' : 'inlineChoiceInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.choiceInteractionBased(this, {maxChoices:1});\n        }\n    });\n    return InlineChoiceInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/MatchInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/BlockInteraction',\n    'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n    'lodash',\n    'taoQtiItem/qtiItem/helper/rendererConfig',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(BlockInteraction, SimpleAssociableChoice, _, rendererConfig, util, maxScore){\n    'use strict';\n\n    var MatchInteraction = BlockInteraction.extend({\n        qtiClass : 'matchInteraction',\n        init : function init(serial, attributes){\n            this._super(serial, attributes);\n            this.choices = [{}, {}];\n        },\n        addChoice : function addChoice(choice, matchSet){\n            matchSet = parseInt(matchSet);\n            if(this.choices[matchSet]){\n                choice.setRootElement(this.getRootElement() || null);\n                this.choices[matchSet][choice.getSerial()] = choice;\n            }\n        },\n        getChoices : function getChoices(matchSet){\n            matchSet = parseInt(matchSet);\n            if(this.choices[matchSet]){\n                return _.clone(this.choices[matchSet]);\n            }else{\n                return _.clone(this.choices);\n            }\n        },\n        getChoice : function getChoice(serial){\n            return this.choices[0][serial] || this.choices[1][serial] || null;\n        },\n        getChoiceByIdentifier : function getChoiceByIdentifier(identifier){\n            var i, matchSet, serial;\n            //recursive to both match sets:\n            for(i = 0; i < 2; i++){\n                matchSet = this.getChoices(i);\n                for(serial in matchSet){\n                    if(matchSet[serial] instanceof SimpleAssociableChoice && matchSet[serial].id() === identifier){\n                        return matchSet[serial];\n                    }\n                }\n            }\n            return null;\n        },\n        getComposingElements : function getComposingElements(){\n            var i, matchSet, serial;\n            var elts = this._super();\n            //recursive to both match sets:\n            for(i = 0; i < 2; i++){\n                matchSet = this.getChoices(i);\n                for(serial in matchSet){\n                    if(matchSet[serial] instanceof SimpleAssociableChoice){\n                        elts[serial] = matchSet[serial];\n                        elts = _.extend(elts, matchSet[serial].getComposingElements());\n                    }\n                }\n            }\n\n            return elts;\n        },\n        find : function find(serial){\n            var found = this._super(serial);\n            if(!found){\n                found = util.findInCollection(this, ['choices.0', 'choices.1'], serial);\n            }\n            return found;\n        },\n        render : function render(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var renderer = args.renderer || this.getRenderer();\n            var defaultData = {\n                'matchSet1' : [],\n                'matchSet2' : []\n            };\n            var choices, i, matchSet, serial;\n            var interactionData = {'interaction' : {'serial' : this.serial, 'attributes' : this.attributes}};\n\n            if(!renderer){\n                throw 'no renderer found for the interaction ' + this.qtiClass;\n            }\n\n            if(this.attr('shuffle') && renderer.getOption('shuffleChoices')){\n                choices = renderer.getShuffledChoices(this);\n            }else{\n                choices = this.getChoices();\n            }\n\n            for(i = 0; i < 2; i++){\n                matchSet = choices[i];\n                for(serial in matchSet){\n                    if(matchSet[serial] instanceof SimpleAssociableChoice){\n                        defaultData['matchSet' + (i + 1)].push(matchSet[serial].render(_.clone(interactionData, true), null, 'simpleAssociableChoice.matchInteraction', renderer));\n                    }\n                }\n            }\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        postRender : function postRender(data, altClassName, renderer){\n            renderer = renderer || this.getRenderer();\n            return _(this.getChoices())\n                .map(function(choices){\n                    return _(choices)\n                        .filter(function(choice){\n                            return choice instanceof SimpleAssociableChoice;\n                        })\n                        .map(function(choice){\n                            return choice.postRender({}, 'simpleAssociableChoice.matchInteraction', renderer);\n                        })\n                        .value();\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n        },\n        toArray : function toArray(){\n            var i, matchSet, serial;\n            var arr = this._super();\n            arr.choices = {0 : {}, 1 : {}};\n            for(i = 0; i < 2; i++){\n                matchSet = this.getChoices(i);\n                for(serial in matchSet){\n                    if(matchSet[serial] instanceof SimpleAssociableChoice){\n                        arr.choices[i][serial] = matchSet[serial].toArray();\n                    }\n                }\n            }\n            return arr;\n        },\n        getNormalMaximum : function getNormalMaximum(){\n            var calculatePossiblePairs = function calculatePossiblePairs(matchInteraction){\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(0));\n                var matchSet2 = maxScore.getMatchMaxOrderedChoices(matchInteraction.getChoices(1));\n\n                _.forEach(matchSet1, function(choice1){\n                    _.forEach(matchSet2, function(choice2){\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n            return maxScore.associateInteractionBased(this, {possiblePairs : calculatePossiblePairs(this)});\n        }\n    });\n\n    return MatchInteraction;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiItem/core/interactions/MediaInteraction',[\n    'lodash',\n    'taoQtiItem/qtiItem/core/interactions/ObjectInteraction',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function(_, ObjectInteraction, rendererConfig){\n    'use strict';\n\n    var MediaInteraction = ObjectInteraction.extend({\n        qtiClass : 'mediaInteraction',\n        render : function render(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    object : this.object.render({}, null, '', renderer)\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n    return MediaInteraction;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/OrderInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/BlockInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(BlockInteraction, maxScore){\n    'use strict';\n    var OrderInteraction = BlockInteraction.extend({\n        qtiClass : 'orderInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.orderInteractionBased(this);\n        }\n    });\n    return OrderInteraction;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/GraphicInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(GraphicInteraction, maxScore){\n    'use strict';\n    var SelectPointInteraction = GraphicInteraction.extend({\n        qtiClass : 'selectPointInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.selectPointInteractionBased(this);\n        }\n    });\n    return SelectPointInteraction;\n});\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/SliderInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/BlockInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore',\n], function(BlockInteraction, maxScore){\n    'use strict';\n    var SliderInteraction = BlockInteraction.extend({\n        qtiClass : 'sliderInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.sliderInteractionBased(this);\n        }\n    });\n    return SliderInteraction;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',[\n    'taoQtiItem/qtiItem/core/interactions/InlineInteraction',\n    'taoQtiItem/qtiItem/helper/maxScore'\n], function(InlineInteraction, maxScore){\n    'use strict';\n    var TextEntryInteraction = InlineInteraction.extend({\n        'qtiClass' : 'textEntryInteraction',\n        getNormalMaximum : function getNormalMaximum(){\n            return maxScore.textEntryInteractionBased(this);\n        }\n    });\n    return TextEntryInteraction;\n});\n","define('taoQtiItem/qtiItem/core/interactions/UploadInteraction',['taoQtiItem/qtiItem/core/interactions/BlockInteraction'], function(InlineInteraction){\n    var UploadInteraction = InlineInteraction.extend({\n        'qtiClass' : 'uploadInteraction'\n    });\n    return UploadInteraction;\n});\n\n\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function(Mixin, Container, _){\n    \n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer:function(body){\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'itemBody';\n        }\n    });\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * QTI Item Element model\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiItem/core/Item',[\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/core/IdentifiedElement',\n    'taoQtiItem/qtiItem/mixin/ContainerItemBody',\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiItem/helper/util'\n], function(Element, IdentifiedElement, Container, _, $, util){\n    'use strict';\n\n    var Item = IdentifiedElement.extend({\n        qtiClass : 'assessmentItem',\n        init : function init(serial, attributes){\n            this._super(serial, attributes);\n            this.rootElement = this;\n            this.stylesheets = {};\n            this.responses = {};\n            this.outcomes = {};\n            this.modalFeedbacks = {};\n            this.namespaces = {};\n            this.schemaLocations = {};\n            this.responseProcessing = null;\n            this.apipAccessibility = null;\n        },\n        getInteractions : function getInteractions(){\n            var interactions = [];\n            var elts = this.getComposingElements();\n            for(var serial in elts){\n                if(Element.isA(elts[serial], 'interaction')){\n                    interactions.push(elts[serial]);\n                }\n            }\n            return interactions;\n        },\n        addResponseDeclaration : function addResponseDeclaration(response){\n            if(Element.isA(response, 'responseDeclaration')){\n                response.setRootElement(this);\n                this.responses[response.getSerial()] = response;\n            }else{\n                throw 'is not a qti response declaration';\n            }\n            return this;\n        },\n        getResponseDeclaration : function getResponseDeclaration(identifier){\n            for(var i in this.responses){\n                if(this.responses[i].attr('identifier') === identifier){\n                    return this.responses[i];\n                }\n            }\n            return null;\n        },\n        addOutcomeDeclaration : function addOutcomeDeclaration(outcome){\n            if(Element.isA(outcome, 'outcomeDeclaration')){\n                outcome.setRootElement(this);\n                this.outcomes[outcome.getSerial()] = outcome;\n            }else{\n                throw 'is not a qti outcome declaration';\n            }\n            return this;\n        },\n        getOutcomeDeclaration : function getOutcomeDeclaration(identifier){\n            var found;\n            _.forEach(this.outcomes, function (outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        getOutcomes : function getOutcomes(){\n            return _.clone(this.outcomes);\n        },\n        removeOutcome : function removeOutcome(identifier){\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if(outcome){\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        addModalFeedback : function addModalFeedback(feedback){\n            if(Element.isA(feedback, 'modalFeedback')){\n                feedback.setRootElement(this);\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\n            }else{\n                throw 'is not a qti modal feedback';\n            }\n            return this;\n        },\n        getComposingElements : function getComposingElements(){\n            var elts = this._super(), _this = this;\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection){\n                for(var i in _this[elementCollection]){\n                    var elt = _this[elementCollection][i];\n                    elts[i] = elt;\n                    elts = _.extend(elts, elt.getComposingElements());\n                }\n            });\n            if(this.responseProcessing instanceof Element){\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\n            }\n            return elts;\n        },\n        find : function find(serial){\n\n            var found = this._super(serial);\n\n            if(!found){\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\n            }\n\n            return found;\n        },\n        getResponses : function getResponses(){\n            return _.clone(this.responses);\n        },\n        getRootElement : function getRootElement(){\n            return this;\n        },\n        addNamespace : function addNamespace(name, uri){\n            this.namespaces[name] = uri;\n        },\n        setNamespaces : function setNamespaces(namespaces){\n            this.namespaces = namespaces;\n        },\n        getNamespaces : function getNamespaces(){\n            return _.clone(this.namespaces);\n        },\n        setSchemaLocations : function setSchemaLocations(locations){\n            this.schemaLocations = locations;\n        },\n        getSchemaLocations : function getSchemaLocations(){\n            return _.clone(this.schemaLocations);\n        },\n        setApipAccessibility : function setApipAccessibility(apip){\n            this.apipAccessibility = apip || null;\n        },\n        getApipAccessibility : function getApipAccessibility(){\n            return this.apipAccessibility;\n        },\n        addStylesheet : function addStylesheet(stylesheet){\n            if(Element.isA(stylesheet, 'stylesheet')){\n                stylesheet.setRootElement(this);\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\n            }else{\n                throw 'is not a qti stylesheet declaration';\n            }\n            return this;\n        },\n        removeStyleSheet : function removeStyleSheet(stylesheet){\n            delete this.stylesheets[stylesheet.getSerial()];\n            return this;\n        },\n        stylesheetExists : function stylesheetExists(href){\n            var exists = false;\n            _.forEach(this.stylesheets, function(stylesheet){\n                if(stylesheet.attr('href') === href){\n                    exists = true;\n                    return false;//break each loop\n                }\n            });\n            return exists;\n        },\n        setResponseProcessing : function setResponseProcessing(rp){\n            if(Element.isA(rp, 'responseProcessing')){\n                rp.setRootElement(this);\n                this.responseProcessing = rp;\n            }else{\n                throw 'is not a response processing';\n            }\n            return this;\n        },\n        toArray : function toArray(){\n            var arr = this._super();\n            var toArray = function(elt){\n                return elt.toArray();\n            };\n            arr.namespaces = this.namespaces;\n\t\t\tarr.schemaLocations = this.schemaLocations;\n            arr.outcomes = _.map(this.outcomes, toArray);\n            arr.responses = _.map(this.responses, toArray);\n            arr.stylesheets = _.map(this.stylesheets, toArray);\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\n            arr.responseProcessing = this.responseProcessing.toArray();\n            return arr;\n        },\n        isEmpty : function isEmpty(){\n\n            var body = this.body().trim();\n\n            if(body){\n\n                //hack to fix #2652\n                var $dummy = $('<div>').html(body),\n                    $children = $dummy.children();\n\n                if($children.length === 1 && $children.hasClass('empty')){\n                    return true;\n                }else{\n                    return false;\n                }\n            }else{\n                return true;\n            }\n        },\n\n        /**\n         * Clean up an item rendering.\n         * Ask the renderer to run destroy if exists.\n         */\n        clear : function clear(){\n            var renderer = this.getRenderer();\n            if(renderer){\n                if(_.isFunction(renderer.destroy)){\n                    renderer.destroy(this);\n                }\n            }\n        },\n    });\n\n    Container.augment(Item);\n\n    return Item;\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[], function(){\n    return {\n        '_container' : 'taoQtiItem/qtiItem/core/Container',\n        'assessmentItem' : 'taoQtiItem/qtiItem/core/Item',\n        'responseProcessing' : 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        '_simpleFeedbackRule' : 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        'stylesheet' : 'taoQtiItem/qtiItem/core/Stylesheet',\n        'math' : 'taoQtiItem/qtiItem/core/Math',\n        'img' : 'taoQtiItem/qtiItem/core/Img',\n        'object' : 'taoQtiItem/qtiItem/core/Object',\n        'outcomeDeclaration' : 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        'responseDeclaration' : 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        'rubricBlock' : 'taoQtiItem/qtiItem/core/RubricBlock',\n        'associableHotspot' : 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        'gap' : 'taoQtiItem/qtiItem/core/choices/Gap',\n        'gapImg' : 'taoQtiItem/qtiItem/core/choices/GapImg',\n        'gapText' : 'taoQtiItem/qtiItem/core/choices/GapText',\n        'hotspotChoice' : 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        'hottext' : 'taoQtiItem/qtiItem/core/choices/Hottext',\n        'inlineChoice' : 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        'simpleAssociableChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        'simpleChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        'associateInteraction' : 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        'choiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        'prompt' : 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        'selectPointInteraction' : 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        'feedbackBlock' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        'feedbackInline' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        'modalFeedback' : 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        'customInteraction' : 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiItem/core/Include',\n        'table' : 'taoQtiItem/qtiItem/core/Table'\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n//@todo : move this to the ../helper directory\ndefine('taoQtiItem/qtiItem/core/Loader',['lodash', 'class', 'taoQtiItem/qtiItem/core/qtiClasses', 'taoQtiItem/qtiItem/core/Element'], function(_, Class, qtiClasses, Element){\n\n    var Loader = Class.extend({\n        init : function(item, classesLocation){\n\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n\n            this.item = item || null;//starts either from scratch or with an existing item object\n            this.setClassesLocation(classesLocation || qtiClasses);//load default location for qti classes model\n        },\n        setClassesLocation : function(qtiClasses){\n            _.extend(this.classesLocation, qtiClasses);\n            return this;\n        },\n        getRequiredClasses : function(data){\n            var ret = [];\n            for(var i in data){\n                if(i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement'){//although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                }else if(typeof(data[i]) === 'object' && i !== 'responseRules'){    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n            return ret;\n        },\n        loadRequiredClasses : function(data, callback, reload){\n\n            var requiredClasses = this.getRequiredClasses(data, reload), required = [];\n\n            for(var i in requiredClasses){\n                var requiredClass = requiredClasses[i];\n                if(this.classesLocation[requiredClass]){\n                    required.push(this.classesLocation[requiredClass]);\n                }else{\n                    throw new Error('missing qti class location declaration : ' + requiredClass);\n                }\n            }\n\n            var _this = this;\n            require(required, function(){\n                _.each(arguments, function(QtiClass){\n                    _this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(_this, _this.qti);\n            });\n        },\n        getLoadedClasses : function(){\n            return _.keys(this.qti);\n        },\n        loadItemData : function(data, callback){\n\n            var _this = this;\n            _this.loadRequiredClasses(data, function(Qti){\n                var i;\n                if(typeof(data) === 'object' && data.qtiClass === 'assessmentItem'){\n\n                    //unload an item from it's serial (in case of a reload)\n                    if(data.serial){\n                        Element.unsetElement(data.serial);\n                    }\n\n                    _this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    _this.loadContainer(_this.item.getBody(), data.body);\n\n                    for(i in data.outcomes){\n                        var outcome = _this.buildOutcome(data.outcomes[i]);\n                        if(outcome){\n                            _this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n                    for(i in data.feedbacks){\n                        var feedback = _this.buildElement(data.feedbacks[i]);\n                        if(feedback){\n                            _this.item.addModalFeedback(feedback);\n                        }\n                    }\n                    for(i in data.stylesheets){\n                        var stylesheet = _this.buildElement(data.stylesheets[i]);\n                        if(stylesheet){\n                            _this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    for(i in data.responses){\n                        var response = _this.buildResponse(data.responses[i]);\n                        if(response){\n                            _this.item.addResponseDeclaration(response);\n\n                            var feedbackRules = data.responses[i].feedbackRules;\n                            if(feedbackRules){\n                                _.forIn(feedbackRules, function(fbData, serial){\n                                    response.feedbackRules[serial] = _this.buildSimpleFeedbackRule(fbData, response);\n                                });\n                            }\n                        }\n                    }\n\n                    if(data.responseProcessing){\n                        _this.item.setResponseProcessing(_this.buildResponseProcessing(data.responseProcessing));\n                    }\n                    _this.item.setNamespaces(data.namespaces);\n                    _this.item.setSchemaLocations(data.schemaLocations);\n                    _this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, _this.item);\n                }\n            });\n        },\n        loadAndBuildElement : function(data, callback){\n\n            var _this = this;\n\n            _this.loadRequiredClasses(data, function(Qti){\n\n                var element = _this.buildElement(data);\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        loadElement : function(element, data, callback){\n\n            var _this = this;\n            this.loadRequiredClasses(data, function(){\n                _this.loadElementData(element, data);\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements : function(data, callback){\n\n            var _this = this;\n\n            if(_this.item){\n\n                this.loadRequiredClasses(data, function(){\n\n                    var allElements = _this.item.getComposingElements();\n\n                    for(var i in data){\n                        var elementData = data[i];\n                        if(elementData && elementData.qtiClass && elementData.serial){\n                            //find and update element\n                            if(allElements[elementData.serial]){\n                                _this.loadElementData(allElements[elementData.serial], elementData);\n                            }\n                        }\n                    }\n\n                    if(typeof(callback) === 'function'){\n                        callback.call(_this, _this.item);\n                    }\n                });\n            }else{\n                throw 'QtiLoader : cannot load elements in empty item';\n            }\n\n        },\n        buildResponse : function(data){\n\n            var response = this.buildElement(data);\n\n            response.template = data.howMatch || null;\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if(_.size(data.mapping)){\n                response.mapEntries = data.mapping;\n            }else if(_.size(data.areaMapping)){\n                response.mapEntries = data.areaMapping;\n            }else{\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule : function(data, response){\n\n            var feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n//            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            var response = feedbackRule.comparedOutcome;\n            if(feedbackRule.feedbackThen){\n                feedbackRule.feedbackThen.data('relatedResponse', response);\n            }\n            if(feedbackRule.feedbackElse){\n                feedbackRule.feedbackElse.data('relatedResponse', response);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome : function(data){\n            var outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n            return outcome;\n        },\n        buildResponseProcessing : function(data){\n            var rp = this.buildElement(data);\n            if(data && data.processingType){\n                if(data.processingType === 'custom'){\n                    rp.xml = data.data;\n                    rp.processingType = 'custom';\n                }else{\n                    rp.processingType = 'templateDriven';\n                }\n            }\n            return rp;\n        },\n        loadContainer : function(bodyObject, bodyData){\n            if(!Element.isA(bodyObject, '_container')){\n                throw 'bodyObject must be a QTI Container';\n            }\n\n            if(bodyData && typeof bodyData.body === 'string' && (typeof bodyData.elements === 'array' || typeof bodyData.elements === 'object')){\n                for(var serial in bodyData.elements){\n                    var eltData = bodyData.elements[serial];\n                    //check if class is loaded:\n                    var element = this.buildElement(eltData);\n                    if(element){\n                        bodyObject.setElement(element, bodyData.body);\n                    }\n                }\n                bodyObject.body(bodyData.body);\n            }else{\n                throw 'wrong bodydata format';\n            }\n        },\n        buildElement : function(elementData){\n            var elt = null;\n            if(elementData && elementData.qtiClass && elementData.serial){\n                var className = elementData.qtiClass;\n                if(this.qti[className]){\n                    elt = new this.qti[className](elementData.serial);\n                    this.loadElementData(elt, elementData);\n                }else{\n                    throw 'the qti element class does not exist: ' + className;\n                }\n            }else{\n                throw 'wrong elementData format';\n            }\n            return elt;\n        },\n        loadElementData : function(element, data){\n\n            //merge attributes when loading element data\n            var attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            if(element.body && data.body){\n                if(element.bdy){\n                    this.loadContainer(element.getBody(), data.body);\n                }\n            }\n\n            if(element.object && data.object){\n                if(element.object){\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if(Element.isA(element, 'interaction')){\n                this.loadInteractionData(element, data);\n            }else if(Element.isA(element, 'choice')){\n                this.loadChoiceData(element, data);\n            }else if(Element.isA(element, 'math')){\n                this.loadMathData(element, data);\n            }else if(Element.isA(element, 'infoControl')){\n                this.loadPicData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData : function(interaction, data){\n            if(Element.isA(interaction, 'blockInteraction')){\n                if(data.prompt){\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if(Element.isA(interaction, 'customInteraction')){\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices : function(interaction, data){\n\n            //note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if(data.choices){\n                if(Element.isA(interaction, 'matchInteraction')){\n                    for(var set = 0; set < 2; set++){\n                        if(!data.choices[set]){\n                            throw 'missing match set #' + set;\n                        }\n                        var matchSet = data.choices[set];\n                        for(var serial in matchSet){\n                            var choice = this.buildElement(matchSet[serial]);\n                            if(choice){\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                }else{\n                    for(var serial in data.choices){\n                        var choice = this.buildElement(data.choices[serial]);\n                        if(choice){\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if(Element.isA(interaction, 'graphicGapMatchInteraction')){\n                    if(data.gapImgs){\n                        for(var serial in data.gapImgs){\n                            var gapImg = this.buildElement(data.gapImgs[serial]);\n                            if(gapImg){\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n\n            }\n\n        },\n        loadChoiceData : function(choice, data){\n            if(Element.isA(choice, 'textVariableChoice')){\n                choice.val(data.text);\n            }else if(Element.isA(choice, 'gapImg')){\n                //has already been taken care of in buildElement()\n            }else if(Element.isA(choice, 'gapText')){\n                // this ensure compatibility of Qti 2.1 items\n                if (! choice.body()) {\n                    choice.body(data.text);\n                }\n            }else if(Element.isA(choice, 'containerChoice')){\n                //has already been taken care of in buildElement()\n            }\n        },\n        loadObjectData : function(object, data){\n            object.setAttributes(data.attributes);\n            //@todo: manage object like a container\n            if(data._alt){\n                if(data._alt.qtiClass === 'object'){\n                    object._alt = Loader.buildElement(data._alt);\n                }else{\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData : function(math, data){\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, function(value, encoding){\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadPciData : function(pci, data){\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData : function(pic, data){\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    function loadPortableCustomElementData(portableElement, data){\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.properties = data.properties;\n        portableElement.libraries = data.libraries;\n    }\n\n    return Loader;\n});\n\n","define('taoQtiItem/qtiItem/core/Math',[\n    'jquery',\n    'lodash',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/rendererConfig',\n    'taoQtiItem/qtiItem/mixin/NamespacedElement'\n], function($, _, Element, rendererConfig, NamespacedElement){\n    'use strict';\n\n    var Math;\n\n    /**\n     * Remove the closing MathML tags and remove useless line breaks before and after it\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripMathTags(mathML, nsName){\n        var regex = new RegExp('<(\\/)?' + (nsName ? nsName + ':' : '') + 'math[^>]*>', 'g');\n        return mathML.replace(regex, '')\n            .replace(/^\\s*[\\r\\n]/gm, '')//remove first blank line\n            .replace(/\\s*[\\r\\n]$/gm, '');//last blank line\n    }\n\n    /**\n     * Remove mathML ns name prefix from the mathML\n     *\n     * @param {String} mathML\n     * @param {String} nsName\n     * @returns {String}\n     */\n    function _stripNamespace(mathML, nsName){\n        var regex = new RegExp('<(\\/)?' + (nsName ? nsName + ':' : ''), 'g');\n        return mathML.replace(regex, '<$1');\n    }\n\n    /**\n     * Check if the mathML string is to be considered empty\n     *\n     * @param {String} mathStr\n     * @returns {Boolean}\n     */\n    function _isEmptyMathML(mathStr){\n        var $math,\n            mathText,\n            hasContent = false;\n\n        if(mathStr && mathStr.trim()){\n            $math = $($.parseHTML(mathStr));\n            mathText = $math.text();\n            hasContent = (_.isString(mathText) && !!mathText.trim());\n        }\n\n        return !hasContent;\n    }\n\n    Math = Element.extend({\n        qtiClass : 'math',\n        defaultNsName : 'm',\n        defaultNsUri : 'http://www.w3.org/1998/Math/MathML',\n        nsUriFragment : 'MathML',\n        init : function(serial, attributes){\n            this._super(serial, attributes);\n            this.ns = null;\n            this.mathML = '';\n            this.annotations = {};\n        },\n        setAnnotation : function(encoding, value){\n            this.annotations[encoding] = _.unescape(value);\n        },\n        getAnnotation : function(encoding){\n            return this.annotations[encoding];\n        },\n        removeAnnotation : function(encoding){\n            delete this.annotations[encoding];\n        },\n        setMathML : function(mathML){\n            var ns = this.getNamespace(),\n                nsName = (ns.name && ns.uri) ? ns.name : '';\n\n            mathML = _stripMathTags(mathML, nsName);\n            if(ns){\n                mathML = _stripNamespace(mathML, nsName);\n            }\n            this.mathML = mathML;\n        },\n        getMathML : function(){\n            return this.mathML;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                tag = this.qtiClass,\n                raw = this.mathML,\n                body = raw,\n                ns = this.getNamespace(),\n                annotations = '',\n                encoding,\n                defaultData;\n\n            for(encoding in this.annotations){\n                annotations += '<annotation encoding=\"' + encoding + '\">' + _.escape(this.annotations[encoding]) + '</annotation>';\n            }\n\n            if(annotations){\n                if(raw.indexOf('</semantics>') > 0){\n                    raw = raw.replace('</semantics>', annotations + '</semantics>');\n                }else{\n                    raw = '<semantics>' + raw + annotations + '</semantics>';\n                }\n            }\n\n            if (ns && ns.name) {\n                body = raw.replace(/<(\\/)?([^!<])/g, '<$1' + ns.name + ':$2');\n                tag = ns.name + ':' + tag;\n            }\n\n            body = body.replace(/<!--.*?-->/g, ''); // remove Mathjax-generated comments\n            body = body.replace(/&lt;!--.*?--&gt;/g, ''); // fix for broken items because of Mathjax comments\n\n            defaultData = {\n                block : (this.attr('display') === 'block') ? true : false,\n                body : body,\n                raw : raw,\n                tag : tag,\n                ns : ns\n            };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n        isEmpty : function(){\n            return _isEmptyMathML(this.mathML) && (!this.annotations.latex || !this.annotations.latex.trim());\n        }\n    });\n\n    NamespacedElement.augment(Math);\n\n    return Math;\n});\n\n","define('taoQtiItem/qtiItem/core/PortableInfoControl',[\n    'lodash',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/mixin/CustomElement',\n    'taoQtiItem/qtiItem/mixin/NamespacedElement',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function(_, Element, CustomElement, NamespacedElement, rendererConfig){\n    'use strict';\n\n    var PortableInfoControl = Element.extend({\n        qtiClass : 'infoControl',\n        defaultNsName : 'pic',\n        defaultNsUri : 'http://www.imsglobal.org/xsd/portableInfoControl',\n        nsUriFragment : 'portableInfoControl',\n        defaultMarkupNsName : 'html5',\n        defaultMarkupNsUri : 'html5',\n\n        init : function(serial, attributes){\n\n            this._super(serial, attributes);\n\n            this.typeIdentifier = '';\n            this.markup = '';\n            this.properties = {};\n            this.libraries = [];\n            this.entryPoint = '';\n\n            //note : if the uri is defined, it will be set the uri in the xml on xml serialization,\n            //which may trigger xsd validation, which is troublesome for html5 (use xhtml5 maybe ?)\n            this.markupNs = {};\n\n            //stack of callback waiting to be ready\n            this.readyStack = [];\n        },\n\n        is : function(qtiClass){\n            return (qtiClass === 'infoControl') || this._super(qtiClass);\n        },\n\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {\n                    typeIdentifier : this.typeIdentifier,\n                    markup : this.markup,\n                    properties : this.properties,\n                    libraries : this.libraries,\n                    entryPoint : this.entryPoint,\n                    ns : {\n                        pic : this.getNamespace().name + ':'\n                    }\n                };\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        },\n\n        /**\n         * Retrieve the state of the infoControl\n         * The call will be delegated to the infoControl's renderer.\n         *\n         * @returns {Object} the state\n         */\n        getState : function getState(){\n            var ret = null;\n            var renderer = this.getRenderer();\n            if(renderer && _.isFunction(renderer.getState)){\n                ret = renderer.getState(this);\n            }\n            return ret;\n        },\n\n        /**\n         * Set the state of the infoControl\n         * The state will be set to the infoControl's renderer.\n         *\n         * @param {Object} state - the infoControl's state\n         */\n        setState : function setState(state){\n            var renderer = this.getRenderer();\n            if(renderer && _.isFunction(renderer.getState)){\n                renderer.setState(this, state);\n            }\n        },\n\n        toArray : function(){\n            var arr = this._super();\n            arr.markup = this.markup;\n            arr.properties = this.properties;\n            return arr;\n        },\n\n\n        /**\n         * Execute a callback when the PIC is ready (ie. registered, loaded and rendererd)\n         * @param {Function} cb - the function to execute once ready\n         */\n        onReady : function onReady(cb){\n\n            this.readyStack.push(cb);\n\n            //if we are ready this will pop the stack\n            if(this.data('_ready') && this.data('pic')){\n                this.triggerReady();\n            }\n        },\n\n        /**\n         * Define the PIC as ready and consume the waiting functions in the stack.\n         */\n        triggerReady : function triggerReady(){\n            var self = this;\n            _.forEach(this.readyStack, function(cb){\n                cb.call(self, self.data('pic'));\n            });\n\n            //empty the stack\n            this.readyStack = [];\n\n            //mark the infoControl as ready\n            this.data('_ready', true);\n        }\n    });\n\n    //add portable element standard functions\n    CustomElement.augment(PortableInfoControl);\n    NamespacedElement.augment(PortableInfoControl);\n\n    return PortableInfoControl;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',['taoQtiItem/qtiItem/core/Element', 'lodash'], function(Element, _){\n    'use strict';\n\n    var SimpleFeedbackRule = Element.extend({\n        qtiClass : '_simpleFeedbackRule',\n        serial : '',\n        rootElement : null,\n        init : function(serial, feedbackOutcome, feedbackThen, feedbackElse){\n\n            this._super(serial, {});\n\n            this.condition = 'correct';\n            this.comparedOutcome = null;\n            this.comparedValue = 0.0;\n\n            this.feedbackOutcome = feedbackOutcome;\n            if(Element.isA(feedbackThen, 'feedback')){\n                this.feedbackThen = feedbackThen;\n            }else{\n                this.feedbackThen = null;\n            }\n            if(Element.isA(feedbackElse, 'feedback')){\n                this.feedbackElse = feedbackThen;\n            }else{\n                this.feedbackElse = null;\n            }\n\n        },\n        setCondition : function(comparedOutcome, condition, comparedValue){\n            var _comparedValues = [];\n            if(Element.isA(comparedOutcome, 'variableDeclaration')){\n                switch(condition){\n                    case 'correct':\n                    case 'incorrect':\n                        if(Element.isA(comparedOutcome, 'responseDeclaration')){\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                        }else{\n                            throw 'invalid outcome type: must be a responseDeclaration';\n                        }\n                        break;\n                    case 'lt':\n                    case 'lte':\n                    case 'equal':\n                    case 'gte':\n                    case 'gt':\n                        if(comparedValue !== null && comparedValue !== undefined){\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            this.comparedValue = comparedValue;\n                        }else{\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    case 'choices':\n                        if(Element.isA(comparedOutcome, 'responseDeclaration') && comparedValue !== null && _.isArray(comparedValue)){\n                            var choices = _.values(comparedOutcome.getInteraction().getChoices());\n                            this.comparedOutcome = comparedOutcome;\n                            this.condition = condition;\n                            _.each(comparedValue, function(v){\n                                if(v instanceof Element){\n                                    _comparedValues.push(v);\n                                }else if(_.isString(v)){\n                                    _.each(choices, function(c){\n                                        if(c.attr('identifier') === v){\n                                            _comparedValues.push(c);\n                                            return false;//break\n                                        }\n                                    });\n                                }\n                            });\n\n                            this.comparedValue = _comparedValues;\n                        }else{\n                            throw 'compared value must not be null';\n                        }\n                        break;\n                    default:\n                        throw 'unknown condition type : '.condition;\n                }\n            }else{\n                throw 'invalid outcome type: must be a variableDeclaration';\n            }\n\n            return this;\n        },\n        setFeedbackElse : function(feedback){\n            if(Element.isA(feedback, 'feedback')){\n                this.feedbackElse = feedback;\n            }\n        },\n        toArray : function(){\n            var val = this.comparedValue;\n            var _toString = function(v){\n                if(val instanceof Element){\n                    return val.attr('identifier') ;\n                }else{\n                    return val+'';\n                }\n            };\n            if(_.isArray(val)){\n                val = _.map(val, _toString);\n            }else{\n                val = _toString(val);\n            }\n            return {\n                condition : this.condition,\n                comparedOutcome : this.comparedOutcome.id(),\n                comparedValue : val\n            };\n        }\n    });\n\n    return SimpleFeedbackRule;\n});\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element', 'lodash'], function(Element, _){\n    \n    var ResponseProcessing = Element.extend({\n        qtiClass : 'responseProcessing',\n        processingType : '',\n        xml : '',\n        toArray : function(){\n            var arr = this._super();\n            arr.processingType = this.processingType;\n            arr.xml = this.xml;\n            return arr;\n        }\n    });\n    \n    return ResponseProcessing;\n});\n","define('taoQtiItem/qtiItem/core/RubricBlock',['taoQtiItem/qtiItem/core/Element', 'taoQtiItem/qtiItem/mixin/Container'], function(Element, Container){\n\n    var RubricBlock = Element.extend({\n        qtiClass : 'rubricBlock',\n        isEmpty : function isEmpty(){\n            return !(this.bdy && this.bdy.body());\n        }\n    });\n    \n    Container.augment(RubricBlock);\n    \n    return RubricBlock;\n});\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function(Element, _, rendererConfig){\n\n    var Stylesheet = Element.extend({\n        qtiClass : 'stylesheet',\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {href : renderer.resolveUrl(this.attr('href'))};\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return Stylesheet;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiItem/qtiItem/mixin/ContainerTable',[\n    'taoQtiItem/qtiItem/mixin/Mixin',\n    'taoQtiItem/qtiItem/mixin/Container',\n    'lodash'\n], function(Mixin, Container, _){\n    'use strict';\n\n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer:function(body){\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'table';\n        }\n    });\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiItem/qtiItem/core/Table',[\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/mixin/ContainerTable'\n], function(Element, Container){\n    'use strict';\n\n    var Table = Element.extend({\n        qtiClass : 'table'\n    });\n\n    Container.augment(Table);\n\n    return Table;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiItem/core/variables/ResponseDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration', 'lodash'], function(VariableDeclaration, _){\n    'use strict';\n\n    var ResponseDeclaration = VariableDeclaration.extend({\n        qtiClass : 'responseDeclaration',\n        init : function(serial, attributes){\n\n            this._super(serial, attributes);\n\n            //MATCH_CORRECT, MAP_RESPONSE, MAP_RESPONSE_POINT\n            this.template = '';//previously called 'howMatch'\n\n            //when template equals ont of the \"map\" one (MAP_RESPONSE, MAP_RESPONSE_POINT)\n            this.mappingAttributes = {};\n            this.mapEntries = {};\n\n            //correct response [0..*]\n            this.correctResponse = null;\n\n            //tao internal usage:\n            this.feedbackRules = {};\n        },\n        getFeedbackRules : function(){\n            return _.values(this.feedbackRules);\n        },\n        getComposingElements : function(){\n            var elts = this._super();\n            elts = _.extend(elts, this.feedbackRules);\n            return elts;\n        },\n        toArray : function(){\n            var arr = this._super();\n            arr.howMatch = this.template;\n            arr.correctResponses = this.correctResponse;\n            arr.mapping = this.mapEntries;\n            arr.mappingAttributes = this.mappingAttributes;\n            arr.feedbackRules = _.map(this.feedbackRules, function(rule){\n                return rule.toArray();\n            });\n            return arr;\n        },\n        getInteraction : function(){\n            var interaction = null;\n            var responseId = this.id();\n            var item = this.getRootElement();\n            var interactions = item.getInteractions();\n            _.each(interactions, function(i){\n                if(i.attributes.responseIdentifier === responseId){\n                    interaction = i;\n                    return false;//break\n                }\n            });\n            return interaction;\n        },\n        isCardinality : function(cardinalities){\n            var comparison;\n            if(_.isArray(cardinalities)){\n                comparison = cardinalities;\n            }else if(_.isString(cardinalities)){\n                cardinalities = [cardinalities];\n            }else{\n                return false;\n            }\n            return (_.indexOf(comparison, this.attr('cardinality')) >= 0);\n        }\n    });\n\n    return ResponseDeclaration;\n});\n\n\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/gap', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<span class=\\\"qti-choice qti-gap\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n    <span data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" class=\\\"gapmatch-content\\\">&nbsp;</span>\\r\\n</span>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/container',[\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiItem/core/Element'\n], function(_, $, Element){\n    'use strict';\n\n    //containers are cached, so do not forget to remove them.\n    var _containers = {};\n    var _$containerContext = $();\n\n    /**\n     * Build the selector for your element (from the element serial)\n     * @private\n     * @param {QtiElement} element\n     * @returns {String} the selector\n     */\n    var _getSelector = function(element){\n\n        var serial = element.getSerial(),\n            selector = '[data-serial=' + serial + ']';\n\n        if(Element.isA(element, 'choice')){\n            selector = '.qti-choice' + selector;\n        }else if(Element.isA(element, 'interaction')){\n            selector = '.qti-interaction' + selector;\n        }\n\n        return selector;\n    };\n\n    /**\n     * Helps you to retrieve the DOM element (as a jquery element)\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\n     */\n    var containerHelper =  {\n\n        /**\n         * Set a global scope to look for element container\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         */\n        setContext : function($scope){\n            _$containerContext = $scope;\n        },\n\n        /**\n         * Get the container of the given element\n         * @param {QtiElement} element - the QTI Element to find the container for\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         * @returns {jQueryElement} the container\n         */\n        get : function(element, $scope){\n\n            var serial = element.getSerial();\n            if($scope instanceof $ && $scope.length){\n\n                //find in the given context\n                return $scope.find(_getSelector(element));\n\n            }else if(_$containerContext instanceof $ && _$containerContext.length){\n\n                //find in the globally set context\n                return _$containerContext.find(_getSelector(element));\n\n            }else if(!_containers[serial] || !_containers[serial].length){\n\n                //find in the global context\n                _containers[serial] = $(_getSelector(element));\n            }\n\n            return _containers[serial];\n        },\n\n        /**\n         * getContainer use a cache to store elements. This methods helps you to purge it.\n         * @param {Element} element - find the container of this element\n         */\n        reset : function(element){\n            if(element instanceof Element && _containers[element.getSerial()]){\n                _containers = _.omit(_containers, element.getSerial());\n            }\n        },\n\n        /**\n         * Clear the containers cache\n         */\n        clear : function clear(){\n            _containers = {};\n            _$containerContext = $();\n        },\n\n        /**\n         * Trigger an event on the element's container\n         * @param {String} eventType - the name of the event\n         * @param {QtiElement} element - find the container of this element\n         * @param {Array} [data] - data to give to the event\n         */\n        trigger : function(eventType, element, data){\n            if(eventType){\n                if(data && !_.isArray(data)){\n                    data = [data];\n                }\n                this.get(element).trigger(eventType, data);\n\n            }\n        },\n\n        /**\n         * Alias to trigger a responseChange Event from an interaction\n         * @param {QtiElement} interaction - the interaction that had a response changed\n         * @param {Object} [extraData] - additionnal data to give to the event\n         */\n        triggerResponseChangeEvent : function(interaction, extraData){\n            this.trigger('responseChange', interaction, [{\n                    interaction : interaction,\n                    response : interaction.getResponse()\n                },\n                extraData\n            ]);\n        },\n\n        /**\n         * Make all links to opens in another tab/window\n         * @param {jQueryElement} $container\n         */\n        targetBlank : function($container){\n\n            $container.on('click', 'a', function(e) {\n                e.preventDefault();\n                var href = $(this).attr('href');\n                if(href && href.match(/^http/i)){\n                    window.open(href, '_blank');\n                }\n            });\n        }\n    };\n\n    return containerHelper;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/gap',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'gap',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/gapImg', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"alt=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objetLabel)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \";\n  return buffer;\n  }\n\n  buffer += \"<li class=\\\"qti-choice qti-gapImg selectable\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <img src=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.data)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \\n         width=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\\n         height=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = ((stack1 = (depth0 && depth0.object)),stack1 == null || stack1 === false ? stack1 : stack1.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\\n         \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.objectLabel), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    />\\n</li>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/gapImg',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'gapImg',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/choice', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li class=\\\"qti-choice\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</li>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/choice',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'gapText',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/hottext', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<span class=\\\"qti-choice qti-hottext hottext\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n    <label class=\\\"hottext-checkmark\\\">\\r\\n        <input type=\\\"checkbox\\\" value=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\r\\n        <span class=\\\"icon-checkbox small\\\"></span>\\r\\n    </label>\\r\\n    <span class=\\\"hottext-content\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span>\\r\\n</span>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/hottext',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'hottext',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/inlineChoice', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<option data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" value=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',[\n    'lodash',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/inlineChoice',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(_, tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'inlineChoice',\n        getContainer : containerHelper.get,\n        template : tpl,\n        getData : function getData(choice, data){\n            data.body = _.unescape(data.body);\n            return data;\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/choice',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'simpleAssociableChoice.associateInteraction',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/simpleAssociableChoice.matchInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<th class=\\\"qti-choice qti-associableChoice qti-simpleAssociableChoice\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</th>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/simpleAssociableChoice.matchInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n    return {\n        qtiClass : 'simpleAssociableChoice.matchInteraction',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/simpleChoice.choiceInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            <input type=\\\"radio\\\" name=\\\"response-\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" value=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" tabindex=\\\"1\\\">\\n            <span class=\\\"icon-radio\\\"></span>\\n            \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            <input type=\\\"checkbox\\\" name=\\\"response-\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.interaction)),stack1 == null || stack1 === false ? stack1 : stack1.serial)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" value=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" tabindex=\\\"1\\\">\\n            <span class=\\\"icon-checkbox\\\"></span>\\n            \";\n  return buffer;\n  }\n\n  buffer += \"<li class=\\\"qti-choice qti-simpleChoice\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <div class=\\\"pseudo-label-box\\\">\\n        <label class=\\\"real-label\\\">\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.unique), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </label>\\n        <div class=\\\"label-box\\\">\\n            <div class=\\\"label-content clear\\\" contenteditable=\\\"false\\\">\\n                \";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                <svg class=\\\"overlay-answer-eliminator\\\">\\n                    <line x1=\\\"0\\\" y1=\\\"100%\\\" x2=\\\"100%\\\" y2=\\\"0\\\"/>\\n                    <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"100%\\\" y2=\\\"100%\\\"/>\\n                </svg>\\n            </div>\\n        </div>\\n    </div>\\n    <label data-eliminable=\\\"container\\\" data-label=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Eliminate\", options) : helperMissing.call(depth0, \"__\", \"Eliminate\", options)))\n    + \"\\\">\\n        <span data-eliminable=\\\"trigger\\\" class=\\\"icon-checkbox\\\"></span>\\n    </label>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',[\n   'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/simpleChoice.choiceInteraction',\n   'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'simpleChoice.choiceInteraction',\n        getContainer : containerHelper.get,\n        getData:function(choice, data){\n            data.unique = (parseInt(data.interaction.attributes.maxChoices) === 1);\n            return data;\n        },\n        template : tpl\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/choices/choice',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'simpleChoice.orderInteraction',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false,\n        enabledOnly : false,\n        runtimeOnly : []\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], version);\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n            registerProvider : function registerProvider(moduleName){\n                __providers[moduleName] = null;\n                return this;\n            },\n            resetProviders : function resetProviders(){\n                __providers = {};\n                return this;\n            },\n            loadProviders : function loadProviders(){\n                var self = this;\n                return new Promise(function(resolve, reject) {\n                    var providerLoadingStack = [];\n                    _.forIn(__providers, function(provider, id){\n                        if(provider === null){\n                            providerLoadingStack.push(id);\n                        }\n                    });\n                    _requirejs(providerLoadingStack, function(){\n                        _.each([].slice.call(arguments), function(provider){\n                            if(provider && _.isFunction(provider.load)){\n                                __providers[providerLoadingStack.shift()] = provider;\n                            }\n                        });\n                        resolve();\n                        self.trigger('providersloaded');\n                    }, reject);\n                });\n            },\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci){\n                    return _.assign(pci.runtime, {\n                        id : pci.typeIdentifier,\n                        label : pci.label,\n                        baseUrl : pci.baseUrl,\n                        model : pci.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n            getCreator : function getCreator(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci && pci.creator){\n                    return _.assign(pci.creator, {\n                        id : pci.typeIdentifier,\n                        label : pci.label,\n                        baseUrl : pci.baseUrl,\n                        response : pci.response\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve();\n                } else {\n                    loadPromise = self.loadProviders().then(function(){\n\n                        var loadStack = [];\n\n                        _.forEach(__providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                        return new Promise(function(resolve, reject){\n                            Promise.all(loadStack).then(function (results){\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, {});\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    //currently use latest runtime only\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n\n                                    _loaded = true;\n\n                                    resolve();\n                                }).catch(function(err){\n                                    reject('error loading module config ' + err);\n                                });\n                            });\n                        });\n\n                    });\n                }\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n                    var requiredCreators = _.isArray(options.runtimeOnly) ? options.runtimeOnly : [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var pciModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(pciModel.creator && pciModel.creator.hook && (pciModel.enabled || requiredCreators.indexOf(typeIdentifier) !== -1)){\n                            requiredCreatorHooks.push(pciModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.each(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var pciModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : pciModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + pciModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n            enable: function enable(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci){\n                    pci.enabled = true;\n                }\n            },\n            disable: function disable(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci){\n                    pci.enabled = false;\n                }\n            },\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                return (pci && pci.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Sam <sams@taotesting.com>\n * @requires jquery\n * @requires lodash\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n'], function($, _, __){\n    \"use strict\";\n\n    var QtiElements = {};\n\n    QtiElements.classes = {\n        //abstract classes:\n        'itemBody' : {'parents' : ['bodyElement'], 'contains' : ['block'], 'abstract' : true},\n        'atomicBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['inline'], 'abstract' : true},\n        'atomicInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\n        'simpleBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['block'], 'abstract' : true},\n        'simpleInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\n        'flowStatic' : {'parents' : ['flow'], 'abstract' : true},\n        'blockStatic' : {'parents' : ['block'], 'abstract' : true},\n        'inlineStatic' : {'parents' : ['inline'], 'abstract' : true},\n        'flow' : {'parents' : ['objectFlow'], 'abstract' : true},\n        'tableCell' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'abstract' : true},\n        //html-derived qti elements:\n        'caption' : {'parents' : ['bodyElement'], 'contains' : ['inline'], 'xhtml' : true},\n        'col' : {'parents' : ['bodyElement'], 'xhtml' : true},\n        'colgroup' : {'parents' : ['bodyElement'], 'contains' : ['col'], 'xhtml' : true},\n        'div' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['flow'], 'xhtml' : true},\n        'dl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['dlElement'], 'xhtml' : true},\n        'dt' : {'parents' : ['dlElement'], 'contains' : ['inline'], 'xhtml' : true},\n        'dd' : {'parents' : ['dlElement'], 'contains' : ['flow'], 'xhtml' : true},\n        'hr' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'xhtml' : true},\n        'math' : {'parents' : ['blockStatic', 'flowStatic', 'inlineStatic'], 'xhtml' : true},\n        'li' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'xhtml' : true},\n        'ol' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\n        'ul' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\n        'object' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['objectFlow'], 'xhtml' : true},\n        'param' : {'parents' : ['objectFlow'], 'xhtml' : true},\n        'table' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'], 'xhtml' : true},\n        'tbody' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\n        'tfoot' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\n        'thead' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\n        'td' : {'parents' : ['tableCell'], 'xhtml' : true},\n        'th' : {'parents' : ['tableCell'], 'xhtml' : true},\n        'tr' : {'parents' : ['bodyElement'], 'contains' : ['tableCell'], 'xhtml' : true},\n        'a' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'abbr' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'acronym' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'b' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'big' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'cite' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'code' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'dfn' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'em' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'i' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'kbd' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'q' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'samp' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'small' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'span' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'strong' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'sub' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'sup' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'tt' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'var' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'blockquote' : {'parents' : ['simpleBlock'], 'xhtml' : true},\n        'address' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h1' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h2' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h3' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h4' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h5' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h6' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'p' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'pre' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'img' : {'parents' : ['atomicInline'], 'xhtml' : true, attributes : ['src', 'alt', 'longdesc', 'height', 'width']},\n        'br' : {'parents' : ['atomicInline'], 'xhtml' : true},\n        //qti elements:\n        'infoControl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'qti' : true},\n        'textRun' : {'parents' : ['inlineStatic', 'flowstatic'], 'qti' : true},\n        'feedbackInline' : {'parents' : ['simpleInline', 'feedbackElement'], 'qti' : true},\n        'feedbackBlock' : {'parents' : ['simpleBlock'], 'qti' : true},\n        'rubricBlock' : {'parents' : ['simpleBlock'], 'qti' : true}, //strange qti 2.1 exception, marked as simpleBlock instead of\n        'blockInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\n        'inlineInteraction' : {'parents' : ['inline', 'flow', 'interaction'], 'qti' : true},\n        'gap' : {'parents' : ['inlineStatic'], 'qti' : true},\n        'hottext' : {'parents' : ['flowstatic', 'inlineStatic'], 'contains' : ['inlineStatic'], 'qti' : true},\n        'printedVariable' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], 'qti' : true},\n        'prompt' : {'parents' : ['bodyElement'], 'contains' : ['inlineStatic'], 'qti' : true},\n        'templateElement' : {'parents' : ['bodyElement'], 'qti' : true},\n        'templateBlock' : {'parents' : ['blockStatic', 'flowStatic', 'templateElement'], 'contains' : ['blockStatic'], 'qti' : true},\n        'templateInline' : {'parents' : ['inlineStatic', 'flowStatic', 'templateElement'], 'contains' : ['inlineStatic'], 'qti' : true},\n        'choiceInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'associateInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'orderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'matchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'hottextInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'gapMatchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'mediaInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'sliderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'uploadInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'drawingInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'graphicInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'hotspotInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'graphicAssociateInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'graphicOrderInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'graphicGapMatchInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'selectPointInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'textEntryInteraction' : {'parents' : ['stringInteraction', 'inlineInteraction'], 'qti' : true},\n        'extendedTextInteraction' : {'parents' : ['stringInteraction', 'blockInteraction'], 'qti' : true},\n        'inlineChoiceInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\n        'endAttemptInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\n        'customInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\n        '_container' : {'parents' : ['block'], 'qti' : true}//a pseudo class introduced in TAO\n    };\n\n    QtiElements.cache = {containable : {}, children : {}, parents : {}};\n\n    QtiElements.getAllowedContainersElements = function(qtiClass, $container){\n        var classes = QtiElements.getAllowedContainers(qtiClass);\n        var jqSelector = '';\n        for(var i in classes){\n            if(!classes[i].qti){\n                //html element:\n                jqSelector += classes[i] + ', ';\n            }\n        }\n\n        if(jqSelector){\n            jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n        }\n\n        return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n    };\n\n    QtiElements.getAllowedContainers = function(qtiClass){\n        var ret;\n        if(QtiElements.cache.containable[qtiClass]){\n            ret = QtiElements.cache.containable[qtiClass];\n        }else{\n            ret = [];\n            var parents = QtiElements.getParentClasses(qtiClass, true);\n            for(var aClass in QtiElements.classes){\n                var model = QtiElements.classes[aClass];\n                if(model.contains){\n                    var intersect = _.intersection(model.contains, parents);\n                    if(intersect.length){\n                        if(!model.abstract){\n                            ret.push(aClass);\n                        }\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                    }\n                }\n            }\n            QtiElements.cache.containable[qtiClass] = ret;\n        }\n\n        return ret;\n    };\n\n    QtiElements.getAllowedContents = function(qtiClass, recursive, checked){\n\n        var ret = [];\n        checked = checked || {};\n\n        var model = QtiElements.classes[qtiClass];\n        if(model && model.contains){\n            for(var i in model.contains){\n                var contain = model.contains[i];\n                if(!checked[contain]){\n                    checked[contain] = true;\n\n                    //qtiClass can contain everything defined as its contents\n                    ret.push(contain);\n\n                    //qtiClass can also contain subclass of its contents\n                    var children = QtiElements.getChildClasses(contain, true);\n                    for(var i in children){\n                        var child = children[i];\n                        if(!checked[child]){\n                            checked[child] = true;\n\n                            ret.push(child);\n\n                            //adding children allowed contents depends on the option \"recursive\"\n                            if(recursive){\n                                ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                            }\n                        }\n                    }\n\n                    //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                    if(recursive){\n                        ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                    }\n\n                }\n            }\n        }\n\n        //qtiClass can contain all allowed contents of its parents:\n        var parents = QtiElements.getParentClasses(qtiClass, true);\n        for(var i in parents){\n            ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n        }\n\n        return _.uniq(ret, false);\n    };\n\n    QtiElements.isAllowedClass = function(qtiContainerClass, qtiContentClass){\n        var allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n        return (_.indexOf(allowedClasses, qtiContentClass) >= 0);\n    };\n\n    QtiElements.getParentClasses = function(qtiClass, recursive){\n        var ret;\n        if(recursive && QtiElements.cache.parents[qtiClass]){\n            ret = QtiElements.cache.parents[qtiClass];\n        }else{\n            ret = [];\n            if(QtiElements.classes[qtiClass]){\n                ret = QtiElements.classes[qtiClass].parents;\n                if(recursive){\n                    for(var i in ret){\n                        ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                    }\n                    ret = _.uniq(ret, false);\n                }\n            }\n            QtiElements.cache.parents[qtiClass] = ret;\n        }\n\n        return ret;\n    };\n\n    QtiElements.getChildClasses = function(qtiClass, recursive, type){\n        var ret;\n        var cacheType = type ? type : 'all';\n        if(recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]){\n            ret = QtiElements.cache.children[qtiClass][cacheType];\n        }else{\n            ret = [];\n            for(var aClass in QtiElements.classes){\n                var model = QtiElements.classes[aClass];\n                if(_.indexOf(model.parents, qtiClass) >= 0){\n                    if(type){\n                        if(model[type]){\n                            ret.push(aClass);\n                        }\n                    }else{\n                        ret.push(aClass);\n                    }\n                    if(recursive){\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                    }\n                }\n            }\n            if(!QtiElements.cache.children[qtiClass]){\n                QtiElements.cache.children[qtiClass] = {};\n            }\n            QtiElements.cache.children[qtiClass][cacheType] = ret;\n        }\n\n        return ret;\n    };\n\n    QtiElements.isBlock = function(qtiClass){\n        return QtiElements.is(qtiClass, 'block');\n    };\n\n    QtiElements.isInline = function(qtiClass){\n        return QtiElements.is(qtiClass, 'inline');\n    };\n\n    QtiElements.is = function(qtiClass, topClass){\n        if(qtiClass === topClass){\n            return true;\n        }else{\n            var parents = QtiElements.getParentClasses(qtiClass, true);\n            return (_.indexOf(parents, topClass) >= 0);\n        }\n    };\n\n    QtiElements.getAvailableAuthoringElements = function(){\n\n        return {\n            choiceInteraction : {\n                label : __('Choice Interaction'),\n                description : __('Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'),\n                icon : 'icon-choice',\n                short : __('Choice'),\n                qtiClass : 'choiceInteraction',\n                tags:['Common Interactions', 'mcq']\n            },\n            orderInteraction : {\n                label : __('Order Interaction'),\n                icon : 'icon-order',\n                description : __('Arrange a list of choices in the correct order.'),\n                short : __('Order'),\n                qtiClass : 'orderInteraction',\n                tags:['Common Interactions', 'ordering']\n            },\n            associateInteraction : {\n                label : __('Associate Interaction'),\n                icon : 'icon-associate',\n                description : __('Create pair(s) from a series of choices.'),\n                short : __('Associate'),\n                qtiClass : 'associateInteraction',\n                tags:['Common Interactions', 'association']\n            },\n            matchInteraction : {\n                label : __('Match Interaction'),\n                icon : 'icon-match',\n                description : __('Create association(s) between two sets of choices displayed in a table (row and column).'),\n                short : __('Match'),\n                qtiClass : 'matchInteraction',\n                tags:['Common Interactions', 'association']\n            },\n            hottextInteraction : {\n                label : __('Hottext Interaction'),\n                icon : 'icon-hottext',\n                description : __('Select one or more text parts (hottext) within a text.'),\n                short : __('Hottext'),\n                qtiClass : 'hottextInteraction',\n                tags:['Common Interactions', 'text']\n            },\n            gapMatchInteraction : {\n                label : __('Gap Match Interaction'),\n                icon : 'icon-gap-match',\n                description : __(' Fill in the gaps in a text from a set of choices.'),\n                short : __('Gap Match'),\n                qtiClass : 'gapMatchInteraction',\n                tags:['Common Interactions', 'text', 'association']\n            },\n            sliderInteraction : {\n                label : __('Slider Interaction'),\n                icon : 'icon-slider',\n                description :__('Select a value within a numerical range.'),\n                short : __('Slider'),\n                qtiClass : 'sliderInteraction',\n                tags:['Common Interactions', 'special']\n            },\n            extendedTextInteraction : {\n                label : __('Extended Text Interaction'),\n                icon : 'icon-extended-text',\n                description : __('Collect open-ended information in one or more text area(s) (strings or numeric values).'),\n                short : __('Extended Text'),\n                qtiClass : 'extendedTextInteraction',\n                tags:['Common Interactions', 'text']\n            },\n            uploadInteraction : {\n                label : __('File Upload Interaction'),\n                icon : 'icon-upload',\n                description : __('Upload a file (e.g. document, picture...) as a response.'),\n                short : __('File Upload'),\n                qtiClass : 'uploadInteraction',\n                tags:['Common Interactions', 'special']\n            },\n            mediaInteraction : {\n                label : __('Media Interaction'),\n                icon : 'icon-media',\n                description : __('Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'),\n                short : __('Media'),\n                qtiClass : 'mediaInteraction',\n                tags:['Common Interactions', 'media']\n            },\n            _container : {\n                label : __('Text Block'),\n                icon : 'icon-font',\n                description : __('Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'),\n                short : __('Block'),\n                qtiClass : '_container',\n                tags:['Inline Interactions', 'text']\n            },\n            inlineChoiceInteraction : {\n                label : __('Inline Choice Interaction'),\n                icon : 'icon-inline-choice',\n                description : __('Select a choice from a drop-down list.'),\n                short : __('Inline Choice'),\n                qtiClass : 'inlineChoiceInteraction',\n                tags:['Inline Interactions', 'inline-interactions', 'mcq']\n            },\n            textEntryInteraction : {\n                label : __('Text Entry Interaction'),\n                icon : 'icon-text-entry',\n                description : __('Collect open-ended information in a short text input (strings or numeric values).'),\n                short : __('Text Entry'),\n                qtiClass : 'textEntryInteraction',\n                tags:['Inline Interactions', 'inline-interactions', 'text']\n            },\n            endAttemptInteraction : {\n                label : __('End Attempt Interaction'),\n                icon : 'icon-end-attempt',\n                description : __('Trigger the end of the item attempt.'),\n                short : __('End Attempt'),\n                qtiClass : 'endAttemptInteraction',\n                tags:['Inline Interactions', 'inline-interactions', 'button', 'submit']\n            },\n            hotspotInteraction : {\n                label : __('Hotspot Interaction'),\n                icon : 'icon-hotspot',\n                description : __('Select one or more areas (hotspots) displayed on an picture.'),\n                short : __('Hotspot'),\n                qtiClass : 'hotspotInteraction',\n                tags:['Graphic Interactions', 'mcq']\n            },\n            graphicOrderInteraction : {\n                label : __('Graphic Order Interaction'),\n                icon : 'icon-graphic-order',\n                description : __('Order the areas (hotspots) displayed on a picture.'),\n                short : __('Order'),\n                qtiClass : 'graphicOrderInteraction',\n                tags:['Graphic Interactions', 'ordering']\n            },\n            graphicAssociateInteraction : {\n                label : __('Graphic Associate Interaction'),\n                icon : 'icon-graphic-associate',\n                description : __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                short : __('Associate'),\n                qtiClass : 'graphicAssociateInteraction',\n                tags:['Graphic Interactions', 'association']\n            },\n            graphicGapMatchInteraction : {\n                label : __('Graphic Gap Match Interaction'),\n                icon : 'icon-graphic-gap',\n                description : __('Fill in the gaps on a picture with a set of image choices.'),\n                short : __('Gap Match'),\n                qtiClass : 'graphicGapMatchInteraction',\n                tags:['Graphic Interactions', 'association']\n            },\n            selectPointInteraction : {\n                label : __('Select Point Interaction'),\n                icon : 'icon-select-point',\n                description : __('Position one or more points on a picture (response areas are not displayed).'),\n                short : __('Select Point'),\n                qtiClass : 'selectPointInteraction',\n                tags:['Graphic Interactions']\n            }\n        };\n    };\n\n    return QtiElements;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, portableElementRegistry, qtiElements){\n    'use strict';\n\n    /**\n     * Create a ney interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry(){\n\n        return portableElementRegistry({\n            getAuthoringData : function getAuthoringData(typeIdentifier, options){\n                var pciModel;\n                options = _.defaults(options || {}, {version : 0, enabledOnly : false});\n                pciModel = this.get(typeIdentifier, options.version);\n                if(pciModel && pciModel.creator && pciModel.creator.hook && pciModel.creator.icon && (pciModel.enabled || !options.enabledOnly)){\n                    return {\n                        label : pciModel.label, //currently no translation available\n                        icon : pciModel.creator.icon.replace(new RegExp('^' + typeIdentifier + '\\/'), pciModel.baseUrl),\n                        short : pciModel.short,\n                        description : pciModel.description,\n                        qtiClass : 'customInteraction.' + pciModel.typeIdentifier, //custom interaction is block type\n                        tags : _.union(['Custom Interactions'], pciModel.tags)\n                    };\n                }\n            }\n        }).on('creatorsloaded', function(creators){\n            _.each(creators, function(creator){\n                qtiElements.classes['customInteraction.' + creator.getTypeIdentifier()] = {parents : ['customInteraction'], qti : true};\n            });\n        });\n    };\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/qtiCommonRenderer/renderers/config',[\n    'lodash',\n    'context',\n    'ui/themes',\n    'taoItems/assets/manager',\n    'taoItems/assets/strategies',\n    'module',\n    'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'\n], function(_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy){\n    'use strict';\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory([\n        {\n            name : 'theme',\n            handle : function handleTheme(url){\n                if(itemThemes && url.path && (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))){\n                    return context.root_url + url.toString();\n                }\n            }\n        },\n        assetStrategies.taomedia,\n        assetStrategies.external,\n        assetStrategies.base64,\n        assetStrategies.itemCssNoCache,\n        assetStrategies.baseUrl,\n        portableAssetStrategy\n    ], {baseUrl : ''});//baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        'assessmentItem' : 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        '_container' : 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        '_simpleFeedbackRule' : false,\n        'stylesheet' : 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        'outcomeDeclaration' : false,\n        'responseDeclaration' : false,\n        'responseProcessing' : false,\n        'img' : 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        'math' : 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        'object' : 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        'table' : 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        'rubricBlock' : 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        'modalFeedback' : 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        'prompt' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        'choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'hottext' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        'gap' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        'gapText' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        'inlineChoice' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        'hottextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        'hotspotChoice' : false,\n        'gapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        'gapImg' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        'associableHotspot' : false,\n        'customInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    return {\n        name:'commonRenderer',\n        locations: locations,\n        options:   {\n            assetManager: assetManager,\n            themes : itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages : moduleConfig.messages\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/container', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, helper, options, functionType=\"function\", self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<div class=\\\"qti-block\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  return buffer;\n  }\n\n  stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.contentModel), \"blockStatic\", options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.contentModel), \"blockStatic\", options));\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Container',['tpl!taoQtiItem/qtiCommonRenderer/tpl/container'], function(tpl){\n    'use strict';\n\n    return {\n        qtiClass : '_container',\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/img', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"class=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"height=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"width=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \";\n  return buffer;\n  }\n\n  buffer += \"<img \\n    data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" \\n    data-qti-class=\\\"img\\\" \\n    src=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.src)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \\n    alt=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.alt)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.height), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.width), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    />\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Img',[\n    'core/promise',\n    'ui/waitForMedia',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/img',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(Promise, waitForMedia, tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'img',\n        template : tpl,\n        getContainer : containerHelper.get,\n        render : function render (img, data){\n            return new Promise(function(resolve, reject){\n                containerHelper.get(img).waitForMedia(resolve);\n            });\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/include', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, helper, functionType=\"function\";\n\n\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Include',['tpl!taoQtiItem/qtiCommonRenderer/tpl/include'], function(tpl){\n    'use strict';\n\n    return {\n        qtiClass : 'include',\n        template : tpl\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/associateInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program7(depth0,data) {\n  \n  var stack1;\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-associateInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"associateInteraction\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <ul class=\\\"choice-area clearfix  none block-listing solid horizontal source\\\">\\n        \";\n  options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}\n  if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </ul>\\n    <ul class=\\\"result-area none target clearfix\\\">\\n    </ul>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/associateInteraction.pair', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"incomplete-pair\";\n  }\n\n  buffer += \"<li class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n    <div class=\\\"target lft\\\"></div>\\n    <div class=\\\"target rgt\\\"></div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/instruction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"small feedback-info item-instruction\\\">\\n    <span class=\\\"icon-info icon\\\"></span><span class=\\\"instruction-message\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n</div>\";\n  return buffer;\n  });\n});\n\n","define('taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',[\n    'lodash',\n    'taoQtiItem/qtiItem/helper/util',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/instruction',\n], function(_, util, instructionTpl){\n\n    var _notificationLevels = ['info', 'warning', 'error', 'success'];\n\n    var Instruction = function(interaction, message, callback){\n        this.interaction = interaction;\n        this.defaultMessage = message || '';\n        this.currentMessage = '';\n        this.level = 'info';\n        this.serial = util.buildSerial('instruction_');\n        this.callback = callback;\n        this.$dom = null;\n        this.state = false;\n    };\n\n    Instruction.isValidLevel = function(level){\n        return (_.indexOf(_notificationLevels, level) >= 0);\n    };\n\n    Instruction.prototype.setState = function(state){\n        this.state = state;\n    };\n\n    Instruction.prototype.checkState = function(state){\n        return (this.state === state);\n    };\n\n    Instruction.prototype.getId = function(){\n        return this.serial;\n    };\n\n    Instruction.prototype.create = function($container){\n\n        $container.append(instructionTpl({\n            'message' : this.defaultMessage,\n            'serial' : this.serial\n        }));\n\n        this.$dom = $container.find('#' + this.serial);\n    };\n\n    Instruction.prototype.update = function(options){\n\n        var level = (options && options.level) ? options.level : '',\n            message = (options && options.message) ? options.message : '',\n            timeout = (options && options.timeout) ? options.timeout : 0,\n            start = (options && typeof(options.start) === 'function') ? options.start : null,\n            stop = (options && typeof(options.stop) === 'function') ? options.stop : null;\n\n        if(level && Instruction.isValidLevel(level)){\n            this.$dom.removeClass('feedback-' + this.level).addClass('feedback-' + level);\n            this.$dom.find('.icon').removeClass('icon-' + this.level).addClass('icon-' + level);\n            this.level = level;\n        }\n\n        if(message){\n            this.$dom.find('.instruction-message').html(message);\n            this.currentMessage = message;\n        }\n\n        if(timeout){\n            var _this = this;\n            if(start){\n                start.call(_this);\n            }\n            _this.timer = setTimeout(function(){\n                if(stop){\n                    stop.call(_this);\n                }\n                _this.timer = null;\n            }, timeout);\n        }\n\n    };\n\n    Instruction.prototype.setLevel = function(level, timeout){\n        var options = {\n            level : level\n        };\n        \n        if(timeout){\n            options.timeout = parseInt(timeout);\n            options.stop = function(){\n                this.setLevel('info');\n            };\n        }\n        \n        this.update(options);\n    };\n    \n    Instruction.prototype.getLevel = function() {\n        return this.level;\n    };\n\n    Instruction.prototype.setMessage = function(message, timeout){\n        this.update({message : message, timeout : timeout});\n    };\n\n    Instruction.prototype.reset = function(){\n        this.update({level : 'info', message : this.defaultMessage});\n        this.state = false;\n    };\n\n    Instruction.prototype.validate = function(data){\n        if(typeof(this.callback) === 'function'){\n            this.callback.call(this, data);\n        }\n    };\n\n    return Instruction;\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/notification', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"small feedback-\";\n  if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" item-notification\\\">\\n    <span class=\\\"icon-\";\n  if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span><span class=\\\"feedback-message\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n    + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/Instruction',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/notification'\n], function(_, $, __, containerHelper, Instruction, notifTpl){\n    'use strict';\n\n    //stores the instructions\n    var _instructions = {};\n\n    /**\n     * The instruction manager helps you in managing instructions and\n     * constraints on a QTI Element, usually an interaction or a choice.\n     *\n     * @exports qtiCommonRenderer/helpers/Instructions/instructionManager\n     */\n    var instructionManager = {\n\n        /**\n         * Validate the instructions of an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {Object} [data] - any data to give to the instructions\n         */\n        validateInstructions : function(element, data){\n            var serial = element.getSerial();\n            if(_instructions[serial]){\n                _.each(_instructions[serial], function(instruction){\n                    instruction.validate(data || {});\n                });\n            }\n        },\n\n        /**\n         * Add a new instructions to an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display to the user when the instruction is validated\n         * @param {Function} validateCallback - how to validate the instruction\n         * @returns {Instruction} the created instruction\n         */\n        appendInstruction : function(element, message, validateCallback){\n            var serial = element.getSerial(),\n                instruction = new Instruction(element, message, validateCallback);\n\n            if(!_instructions[serial]){\n                _instructions[serial] = {};\n            }\n            _instructions[serial][instruction.getId()] = instruction;\n\n            instruction.create($('.instruction-container', containerHelper.get(element)));\n\n            return instruction;\n        },\n\n        /**\n         * Remove instructions from an element\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         */\n        removeInstructions : function(element){\n            _instructions[element.getSerial()] = {};\n            containerHelper.get(element).find('.instruction-container').empty();\n        },\n\n        /**\n         * Reset the instructions states for an element (but keeps configuration)\n         * @param {Object} element - the qti object, ie. interaction, choice, etc.\n         */\n        resetInstructions : function(element){\n            var serial = element.getSerial();\n            if(_instructions[serial]){\n                _.each(_instructions[serial], function(instruction){\n                    instruction.reset();\n                });\n            }\n        },\n\n        /**\n         * Default instuction set with a min/max constraints.\n         * @param {Object} interaction\n         * @param {jQueryElement} $container\n         * @param {Object} options\n         * @param {Number} [options.min = 0] -\n         * @param {Number} [options.max = 0] -\n         * @param {Function} options.getResponse - a ref to a function that get the raw response (array) from the interaction in parameter\n         * @param {Function} [options.onError] - called by once an error occurs with validateInstruction data in parameters\n         */\n        minMaxChoiceInstructions : function(interaction, options){\n\n            var self = this,\n                min = options.min || 0,\n                max = options.max || 0,\n                getResponse = options.getResponse,\n                onError = options.onError || _.noop(),\n                choiceCount = options.choiceCount === false ? false : _.size(interaction.getChoices()),\n                minInstructionSet = false,\n                msg;\n\n            if(!_.isFunction(getResponse)){\n                throw \"invalid parameter getResponse\";\n            }\n\n            //if maxChoice = 0, inifinite choice possible\n            if(max > 0 && (choiceCount === false || max < choiceCount)){\n                if(max === min){\n                    minInstructionSet = true;\n                    msg = (max <= 1) ? __('You must select exactly %d choice', max) : __('You must select exactly %d choices', max);\n\n                    self.appendInstruction(interaction, msg, function(data){\n\n                        if(getResponse(interaction).length >= max){\n                            this.setLevel('success');\n                            if(this.checkState('fulfilled')){\n                                this.update({\n                                    level : 'warning',\n                                    message : __('Maximum choices reached'),\n                                    timeout : 2000,\n                                    start : function(){\n                                        onError(data);\n                                    },\n                                    stop : function(){\n                                        this.update({level : 'success', message : msg});\n                                    }\n                                });\n                            }\n                            this.setState('fulfilled');\n                        }else{\n                            this.reset();\n                        }\n                    });\n                }else if(max > min){\n                    msg = (max <= 1) ? __('You can select maximum %d choice', max) : __('You can select maximum %d choices', max);\n                    self.appendInstruction(interaction,  msg, function(data){\n\n                        if(getResponse(interaction).length >= max){\n\n                            this.setLevel('success');\n                            this.setMessage(__('Maximum choices reached'));\n                            if(this.checkState('fulfilled')){\n                                this.update({\n                                    level : 'warning',\n                                    timeout : 2000,\n                                    start : function(){\n                                        onError(data);\n                                    },\n                                    stop : function(){\n                                        this.setLevel('info');\n                                    }\n                                });\n                            }\n\n                            this.setState('fulfilled');\n                        }else{\n                            this.reset();\n                        }\n                    });\n                }\n            }\n\n            if(!minInstructionSet && min > 0 && (choiceCount === false || min < choiceCount)){\n                msg = (min <= 1) ? __('You must at least %d choice', min) : __('You must select at least %d choices', max);\n                self.appendInstruction(interaction, msg, function(){\n                    if(getResponse(interaction).length >= min){\n                        this.setLevel('success');\n                    }else{\n                        this.reset();\n                    }\n                });\n            }\n        },\n\n        /**\n         * Appends a instruction  notification message\n         * @deprecated in favor of instructions\n         * @param {QtiElement} element - a QTI element like an interaction or a choice\n         * @param {String} message - the message to give to display\n         * @param {String} [level = 'info'] - the notification level in info, success, error or warning\n         */\n        appendNotification : function(element, message, level){\n\n            level = level || 'info';\n\n            if(Instruction.isValidLevel(level)){\n\n                var $container = containerHelper.get(element);\n\n                $container.find('.notification-container').prepend(notifTpl({\n                    'level' : level,\n                    'message' : message\n                }));\n\n                var $notif = $container.find('.item-notification:first');\n                var _remove = function(){\n                    $notif.fadeOut();\n                };\n\n                $notif.find('.close-trigger').on('click', _remove);\n                setTimeout(_remove, 2000);\n\n                return $notif;\n            }\n        },\n\n        /**\n         * Removes all the displayed notifications\n         * @deprecated in favor of instructions\n         */\n        removeNotifications : function(element){\n            containerHelper.get(element).find('.item-notification').remove();\n        }\n    };\n    return instructionManager;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint',['lodash'], function(_){\n    \n    'use strict';\n\n    var _formatters = {\n        boolean : function(value){\n            return value ? 'true' : 'false';\n        },\n        integer : function(value){\n            return value;\n        },\n        float : function(value){\n            return value;\n        },\n        string : function(value){\n            return (value === '') ? 'NULL' : ('\"' + value + '\"');\n        },\n        point : function(value){\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        pair : function(value){\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        directedPair : function(value){\n            return '[' + value[0] + ', ' + value[1] + ']';\n        },\n        duration : function(value){\n            return value;\n        },\n        file : function(value){\n            return 'binary data';\n        },\n        uri : function(value){\n            return value;\n        },\n        intOrIdentifier : function(value){\n            return value;\n        },\n        identifier : function(value){\n            return value;\n        }\n    };\n    \n    /**\n     * Return the pretty print string for a qti base variable\n     * \n     * @param {type} value\n     * @param {type} withType - the qti baseType\n     * @returns {String}\n     */\n    function printBase(value, withType){\n\n        var print = '',\n            base = value.base;\n\n        withType = (typeof withType !== 'undefined') ? withType : true;\n\n        if(base){\n            \n            _.forIn(_formatters, function(formatter, baseType){\n                if(base[baseType] !== undefined){\n\n                    print += (withType) ? '(' + baseType + ') ' : '';\n                    print += formatter(base[baseType]);\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n\n    };\n    \n    /**\n     * Return the pretty print string for a qti list variable\n     * \n     * @param {object} value\n     * @param {string} withType - the qti basetype of the list\n     * @returns {string}\n     */\n    function printList(value, withType){\n\n        var print = '',\n            list = value.list;\n\n        withType = (typeof withType !== 'undefined') ? withType : true;\n\n        if(list){\n\n            _.forIn(_formatters, function(formatter, baseType){\n                if(list[baseType] !== undefined){\n\n                    print += (withType) ? '(' + baseType + ') ' : '';\n\n                    print += '[';\n\n                    _.each(list[baseType], function(value){\n                        print += formatter(value) + ', ';\n                    });\n\n                    if(_.size(list[baseType])){\n                        print = print.substring(0, print.length - 2);\n                    }\n\n                    print += ']';\n\n                    return false;\n                }\n            });\n\n            return print;\n        }\n    };\n    \n    /**\n     * Return the pretty print string for a qti record variable\n     * \n     * @param {object} value\n     * @returns {String}\n     */\n    function printRecord(value){\n        if(value && value.record){\n            return '(record) ' + JSON.stringify(value.record);\n        }\n        return '';\n    }\n    \n    return {\n        printBase : printBase,\n        printList : printList,\n        printRecord : printRecord\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/PciResponse',['lodash', 'taoQtiItem/qtiCommonRenderer/helpers/PciPrettyPrint'], function(_, pciPrettyPrint){\n    'use strict';\n\n    var _qtiModelPciResponseCardinalities = {\n        single : 'base',\n        multiple : 'list',\n        ordered : 'list',\n        record : 'record'\n    };\n\n    return {\n\n        /**\n         * Parse a response variable formatted according to IMS PCI: http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         *\n         * @see serialize\n         * @param {Object} response\n         * @param {Object} interaction\n         * @returns {Array}\n         */\n        unserialize : function(response, interaction){\n\n            var ret = [],\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            if(_qtiModelPciResponseCardinalities[cardinality]){\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                var responseValues = response[mappedCardinality];\n\n                if(responseValues === null){\n                    ret = [];\n                }else if(_.isObject(responseValues)){\n                    if(responseValues[baseType] !== undefined){\n                        ret = responseValues[baseType];\n                        ret = _.isArray(ret) ? ret : [ret];\n                    }else{\n                        throw 'invalid response baseType';\n                    }\n                }else{\n                    throw 'invalid response cardinality, expected '+cardinality+' ('+mappedCardinality+')';\n                }\n            }else{\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return ret;\n        },\n        /**\n         * Serialize the input response array into the format to be send to result server according to IMS PCI recommendation :\n         * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * With the only exception for empty response, which is represented by a javascript \"null\" value\n         *\n         * @see http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n         * @param {Array} responseValues\n         * @param {Object} interaction\n         * @returns {Object|null}\n         */\n        serialize : function(responseValues, interaction){\n\n            if(!_.isArray(responseValues)){\n                throw 'invalid argument : responseValues must be an Array';\n            }\n\n            var response = {},\n                responseDeclaration = interaction.getResponseDeclaration(),\n                baseType = responseDeclaration.attr('baseType'),\n                cardinality = responseDeclaration.attr('cardinality'),\n                mappedCardinality;\n\n            responseValues = _.map(responseValues || [], function(v){\n                return (baseType === 'boolean') ? (v === true || v === 'true') : v;\n            });\n\n            if(_qtiModelPciResponseCardinalities[cardinality]){\n                mappedCardinality = _qtiModelPciResponseCardinalities[cardinality];\n                if(mappedCardinality === 'base'){\n                    if(responseValues.length === 0){\n                        //return empty response:\n                        response.base = null;\n                    }else{\n                        response.base = {};\n                        response.base[baseType] = responseValues[0];\n                    }\n                }else{\n                    response[mappedCardinality] = {};\n                    response[mappedCardinality][baseType] = responseValues;\n                }\n            }else{\n                throw 'unknown cardinality in the responseDeclaration of the interaction';\n            }\n\n            return response;\n        },\n        isEmpty : function(response){\n            return (\n                response === null\n                || _.isEmpty(response)\n                || response.base === null\n                || _.isArray(response.list) && _.isEmpty(response.list)\n                || _.isArray(response.record) && _.isEmpty(response.record)\n            );\n        },\n\n        /**\n         * Print a PCI JSON response into a human-readable string.\n         *\n         * @param {Object} response A response in PCI JSON representation.\n         * @returns {String} A human-readable version of the PCI JSON representation.\n         */\n        prettyPrint: function(response) {\n            var print = '';\n\n            if (typeof response.base !== 'undefined') {\n                // -- BaseType.\n                print += pciPrettyPrint.printBase(response, true);\n            }\n            else if (typeof response.list !== 'undefined') {\n                // -- ListType\n                print += pciPrettyPrint.printList(response, true);\n            }\n            else if (typeof response.record !== 'undefined') {\n                // -- RecordType\n                print += pciPrettyPrint.printRecord(response, true);\n            }\n            else {\n                throw 'Not a valid PCI JSON Response';\n            }\n\n            return print;\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',[\n    'jquery',\n    'lodash',\n    'util/adaptSize',\n    'ui/waitForMedia'\n], function ($, _, adaptSize, waitForMedia) {\n\n    'use strict';\n\n    return {\n\n        /**\n         * Resize jQueryElement that have changed their dimensions due to a change of the content\n         *\n         * @param {jQueryElement|widget} target\n         */\n        adaptSize: function (target) {\n\n            var $elements;\n            var $container;\n\n            switch (true) {\n                // widget\n                case (typeof target.$container !== 'undefined'):\n                    $elements = target.$container.find('.add-option, .result-area .target, .choice-area .qti-choice');\n                    $container = target.$container;\n                    break;\n\n                // jquery elements\n                default:\n                    $elements = target;\n                    $container = $($elements).first().parent();\n            }\n\n            $container.waitForMedia(function () {\n                adaptSize.height($elements);\n            });\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/associateInteraction',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/associateInteraction.pair',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter',\n    'interact',\n    'ui/interactUtils'\n], function ($, _, __, Promise, tpl, pairTpl, containerHelper, instructionMgr, pciResponse, sizeAdapter, interact, interactUtils) {\n\n    'use strict';\n\n    var setChoice = function(interaction, $choice, $target){\n\n        var $container      = containerHelper.get(interaction);\n        var choiceSerial    = $choice.data('serial');\n        var usage           = $choice.data('usage') || 0;\n        var choice          = interaction.getChoice(choiceSerial);\n\n        if(!choiceSerial){\n            throw 'empty choice serial';\n        }\n\n        //to track number of times a choice is used in a pair\n        usage++;\n        $choice.data('usage', usage);\n\n        var _setChoice = function(){\n\n            $target\n                .data('serial', choiceSerial)\n                .html($choice.html())\n                .addClass('filled');\n\n            if(!interaction.responseMappingMode &&\n                choice.attr('matchMax') &&\n                usage >= choice.attr('matchMax')){\n\n                $choice.addClass('deactivated');\n            }\n        };\n\n        if($target.siblings('div').hasClass('filled')){\n\n            var $resultArea = $('.result-area', $container),\n                $pair = $target.parent(),\n                thisPairSerial = [$target.siblings('div').data('serial'), choiceSerial],\n                $otherRepeatedPair = $();\n\n            //check if it is not a repeating association!\n            $resultArea.children().not($pair).each(function(){\n                var $otherPair = $(this).children('.filled');\n                if($otherPair.length === 2){\n                    var otherPairSerial = [$($otherPair[0]).data('serial'), $($otherPair[1]).data('serial')];\n                    if(_.intersection(thisPairSerial, otherPairSerial).length === 2){\n                        $otherRepeatedPair = $otherPair;\n                        return false;\n                    }\n                }\n            });\n\n            if($otherRepeatedPair.length === 0){\n                //no repeated pair, so allow the choice to be set:\n                _setChoice();\n\n                //trigger pair made event\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type : 'added',\n                    $pair : $pair,\n                    choices : thisPairSerial\n                });\n\n                instructionMgr.validateInstructions(interaction, {choice : $choice, target : $target});\n\n                if(interaction.responseMappingMode || parseInt(interaction.attr('maxAssociations')) === 0){\n\n                    $pair.removeClass('incomplete-pair');\n\n                    //append new pair option?\n                    if(!$resultArea.children('.incomplete-pair').length){\n                        $resultArea.append(pairTpl({empty : true}));\n                        $resultArea.children('.incomplete-pair').fadeIn(600, function(){\n                            $(this).show();\n                        });\n                    }\n                }\n            }else{\n                //repeating pair: show it:\n\n                //@todo add a notification message here in warning\n                $otherRepeatedPair.css('border', '1px solid orange');\n                $target.html(__('identical pair already exists')).css({\n                    color : 'orange',\n                    border : '1px solid orange'\n                });\n                setTimeout(function(){\n                    $otherRepeatedPair.removeAttr('style');\n                    $target.empty().css({color:\"\",border:\"\"});\n                }, 2000);\n            }\n\n        }else{\n            _setChoice();\n        }\n    };\n\n    var unsetChoice = function(interaction, $filledChoice, animate, triggerChange){\n\n        var $container      = containerHelper.get(interaction);\n        var choiceSerial    = $filledChoice.data('serial');\n        var $choice         = $container.find('.choice-area [data-serial=' + choiceSerial + ']');\n        var usage           = $choice.data('usage') || 0;\n        var $parent         = $filledChoice.parent();\n        var $sibling        = $container.find('.choice-area [data-serial=' + $filledChoice.siblings('.target').data('serial') + ']');\n\n        //decrease the  use for this choice\n        usage--;\n\n        $choice\n            .data('usage', usage)\n            .removeClass('deactivated');\n\n\n        $filledChoice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if(!interaction.swapping){\n\n            if(triggerChange !== false){\n                //a pair with one single element is not valid, so consider the response to be modified:\n                containerHelper.triggerResponseChangeEvent(interaction, {\n                    type : 'removed',\n                    $pair : $filledChoice.parent()\n                });\n                instructionMgr.validateInstructions(interaction, {choice : $choice});\n            }\n\n            //if we are to remove the sibling too, update its usage:\n            $sibling.data('usage', $sibling.data('usage') - 1).removeClass('deactivated');\n\n            //completely empty pair:\n            if(!$choice.siblings('div').hasClass('filled') && (parseInt(interaction.attr('maxAssociations')) === 0 || interaction.responseMappingMode)){\n                //shall we remove it?\n                if(!$parent.hasClass('incomplete-pair')){\n                    if(animate){\n                        $parent.addClass('removing').fadeOut(500, function(){\n                            $(this).remove();\n                        });\n                    }else{\n                        $parent.remove();\n                    }\n                }\n            }\n        }\n    };\n\n    var getChoice = function(interaction, identifier){\n        var $container = containerHelper.get(interaction);\n\n        //warning: do not use selector data-identifier=identifier because data-identifier may change dynamically\n        var choice = interaction.getChoiceByIdentifier(identifier);\n        if(!choice){\n            throw new Error('cannot find a choice with the identifier : ' + identifier);\n        }\n        return $('.choice-area [data-serial=' + choice.getSerial() + ']', $container);\n    };\n\n    var renderEmptyPairs = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n        var max = parseInt(interaction.attr('maxAssociations'));\n        var $resultArea = $('.result-area', $container);\n\n        if(interaction.responseMappingMode || max === 0){\n            $resultArea.append(pairTpl({empty : true}));\n            $resultArea.children('.incomplete-pair').show();\n        }else{\n            for(var i = 0; i < max; i++){\n                $resultArea.append(pairTpl());\n            }\n        }\n    };\n\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction){\n\n        var self = this;\n\n        return new Promise(function(resolve, reject){\n\n            var $container = containerHelper.get(interaction);\n            var $choiceArea = $container.find('.choice-area');\n            var $resultArea = $container.find('.result-area');\n\n            var $activeChoice = null;\n\n            var isDragAndDropEnabled;\n            var dragOptions;\n            var dropOptions;\n\n            var $bin = $('<span>', {'class' : 'icon-undo remove-choice', 'title' : __('remove')});\n\n            var choiceSelector = $choiceArea.selector + ' >li';\n            var resultSelector = $resultArea.selector + ' >li>div';\n            var binSelector = $container.selector + \" .remove-choice\";\n\n            var _getChoice = function(serial){\n                return $choiceArea.find('[data-serial=' + serial + ']');\n            };\n\n            /**\n             * @todo Tried to store $resultArea.find[...] in a variable but this fails\n             * @param $choice\n             * @param $target\n             * @private\n             */\n            var _setChoice = function($choice, $target){\n                setChoice(interaction, $choice, $target);\n                sizeAdapter.adaptSize($('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction)));\n            };\n\n            var _resetSelection = function(){\n                if($activeChoice){\n                    $resultArea.find('.remove-choice').remove();\n                    $activeChoice.removeClass('active');\n                    $container.find('.empty').removeClass('empty');\n                    $activeChoice = null;\n                }\n            };\n\n            var _unsetChoice = function($choice){\n                unsetChoice(interaction, $choice, true);\n                sizeAdapter.adaptSize($('.result-area .target, .choice-area .qti-choice', containerHelper.get(interaction)));\n            };\n\n            var _isInsertionMode = function(){\n                return ($activeChoice && $activeChoice.data('identifier'));\n            };\n\n            var _isModeEditing = function(){\n                return ($activeChoice && !$activeChoice.data('identifier'));\n            };\n\n            var _handleChoiceActivate = function($target) {\n                if($target.hasClass('deactivated')){\n                    return;\n                }\n\n                if(_isModeEditing()){\n                    //swapping:\n                    interaction.swapping = true;\n                    _unsetChoice($activeChoice);\n                    _setChoice($target, $activeChoice);\n                    _resetSelection();\n                    interaction.swapping = false;\n                }else{\n                    if($target.hasClass('active')){\n                        _resetSelection();\n\n                    }else{\n                        _activateChoice($target);\n                    }\n                }\n            };\n\n            var _activateChoice = function($choice) {\n                _resetSelection();\n                $activeChoice = $choice;\n                $choice.addClass('active');\n                $resultArea.find('>li>.target').addClass('empty');\n            };\n\n            var _handleResultActivate = function($target) {\n                var choiceSerial,\n                    targetSerial = $target.data('serial');\n\n                if(_isInsertionMode()){\n\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if(targetSerial !== choiceSerial){\n\n                        if($target.hasClass('filled')){\n                            interaction.swapping = true;//hack to prevent deleting empty pair in infinite association mode\n                        }\n                        //set choices:\n                        if(targetSerial){\n                            _unsetChoice($target);\n                        }\n                        _setChoice($activeChoice, $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n\n                }else if(_isModeEditing()){\n\n                    choiceSerial = $activeChoice.data('serial');\n\n                    if(targetSerial !== choiceSerial){\n\n                        if($target.hasClass('filled') || $activeChoice.siblings('div')[0] === $target[0]){\n                            interaction.swapping = true;//hack to prevent deleting empty pair in infinite association mode\n                        }\n\n                        _unsetChoice($activeChoice);\n                        if(targetSerial){\n                            //swapping:\n                            _unsetChoice($target);\n                            _setChoice(_getChoice(targetSerial), $activeChoice);\n                        }\n                        _setChoice(_getChoice(choiceSerial), $target);\n\n                        //always reset swapping mode after the choice is set\n                        interaction.swapping = false;\n                    }\n\n                    _resetSelection();\n\n                }else if(targetSerial){\n                    _activateResult($target);\n                    $target.append($bin);\n                }\n            };\n\n            var _activateResult = function ($target) {\n                var targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $resultArea.find('>li>.target').filter(function(){\n                    return $(this).data('serial') !== targetSerial;\n                }).addClass('empty');\n\n                $choiceArea.find('>li:not(.deactivated)').filter(function(){\n                    return $(this).data('serial') !== targetSerial;\n                }).addClass('empty');\n            };\n\n\n            // Point & click handlers\n\n            interact($container.selector).on('tap', function() {\n                _resetSelection();\n            });\n\n            interact($choiceArea.selector + ' >li').on('tap', function(e) {\n                var $target = $(e.currentTarget);\n                e.stopPropagation();\n                _handleChoiceActivate($target);\n                e.preventDefault();\n            });\n\n            interact($resultArea.selector + ' >li>div').on('tap', function(e) {\n                var $target = $(e.currentTarget);\n                e.stopPropagation();\n                _handleResultActivate($target);\n                e.preventDefault();\n            });\n\n            interact(binSelector).on('tap', function (e) {\n                e.stopPropagation();\n                _unsetChoice($activeChoice);\n                _resetSelection();\n                e.preventDefault();\n            });\n\n            if(!interaction.responseMappingMode){\n                _setInstructions(interaction);\n            }\n\n\n            // Drag & drop handlers\n\n            if (self.getOption && self.getOption(\"enableDragAndDrop\") && self.getOption(\"enableDragAndDrop\").associate) {\n                isDragAndDropEnabled = self.getOption(\"enableDragAndDrop\").associate;\n            }\n\n            function _iFrameDragFix(draggableSelector, target) {\n                interactUtils.iFrameDragFixOn(function () {\n                    var $activeDrop = $(resultSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(resultSelector).fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    $activeDrop = $(choiceSelector + '.dropzone');\n                    if ($activeDrop.length) {\n                        interact(choiceSelector + '.empty').fire({\n                            type: 'drop',\n                            target: $activeDrop.eq(0),\n                            relatedTarget: target\n                        });\n                    }\n                    interact(draggableSelector).fire({\n                        type: 'dragend',\n                        target: target\n                    });\n                });\n            }\n\n            if (isDragAndDropEnabled) {\n                dragOptions = {\n                    inertia: false,\n                    autoScroll: true,\n                    restrict: {\n                        restriction: \".qti-interaction\",\n                        endOnly: false,\n                        elementRect: {top: 0, left: 0, bottom: 1, right: 1}\n                    }\n                };\n\n                // makes choices draggables\n                interact(choiceSelector + ':not(.deactivated)').draggable(_.defaults({\n                    onstart: function (e) {\n                        var $target = $(e.target);\n                        $target.addClass(\"dragged\");\n                        _activateChoice($target);\n                        _iFrameDragFix(choiceSelector + ':not(.deactivated)', e.target);\n                    },\n                    onmove: function (e) {\n                        interactUtils.moveElement(e.target, e.dx, e.dy);\n                    },\n                    onend: function (e) {\n                        var $target = $(e.target);\n                        $target.removeClass(\"dragged\");\n                        _resetSelection();\n\n                        interactUtils.restoreOriginalPosition($target);\n                        interactUtils.iFrameDragFixOff();\n                    }\n                }, dragOptions)).styleCursor(false);\n\n                // makes results draggables\n                interact(resultSelector + '.filled').draggable(_.defaults({\n                    onstart: function (e) {\n                        var $target = $(e.target);\n                        $target.addClass(\"dragged\");\n                        _resetSelection();\n                        _activateResult($target);\n                        _iFrameDragFix(resultSelector + '.filled', e.target);\n                    },\n                    onmove: function (e) {\n                        interactUtils.moveElement(e.target, e.dx, e.dy);\n                    },\n                    onend: function (e) {\n                        var $target = $(e.target);\n                        $target.removeClass(\"dragged\");\n\n                        interactUtils.restoreOriginalPosition($target);\n\n                        if ($activeChoice) {\n                            _unsetChoice($activeChoice);\n                        }\n                        _resetSelection();\n\n                        interactUtils.iFrameDragFixOff();\n                    }\n                }, dragOptions)).styleCursor(false);\n\n\n                dropOptions = {\n                    overlap: 0.15,\n                    ondragenter: function(e) {\n                        $(e.target).addClass('dropzone');\n                        $(e.relatedTarget).addClass('droppable');\n                    },\n                    ondragleave: function(e) {\n                        $(e.target).removeClass('dropzone');\n                        $(e.relatedTarget).removeClass('droppable');\n                    }\n                };\n\n                // makes hotspots droppables\n                interact(resultSelector).dropzone(_.defaults({\n                    ondrop: function (e) {\n                        this.ondragleave(e);\n                        _handleResultActivate($(e.target));\n                    }\n                }, dropOptions));\n\n                // makes available choices droppables\n                interact(choiceSelector + '.empty').dropzone(_.defaults({\n                    ondrop: function (e) {\n                        this.ondragleave(e);\n                        _handleChoiceActivate($(e.target));\n                    }\n                }, dropOptions));\n            }\n\n\n            // interaction init\n\n            renderEmptyPairs(interaction);\n\n            sizeAdapter.adaptSize($('.result-area .target, .choice-area .qti-choice', $container));\n\n            resolve();\n\n        });\n    };\n\n    var _setInstructions = function(interaction){\n\n        var min = parseInt(interaction.attr('minAssociations'), 10),\n            max = parseInt(interaction.attr('maxAssociations'), 10);\n\n        //infinite association:\n        if(min === 0){\n            if(max === 0){\n                instructionMgr.appendInstruction(interaction, __('You may make as many association pairs as you want.'));\n            }\n        }else{\n            if(max === 0){\n                instructionMgr.appendInstruction(interaction, __('The maximum number of association is unlimited.'));\n            }\n            //the max value is implicit since the appropriate number of empty pairs have already been created\n            var msg = __('You need to make') + ' ';\n            msg += (min > 1) ? __('at least') + ' ' + min + ' ' + __('association pairs') : __('one association pair');\n            instructionMgr.appendInstruction(interaction, msg, function(){\n                if(_getRawResponse(interaction).length >= min){\n                    this.setLevel('success');\n                }else{\n                    this.reset();\n                }\n            });\n        }\n    };\n\n    var resetResponse = function(interaction){\n        var $container = containerHelper.get(interaction);\n\n        //destroy selected choice:\n        $container.find('.result-area .active').each(function () {\n           interactUtils.tapOn(this);\n        });\n\n        $('.result-area>li>div', $container).each(function(){\n            unsetChoice(interaction, $(this), false, false);\n        });\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    var _setPairs = function(interaction, pairs){\n\n        var $container = containerHelper.get(interaction);\n        var addedPairs = 0;\n        var $emptyPair = $('.result-area>li:first', $container);\n        if(pairs && interaction.getResponseDeclaration().attr('cardinality') === 'single' && pairs.length){\n            pairs = [pairs];\n        }\n        _.each(pairs, function(pair){\n            if($emptyPair.length){\n                var $divs = $emptyPair.children('div');\n                setChoice(interaction, getChoice(interaction, pair[0]), $($divs[0]));\n                setChoice(interaction, getChoice(interaction, pair[1]), $($divs[1]));\n                addedPairs++;\n                $emptyPair = $emptyPair.next('li');\n            }else{\n                //the number of pairs exceeds the maximum allowed pairs: break;\n                return false;\n            }\n        });\n\n        return addedPairs;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\n    };\n\n    var _getRawResponse = function(interaction){\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $('.result-area>li', $container).each(function(){\n            var pair = [];\n            $(this).find('div').each(function(){\n                var serial = $(this).data('serial');\n                if(serial){\n                    pair.push(interaction.getChoice(serial).id());\n                }\n            });\n            if(pair.length === 2){\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    var destroy = function(interaction){\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + ' >li').unset();\n        interact($container.find('.result-area').selector + ' >li>div').unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        $('.result-area', $container).empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        var $container;\n\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if(_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())){\n\n                $container = containerHelper.get(interaction);\n\n                $('.choice-area .qti-choice', $container)\n                    .sort(function(a, b){\n                        var aIndex = _.indexOf(state.order, $(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $(b).data('identifier'));\n                        if(aIndex > bIndex) {\n                            return 1;\n                        }\n                        if(aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if(interaction.attr('shuffle') === true){\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $('.choice-area .qti-choice', $container).each(function(){\n               state.order.push($(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the associate interaction\n     * @exports qtiCommonRenderer/renderers/interactions/AssociateInteraction\n     */\n    return {\n        qtiClass : 'associateInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState: setState,\n        getState : getState,\n\n        renderEmptyPairs : renderEmptyPairs\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/choiceInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \" horizontal\";\n  }\n\nfunction program9(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.listStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.listStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program11(depth0,data) {\n  \n  var stack1;\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-choiceInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"choiceInteraction\\\">\\n  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <ol class=\\\"plain block-listing solid choice-area\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.listStyle), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n      \";\n  options={hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data}\n  if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  </ol>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/choiceInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/sizeAdapter'\n], function (_, $, __, tpl, containerHelper, instructionMgr, pciResponse, sizeAdapter) {\n    'use strict';\n\n    var KEY_CODE_SPACE = 32;\n    var KEY_CODE_ENTER = 13;\n    var KEY_CODE_LEFT  = 37;\n    var KEY_CODE_UP    = 38;\n    var KEY_CODE_RIGHT = 39;\n    var KEY_CODE_DOWN  = 40;\n\n    /**\n     * Propagate the checked state to the actual input.\n     * @type {Function}\n     * @param {jQuery} $choiceBox - list element with the class `.qti-choice`\n     * @param {Boolean} state\n     * @private\n     */\n    var _triggerInput = function _triggerInput($choiceBox, state){\n\n        var $input       = $choiceBox.find('input:radio,input:checkbox').not('[disabled]').not('.disabled');\n        var $choiceBoxes = $choiceBox.add($choiceBox.siblings());\n\n        if(!$input.length){\n            return;\n        }\n\n        if(!_.isBoolean(state)) {\n            state = !$input.prop('checked');\n        }\n\n        $input.prop('checked', state);\n        $input.trigger('change');\n\n        $choiceBoxes.removeClass('user-selected');\n        $choiceBoxes.find('input:checked').not('[disabled]').not('.disabled').parents('.qti-choice').addClass('user-selected');\n    };\n\n    /**\n     * 'pseudo-label' is technically a div that behaves like a label.\n     * This allows the usage of block elements inside the fake label\n     *\n     * @private\n     * @param {Object} interaction - the interaction instance\n     * @param {jQueryElement} $container\n     */\n    var _pseudoLabel = function _pseudoLabel(interaction, $container){\n        var inputSelector = '.qti-choice input:radio:not([disabled]):not(.disabled), .qti-choice input:checkbox:not([disabled]):not(.disabled)';\n        $container.off('.commonRenderer');\n\n        $container.on('keydown.commonRenderer.keyNavigation', inputSelector, function(e){\n            var $qtiChoice = $(this).closest('.qti-choice');\n            var keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n            if (keyCode === KEY_CODE_UP || keyCode === KEY_CODE_LEFT){\n                e.preventDefault();\n                e.stopPropagation();\n                $qtiChoice.prev('.qti-choice').find('input:radio,input:checkbox').not('[disabled]').not('.disabled').focus();\n            } else if (keyCode === KEY_CODE_DOWN || keyCode === KEY_CODE_RIGHT){\n                e.preventDefault();\n                e.stopPropagation();\n                $qtiChoice.next('.qti-choice').find('input:radio,input:checkbox').not('[disabled]').not('.disabled').focus();\n            }\n        }).on('keyup.commonRenderer.keyNavigation', inputSelector, function(e){\n            var keyCode = e.keyCode ? e.keyCode : e.charCode;\n\n            if( keyCode === KEY_CODE_SPACE || keyCode === KEY_CODE_ENTER){\n                e.preventDefault();\n                e.stopPropagation();\n                _triggerInput($(this).closest('.qti-choice'));\n            }\n        });\n\n        $container.on('click.commonRenderer', '.qti-choice', function(e){\n            var $choiceBox = $(this);\n            var state;\n            var eliminator = e.target.dataset && e.target.dataset.eliminable;\n            var input = this.querySelector('.real-label > input');\n\n            // if the click has been triggered by a keyboard check, prevent this listener to cancel this check\n            if (e.originalEvent && $(e.originalEvent.target).is('input')) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();//required otherwise any tao scoped, form initialization might prevent it from working\n\n\n            if(!_.isUndefined(eliminator)) {\n                state = false;\n                if(eliminator === 'trigger') {\n                    this.classList.toggle('eliminated');\n                }\n            }\n\n            _triggerInput($choiceBox, state);\n\n            if(this.classList.contains('eliminated')) {\n                input.setAttribute('disabled', 'disabled');\n            }\n            else {\n                input.removeAttribute('disabled');\n            }\n\n            instructionMgr.validateInstructions(interaction, {choice : $choiceBox});\n            containerHelper.triggerResponseChangeEvent(interaction);\n        });\n    };\n\n    /**\n     * Get the responses from the DOM.\n     * @private\n     * @param {Object} interaction - the interaction instance\n     * @returns {Array} the list of choices identifiers\n     */\n    var _getRawResponse = function _getRawResponse(interaction){\n        var values = [];\n        var $container = containerHelper.get(interaction);\n        $('.real-label > input[name=response-' + interaction.getSerial() + ']:checked', $container).each(function(){\n            values.push($(this).val());\n        });\n        return values;\n    };\n\n    /**\n     * Define the instructions for the interaction\n     * @private\n     * @param {Object} interaction - the interaction instance\n     */\n    var _setInstructions = function _setInstructions(interaction){\n\n        var min = interaction.attr('minChoices'),\n            max = interaction.attr('maxChoices'),\n            msg,\n            choiceCount = _.size(interaction.getChoices()),\n            minInstructionSet = false;\n\n        var highlightInvalidInput = function highlightInvalidInput($choice){\n            var $input = $choice.find('.real-label > input'),\n                $li = $choice.css('color', '#BA122B'),\n                $icon = $choice.find('.real-label > span').css('color', '#BA122B').addClass('cross error');\n            var timeout = interaction.data('__instructionTimeout');\n\n            if(timeout){\n                clearTimeout(timeout);\n            }\n            timeout = setTimeout(function(){\n                $input.prop('checked', false);\n                $li.removeAttr('style');\n                $icon.removeAttr('style').removeClass('cross');\n                $li.toggleClass('user-selected', false);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }, 150);\n            interaction.data('__instructionTimeout', timeout);\n        };\n\n        //if maxChoice = 1, use the radio group behaviour\n        //if maxChoice = 0, infinite choice possible\n        if(max > 1 && max < choiceCount){\n            if(max === min){\n                minInstructionSet = true;\n                msg = __('You must select exactly %s choices', max);\n                instructionMgr.appendInstruction(interaction, msg, function(data){\n                    if(_getRawResponse(interaction).length >= max){\n                        this.setLevel('success');\n                        if(this.checkState('fulfilled')){\n                            this.update({\n                                level : 'warning',\n                                message : __('Maximum choices reached'),\n                                timeout : 2000,\n                                start : function(){\n                                    if(data && data.choice){\n                                        highlightInvalidInput(data.choice);\n                                    }\n                                },\n                                stop : function(){\n                                    this.update({level : 'success', message : msg});\n                                }\n                            });\n                        }\n                        this.setState('fulfilled');\n                    }else{\n                        this.reset();\n                    }\n                });\n            }else if(max > min){\n                msg = max === 1 ? __('You can select maximum of 1 choice') : __('You can select maximum of %s choices', max);\n                instructionMgr.appendInstruction(interaction, msg, function(data){\n                    if(_getRawResponse(interaction).length >= max){\n                        this.setMessage(__('Maximum choices reached'));\n                        if(this.checkState('fulfilled')){\n                            this.update({\n                                level : 'warning',\n                                timeout : 2000,\n                                start : function(){\n                                    if(data && data.choice){\n                                        highlightInvalidInput(data.choice);\n                                    }\n                                },\n                                stop : function(){\n                                    this.setLevel('info');\n                                }\n                            });\n                        }\n                        this.setState('fulfilled');\n                    }else{\n                        this.reset();\n                    }\n                });\n            }\n        }\n\n        if(!minInstructionSet && min > 0 && min < choiceCount){\n            msg = min === 1 ? __('You must select at least 1 choice') : __('You must select at least %s choices', min);\n            instructionMgr.appendInstruction(interaction, msg, function(){\n                if(_getRawResponse(interaction).length >= min){\n                    this.setLevel('success');\n                }else{\n                    this.reset();\n                }\n            });\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    var render = function render(interaction){\n        var $container = containerHelper.get(interaction);\n\n        _pseudoLabel(interaction, $container);\n\n        _setInstructions(interaction);\n\n        if(interaction.attr('orientation') === 'horizontal') {\n            sizeAdapter.adaptSize($('.add-option, .result-area .target, .choice-area .qti-choice', $container));\n        }\n    };\n\n    /**\n     * Reset the responses previously set\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    var resetResponse = function resetResponse(interaction){\n        var $container = containerHelper.get(interaction);\n\n        $('.real-label > input', $container).prop('checked', false);\n    };\n\n    /**\n     * Set a new response to the rendered interaction.\n     * Please note that it does not reset previous responses.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {0bject} response - the PCI formated response\n     */\n    var setResponse = function setResponse(interaction, response){\n        var $container = containerHelper.get(interaction);\n\n        try{\n            _.forEach(pciResponse.unserialize(response, interaction), function(identifier){\n                var $input = $container.find('.real-label > input[value=' + identifier + ']').prop('checked', true);\n                $input.closest('.qti-choice').toggleClass('user-selected', true);\n            });\n            instructionMgr.validateInstructions(interaction);\n        }catch(e){\n            throw new Error('wrong response format in argument : ' + e);\n        }\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the response formatted in PCI\n     */\n    var getResponse = function getResponse(interaction){\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Check if a choice interaction is choice-eliminable\n     *\n     * @param {Object} interaction\n     * @returns {boolean}\n     */\n    var isEliminable = function isEliminable(interaction){\n        return (/\\beliminable\\b/).test(interaction.attr('class'));\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    var getCustomData = function getCustomData(interaction, data) {\n        var listStyles = (interaction.attr('class') || '').match(/\\blist-style-[\\w-]+/) || [];\n        return _.merge(data || {}, {\n            horizontal : (interaction.attr('orientation') === 'horizontal'),\n            listStyle: listStyles.pop(),\n            eliminable: isEliminable(interaction)\n        });\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    var destroy = function destroy(interaction){\n        var $container = containerHelper.get(interaction);\n\n        var timeout = interaction.data('__instructionTimeout');\n\n        if(timeout){\n            clearTimeout(timeout);\n        }\n\n        //remove event\n        $container.off('.commonRenderer');\n        $(document).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        var $container;\n\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            $container = containerHelper.get(interaction);\n\n            //restore order of previously shuffled choices\n            if(_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())){\n                $('.qti-simpleChoice', $container)\n                    .sort(function(a, b){\n                        var aIndex = _.indexOf(state.order, $(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $(b).data('identifier'));\n                        if(aIndex > bIndex) {\n                            return 1;\n                        }\n                        if(aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($('.choice-area', $container));\n            }\n\n            //restore eliminated choices\n            if(isEliminable(interaction) && _.isArray(state.eliminated) && state.eliminated.length){\n                _.forEach(state.eliminated, function(identifier){\n                    $container.find('.qti-simpleChoice[data-identifier=' + identifier + ']').addClass('eliminated');\n                });\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container = containerHelper.get(interaction);\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if(interaction.attr('shuffle') === true){\n            state.order = [];\n            $('.qti-simpleChoice', $container).each(function(){\n                state.order.push($(this).data('identifier'));\n            });\n        }\n\n        //store the eliminated choices\n        if(isEliminable(interaction)){\n            state.eliminated = [];\n            $container.find('.qti-simpleChoice.eliminated').each(function(){\n                state.eliminated.push($(this).data('identifier'));\n            });\n        }\n\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ChoiceInteraction\n     */\n    return {\n        qtiClass:      'choiceInteraction',\n        template:      tpl,\n        getData:       getCustomData,\n        render:        render,\n        getContainer:  containerHelper.get,\n        setResponse:   setResponse,\n        getResponse:   getResponse,\n        resetResponse: resetResponse,\n        destroy:       destroy,\n        setState:      setState,\n        getState:      getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/endAttemptInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<a class=\\\"qti-interaction qti-inlineInteraction qti-endAttemptInteraction btn small btn-info\\\"\\n        data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" \\n        data-qti-class=\\\"endAttemptInteraction\\\"\\n        value=\\\"false\\\"\\n        tabindex=\\\"0\\\">\\n        \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\n</a>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n\n/**\n * CommonRenderer for the EndAttempt interaction\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction',[\n    'lodash',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/endAttemptInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'i18n'\n], function(_, tpl, containerHelper, pciResponse, __){\n    'use strict';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n     *\n     * @param {object} interaction\n     * @fires endattempt with the response identifier\n     */\n    function render(interaction, options){\n\n        var $container = containerHelper.get(interaction);\n\n        //on click,\n        $container.on('click.commonRenderer', function(){\n            $container.val(true);\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            $container.trigger('endattempt', [interaction.attr('responseIdentifier')]);\n        });\n    }\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    function setResponse(interaction, response){\n\n        _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    }\n\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10402\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    function getResponse(interaction){\n        var val = containerHelper.get(interaction).val();\n        val = (val && val !== 'false' && val !== '0');\n        return pciResponse.serialize([val], interaction);\n    }\n\n    /**\n     * Reset the response ... wondering if it is useful ...\n\n     * @param {type} interaction\n     */\n    function resetResponse(interaction){\n        _setVal(interaction, false);\n    }\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    }\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    function getState(interaction){\n        var state = {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    }\n\n    /**\n     *\n     * @param {Object} interaction\n     * @param {Boolean} val\n     */\n    function _setVal(interaction, val){\n\n        containerHelper.get(interaction)\n            .val(val)\n            .change();\n\n    }\n\n    /**\n     * Destroy the interaction to restore the dom as it is before render() is called\n     *\n     * @param {Object} interaction\n     */\n    function destroy(interaction){\n        //remove event\n        containerHelper.get(interaction).off('.commonRenderer');\n    }\n\n    /**\n     * Define default template data\n     *\n     * @param {Object} interaction\n     * @param {Object} data\n     * @returns {Object}\n     */\n    function getCustomData(interaction, data){\n        if(!data.attributes.title){\n            data.attributes.title = __('End Attempt');\n        }\n        return data;\n    }\n\n    return {\n        qtiClass : 'endAttemptInteraction',\n        template : tpl,\n        getData : getCustomData,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/extendedTextInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n        \";\n  stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(12, program12, data),fn:self.program(8, program8, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), \"xhtml\", options));\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        {!-- If there's an expected length or a max length --}}\\n        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(18, program18, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(20, program20, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                <div class=\\\"text-container text-\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" solid\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" name=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"_\"\n    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n    + \"\\\" contenteditable></div>\\n            \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  \n  return \" attributes.class\";\n  }\n\nfunction program12(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.maxStringLoop), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  return buffer;\n  }\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                <textarea class=\\\"text-container text-\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" solid\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" name=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"_\"\n    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(14, program14, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"></textarea>\\n            \";\n  return buffer;\n  }\nfunction program14(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"pattern=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program16(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n            <div class=\\\"text-counter\\\">\\n                <span class=\\\"count-chars\\\">0</span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"of\", options) : helperMissing.call(depth0, \"__\", \"of\", options)))\n    + \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"chars\", options) : helperMissing.call(depth0, \"__\", \"chars\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"recommanded\", options) : helperMissing.call(depth0, \"__\", \"recommanded\", options)))\n    + \".\\n            </div>\\n        \";\n  return buffer;\n  }\n\nfunction program18(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n            <div class=\\\"text-counter\\\">\\n                <span class=\\\"count-chars\\\">0</span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"of\", options) : helperMissing.call(depth0, \"__\", \"of\", options)))\n    + \" \";\n  if (helper = helpers.maxLength) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxLength); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"chars\", options) : helperMissing.call(depth0, \"__\", \"chars\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"maximum\", options) : helperMissing.call(depth0, \"__\", \"maximum\", options)))\n    + \".\\n            </div>\\n        \";\n  return buffer;\n  }\n\nfunction program20(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n            <div class=\\\"text-counter\\\">\\n                <span class=\\\"count-words\\\">0</span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"of\", options) : helperMissing.call(depth0, \"__\", \"of\", options)))\n    + \" \";\n  if (helper = helpers.maxWords) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxWords); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"words\", options) : helperMissing.call(depth0, \"__\", \"words\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"maximum\", options) : helperMissing.call(depth0, \"__\", \"maximum\", options)))\n    + \".\\n            </div>\\n        \";\n  return buffer;\n  }\n\nfunction program22(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n        \";\n  stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),data:data},helper ? helper.call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options) : helperMissing.call(depth0, \"equal\", ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format), (depth0 && depth0.xhtml), options));\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \\n        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength), {hash:{},inverse:self.noop,fn:self.program(27, program27, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.maxLength), {hash:{},inverse:self.noop,fn:self.program(18, program18, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.maxWords), {hash:{},inverse:self.noop,fn:self.program(20, program20, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  return buffer;\n  }\nfunction program23(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            <div class=\\\"text-container text-\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" solid\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" contenteditable></div>\\n        \";\n  return buffer;\n  }\n\nfunction program25(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            <textarea class=\\\"text-container text-\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.format)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" solid\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.patternMask), {hash:{},inverse:self.noop,fn:self.program(14, program14, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"></textarea>\\n        \";\n  return buffer;\n  }\n\nfunction program27(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n            <div class=\\\"text-counter\\\">\\n                <span class=\\\"count-chars\\\">0</span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"of\", options) : helperMissing.call(depth0, \"__\", \"of\", options)))\n    + \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.expectedLength)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"chars\", options) : helperMissing.call(depth0, \"__\", \"chars\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"recommended\", options) : helperMissing.call(depth0, \"__\", \"recommended\", options)))\n    + \".\\n            </div>\\n        \";\n  return buffer;\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-extendedTextInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"extendedTextInteraction\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.multiple), {hash:{},inverse:self.program(22, program22, data),fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator'], function(ckConfigurator) {\n    'use strict';\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options){\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator.getConfig(editor, toolbarType, options);\n    };\n\n    return {\n        getConfig : getConfig\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2016 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/patternMask',[], function(){\n    'use strict';\n\n    var regexChar = /\\^\\[\\\\s\\\\S\\]\\{\\d+\\,(\\d+)\\}\\$/,\n        regexWords =  /\\^\\(\\?\\:\\(\\?\\:\\[\\^\\\\s\\\\:\\\\!\\\\\\?\\\\\\;\\\\\\…\\\\\\€\\]\\+\\)\\[\\\\s\\\\:\\\\!\\\\\\?\\\\;\\\\\\…\\\\\\€\\]\\*\\)\\{\\d+\\,(\\d+)\\}\\$/;\n\n    var patternMaskHelper = {\n        /**\n         * Parse the pattern string and according to the given type, try to extract the associate number\n         *\n         * @param {String} pattern - the pattern string to be parsed\n         * @param {String} type - words or chars\n         * @returns {*}\n         */\n        parsePattern : function parsePattern(pattern, type){\n            if (pattern === undefined || pattern === null){\n                return null;\n            }\n            if (type === \"words\") {\n                //expre = /^(?:(?:[^\\s\\:\\!\\?\\;\\…\\€]+)[\\s\\:\\!\\?\\;\\…\\€]*){0,3}$/;\n                var result = pattern.match(regexWords);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                }else{\n                    return null;\n                }\n            }else if (type === \"chars\"){\n                // This is the original regExp generated by our code\n                // expre = /^[\\s\\S]{0,10}$/;\n                // and we will try to extract the top limit from it with this regexp\n                // which is mostly just escaped version of the first one.\n                var result = pattern.match(regexChar);\n\n                if (result !== null && result.length > 1) {\n                    return result[1];\n                }else{\n                    return null;\n                }\n            }else{\n                return null;\n            }\n        },\n        /**\n         * Reverse function of parsePattern for word type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxWordPattern : function createMaxWordPattern(max){\n            return '^(?:(?:[^\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]+)[\\\\s\\\\:\\\\!\\\\?\\\\;\\\\…\\\\€]*){0,' + max.toString() + '}$';\n        },\n        /**\n         * Reverse function of parsePattern for char type\n         *\n         * @param {Number} max\n         * @returns {string}\n         */\n        createMaxCharPattern : function createMaxCharPattern(max){\n            return '^[\\\\s\\\\S]{0,' + max.toString() + '}$';\n        }\n    };\n\n    return patternMaskHelper;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/extendedTextInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'ckeditor',\n    'taoQtiItem/qtiCommonRenderer/helpers/ckConfigurator',\n    'taoQtiItem/qtiCommonRenderer/helpers/patternMask'\n], function($, _, __, Promise, tpl, containerHelper, instructionMgr, ckEditor, ckConfigurator, patternMaskHelper){\n    'use strict';\n\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Promise} rendering is async\n     */\n    var render = function render (interaction){\n        return new Promise(function(resolve, reject){\n\n            var $el, expectedLength, minStrings, expectedLines, patternMask, placeholderType, editor;\n            var $container = containerHelper.get(interaction);\n\n            var multiple = _isMultiple(interaction);\n            var limiter  = inputLimiter(interaction);\n\n            var placeholderText = interaction.attr('placeholderText');\n\n            var toolbarType = 'extendedText';\n            var ckOptions = {\n                'extraPlugins': 'onchange',\n                'language': 'en',\n                'defaultLanguage': 'en',\n                'resize_enabled': true,\n                'secure': location.protocol == 'https:',\n                'forceCustomDomain' : true\n            };\n\n            if(!multiple){\n\n                $el = $container.find('textarea');\n                if (placeholderText) {\n                    $el.attr('placeholder', placeholderText);\n                }\n                if (_getFormat(interaction) === \"xhtml\") {\n\n\n                    editor = _setUpCKEditor(interaction, ckOptions);\n                    if(!editor){\n                        reject('Unable to instantiate ckEditor');\n                    }\n\n                    editor.on('instanceReady', function(){\n                        //it seems there's still something done after loaded, so resolved must be defered\n                        _.delay(resolve, 300);\n                    });\n                    if(editor.status === 'ready' || editor.status === 'loaded'){\n                        _.defer(resolve);\n                    }\n                    editor.on('configLoaded', function(e) {\n                        editor.config = ckConfigurator.getConfig(editor, toolbarType, ckOptions);\n\n                        if(limiter.enabled){\n                            limiter.listenKeyPress();\n                        }\n                    });\n                    editor.on('change', function(e) {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                } else {\n\n                    $el.on('keyup.commonRenderer change.commonRenderer', function(e) {\n                        containerHelper.triggerResponseChangeEvent(interaction, {});\n                    });\n\n                    if(limiter.enabled){\n                        limiter.listenKeyPress();\n                    }\n\n                    resolve();\n                }\n\n            //multiple inputs\n            } else {\n\n                $el            = $container.find('input');\n                minStrings     = interaction.attr('minStrings');\n                expectedLength = interaction.attr('expectedLength');\n                patternMask    = interaction.attr('patternMask');\n\n                //setting the checking for minimum number of answers\n                if (minStrings) {\n\n                    //get the number of filled inputs\n                    var _getNumStrings = function($element) {\n                        var num = 0;\n                        $element.each(function() {\n                            if ($(this).val() !== '') {\n                                num++;\n                            }\n                        });\n\n                        return num;\n                    };\n\n                    minStrings = parseInt(minStrings, 10);\n                    if (minStrings > 0) {\n\n                        $el.on('blur.commonRenderer', function() {\n                            setTimeout(function() {\n                                //checking if the user was clicked outside of the input fields\n\n                                //TODO remove notifications in favor of instructions\n\n                                if (!$el.is(':focus') && _getNumStrings($el) < minStrings) {\n                                    instructionMgr.appendNotification(interaction, __('The minimum number of answers is ') + ' : ' + minStrings, 'warning');\n                                }\n                            }, 100);\n                        });\n                    }\n                }\n\n                //set the fields width\n                if (expectedLength) {\n                    expectedLength = parseInt(expectedLength, 10);\n\n                    if (expectedLength > 0) {\n                        $el.each(function() {\n                            $(this).css('width', expectedLength + 'em');\n                        });\n                    }\n                }\n\n                //set the fields pattern mask\n                if (patternMask) {\n                    $el.each(function() {\n                        _setPattern($(this), patternMask);\n                    });\n                }\n\n                //set the fields placeholder\n                if (placeholderText) {\n                    /**\n                     * The type of the fileds placeholder:\n                     * multiple - set placeholder for each field\n                     * first - set placeholder only for first field\n                     * none - dont set placeholder\n                     */\n                    placeholderType = 'first';\n\n                    if (placeholderType === 'multiple') {\n                        $el.each(function() {\n                            $(this).attr('placeholder', placeholderText);\n                        });\n                    }\n                    else if (placeholderType === 'first') {\n                        $el.first().attr('placeholder', placeholderText);\n                    }\n                }\n                resolve();\n            }\n        });\n    };\n\n    /**\n     * Reset the textarea / ckEditor\n     * @param {Object} interaction - the extended text interaction model\n     */\n    var resetResponse = function(interaction) {\n        if (_getFormat(interaction) === 'xhtml') {\n            _getCKEditor(interaction).setData('');\n        }else{\n            containerHelper.get(interaction).find('input, textarea').val('');\n        }\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n\n        var _setMultipleVal = function(identifier, value) {\n            interaction.getContainer().find('#'+identifier).val(value);\n        };\n\n        var baseType = interaction.getResponseDeclaration().attr('baseType');\n\n        if (response.base && response.base[baseType] !== undefined) {\n            setText(interaction, response.base[baseType]);\n        }\n        else if (response.list && response.list[baseType]) {\n\n            for (var i in response.list[baseType]) {\n                var serial = (response.list.serial === undefined) ? '' : response.list.serial[i];\n                _setMultipleVal(serial + '_' + i, response.list[baseType][i]);\n            }\n        }\n        else {\n            throw new Error('wrong response format in argument.');\n        }\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n\n        var $container = containerHelper.get(interaction);\n        var attributes = interaction.getAttributes();\n        var responseDeclaration = interaction.getResponseDeclaration();\n        var baseType = responseDeclaration.attr('baseType');\n        var numericBase = attributes.base || 10;\n        var multiple = !!(attributes.maxStrings && (responseDeclaration.attr('cardinality') === 'multiple' || responseDeclaration.attr('cardinality') === 'ordered'));\n        var ret = multiple ? {list:{}} : {base:{}};\n\n        if (multiple) {\n\n            var values = [];\n\n            $container.find('input').each(function(i) {\n\n                var $el = $(this);\n\n                if (attributes.placeholderText && $el.val() === attributes.placeholderText) {\n                    values[i] = '';\n                }\n                else {\n                    if (baseType === 'integer') {\n                        values[i] = parseInt($el.val(), numericBase);\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    }\n                    else if(baseType === 'float') {\n                        values[i] = parseFloat($el.val());\n                        values[i] = isNaN(values[i]) ? '' : values[i];\n                    }\n                    else if(baseType === 'string') {\n                        values[i] = $el.val();\n                    }\n                }\n            });\n\n            ret.list[baseType] = values;\n        }\n        else {\n\n            var value = '';\n\n            if (attributes.placeholderText && _getTextareaValue(interaction) === attributes.placeholderText) {\n                value = '';\n            }\n            else {\n\n                if (baseType === 'integer') {\n                    value = parseInt(_getTextareaValue(interaction), numericBase);\n                }\n                else if (baseType === 'float') {\n                    value = parseFloat(_getTextareaValue(interaction));\n                }\n                else if (baseType === 'string') {\n                    value = _getTextareaValue(interaction, true);\n                }\n            }\n\n            ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n        }\n\n        return ret;\n    };\n\n    /**\n     * Creates an input limiter object\n     * @param {Object} interaction - the extended text interaction\n     * @returns {Object} the limiter\n     */\n    var inputLimiter = function userInputLimier(interaction){\n\n        var $container     = containerHelper.get(interaction);\n        var expectedLength = interaction.attr('expectedLength');\n        var expectedLines  = interaction.attr('expectedLines');\n        var patternMask    = interaction.attr('patternMask');\n        var $textarea,\n            $charsCounter,\n            $wordsCounter,\n            maxWords,\n            maxLength;\n        var enabled = false;\n\n\n\n        if (expectedLength || expectedLines || patternMask) {\n\n            enabled = true;\n\n            $textarea       = $('.text-container', $container);\n            $charsCounter   = $('.count-chars',$container);\n            $wordsCounter   = $('.count-words',$container);\n\n            if (patternMask !== \"\") {\n                maxWords = patternMaskHelper.parsePattern(patternMask, 'words');\n                maxLength = patternMaskHelper.parsePattern(patternMask, 'chars');\n                maxWords = (_.isNaN(maxWords)) ? undefined : maxWords;\n                maxLength = (_.isNaN(maxLength) ? undefined : maxLength);\n            }\n        }\n\n        /**\n         * The limiter instance\n         */\n        var limiter = {\n\n            /**\n             * Is the limiter enabled regarding the interaction configuration\n             */\n            enabled : enabled,\n\n            /**\n             * Listen for a key press in the interaction and limit the input if necessary\n             */\n            listenKeyPress : function listenKeyPress(){\n                var self = this;\n\n                var ignoreKeyCodes = [\n                    8, // backspace\n                    16, // shift\n                    17, // control\n                    46, // delete\n                    37, // arrow left\n                    38, // arrow up\n                    39, // arrow right\n                    40, // arrow down\n                    35, // home\n                    36, // end\n\n                    // ckeditor specific:\n                    1114177, // home\n                    3342401, // Shift + home\n                    1114181, // end\n                    3342405, // Shift + end\n\n                    2228232, // Shift + backspace\n                    2228261, // Shift + arrow left\n                    4456485, // Alt   + arrow left\n                    2228262, // Shift + arrow up\n                    2228263, // Shift + arrow right\n                    4456487, // Alt   + arrow right\n                    2228264, // Shift + arrow down\n\n                    1114120, // Ctrl + backspace\n                    1114177, // Ctrl + a\n                    1114202, // Ctrl + z\n                    1114200  // Ctrl + x\n                ];\n                var triggerKeyCodes = [\n                    32, // space\n                    13, // enter\n                    2228237 // shift + enter in ckEditor\n                ];\n\n\n                var limitHandler = function limitHandler(e){\n                    var keyCode = e && e.data ? e.data.keyCode : e.which ;\n                    if ( (!_.contains(ignoreKeyCodes, keyCode) ) &&\n                         (maxWords && self.getWordsCount() >= maxWords && _.contains(triggerKeyCodes, keyCode) ||\n                         (maxLength && self.getCharsCount() >= maxLength))){\n                        if (e.cancel){\n                            e.cancel();\n                        } else {\n                            e.preventDefault();\n                            e.stopImmediatePropagation();\n                        }\n                        return false;\n                    }\n                    _.defer(function(){\n                        self.updateCounter();\n                    });\n                };\n\n                if (_getFormat(interaction) === \"xhtml\") {\n                    _getCKEditor(interaction).on('key', limitHandler);\n                } else {\n                    $textarea.on('keydown.commonRenderer', limitHandler);\n                }\n            },\n\n            /**\n             * Get the number of words that are actually written in the response field\n             * @return {Number} number of words\n             */\n            getWordsCount : function getWordsCount(){\n                var value = _getTextareaValue(interaction) || '';\n                if(_.isEmpty(value)){\n                    return 0;\n                }\n                return value.replace(/\\s+/gi, ' ').split(' ').length;\n            },\n\n            /**\n             * Get the number of characters that are actually written in the response field\n             * @return {Number} number of characters\n             */\n            getCharsCount : function getCharsCount(){\n                var value = _getTextareaValue(interaction) || '';\n                return value.length;\n            },\n\n\n            /**\n             * Update the counter element\n             */\n            updateCounter : function udpateCounter(){\n                $charsCounter.text(this.getCharsCount());\n                $wordsCounter.text(this.getWordsCount());\n            }\n        };\n\n\n        return limiter;\n    };\n\n\n    /**\n     * return the value of the textarea or ckeditor data\n     * @param  {Object} interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @return {String}             the value\n     */\n    var _getTextareaValue = function(interaction, raw) {\n        if (_getFormat(interaction) === 'xhtml') {\n            return _ckEditorData(interaction, raw);\n        }\n        else {\n            return containerHelper.get(interaction).find('textarea').val();\n        }\n    };\n\n\n    /**\n     * Setting the pattern mask for the input, for browsers which doesn't support this feature\n     * @param {jQuery} $element\n     * @param {string} pattern\n     */\n    var _setPattern = function _setPattern($element, pattern){\n        var patt = new RegExp(pattern);\n\n        //test when some data is entering in the input field\n        //@todo plug the validator + tooltip\n        $element.on('keyup.commonRenderer', function(){\n            $element.removeClass('field-error');\n            if(!patt.test($element.val())){\n                $element.addClass('field-error');\n            }\n        });\n    };\n\n    /**\n     * Whether or not multiple strings are expected from the candidate to\n     * compose a valid response.\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Boolean} true if a multiple\n     */\n    var _isMultiple = function _isMultiple(interaction) {\n        var attributes = interaction.getAttributes();\n        var response = interaction.getResponseDeclaration();\n        return !!(attributes.maxStrings && (response.attr('cardinality') === 'multiple' || response.attr('cardinality') === 'ordered'));\n    };\n\n    /**\n     * Instantiate CkEditor for the interaction\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {Object} [options = {}] - the CKEditor configuration options\n     * @returns {Object} the ckEditor instance (or you'll be in trouble\n     */\n    var _setUpCKEditor = function _setUpCKEditor(interaction, options){\n        var $container = containerHelper.get(interaction);\n        var editor = ckEditor.replace($container.find('.text-container')[0], options || {});\n        if (editor) {\n            $container.data('editor', editor.name);\n            return editor;\n        }\n    };\n\n    /**\n     * Destroy CKEditor\n     *\n     * @param {Object} interaction - the extended text interaction model\n     * @param {Object} [options = {}] - the CKEditor configuration options\n     */\n    var _destroyCkEditor = function _destroyCkEditor(interaction){\n        var $container = containerHelper.get(interaction);\n        var name = $container.data('editor');\n        var editor;\n        if(name){\n            editor = ckEditor.instances[name];\n        }\n        if(editor){\n            editor.destroy();\n            $container.removeData('editor');\n        }\n    };\n\n    /**\n     * Gets the CKEditor instance\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {Object}  CKEditor instance\n     */\n    var _getCKEditor = function _getCKEditor(interaction){\n        var $container = containerHelper.get(interaction);\n        var name = $container.data('editor');\n\n        return ckEditor.instances[name];\n    };\n\n    /**\n     * get the text content of the ckEditor ( not the entire html )\n     * @param  {object} interaction the interaction\n     * @param  {Boolean} raw Tells if the returned data does not have to be filtered (i.e. XHTML tags not removed)\n     * @returns {string}             text content of the ckEditor\n     */\n    var _ckEditorData = function _ckEditorData(interaction, raw) {\n        var editor = _getCKEditor(interaction);\n        var data = editor && editor.getData() || '';\n\n        if (!raw) {\n            data = _stripTags(data);\n        }\n\n        return data;\n    };\n\n    /**\n     * Remove HTML tags from a string\n     * @param {String} str\n     * @returns {String}\n     */\n    var _stripTags = function _stripTags(str) {\n        var tempNode = document.createElement('div');\n        tempNode.innerHTML = str;\n        return tempNode.textContent;\n    };\n\n    /**\n     * Get the interaction format\n     * @param {Object} interaction - the extended text interaction model\n     * @returns {String} format in 'plain', 'xhtml', 'preformatted'\n     */\n    var _getFormat = function _getFormat(interaction) {\n        var format = interaction.attr('format');\n        if(_.contains(['plain', 'xhtml', 'preformatted'], format)){\n            return format;\n        }\n        return 'plain';\n    };\n\n    var enable = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var editor;\n\n        $container.find('input, textarea').removeAttr('disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(false);\n                } else {\n                    editor.readOnly = false;\n                }\n            }\n        }\n    };\n\n    var disable = function(interaction) {\n        var $container = containerHelper.get(interaction);\n        var editor;\n\n        $container.find('input, textarea').attr('disabled', 'disabled');\n\n        if (_getFormat(interaction) === 'xhtml') {\n            editor = _getCKEditor(interaction);\n            if (editor) {\n                if (editor.status === 'ready') {\n                    editor.setReadOnly(true);\n                } else {\n                    editor.readOnly = true;\n                }\n            }\n        }\n    };\n\n    var clearText = function(interaction) {\n        setText(interaction, '');\n    };\n\n    var setText = function(interaction, text) {\n        var limiter = inputLimiter(interaction);\n        if ( _getFormat(interaction) === 'xhtml') {\n            try{\n            _getCKEditor(interaction).setData(text, function(){\n                if(limiter.enabled){\n                    limiter.updateCounter();\n                }\n            });\n            } catch(e){\n                console.error('setText error', e);\n            }\n        } else {\n            containerHelper.get(interaction).find('textarea').val(text);\n            if(limiter.enabled){\n                limiter.updateCounter();\n            }\n        }\n    };\n\n     /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction){\n\n        var $container = containerHelper.get(interaction);\n        var $el = $container.find('input, textarea');\n\n        if(_getFormat(interaction) === 'xhtml'){\n            _destroyCkEditor(interaction);\n        }\n\n        //remove event\n        $el.off('.commonRenderer');\n        $(document).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                try {\n                    interaction.setResponse(state.response);\n                } catch(e) {\n                    interaction.resetResponse();\n                    throw e;\n                }\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n    var getCustomData = function(interaction, data){\n        var pattern = interaction.attr('patternMask'),\n            maxWords = parseInt(patternMaskHelper.parsePattern(pattern,'words')),\n            maxLength = parseInt(patternMaskHelper.parsePattern(pattern, 'chars')),\n            expectedLength = parseInt(interaction.attr('expectedLines'),10);\n        return _.merge(data || {}, {\n            maxWords : (! isNaN(maxWords)) ? maxWords : undefined,\n            maxLength : (! isNaN(maxLength)) ? maxLength : undefined,\n            attributes : (! isNaN(expectedLength)) ? { expectedLength :  expectedLength * 72} : undefined\n        });\n\n    };\n\n    /**\n     * Expose the common renderer for the extended text interaction\n     * @exports qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction\n     */\n    return {\n        qtiClass : 'extendedTextInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        getData : getCustomData,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        getState : getState,\n        setState : setState,\n\n        enable : enable,\n        disable : disable,\n        clearText : clearText,\n        setText : setText\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/gapMatchInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program7(depth0,data) {\n  \n  var stack1;\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-gapMatchInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"gapMatchInteraction\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <ul class=\\\"choice-area none block-listing solid horizontal source\\\">\\n        \";\n  options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}\n  if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </ul>\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"qti-flow-container\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',[\n    'lodash',\n    'i18n',\n    'jquery',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/gapMatchInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'interact',\n    'ui/interactUtils'\n], function(_, __, $, tpl, containerHelper, instructionMgr, pciResponse, interact, interactUtils){\n    'use strict';\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    var setChoice = function(interaction, $choice, $target){\n\n        var choiceSerial = $choice.data('serial'),\n            choice = interaction.getChoice(choiceSerial);\n\n        if(!_choiceUsages[choiceSerial]){\n            _choiceUsages[choiceSerial] = 0;\n        }\n        _choiceUsages[choiceSerial]++;\n\n        $target\n            .data('serial', choiceSerial)\n            .html($choice.html())\n            .addClass('filled');\n\n        if(!interaction.responseMappingMode &&\n            choice.attr('matchMax') &&\n            _choiceUsages[choiceSerial] >= choice.attr('matchMax')){\n\n            $choice.attr(\"class\", \"deactivated\");\n        }\n\n        containerHelper.triggerResponseChangeEvent(interaction);\n    };\n\n    var unsetChoice = function(interaction, $choice){\n\n        var serial = $choice.data('serial');\n        var $container = containerHelper.get(interaction);\n\n        $container.find('.choice-area [data-serial=' + serial + ']').removeClass().addClass('qti-choice');\n\n        _choiceUsages[serial]--;\n\n        $choice\n            .removeClass('filled')\n            .removeData('serial')\n            .empty();\n\n        if(!interaction.swapping){\n            //set correct response\n            containerHelper.triggerResponseChangeEvent(interaction);\n        }\n    };\n\n    var getChoice = function(interaction, identifier){\n        var $container = containerHelper.get(interaction);\n        return $('.choice-area [data-identifier=' + identifier + ']', $container);\n    };\n\n    var getGap = function(interaction, identifier){\n        var $container = containerHelper.get(interaction);\n        return $('.qti-flow-container [data-identifier=' + identifier + ']', $container);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $container.find('.choice-area');\n        var $flowContainer = $container.find('.qti-flow-container');\n\n        var $activeChoice = null;\n        var $activeDrop = null;\n\n        var isDragAndDropEnabled;\n        var dragOptions;\n\n        var $bin = $('<span>', {'class' : 'icon-undo remove-choice', 'title' : __('remove')});\n\n        var choiceSelector = $choiceArea.selector + \" .qti-choice\";\n        var gapSelector = $flowContainer.selector + \" .gapmatch-content\";\n        var filledGapSelector = gapSelector + \".filled\";\n        var binSelector = $container.selector + \" .remove-choice\";\n\n        var _getChoice = function(serial){\n            return $choiceArea.find('[data-serial=' + serial + ']');\n        };\n\n        var _setChoice = function($choice, $target){\n            return setChoice(interaction, $choice, $target);\n        };\n\n        var _resetSelection = function(){\n            if($activeChoice){\n                $flowContainer.find('.remove-choice').remove();\n                $activeChoice.removeClass('deactivated active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n            }\n        };\n\n        var _unsetChoice = function($choice){\n            return unsetChoice(interaction, $choice);\n        };\n\n        var _isInsertionMode = function(){\n            return ($activeChoice && !$activeChoice.hasClass('filled'));\n        };\n\n        var _isModeEditing = function(){\n            return ($activeChoice && $activeChoice.hasClass('filled'));\n        };\n\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption(\"enableDragAndDrop\") && this.getOption(\"enableDragAndDrop\").gapMatch) {\n            isDragAndDropEnabled = this.getOption(\"enableDragAndDrop\").gapMatch;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function () {\n                if ($activeDrop) {\n                    interact(gapSelector).fire({\n                        type: 'drop',\n                        target: $activeDrop.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: \".qti-interaction\",\n                    endOnly: false,\n                    elementRect: {top: 0, left: 0, bottom: 1, right: 1}\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector).draggable(_.assign({}, dragOptions, {\n                onstart: function (e) {\n                    var $target = $(e.target);\n                    $target.addClass(\"dragged\");\n                    _handleChoiceSelect($target);\n\n                    _iFrameDragFix(choiceSelector, e.target);\n                },\n                onmove: function (e) {\n                    interactUtils.moveElement(e.target, e.dx, e.dy);\n                },\n                onend: function (e) {\n                    var $target = $(e.target);\n                    $target.removeClass(\"dragged\");\n\n                    interactUtils.restoreOriginalPosition($target);\n                    interactUtils.iFrameDragFixOff();\n                }\n            })).styleCursor(false);\n\n            // makes filled gaps draggables\n            interact(filledGapSelector).draggable(_.assign({}, dragOptions, {\n                onstart: function (e) {\n                    var $target = $(e.target);\n                    $target.addClass(\"dragged\");\n                    _handleFilledGapSelect($target);\n\n                    _iFrameDragFix(filledGapSelector, e.target);\n                },\n                onmove: function (e) {\n                    interactUtils.moveElement(e.target, e.dx, e.dy);\n                },\n                onend: function (e) {\n                    var $target = $(e.target);\n                    $target.removeClass(\"dragged\");\n\n                    interactUtils.restoreOriginalPosition($target);\n\n                    if ($activeChoice) {\n                        _unsetChoice($activeChoice);\n                        _resetSelection();\n                    }\n                    interactUtils.iFrameDragFixOff();\n                }\n            })).styleCursor(false);\n\n            // makes gaps droppables\n            interact(gapSelector).dropzone({\n                overlap: 0.05,\n                ondragenter: function(e) {\n                    var $target = $(e.target),\n                        $dragged = $(e.relatedTarget);\n\n                    $activeDrop = $target;\n                    $target.addClass('dropzone');\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function (e) {\n                    _handleGapSelect($(e.target));\n\n                    this.ondragleave(e);\n                },\n                ondragleave: function(e) {\n                    var $target = $(e.target),\n                        $dragged = $(e.relatedTarget);\n\n                    $target.removeClass('dropzone');\n                    $dragged.removeClass('droppable');\n\n                    $activeDrop = null;\n                }\n            });\n        }\n\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function(e) {\n            e.stopPropagation();\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function (e) {\n            e.stopPropagation();\n            _handleChoiceSelect($(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(gapSelector).on('tap', function(e) {\n            e.stopPropagation();\n            _handleGapSelect($(e.currentTarget));\n            e.preventDefault();\n        });\n\n        interact(binSelector).on('tap', function (e) {\n            e.stopPropagation();\n            _unsetChoice($activeChoice);\n            _resetSelection();\n            e.preventDefault();\n        });\n\n\n        // Common handlers\n\n        function _handleChoiceSelect($target) {\n            if (($activeChoice && $target.hasClass('active')) || $target.hasClass('deactivated')) {\n                return;\n            }\n            _resetSelection();\n\n            $activeChoice = $target.addClass('active');\n            $(gapSelector).addClass('empty');\n        }\n\n        function _handleFilledGapSelect($target) {\n            $activeChoice = $target;\n            $(gapSelector).addClass('active');\n        }\n\n        function _handleGapSelect($target) {\n            var choiceSerial, targetSerial;\n\n            if(_isInsertionMode()){\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if(targetSerial !== choiceSerial){\n\n                    //set choices:\n                    if(targetSerial){\n                        _unsetChoice($target);\n                    }\n\n                    _setChoice($activeChoice, $target);\n                }\n\n                $activeChoice.removeClass('active');\n                $container.find('.empty').removeClass('empty');\n                $activeChoice = null;\n\n            }else if(_isModeEditing()){\n                choiceSerial = $activeChoice.data('serial');\n                targetSerial = $target.data('serial');\n\n                if(targetSerial !== choiceSerial){\n                    _unsetChoice($activeChoice);\n                    if(targetSerial){\n                        //swapping:\n                        _unsetChoice($target);\n                        _setChoice(_getChoice(targetSerial), $activeChoice);\n                    }\n                    _setChoice(_getChoice(choiceSerial), $target);\n                }\n\n                _resetSelection();\n\n            }else if($target.data('serial') && $target.hasClass('filled')){\n                targetSerial = $target.data('serial');\n\n                $activeChoice = $target;\n                $activeChoice.addClass('active');\n\n                $flowContainer.find('>li>div').filter(function(){\n                    return $target.data('serial') !== targetSerial;\n                }).addClass('empty');\n\n                $choiceArea.find('>li:not(.deactivated)').filter(function(){\n                    return $target.data('serial') !== targetSerial;\n                }).addClass('empty');\n\n                //append trash bin:\n                $target.append($bin);\n            }\n        }\n    };\n\n    var resetResponse = function(interaction){\n        var $container = containerHelper.get(interaction);\n\n        $('.gapmatch-content.active', $container).removeClass('active');\n        $('.gapmatch-content', $container).each(function(){\n            unsetChoice(interaction, $(this));\n        });\n    };\n\n    var _setPairs = function(interaction, pairs){\n\n        _.each(pairs, function(pair){\n            if(pair){\n                setChoice(interaction, getChoice(interaction, pair[0]), getGap(interaction, pair[1]).find('.gapmatch-content'));\n            }\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10291\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n        resetResponse(interaction);\n        _setPairs(interaction, pciResponse.unserialize(response, interaction));\n    };\n\n    var _getRawResponse = function(interaction){\n\n        var response = [];\n        var $container = containerHelper.get(interaction);\n        $('.gapmatch-content', $container).each(function(){\n            var choiceSerial = $(this).data('serial'),\n                pair = [];\n\n            if(choiceSerial){\n                pair.push(interaction.getChoice(choiceSerial).attr('identifier'));\n            }\n            pair.push($(this).data('identifier'));\n\n            if(pair.length === 2){\n                response.push(pair);\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10307\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    var destroy = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        interact($container.selector).unset();\n        interact($container.find('.choice-area').selector + \" .qti-choice\").unset();\n        interact($container.find('.qti-flow-container').selector + \" .gapmatch-content\").unset();\n        interact($container.find('.remove-choice').selector).unset();\n\n        //restore selection\n        $container.find('.gapmatch-content').empty();\n        $container.find('.active').removeClass('active');\n        $container.find('.remove-choice').remove();\n        $container.find('.empty').removeClass('empty');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        var $container;\n\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if(_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())){\n\n                $container = containerHelper.get(interaction);\n\n                $('.choice-area .qti-choice', $container)\n                    .sort(function(a, b){\n                        var aIndex = _.indexOf(state.order, $(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $(b).data('identifier'));\n                        if(aIndex > bIndex) {\n                            return 1;\n                        }\n                        if(aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if(interaction.attr('shuffle') === true){\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $('.choice-area .qti-choice', $container).each(function(){\n               state.order.push($(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the gapmatch interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GapMatchInteraction\n     */\n    return {\n        qtiClass : 'gapMatchInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/graphicAssociateInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicAssociateInteraction clearfix\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","// ┌────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël 2.1.2 - JavaScript Vector Library                          │ \\\\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\n// └────────────────────────────────────────────────────────────────────┘ \\\\\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.4.2\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners\n    \\*/\n        eve = function (name, scope) {\n\t\t\tname = String(name);\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out.length ? out : null;\n        };\n\t\t// Undocumented. Debug only.\n\t\teve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    \n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt()` function will be called before `eatIt()`.\n\t *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n\t\tname = String(name);\n\t\tif (typeof f != \"function\") {\n\t\t\treturn function () {};\n\t\t}\n        var names = name.split(separator),\n            e = events;\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            e = e.n;\n            e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n        }\n        e.f = e.f || [];\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n            return fun;\n        }\n        e.f.push(f);\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n\t * Arguments that will be passed to the result function will be also\n\t * concated to the list of final arguments.\n \t | el.onclick = eve.f(\"click\", 1, 2);\n \t | eve.on(\"click\", function (a, b, c) {\n \t |     console.log(a, b, c); // 1, 2, [event object]\n \t | });\n     > Arguments\n\t - event (string) event name\n\t - varargs (…) and any other arguments\n\t = (function) possible event handler function\n    \\*/\n\teve.f = function (event) {\n\t\tvar attrs = [].slice.call(arguments, 1);\n\t\treturn function () {\n\t\t\teve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n\t\t};\n\t};\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\n        }\n        return current_event;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n\t * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n\t\tif (!name) {\n\t\t    eve._events = events = {n: {}};\n\t\t\treturn;\n\t\t}\n        var names = name.split(separator),\n            e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.unbind(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define != \"undefined\" ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(window || this);\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\n// │ \"Raphaël 2.1.2\" - JavaScript Vector Library                         │ \\\\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob, factory) {\n    // AMD support\n    if (typeof define === \"function\" && define.amd) {\n        // Define as an anonymous module\n        define('raphael',[\"eve\"], function( eve ) {\n            return factory(glob, eve);\n        });\n    } else {\n        // Browser globals (glob is window)\n        // Raphael adds itself to window\n        factory(glob, glob.eve || (typeof require == \"function\" && require('eve')) );\n    }\n}(this, function (window, eve) {\n    /*\\\n     * Raphael\n     [ method ]\n     **\n     * Creates a canvas object on which to draw.\n     * You must do this first, as all future calls to drawing methods\n     * from this instance will be bound to this canvas.\n     > Parameters\n     **\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\n     - width (number)\n     - height (number)\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\n     * or\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\n     = (object) @Paper\n     > Usage\n     | // Each of the following examples create a canvas\n     | // that is 320px wide by 200px high.\n     | // Canvas is created at the viewport’s 10,50 coordinate.\n     | var paper = Raphael(10, 50, 320, 200);\n     | // Canvas is created at the top left corner of the #notepad element\n     | // (or its top right corner in dir=\"rtl\" elements)\n     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\n     | // Same as above\n     | var paper = Raphael(\"notepad\", 320, 200);\n     | // Image dump\n     | var set = Raphael([\"notepad\", 320, 200, {\n     |     type: \"rect\",\n     |     x: 10,\n     |     y: 10,\n     |     width: 25,\n     |     height: 25,\n     |     stroke: \"#f00\"\n     | }, {\n     |     type: \"text\",\n     |     x: 30,\n     |     y: 40,\n     |     text: \"Dump\"\n     | }]);\n    \\*/\n    function R(first) {\n        if (R.is(first, \"function\")) {\n            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\n        } else if (R.is(first, array)) {\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\n        } else {\n            var args = Array.prototype.slice.call(arguments, 0);\n            if (R.is(args[args.length - 1], \"function\")) {\n                var f = args.pop();\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\n                    f.call(R._engine.create[apply](R, args));\n                });\n            } else {\n                return R._engine.create[apply](R, arguments);\n            }\n        }\n    }\n    R.version = \"2.1.2\";\n    R.eve = eve;\n    var loaded,\n        separator = /[, ]+/,\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\n        formatrg = /\\{(\\d+)\\}/g,\n        proto = \"prototype\",\n        has = \"hasOwnProperty\",\n        g = {\n            doc: document,\n            win: window\n        },\n        oldRaphael = {\n            was: Object.prototype[has].call(g.win, \"Raphael\"),\n            is: g.win.Raphael\n        },\n        Paper = function () {\n            /*\\\n             * Paper.ca\n             [ property (object) ]\n             **\n             * Shortcut for @Paper.customAttributes\n            \\*/\n            /*\\\n             * Paper.customAttributes\n             [ property (object) ]\n             **\n             * If you have a set of attributes that you would like to represent\n             * as a function of some number you can do it easily with custom attributes:\n             > Usage\n             | paper.customAttributes.hue = function (num) {\n             |     num = num % 1;\n             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\n             | };\n             | // Custom attribute “hue” will change fill\n             | // to be given hue with fixed saturation and brightness.\n             | // Now you can use it like this:\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\n             | // or even like this:\n             | c.animate({hue: 1}, 1e3);\n             | \n             | // You could also create custom attribute\n             | // with multiple parameters:\n             | paper.customAttributes.hsb = function (h, s, b) {\n             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\n             | };\n             | c.attr({hsb: \"0.5 .8 1\"});\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\n            \\*/\n            this.ca = this.customAttributes = {};\n        },\n        paperproto,\n        appendChild = \"appendChild\",\n        apply = \"apply\",\n        concat = \"concat\",\n        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\n        E = \"\",\n        S = \" \",\n        Str = String,\n        split = \"split\",\n        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\n        touchMap = {\n            mousedown: \"touchstart\",\n            mousemove: \"touchmove\",\n            mouseup: \"touchend\"\n        },\n        lowerCase = Str.prototype.toLowerCase,\n        math = Math,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        pow = math.pow,\n        PI = math.PI,\n        nu = \"number\",\n        string = \"string\",\n        array = \"array\",\n        toString = \"toString\",\n        fillString = \"fill\",\n        objectToString = Object.prototype.toString,\n        paper = {},\n        push = \"push\",\n        ISURL = R._ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\n        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n        round = math.round,\n        setAttribute = \"setAttribute\",\n        toFloat = parseFloat,\n        toInt = parseInt,\n        upperCase = Str.prototype.toUpperCase,\n        availableAttrs = R._availableAttrs = {\n            \"arrow-end\": \"none\",\n            \"arrow-start\": \"none\",\n            blur: 0,\n            \"clip-rect\": \"0 0 1e9 1e9\",\n            cursor: \"default\",\n            cx: 0,\n            cy: 0,\n            fill: \"#fff\",\n            \"fill-opacity\": 1,\n            font: '10px \"Arial\"',\n            \"font-family\": '\"Arial\"',\n            \"font-size\": \"10\",\n            \"font-style\": \"normal\",\n            \"font-weight\": 400,\n            gradient: 0,\n            height: 0,\n            href: \"http://raphaeljs.com/\",\n            \"letter-spacing\": 0,\n            opacity: 1,\n            path: \"M0,0\",\n            r: 0,\n            rx: 0,\n            ry: 0,\n            src: \"\",\n            stroke: \"#000\",\n            \"stroke-dasharray\": \"\",\n            \"stroke-linecap\": \"butt\",\n            \"stroke-linejoin\": \"butt\",\n            \"stroke-miterlimit\": 0,\n            \"stroke-opacity\": 1,\n            \"stroke-width\": 1,\n            target: \"_blank\",\n            \"text-anchor\": \"middle\",\n            title: \"Raphael\",\n            transform: \"\",\n            width: 0,\n            x: 0,\n            y: 0\n        },\n        availableAnimAttrs = R._availableAnimAttrs = {\n            blur: nu,\n            \"clip-rect\": \"csv\",\n            cx: nu,\n            cy: nu,\n            fill: \"colour\",\n            \"fill-opacity\": nu,\n            \"font-size\": nu,\n            height: nu,\n            opacity: nu,\n            path: \"path\",\n            r: nu,\n            rx: nu,\n            ry: nu,\n            stroke: \"colour\",\n            \"stroke-opacity\": nu,\n            \"stroke-width\": nu,\n            transform: \"transform\",\n            width: nu,\n            x: nu,\n            y: nu\n        },\n        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\n        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\n        hsrg = {hs: 1, rg: 1},\n        p2s = /,?([achlmqrstvxz]),?/gi,\n        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\n        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\n        eldata = {},\n        sortByKey = function (a, b) {\n            return a.key - b.key;\n        },\n        sortByNumber = function (a, b) {\n            return toFloat(a) - toFloat(b);\n        },\n        fun = function () {},\n        pipe = function (x) {\n            return x;\n        },\n        rectPath = R._rectPath = function (x, y, w, h, r) {\n            if (r) {\n                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n            }\n            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        },\n        ellipsePath = function (x, y, rx, ry) {\n            if (ry == null) {\n                ry = rx;\n            }\n            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n        },\n        getPath = R._getPath = {\n            path: function (el) {\n                return el.attr(\"path\");\n            },\n            circle: function (el) {\n                var a = el.attrs;\n                return ellipsePath(a.cx, a.cy, a.r);\n            },\n            ellipse: function (el) {\n                var a = el.attrs;\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\n            },\n            rect: function (el) {\n                var a = el.attrs;\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\n            },\n            image: function (el) {\n                var a = el.attrs;\n                return rectPath(a.x, a.y, a.width, a.height);\n            },\n            text: function (el) {\n                var bbox = el._getBBox();\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n            },\n            set : function(el) {\n                var bbox = el._getBBox();\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n            }\n        },\n        /*\\\n         * Raphael.mapPath\n         [ method ]\n         **\n         * Transform the path string with given matrix.\n         > Parameters\n         - path (string) path string\n         - matrix (object) see @Matrix\n         = (string) transformed path string\n        \\*/\n        mapPath = R.mapPath = function (path, matrix) {\n            if (!matrix) {\n                return path;\n            }\n            var x, y, i, j, ii, jj, pathi;\n            path = path2curve(path);\n            for (i = 0, ii = path.length; i < ii; i++) {\n                pathi = path[i];\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                    x = matrix.x(pathi[j], pathi[j + 1]);\n                    y = matrix.y(pathi[j], pathi[j + 1]);\n                    pathi[j] = x;\n                    pathi[j + 1] = y;\n                }\n            }\n            return path;\n        };\n\n    R._g = g;\n    /*\\\n     * Raphael.type\n     [ property (string) ]\n     **\n     * Can be “SVG”, “VML” or empty, depending on browser support.\n    \\*/\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\n    if (R.type == \"VML\") {\n        var d = g.doc.createElement(\"div\"),\n            b;\n        d.innerHTML = '<v:shape adj=\"1\"/>';\n        b = d.firstChild;\n        b.style.behavior = \"url(#default#VML)\";\n        if (!(b && typeof b.adj == \"object\")) {\n            return (R.type = E);\n        }\n        d = null;\n    }\n    /*\\\n     * Raphael.svg\n     [ property (boolean) ]\n     **\n     * `true` if browser supports SVG.\n    \\*/\n    /*\\\n     * Raphael.vml\n     [ property (boolean) ]\n     **\n     * `true` if browser supports VML.\n    \\*/\n    R.svg = !(R.vml = R.type == \"VML\");\n    R._Paper = Paper;\n    /*\\\n     * Raphael.fn\n     [ property (object) ]\n     **\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\n     * ensure any namespacing ensures proper context.\n     > Usage\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\n     |     return this.path( ... );\n     | };\n     | // or create namespace\n     | Raphael.fn.mystuff = {\n     |     arrow: function () {…},\n     |     star: function () {…},\n     |     // etc…\n     | };\n     | var paper = Raphael(10, 10, 630, 480);\n     | // then use it\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\n     | paper.mystuff.arrow();\n     | paper.mystuff.star();\n    \\*/\n    R.fn = paperproto = Paper.prototype = R.prototype;\n    R._id = 0;\n    R._oid = 0;\n    /*\\\n     * Raphael.is\n     [ method ]\n     **\n     * Handfull replacement for `typeof` operator.\n     > Parameters\n     - o (…) any object or primitive\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\n     = (boolean) is given value is of given type\n    \\*/\n    R.is = function (o, type) {\n        type = lowerCase.call(type);\n        if (type == \"finite\") {\n            return !isnan[has](+o);\n        }\n        if (type == \"array\") {\n            return o instanceof Array;\n        }\n        return  (type == \"null\" && o === null) ||\n                (type == typeof o && o !== null) ||\n                (type == \"object\" && o === Object(o)) ||\n                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\n                objectToString.call(o).slice(8, -1).toLowerCase() == type;\n    };\n\n    function clone(obj) {\n        if (typeof obj == \"function\" || Object(obj) !== obj) {\n            return obj;\n        }\n        var res = new obj.constructor;\n        for (var key in obj) if (obj[has](key)) {\n            res[key] = clone(obj[key]);\n        }\n        return res;\n    }\n\n    /*\\\n     * Raphael.angle\n     [ method ]\n     **\n     * Returns angle between two or three points\n     > Parameters\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     - x3 (number) #optional x coord of third point\n     - y3 (number) #optional y coord of third point\n     = (number) angle in degrees.\n    \\*/\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\n        if (x3 == null) {\n            var x = x1 - x2,\n                y = y1 - y2;\n            if (!x && !y) {\n                return 0;\n            }\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n        } else {\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\n        }\n    };\n    /*\\\n     * Raphael.rad\n     [ method ]\n     **\n     * Transform angle to radians\n     > Parameters\n     - deg (number) angle in degrees\n     = (number) angle in radians.\n    \\*/\n    R.rad = function (deg) {\n        return deg % 360 * PI / 180;\n    };\n    /*\\\n     * Raphael.deg\n     [ method ]\n     **\n     * Transform angle to degrees\n     > Parameters\n     - deg (number) angle in radians\n     = (number) angle in degrees.\n    \\*/\n    R.deg = function (rad) {\n        return rad * 180 / PI % 360;\n    };\n    /*\\\n     * Raphael.snapTo\n     [ method ]\n     **\n     * Snaps given value to given grid.\n     > Parameters\n     - values (array|number) given array of values or step of the grid\n     - value (number) value to adjust\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\n     = (number) adjusted value.\n    \\*/\n    R.snapTo = function (values, value, tolerance) {\n        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\n        if (R.is(values, array)) {\n            var i = values.length;\n            while (i--) if (abs(values[i] - value) <= tolerance) {\n                return values[i];\n            }\n        } else {\n            values = +values;\n            var rem = value % values;\n            if (rem < tolerance) {\n                return value - rem;\n            }\n            if (rem > values - tolerance) {\n                return value - rem + values;\n            }\n        }\n        return value;\n    };\n\n    /*\\\n     * Raphael.createUUID\n     [ method ]\n     **\n     * Returns RFC4122, version 4 ID\n    \\*/\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\n        return function () {\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\n        };\n    })(/[xy]/g, function (c) {\n        var r = math.random() * 16 | 0,\n            v = c == \"x\" ? r : (r & 3 | 8);\n        return v.toString(16);\n    });\n\n    /*\\\n     * Raphael.setWindow\n     [ method ]\n     **\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\n     > Parameters\n     - newwin (window) new window object\n    \\*/\n    R.setWindow = function (newwin) {\n        eve(\"raphael.setWindow\", R, g.win, newwin);\n        g.win = newwin;\n        g.doc = g.win.document;\n        if (R._engine.initWin) {\n            R._engine.initWin(g.win);\n        }\n    };\n    var toHex = function (color) {\n        if (R.vml) {\n            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\n            var trim = /^\\s+|\\s+$/g;\n            var bod;\n            try {\n                var docum = new ActiveXObject(\"htmlfile\");\n                docum.write(\"<body>\");\n                docum.close();\n                bod = docum.body;\n            } catch(e) {\n                bod = createPopup().document.body;\n            }\n            var range = bod.createTextRange();\n            toHex = cacher(function (color) {\n                try {\n                    bod.style.color = Str(color).replace(trim, E);\n                    var value = range.queryCommandValue(\"ForeColor\");\n                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\n                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\n                } catch(e) {\n                    return \"none\";\n                }\n            });\n        } else {\n            var i = g.doc.createElement(\"i\");\n            i.title = \"Rapha\\xebl Colour Picker\";\n            i.style.display = \"none\";\n            g.doc.body.appendChild(i);\n            toHex = cacher(function (color) {\n                var computedStyle;\n                i.style.color = color;\n                computedStyle = g.doc.defaultView.getComputedStyle(i, E);\n                return computedStyle ? computedStyle.getPropertyValue(\"color\") : color;\n            });\n        }\n        return toHex(color);\n    },\n    hsbtoString = function () {\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n    },\n    hsltoString = function () {\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n    },\n    rgbtoString = function () {\n        return this.hex;\n    },\n    prepareRGB = function (r, g, b) {\n        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n            b = r.b;\n            g = r.g;\n            r = r.r;\n        }\n        if (g == null && R.is(r, string)) {\n            var clr = R.getRGB(r);\n            r = clr.r;\n            g = clr.g;\n            b = clr.b;\n        }\n        if (r > 1 || g > 1 || b > 1) {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n        }\n\n        return [r, g, b];\n    },\n    packageRGB = function (r, g, b, o) {\n        r *= 255;\n        g *= 255;\n        b *= 255;\n        var rgb = {\n            r: r,\n            g: g,\n            b: b,\n            hex: R.rgb(r, g, b),\n            toString: rgbtoString\n        };\n        R.is(o, \"finite\") && (rgb.opacity = o);\n        return rgb;\n    };\n\n    /*\\\n     * Raphael.color\n     [ method ]\n     **\n     * Parses the color string and returns object with all values for the given color.\n     > Parameters\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\n     = (object) Combined RGB & HSB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) `true` if string can’t be parsed,\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     v (number) value (brightness),\n     o     l (number) lightness\n     o }\n    \\*/\n    R.color = function (clr) {\n        var rgb;\n        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n            rgb = R.hsb2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.hex = rgb.hex;\n        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n            rgb = R.hsl2rgb(clr);\n            clr.r = rgb.r;\n            clr.g = rgb.g;\n            clr.b = rgb.b;\n            clr.hex = rgb.hex;\n        } else {\n            if (R.is(clr, \"string\")) {\n                clr = R.getRGB(clr);\n            }\n            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\n                rgb = R.rgb2hsl(clr);\n                clr.h = rgb.h;\n                clr.s = rgb.s;\n                clr.l = rgb.l;\n                rgb = R.rgb2hsb(clr);\n                clr.v = rgb.b;\n            } else {\n                clr = {hex: \"none\"};\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            }\n        }\n        clr.toString = rgbtoString;\n        return clr;\n    };\n    /*\\\n     * Raphael.hsb2rgb\n     [ method ]\n     **\n     * Converts HSB values to RGB object.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - v (number) value or brightness\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    R.hsb2rgb = function (h, s, v, o) {\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n            v = h.b;\n            s = h.s;\n            h = h.h;\n            o = h.o;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = v * s;\n        X = C * (1 - abs(h % 2 - 1));\n        R = G = B = v - C;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Raphael.hsl2rgb\n     [ method ]\n     **\n     * Converts HSL values to RGB object.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    R.hsl2rgb = function (h, s, l, o) {\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n            l = h.l;\n            s = h.s;\n            h = h.h;\n        }\n        if (h > 1 || s > 1 || l > 1) {\n            h /= 360;\n            s /= 100;\n            l /= 100;\n        }\n        h *= 360;\n        var R, G, B, X, C;\n        h = (h % 360) / 60;\n        C = 2 * s * (l < .5 ? l : 1 - l);\n        X = C * (1 - abs(h % 2 - 1));\n        R = G = B = l - C / 2;\n\n        h = ~~h;\n        R += [C, X, 0, 0, X, C][h];\n        G += [X, C, C, X, 0, 0][h];\n        B += [0, 0, X, C, C, X][h];\n        return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Raphael.rgb2hsb\n     [ method ]\n     **\n     * Converts RGB values to HSB object.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSB object in format:\n     o {\n     o     h (number) hue\n     o     s (number) saturation\n     o     b (number) brightness\n     o }\n    \\*/\n    R.rgb2hsb = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, V, C;\n        V = mmax(r, g, b);\n        C = V - mmin(r, g, b);\n        H = (C == 0 ? null :\n             V == r ? (g - b) / C :\n             V == g ? (b - r) / C + 2 :\n                      (r - g) / C + 4\n            );\n        H = ((H + 360) % 6) * 60 / 360;\n        S = C == 0 ? 0 : C / V;\n        return {h: H, s: S, b: V, toString: hsbtoString};\n    };\n    /*\\\n     * Raphael.rgb2hsl\n     [ method ]\n     **\n     * Converts RGB values to HSL object.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSL object in format:\n     o {\n     o     h (number) hue\n     o     s (number) saturation\n     o     l (number) luminosity\n     o }\n    \\*/\n    R.rgb2hsl = function (r, g, b) {\n        b = prepareRGB(r, g, b);\n        r = b[0];\n        g = b[1];\n        b = b[2];\n\n        var H, S, L, M, m, C;\n        M = mmax(r, g, b);\n        m = mmin(r, g, b);\n        C = M - m;\n        H = (C == 0 ? null :\n             M == r ? (g - b) / C :\n             M == g ? (b - r) / C + 2 :\n                      (r - g) / C + 4);\n        H = ((H + 360) % 6) * 60 / 360;\n        L = (M + m) / 2;\n        S = (C == 0 ? 0 :\n             L < .5 ? C / (2 * L) :\n                      C / (2 - 2 * L));\n        return {h: H, s: S, l: L, toString: hsltoString};\n    };\n    R._path2string = function () {\n        return this.join(\",\").replace(p2s, \"$1\");\n    };\n    function repush(array, item) {\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n            return array.push(array.splice(i, 1)[0]);\n        }\n    }\n    function cacher(f, scope, postprocessor) {\n        function newf() {\n            var arg = Array.prototype.slice.call(arguments, 0),\n                args = arg.join(\"\\u2400\"),\n                cache = newf.cache = newf.cache || {},\n                count = newf.count = newf.count || [];\n            if (cache[has](args)) {\n                repush(count, args);\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\n            }\n            count.length >= 1e3 && delete cache[count.shift()];\n            count.push(args);\n            cache[args] = f[apply](scope, arg);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        return newf;\n    }\n\n    var preload = R._preload = function (src, f) {\n        var img = g.doc.createElement(\"img\");\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n        img.onload = function () {\n            f.call(this);\n            this.onload = null;\n            g.doc.body.removeChild(this);\n        };\n        img.onerror = function () {\n            g.doc.body.removeChild(this);\n        };\n        g.doc.body.appendChild(img);\n        img.src = src;\n    };\n\n    function clrToString() {\n        return this.hex;\n    }\n\n    /*\\\n     * Raphael.getRGB\n     [ method ]\n     **\n     * Parses colour string as RGB object\n     > Parameters\n     - colour (string) colour string in one of formats:\n     # <ul>\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\n     # </ul>\n     = (object) RGB object in format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) true if string can’t be parsed\n     o }\n    \\*/\n    R.getRGB = cacher(function (colour) {\n        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n        }\n        if (colour == \"none\") {\n            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\n        }\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n        var res,\n            red,\n            green,\n            blue,\n            opacity,\n            t,\n            values,\n            rgb = colour.match(colourRegExp);\n        if (rgb) {\n            if (rgb[2]) {\n                blue = toInt(rgb[2].substring(5), 16);\n                green = toInt(rgb[2].substring(3, 5), 16);\n                red = toInt(rgb[2].substring(1, 3), 16);\n            }\n            if (rgb[3]) {\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\n            }\n            if (rgb[4]) {\n                values = rgb[4][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            }\n            if (rgb[5]) {\n                values = rgb[5][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n                return R.hsb2rgb(red, green, blue, opacity);\n            }\n            if (rgb[6]) {\n                values = rgb[6][split](commaSpaces);\n                red = toFloat(values[0]);\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\n                green = toFloat(values[1]);\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\n                blue = toFloat(values[2]);\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n                return R.hsl2rgb(red, green, blue, opacity);\n            }\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\n            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\n            return rgb;\n        }\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\n    }, R);\n    /*\\\n     * Raphael.hsb\n     [ method ]\n     **\n     * Converts HSB values to hex representation of the colour.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - b (number) value or brightness\n     = (string) hex representation of the colour.\n    \\*/\n    R.hsb = cacher(function (h, s, b) {\n        return R.hsb2rgb(h, s, b).hex;\n    });\n    /*\\\n     * Raphael.hsl\n     [ method ]\n     **\n     * Converts HSL values to hex representation of the colour.\n     > Parameters\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (string) hex representation of the colour.\n    \\*/\n    R.hsl = cacher(function (h, s, l) {\n        return R.hsl2rgb(h, s, l).hex;\n    });\n    /*\\\n     * Raphael.rgb\n     [ method ]\n     **\n     * Converts RGB values to hex representation of the colour.\n     > Parameters\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (string) hex representation of the colour.\n    \\*/\n    R.rgb = cacher(function (r, g, b) {\n        return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n    });\n    /*\\\n     * Raphael.getColor\n     [ method ]\n     **\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\n     > Parameters\n     - value (number) #optional brightness, default is `0.75`\n     = (string) hex representation of the colour.\n    \\*/\n    R.getColor = function (value) {\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\n        start.h += .075;\n        if (start.h > 1) {\n            start.h = 0;\n            start.s -= .2;\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\n        }\n        return rgb.hex;\n    };\n    /*\\\n     * Raphael.getColor.reset\n     [ method ]\n     **\n     * Resets spectrum position for @Raphael.getColor back to red.\n    \\*/\n    R.getColor.reset = function () {\n        delete this.start;\n    };\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n    /*\\\n     * Raphael.parsePathString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of arrays of path segments.\n     > Parameters\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\n     = (array) array of segments.\n    \\*/\n    R.parsePathString = function (pathString) {\n        if (!pathString) {\n            return null;\n        }\n        var pth = paths(pathString);\n        if (pth.arr) {\n            return pathClone(pth.arr);\n        }\n\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\n            data = [];\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\n            data = pathClone(pathString);\n        }\n        if (!data.length) {\n            Str(pathString).replace(pathCommand, function (a, b, c) {\n                var params = [],\n                    name = b.toLowerCase();\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                if (name == \"m\" && params.length > 2) {\n                    data.push([b][concat](params.splice(0, 2)));\n                    name = \"l\";\n                    b = b == \"m\" ? \"l\" : \"L\";\n                }\n                if (name == \"r\") {\n                    data.push([b][concat](params));\n                } else while (params.length >= paramCounts[name]) {\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\n                    if (!paramCounts[name]) {\n                        break;\n                    }\n                }\n            });\n        }\n        data.toString = R._path2string;\n        pth.arr = pathClone(data);\n        return data;\n    };\n    /*\\\n     * Raphael.parseTransformString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of transformations.\n     > Parameters\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\n     = (array) array of transformations.\n    \\*/\n    R.parseTransformString = cacher(function (TString) {\n        if (!TString) {\n            return null;\n        }\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n            data = [];\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\n            data = pathClone(TString);\n        }\n        if (!data.length) {\n            Str(TString).replace(tCommand, function (a, b, c) {\n                var params = [],\n                    name = lowerCase.call(b);\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                data.push([b][concat](params));\n            });\n        }\n        data.toString = R._path2string;\n        return data;\n    });\n    // PATHS\n    var paths = function (ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    };\n    /*\\\n     * Raphael.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Find dot coordinates on the given cubic bezier curve at the given t.\n     > Parameters\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point\n     o     y: (number) y coordinate of the point\n     o     m: {\n     o         x: (number) x coordinate of the left anchor\n     o         y: (number) y coordinate of the left anchor\n     o     }\n     o     n: {\n     o         x: (number) x coordinate of the right anchor\n     o         y: (number) y coordinate of the right anchor\n     o     }\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve\n     o         y: (number) y coordinate of the start of the curve\n     o     }\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve\n     o         y: (number) y coordinate of the end of the curve\n     o     }\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n        (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    };\n    /*\\\n     * Raphael.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Return bounding box of a given cubic bezier curve\n     > Parameters\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for bezier curve\n     = (object) point information in format:\n     o {\n     o     min: {\n     o         x: (number) x coordinate of the left point\n     o         y: (number) y coordinate of the top point\n     o     }\n     o     max: {\n     o         x: (number) x coordinate of the right point\n     o         y: (number) y coordinate of the bottom point\n     o     }\n     o }\n    \\*/\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!R.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return {\n            x: bbox.min.x,\n            y: bbox.min.y,\n            x2: bbox.max.x,\n            y2: bbox.max.y,\n            width: bbox.max.x - bbox.min.x,\n            height: bbox.max.y - bbox.min.y\n        };\n    };\n    /*\\\n     * Raphael.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding boxes.\n     > Parameters\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point inside\n    \\*/\n    R.isPointInsideBBox = function (bbox, x, y) {\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\n    };\n    /*\\\n     * Raphael.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     > Parameters\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if they intersect\n    \\*/\n    R.isBBoxIntersect = function (bbox1, bbox2) {\n        var i = R.isPointInsideBBox;\n        return i(bbox2, bbox1.x, bbox1.y)\n            || i(bbox2, bbox1.x2, bbox1.y)\n            || i(bbox2, bbox1.x, bbox1.y2)\n            || i(bbox2, bbox1.x2, bbox1.y2)\n            || i(bbox1, bbox2.x, bbox2.y)\n            || i(bbox1, bbox2.x2, bbox2.y)\n            || i(bbox1, bbox2.x, bbox2.y2)\n            || i(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    };\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = R.bezierBBox(bez1),\n            bbox2 = R.bezierBBox(bez2);\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = mmax(~~(l1 / 5), 1),\n            n2 = mmax(~~(l2 / 5), 1),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: mmin(t1, 1),\n                                t2: mmin(t2, 1)\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    /*\\\n     * Raphael.pathIntersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     > Parameters\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point\n     o         y: (number) y coordinate of the point\n     o         t1: (number) t value for segment of path1\n     o         t2: (number) t value for segment of path2\n     o         segment1: (number) order number for segment of path1\n     o         segment2: (number) order number for segment of path2\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    R.pathIntersection = function (path1, path2) {\n        return interPathHelper(path1, path2);\n    };\n    R.pathIntersectionNumber = function (path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    };\n    function interPathHelper(path1, path2, justCount) {\n        path1 = R._path2curve(path1);\n        path2 = R._path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    /*\\\n     * Raphael.isPointInsidePath\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     > Parameters\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) true, if point is inside the path\n    \\*/\n    R.isPointInsidePath = function (path, x, y) {\n        var bbox = R.pathBBox(path);\n        return R.isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    };\n    R._removedFactory = function (methodname) {\n        return function () {\n            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\n        };\n    };\n    /*\\\n     * Raphael.pathBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Return bounding box of a given path\n     > Parameters\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box\n     o     y: (number) y coordinate of the left top point of the box\n     o     x2: (number) x coordinate of the right bottom point of the box\n     o     y2: (number) y coordinate of the right bottom point of the box\n     o     width: (number) width of the box\n     o     height: (number) height of the box\n     o     cx: (number) x coordinate of the center of the box\n     o     cy: (number) y coordinate of the center of the box\n     o }\n    \\*/\n    var pathDimensions = R.pathBBox = function (path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X[concat](dim.min.x, dim.max.x);\n                Y = Y[concat](dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin[apply](0, X),\n            ymin = mmin[apply](0, Y),\n            xmax = mmax[apply](0, X),\n            ymax = mmax[apply](0, Y),\n            width = xmax - xmin,\n            height = ymax - ymin,\n                bb = {\n                x: xmin,\n                y: ymin,\n                x2: xmax,\n                y2: ymax,\n                width: width,\n                height: height,\n                cx: xmin + width / 2,\n                cy: ymin + height / 2\n            };\n        pth.bbox = clone(bb);\n        return bb;\n    },\n        pathClone = function (pathArray) {\n            var res = clone(pathArray);\n            res.toString = R._path2string;\n            return res;\n        },\n        pathToRelative = R._pathToRelative = function (pathArray) {\n            var pth = paths(pathArray);\n            if (pth.rel) {\n                return pathClone(pth.rel);\n            }\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n                pathArray = R.parsePathString(pathArray);\n            }\n            var res = [],\n                x = 0,\n                y = 0,\n                mx = 0,\n                my = 0,\n                start = 0;\n            if (pathArray[0][0] == \"M\") {\n                x = pathArray[0][1];\n                y = pathArray[0][2];\n                mx = x;\n                my = y;\n                start++;\n                res.push([\"M\", x, y]);\n            }\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\n                var r = res[i] = [],\n                    pa = pathArray[i];\n                if (pa[0] != lowerCase.call(pa[0])) {\n                    r[0] = lowerCase.call(pa[0]);\n                    switch (r[0]) {\n                        case \"a\":\n                            r[1] = pa[1];\n                            r[2] = pa[2];\n                            r[3] = pa[3];\n                            r[4] = pa[4];\n                            r[5] = pa[5];\n                            r[6] = +(pa[6] - x).toFixed(3);\n                            r[7] = +(pa[7] - y).toFixed(3);\n                            break;\n                        case \"v\":\n                            r[1] = +(pa[1] - y).toFixed(3);\n                            break;\n                        case \"m\":\n                            mx = pa[1];\n                            my = pa[2];\n                        default:\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n                            }\n                    }\n                } else {\n                    r = res[i] = [];\n                    if (pa[0] == \"m\") {\n                        mx = pa[1] + x;\n                        my = pa[2] + y;\n                    }\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\n                        res[i][k] = pa[k];\n                    }\n                }\n                var len = res[i].length;\n                switch (res[i][0]) {\n                    case \"z\":\n                        x = mx;\n                        y = my;\n                        break;\n                    case \"h\":\n                        x += +res[i][len - 1];\n                        break;\n                    case \"v\":\n                        y += +res[i][len - 1];\n                        break;\n                    default:\n                        x += +res[i][len - 2];\n                        y += +res[i][len - 1];\n                }\n            }\n            res.toString = R._path2string;\n            pth.rel = pathClone(res);\n            return res;\n        },\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\n            var pth = paths(pathArray);\n            if (pth.abs) {\n                return pathClone(pth.abs);\n            }\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\n                pathArray = R.parsePathString(pathArray);\n            }\n            if (!pathArray || !pathArray.length) {\n                return [[\"M\", 0, 0]];\n            }\n            var res = [],\n                x = 0,\n                y = 0,\n                mx = 0,\n                my = 0,\n                start = 0;\n            if (pathArray[0][0] == \"M\") {\n                x = +pathArray[0][1];\n                y = +pathArray[0][2];\n                mx = x;\n                my = y;\n                start++;\n                res[0] = [\"M\", x, y];\n            }\n            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n                res.push(r = []);\n                pa = pathArray[i];\n                if (pa[0] != upperCase.call(pa[0])) {\n                    r[0] = upperCase.call(pa[0]);\n                    switch (r[0]) {\n                        case \"A\":\n                            r[1] = pa[1];\n                            r[2] = pa[2];\n                            r[3] = pa[3];\n                            r[4] = pa[4];\n                            r[5] = pa[5];\n                            r[6] = +(pa[6] + x);\n                            r[7] = +(pa[7] + y);\n                            break;\n                        case \"V\":\n                            r[1] = +pa[1] + y;\n                            break;\n                        case \"H\":\n                            r[1] = +pa[1] + x;\n                            break;\n                        case \"R\":\n                            var dots = [x, y][concat](pa.slice(1));\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\n                                dots[j] = +dots[j] + x;\n                                dots[++j] = +dots[j] + y;\n                            }\n                            res.pop();\n                            res = res[concat](catmullRom2bezier(dots, crz));\n                            break;\n                        case \"M\":\n                            mx = +pa[1] + x;\n                            my = +pa[2] + y;\n                        default:\n                            for (j = 1, jj = pa.length; j < jj; j++) {\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\n                            }\n                    }\n                } else if (pa[0] == \"R\") {\n                    dots = [x, y][concat](pa.slice(1));\n                    res.pop();\n                    res = res[concat](catmullRom2bezier(dots, crz));\n                    r = [\"R\"][concat](pa.slice(-2));\n                } else {\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\n                        r[k] = pa[k];\n                    }\n                }\n                switch (r[0]) {\n                    case \"Z\":\n                        x = mx;\n                        y = my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n            res.toString = R._path2string;\n            pth.abs = pathClone(res);\n            return res;\n        },\n        l2c = function (x1, y1, x2, y2) {\n            return [x1, y1, x2, y2, x2, y2];\n        },\n        q2c = function (x1, y1, ax, ay, x2, y2) {\n            var _13 = 1 / 3,\n                _23 = 2 / 3;\n            return [\n                    _13 * x1 + _23 * ax,\n                    _13 * y1 + _23 * ay,\n                    _13 * x2 + _23 * ax,\n                    _13 * y2 + _23 * ay,\n                    x2,\n                    y2\n                ];\n        },\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n            // for more information of where this math came from visit:\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n            var _120 = PI * 120 / 180,\n                rad = PI / 180 * (+angle || 0),\n                res = [],\n                xy,\n                rotate = cacher(function (x, y, rad) {\n                    var X = x * math.cos(rad) - y * math.sin(rad),\n                        Y = x * math.sin(rad) + y * math.cos(rad);\n                    return {x: X, y: Y};\n                });\n            if (!recursive) {\n                xy = rotate(x1, y1, -rad);\n                x1 = xy.x;\n                y1 = xy.y;\n                xy = rotate(x2, y2, -rad);\n                x2 = xy.x;\n                y2 = xy.y;\n                var cos = math.cos(PI / 180 * angle),\n                    sin = math.sin(PI / 180 * angle),\n                    x = (x1 - x2) / 2,\n                    y = (y1 - y2) / 2;\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n                if (h > 1) {\n                    h = math.sqrt(h);\n                    rx = h * rx;\n                    ry = h * ry;\n                }\n                var rx2 = rx * rx,\n                    ry2 = ry * ry,\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n                f1 = x1 < cx ? PI - f1 : f1;\n                f2 = x2 < cx ? PI - f2 : f2;\n                f1 < 0 && (f1 = PI * 2 + f1);\n                f2 < 0 && (f2 = PI * 2 + f2);\n                if (sweep_flag && f1 > f2) {\n                    f1 = f1 - PI * 2;\n                }\n                if (!sweep_flag && f2 > f1) {\n                    f2 = f2 - PI * 2;\n                }\n            } else {\n                f1 = recursive[0];\n                f2 = recursive[1];\n                cx = recursive[2];\n                cy = recursive[3];\n            }\n            var df = f2 - f1;\n            if (abs(df) > _120) {\n                var f2old = f2,\n                    x2old = x2,\n                    y2old = y2;\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n                x2 = cx + rx * math.cos(f2);\n                y2 = cy + ry * math.sin(f2);\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n            }\n            df = f2 - f1;\n            var c1 = math.cos(f1),\n                s1 = math.sin(f1),\n                c2 = math.cos(f2),\n                s2 = math.sin(f2),\n                t = math.tan(df / 4),\n                hx = 4 / 3 * rx * t,\n                hy = 4 / 3 * ry * t,\n                m1 = [x1, y1],\n                m2 = [x1 + hx * s1, y1 - hy * c1],\n                m3 = [x2 + hx * s2, y2 - hy * c2],\n                m4 = [x2, y2];\n            m2[0] = 2 * m1[0] - m2[0];\n            m2[1] = 2 * m1[1] - m2[1];\n            if (recursive) {\n                return [m2, m3, m4][concat](res);\n            } else {\n                res = [m2, m3, m4][concat](res).join()[split](\",\");\n                var newres = [];\n                for (var i = 0, ii = res.length; i < ii; i++) {\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n                }\n                return newres;\n            }\n        },\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n            var t1 = 1 - t;\n            return {\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n            };\n        },\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\n                c = p1x - c1x,\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\n                y = [p1y, p2y],\n                x = [p1x, p2x],\n                dot;\n            abs(t1) > \"1e12\" && (t1 = .5);\n            abs(t2) > \"1e12\" && (t2 = .5);\n            if (t1 > 0 && t1 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            if (t2 > 0 && t2 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\n            c = p1y - c1y;\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\n            abs(t1) > \"1e12\" && (t1 = .5);\n            abs(t2) > \"1e12\" && (t2 = .5);\n            if (t1 > 0 && t1 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            if (t2 > 0 && t2 < 1) {\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\n                x.push(dot.x);\n                y.push(dot.y);\n            }\n            return {\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\n            };\n        }),\n        path2curve = R._path2curve = cacher(function (path, path2) {\n            var pth = !path2 && paths(path);\n            if (!path2 && pth.curve) {\n                return pathClone(pth.curve);\n            }\n            var p = pathToAbsolute(path),\n                p2 = path2 && pathToAbsolute(path2),\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n                processPath = function (path, d, pcom) {\n                    var nx, ny, tq = {T:1, Q:1};\n                    if (!path) {\n                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                    }\n                    !(path[0] in tq) && (d.qx = d.qy = null);\n                    switch (path[0]) {\n                        case \"M\":\n                            d.X = path[1];\n                            d.Y = path[2];\n                            break;\n                        case \"A\":\n                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n                            break;\n                        case \"S\":\n                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                            }\n                            else {                            // or some else or nothing\n                                nx = d.x;\n                                ny = d.y;\n                            }\n                            path = [\"C\", nx, ny][concat](path.slice(1));\n                            break;\n                        case \"T\":\n                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                            }\n                            else {                            // or something else or nothing\n                                d.qx = d.x;\n                                d.qy = d.y;\n                            }\n                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                            break;\n                        case \"Q\":\n                            d.qx = path[1];\n                            d.qy = path[2];\n                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                            break;\n                        case \"L\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\n                            break;\n                        case \"H\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\n                            break;\n                        case \"V\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\n                            break;\n                        case \"Z\":\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\n                            break;\n                    }\n                    return path;\n                },\n                fixArc = function (pp, i) {\n                    if (pp[i].length > 7) {\n                        pp[i].shift();\n                        var pi = pp[i];\n                        while (pi.length) {\n                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\n                        }\n                        pp.splice(i, 1);\n                        ii = mmax(p.length, p2 && p2.length || 0);\n                    }\n                },\n                fixM = function (path1, path2, a1, a2, i) {\n                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                        a1.bx = 0;\n                        a1.by = 0;\n                        a1.x = path1[i][1];\n                        a1.y = path1[i][2];\n                        ii = mmax(p.length, p2 && p2.length || 0);\n                    }\n                };\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n                p[i] = processPath(p[i], attrs);\n                fixArc(p, i);\n                p2 && (p2[i] = processPath(p2[i], attrs2));\n                p2 && fixArc(p2, i);\n                fixM(p, p2, attrs, attrs2, i);\n                fixM(p2, p, attrs2, attrs, i);\n                var seg = p[i],\n                    seg2 = p2 && p2[i],\n                    seglen = seg.length,\n                    seg2len = p2 && seg2.length;\n                attrs.x = seg[seglen - 2];\n                attrs.y = seg[seglen - 1];\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n                attrs2.x = p2 && seg2[seg2len - 2];\n                attrs2.y = p2 && seg2[seg2len - 1];\n            }\n            if (!p2) {\n                pth.curve = pathClone(p);\n            }\n            return p2 ? [p, p2] : p;\n        }, null, pathClone),\n        parseDots = R._parseDots = cacher(function (gradient) {\n            var dots = [];\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\n                var dot = {},\n                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\n                dot.color = R.getRGB(par[1]);\n                if (dot.color.error) {\n                    return null;\n                }\n                dot.color = dot.color.hex;\n                par[2] && (dot.offset = par[2] + \"%\");\n                dots.push(dot);\n            }\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\n                if (!dots[i].offset) {\n                    var start = toFloat(dots[i - 1].offset || 0),\n                        end = 0;\n                    for (var j = i + 1; j < ii; j++) {\n                        if (dots[j].offset) {\n                            end = dots[j].offset;\n                            break;\n                        }\n                    }\n                    if (!end) {\n                        end = 100;\n                        j = ii;\n                    }\n                    end = toFloat(end);\n                    var d = (end - start) / (j - i + 1);\n                    for (; i < j; i++) {\n                        start += d;\n                        dots[i].offset = start + \"%\";\n                    }\n                }\n            }\n            return dots;\n        }),\n        tear = R._tear = function (el, paper) {\n            el == paper.top && (paper.top = el.prev);\n            el == paper.bottom && (paper.bottom = el.next);\n            el.next && (el.next.prev = el.prev);\n            el.prev && (el.prev.next = el.next);\n        },\n        tofront = R._tofront = function (el, paper) {\n            if (paper.top === el) {\n                return;\n            }\n            tear(el, paper);\n            el.next = null;\n            el.prev = paper.top;\n            paper.top.next = el;\n            paper.top = el;\n        },\n        toback = R._toback = function (el, paper) {\n            if (paper.bottom === el) {\n                return;\n            }\n            tear(el, paper);\n            el.next = paper.bottom;\n            el.prev = null;\n            paper.bottom.prev = el;\n            paper.bottom = el;\n        },\n        insertafter = R._insertafter = function (el, el2, paper) {\n            tear(el, paper);\n            el2 == paper.top && (paper.top = el);\n            el2.next && (el2.next.prev = el);\n            el.next = el2.next;\n            el.prev = el2;\n            el2.next = el;\n        },\n        insertbefore = R._insertbefore = function (el, el2, paper) {\n            tear(el, paper);\n            el2 == paper.bottom && (paper.bottom = el);\n            el2.prev && (el2.prev.next = el);\n            el.prev = el2.prev;\n            el2.prev = el;\n            el.next = el2;\n        },\n        /*\\\n         * Raphael.toMatrix\n         [ method ]\n         **\n         * Utility method\n         **\n         * Returns matrix of transformations applied to a given path\n         > Parameters\n         - path (string) path string\n         - transform (string|array) transformation string\n         = (object) @Matrix\n        \\*/\n        toMatrix = R.toMatrix = function (path, transform) {\n            var bb = pathDimensions(path),\n                el = {\n                    _: {\n                        transform: E\n                    },\n                    getBBox: function () {\n                        return bb;\n                    }\n                };\n            extractTransform(el, transform);\n            return el.matrix;\n        },\n        /*\\\n         * Raphael.transformPath\n         [ method ]\n         **\n         * Utility method\n         **\n         * Returns path transformed by a given transformation\n         > Parameters\n         - path (string) path string\n         - transform (string|array) transformation string\n         = (string) path\n        \\*/\n        transformPath = R.transformPath = function (path, transform) {\n            return mapPath(path, toMatrix(path, transform));\n        },\n        extractTransform = R._extractTransform = function (el, tstr) {\n            if (tstr == null) {\n                return el._.transform;\n            }\n            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n            var tdata = R.parseTransformString(tstr),\n                deg = 0,\n                dx = 0,\n                dy = 0,\n                sx = 1,\n                sy = 1,\n                _ = el._,\n                m = new Matrix;\n            _.transform = tdata || [];\n            if (tdata) {\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\n                    var t = tdata[i],\n                        tlen = t.length,\n                        command = Str(t[0]).toLowerCase(),\n                        absolute = t[0] != command,\n                        inver = absolute ? m.invert() : 0,\n                        x1,\n                        y1,\n                        x2,\n                        y2,\n                        bb;\n                    if (command == \"t\" && tlen == 3) {\n                        if (absolute) {\n                            x1 = inver.x(0, 0);\n                            y1 = inver.y(0, 0);\n                            x2 = inver.x(t[1], t[2]);\n                            y2 = inver.y(t[1], t[2]);\n                            m.translate(x2 - x1, y2 - y1);\n                        } else {\n                            m.translate(t[1], t[2]);\n                        }\n                    } else if (command == \"r\") {\n                        if (tlen == 2) {\n                            bb = bb || el.getBBox(1);\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                            deg += t[1];\n                        } else if (tlen == 4) {\n                            if (absolute) {\n                                x2 = inver.x(t[2], t[3]);\n                                y2 = inver.y(t[2], t[3]);\n                                m.rotate(t[1], x2, y2);\n                            } else {\n                                m.rotate(t[1], t[2], t[3]);\n                            }\n                            deg += t[1];\n                        }\n                    } else if (command == \"s\") {\n                        if (tlen == 2 || tlen == 3) {\n                            bb = bb || el.getBBox(1);\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                            sx *= t[1];\n                            sy *= t[tlen - 1];\n                        } else if (tlen == 5) {\n                            if (absolute) {\n                                x2 = inver.x(t[3], t[4]);\n                                y2 = inver.y(t[3], t[4]);\n                                m.scale(t[1], t[2], x2, y2);\n                            } else {\n                                m.scale(t[1], t[2], t[3], t[4]);\n                            }\n                            sx *= t[1];\n                            sy *= t[2];\n                        }\n                    } else if (command == \"m\" && tlen == 7) {\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n                    }\n                    _.dirtyT = 1;\n                    el.matrix = m;\n                }\n            }\n\n            /*\\\n             * Element.matrix\n             [ property (object) ]\n             **\n             * Keeps @Matrix object, which represents element transformation\n            \\*/\n            el.matrix = m;\n\n            _.sx = sx;\n            _.sy = sy;\n            _.deg = deg;\n            _.dx = dx = m.e;\n            _.dy = dy = m.f;\n\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\n                _.bbox.x += +dx;\n                _.bbox.y += +dy;\n            } else {\n                _.dirtyT = 1;\n            }\n        },\n        getEmpty = function (item) {\n            var l = item[0];\n            switch (l.toLowerCase()) {\n                case \"t\": return [l, 0, 0];\n                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n                case \"r\": if (item.length == 4) {\n                    return [l, 0, item[2], item[3]];\n                } else {\n                    return [l, 0];\n                }\n                case \"s\": if (item.length == 5) {\n                    return [l, 1, 1, item[3], item[4]];\n                } else if (item.length == 3) {\n                    return [l, 1, 1];\n                } else {\n                    return [l, 1];\n                }\n            }\n        },\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\n            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n            t1 = R.parseTransformString(t1) || [];\n            t2 = R.parseTransformString(t2) || [];\n            var maxlength = mmax(t1.length, t2.length),\n                from = [],\n                to = [],\n                i = 0, j, jj,\n                tt1, tt2;\n            for (; i < maxlength; i++) {\n                tt1 = t1[i] || getEmpty(t2[i]);\n                tt2 = t2[i] || getEmpty(tt1);\n                if ((tt1[0] != tt2[0]) ||\n                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n                    ) {\n                    return;\n                }\n                from[i] = [];\n                to[i] = [];\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\n                    j in tt1 && (from[i][j] = tt1[j]);\n                    j in tt2 && (to[i][j] = tt2[j]);\n                }\n            }\n            return {\n                from: from,\n                to: to\n            };\n        };\n    R._getContainer = function (x, y, w, h) {\n        var container;\n        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\n        if (container == null) {\n            return;\n        }\n        if (container.tagName) {\n            if (y == null) {\n                return {\n                    container: container,\n                    width: container.style.pixelWidth || container.offsetWidth,\n                    height: container.style.pixelHeight || container.offsetHeight\n                };\n            } else {\n                return {\n                    container: container,\n                    width: y,\n                    height: w\n                };\n            }\n        }\n        return {\n            container: 1,\n            x: x,\n            y: y,\n            width: w,\n            height: h\n        };\n    };\n    /*\\\n     * Raphael.pathToRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to relative form\n     > Parameters\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments.\n    \\*/\n    R.pathToRelative = pathToRelative;\n    R._engine = {};\n    /*\\\n     * Raphael.path2curve\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic bezier curves.\n     > Parameters\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments.\n    \\*/\n    R.path2curve = path2curve;\n    /*\\\n     * Raphael.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns matrix based on given parameters.\n     > Parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     = (object) @Matrix\n    \\*/\n    R.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n    function Matrix(a, b, c, d, e, f) {\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds given matrix to existing one.\n         > Parameters\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            var out = [[], [], []],\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n                x, y, z, res;\n\n            if (a && a instanceof Matrix) {\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n            }\n\n            for (x = 0; x < 3; x++) {\n                for (y = 0; y < 3; y++) {\n                    res = 0;\n                    for (z = 0; z < 3; z++) {\n                        res += m[x][z] * matrix[z][y];\n                    }\n                    out[x][y] = res;\n                }\n            }\n            this.a = out[0][0];\n            this.b = out[1][0];\n            this.c = out[0][1];\n            this.d = out[1][1];\n            this.e = out[0][2];\n            this.f = out[1][2];\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         > Parameters\n         - x (number)\n         - y (number)\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.add(1, 0, 0, 1, x, y);\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         > Parameters\n         - x (number)\n         - y (number) #optional\n         - cx (number) #optional\n         - cy (number) #optional\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n            this.add(x, 0, 0, y, 0, 0);\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         > Parameters\n         - a (number)\n         - x (number)\n         - y (number)\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = R.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         > Parameters\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         > Parameters\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return R.svg ?\n                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\n        };\n        matrixproto.toFilter = function () {\n            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\n                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\n                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.c], [this.b, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            // rotation\n            var sin = -row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = R.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = R.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Return transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this[split]();\n            if (s.isSimple) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n\n    // WebKit rendering bug workaround method\n    var version = navigator.userAgent.match(/Version\\/(.*?)\\s/) || navigator.userAgent.match(/Chrome\\/(\\d+)/);\n    if ((navigator.vendor == \"Apple Computer, Inc.\") && (version && version[1] < 4 || navigator.platform.slice(0, 2) == \"iP\") ||\n        (navigator.vendor == \"Google Inc.\" && version && version[1] < 8)) {\n        /*\\\n         * Paper.safari\n         [ method ]\n         **\n         * There is an inconvenient rendering bug in Safari (WebKit):\n         * sometimes the rendering should be forced.\n         * This method should help with dealing with this bug.\n        \\*/\n        paperproto.safari = function () {\n            var rect = this.rect(-99, -99, this.width + 99, this.height + 99).attr({stroke: \"none\"});\n            setTimeout(function () {rect.remove();});\n        };\n    } else {\n        paperproto.safari = fun;\n    }\n\n    var preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    getEventPosition = function (e) {\n        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n\n        return {\n            x: e.clientX + scrollX,\n            y: e.clientY + scrollY\n        };\n    },\n    addEvent = (function () {\n        if (g.doc.addEventListener) {\n            return function (obj, type, fn, element) {\n                var f = function (e) {\n                    var pos = getEventPosition(e);\n                    return fn.call(element, e, pos.x, pos.y);\n                };\n                obj.addEventListener(type, f, false);\n\n                if (supportsTouch && touchMap[type]) {\n                    var _f = function (e) {\n                        var pos = getEventPosition(e),\n                            olde = e;\n\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                            if (e.targetTouches[i].target == obj) {\n                                e = e.targetTouches[i];\n                                e.originalEvent = olde;\n                                e.preventDefault = preventTouch;\n                                e.stopPropagation = stopTouch;\n                                break;\n                            }\n                        }\n\n                        return fn.call(element, e, pos.x, pos.y);\n                    };\n                    obj.addEventListener(touchMap[type], _f, false);\n                }\n\n                return function () {\n                    obj.removeEventListener(type, f, false);\n\n                    if (supportsTouch && touchMap[type])\n                        obj.removeEventListener(touchMap[type], f, false);\n\n                    return true;\n                };\n            };\n        } else if (g.doc.attachEvent) {\n            return function (obj, type, fn, element) {\n                var f = function (e) {\n                    e = e || g.win.event;\n                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n                        x = e.clientX + scrollX,\n                        y = e.clientY + scrollY;\n                    e.preventDefault = e.preventDefault || preventDefault;\n                    e.stopPropagation = e.stopPropagation || stopPropagation;\n                    return fn.call(element, e, x, y);\n                };\n                obj.attachEvent(\"on\" + type, f);\n                var detacher = function () {\n                    obj.detachEvent(\"on\" + type, f);\n                    return true;\n                };\n                return detacher;\n            };\n        }\n    })(),\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch && e.touches) {\n                var i = e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            g.win.opera && parent.removeChild(node);\n            node.style.display = \"none\";\n            o = dragi.el.paper.getElementByPoint(x, y);\n            node.style.display = display;\n            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        R.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n        }\n        drag = [];\n    },\n    /*\\\n     * Raphael.el\n     [ property (object) ]\n     **\n     * You can add your own method to elements. This is usefull when you want to hack default functionality or\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\n     > Usage\n     | Raphael.el.red = function () {\n     |     this.attr({fill: \"#f00\"});\n     | };\n     | // then use it\n     | paper.circle(100, 100, 20).red();\n    \\*/\n    elproto = R.el = {};\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds event handler for click for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes event handler for click for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds event handler for double click for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes event handler for double click for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds event handler for mousedown for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes event handler for mousedown for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds event handler for mousemove for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes event handler for mousemove for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds event handler for mouseout for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes event handler for mouseout for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds event handler for mouseover for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes event handler for mouseover for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds event handler for mouseup for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes event handler for mouseup for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds event handler for touchstart for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes event handler for touchstart for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds event handler for touchmove for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes event handler for touchmove for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds event handler for touchend for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes event handler for touchend for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds event handler for touchcancel for the element.\n     > Parameters\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes event handler for touchcancel for the element.\n     > Parameters\n     - handler (function) #optional handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            R[eventName] = elproto[eventName] = function (fn, scope) {\n                if (R.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\n                }\n                return this;\n            };\n            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--){\n                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\n                        events[l].unbind();\n                        events.splice(l, 1);\n                        !events.length && delete this.events;\n                    }\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value asociated with given key.\n     ** \n     * See also @Element.removeData\n     > Parameters\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     * or, if key and value are not specified:\n     = (object) Key/value pairs for all the data associated with the element.\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0) {\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (R.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"raphael.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     > Parameters\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n     /*\\\n     * Element.getData\n     [ method ]\n     **\n     * Retrieves the element data\n     = (object) data\n    \\*/\n    elproto.getData = function () {\n        return clone(eldata[this.id] || {});\n    };\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds event handlers for hover for the element.\n     > Parameters\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes event handlers for hover for the element.\n     > Parameters\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for drag of the element.\n     > Parameters\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events will be triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element \n     * `drag.over.<id>` will be fired as well.\n     *\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        function start(e) {\n            (e.originalEvent || e).preventDefault();\n            var x = e.clientX,\n                y = e.clientY,\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\n            this._drag.id = e.identifier;\n            if (supportsTouch && e.touches) {\n                var i = e.touches.length, touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    this._drag.id = touch.identifier;\n                    if (touch.identifier == this._drag.id) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        break;\n                    }\n                }\n            }\n            this._drag.x = x + scrollX;\n            this._drag.y = y + scrollY;\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\n            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\n            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\n            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\n        }\n        this._drag = {};\n        draggable.push({el: this, start: start});\n        this.mousedown(start);\n        return this;\n    };\n    /*\\\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\n     > Parameters\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    elproto.onDragOver = function (f) {\n        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\n    };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from given element.\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].start);\n            draggable.splice(i, 1);\n            eve.unbind(\"raphael.drag.*.\" + this.id);\n        }\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\n        drag = [];\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) Raphaël element object with type “circle”\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    paperproto.circle = function (x, y, r) {\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - r (number) #optional radius for rounded corners, default is 0\n     = (object) Raphaël element object with type “rect”\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    paperproto.rect = function (x, y, w, h, r) {\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) Raphaël element object with type “ellipse”\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    paperproto.ellipse = function (x, y, rx, ry) {\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a path element by given path data string.\n     > Parameters\n     - pathString (string) #optional path string in SVG format.\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\n     | \"M10,20L30,40\"\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\n    \\*/\n    paperproto.path = function (pathString) {\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\n        var out = R._engine.path(R.format[apply](R, arguments), this);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Embeds an image into the surface.\n     **\n     > Parameters\n     **\n     - src (string) URI of the source image\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) Raphaël element object with type “image”\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    paperproto.image = function (src, x, y, w, h) {\n        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string. If you need line breaks, put “\\n” in the string.\n     **\n     > Parameters\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string) The text string to draw\n     = (object) Raphaël element object with type “text”\n     **\n     > Usage\n     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\n    \\*/\n    paperproto.text = function (x, y, text) {\n        var out = R._engine.text(this, x || 0, y || 0, Str(text));\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Paper.set\n     [ method ]\n     **\n     * Creates array-like object to keep and operate several elements at once.\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\n     = (object) array-like object that represents set of elements\n     **\n     > Usage\n     | var st = paper.set();\n     | st.push(\n     |     paper.circle(10, 10, 5),\n     |     paper.circle(30, 10, 5)\n     | );\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\n    \\*/\n    paperproto.set = function (itemsArray) {\n        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\n        var out = new Set(itemsArray);\n        this.__set__ && this.__set__.push(out);\n        out[\"paper\"] = this;\n        out[\"type\"] = \"set\";\n        return out;\n    };\n    /*\\\n     * Paper.setStart\n     [ method ]\n     **\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\n     * @Paper.setFinish will be added to the set.\n     **\n     > Usage\n     | paper.setStart();\n     | paper.circle(10, 10, 5),\n     | paper.circle(30, 10, 5)\n     | var st = paper.setFinish();\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\n    \\*/\n    paperproto.setStart = function (set) {\n        this.__set__ = set || this.set();\n    };\n    /*\\\n     * Paper.setFinish\n     [ method ]\n     **\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\n     **\n     = (object) set\n    \\*/\n    paperproto.setFinish = function (set) {\n        var out = this.__set__;\n        delete this.__set__;\n        return out;\n    };\n    /*\\\n     * Paper.setSize\n     [ method ]\n     **\n     * If you need to change dimensions of the canvas call this method\n     **\n     > Parameters\n     **\n     - width (number) new width of the canvas\n     - height (number) new height of the canvas\n    \\*/\n    paperproto.setSize = function (width, height) {\n        return R._engine.setSize.call(this, width, height);\n    };\n    /*\\\n     * Paper.setViewBox\n     [ method ]\n     **\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by \n     * specifying new boundaries.\n     **\n     > Parameters\n     **\n     - x (number) new x position, default is `0`\n     - y (number) new y position, default is `0`\n     - w (number) new width of the canvas\n     - h (number) new height of the canvas\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\n    \\*/\n    paperproto.setViewBox = function (x, y, w, h, fit) {\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\n    };\n    /*\\\n     * Paper.top\n     [ property ]\n     **\n     * Points to the topmost element on the paper\n    \\*/\n    /*\\\n     * Paper.bottom\n     [ property ]\n     **\n     * Points to the bottom element on the paper\n    \\*/\n    paperproto.top = paperproto.bottom = null;\n    /*\\\n     * Paper.raphael\n     [ property ]\n     **\n     * Points to the @Raphael object/function\n    \\*/\n    paperproto.raphael = R;\n    var getOffset = function (elem) {\n        var box = elem.getBoundingClientRect(),\n            doc = elem.ownerDocument,\n            body = doc.body,\n            docElem = doc.documentElement,\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n        return {\n            y: top,\n            x: left\n        };\n    };\n    /*\\\n     * Paper.getElementByPoint\n     [ method ]\n     **\n     * Returns you topmost element under given point.\n     **\n     = (object) Raphaël element object\n     > Parameters\n     **\n     - x (number) x coordinate from the top left corner of the window\n     - y (number) y coordinate from the top left corner of the window\n     > Usage\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n    \\*/\n    paperproto.getElementByPoint = function (x, y) {\n        var paper = this,\n            svg = paper.canvas,\n            target = g.doc.elementFromPoint(x, y);\n        if (g.win.opera && target.tagName == \"svg\") {\n            var so = getOffset(svg),\n                sr = svg.createSVGRect();\n            sr.x = x - so.x;\n            sr.y = y - so.y;\n            sr.width = sr.height = 1;\n            var hits = svg.getIntersectionList(sr, null);\n            if (hits.length) {\n                target = hits[hits.length - 1];\n            }\n        }\n        if (!target) {\n            return null;\n        }\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\n            target = target.parentNode;\n        }\n        target == paper.canvas.parentNode && (target = svg);\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\n        return target;\n    };\n\n    /*\\\n     * Paper.getElementsByBBox\n     [ method ]\n     **\n     * Returns set of elements that have an intersecting bounding box\n     **\n     > Parameters\n     **\n     - bbox (object) bbox to check with\n     = (object) @Set\n     \\*/\n    paperproto.getElementsByBBox = function (bbox) {\n        var set = this.set();\n        this.forEach(function (el) {\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\n                set.push(el);\n            }\n        });\n        return set;\n    };\n\n    /*\\\n     * Paper.getById\n     [ method ]\n     **\n     * Returns you element by its internal ID.\n     **\n     > Parameters\n     **\n     - id (number) id\n     = (object) Raphaël element object\n    \\*/\n    paperproto.getById = function (id) {\n        var bot = this.bottom;\n        while (bot) {\n            if (bot.id == id) {\n                return bot;\n            }\n            bot = bot.next;\n        }\n        return null;\n    };\n    /*\\\n     * Paper.forEach\n     [ method ]\n     **\n     * Executes given function for each element on the paper\n     *\n     * If callback function returns `false` it will stop loop running.\n     **\n     > Parameters\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Paper object\n     > Usage\n     | paper.forEach(function (el) {\n     |     el.attr({ stroke: \"blue\" });\n     | });\n    \\*/\n    paperproto.forEach = function (callback, thisArg) {\n        var bot = this.bottom;\n        while (bot) {\n            if (callback.call(thisArg, bot) === false) {\n                return this;\n            }\n            bot = bot.next;\n        }\n        return this;\n    };\n    /*\\\n     * Paper.getElementsByPoint\n     [ method ]\n     **\n     * Returns set of elements that have common point inside\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (object) @Set\n    \\*/\n    paperproto.getElementsByPoint = function (x, y) {\n        var set = this.set();\n        this.forEach(function (el) {\n            if (el.isPointInside(x, y)) {\n                set.push(el);\n            }\n        });\n        return set;\n    };\n    function x_y() {\n        return this.x + S + this.y;\n    }\n    function x_y_w_h() {\n        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n    }\n    /*\\\n     * Element.isPointInside\n     [ method ]\n     **\n     * Determine if given point is inside this element’s shape\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (boolean) `true` if point inside the shape\n    \\*/\n    elproto.isPointInside = function (x, y) {\n        var rp = this.realPath = getPath[this.type](this);\n        if (this.attr('transform') && this.attr('transform').length) {\n            rp = R.transformPath(rp, this.attr('transform'));\n        }\n        return R.isPointInsidePath(rp, x, y);\n    };\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Return bounding box for a given element\n     **\n     > Parameters\n     **\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\n     = (object) Bounding box object:\n     o {\n     o     x: (number) top left corner x\n     o     y: (number) top left corner y\n     o     x2: (number) bottom right corner x\n     o     y2: (number) bottom right corner y\n     o     width: (number) width\n     o     height: (number) height\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.removed) {\n            return {};\n        }\n        var _ = this._;\n        if (isWithoutTransform) {\n            if (_.dirty || !_.bboxwt) {\n                this.realPath = getPath[this.type](this);\n                _.bboxwt = pathDimensions(this.realPath);\n                _.bboxwt.toString = x_y_w_h;\n                _.dirty = 0;\n            }\n            return _.bboxwt;\n        }\n        if (_.dirty || _.dirtyT || !_.bbox) {\n            if (_.dirty || !this.realPath) {\n                _.bboxwt = 0;\n                this.realPath = getPath[this.type](this);\n            }\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\n            _.bbox.toString = x_y_w_h;\n            _.dirty = _.dirtyT = 0;\n        }\n        return _.bbox;\n    };\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     = (object) clone of a given element\n     **\n    \\*/\n    elproto.clone = function () {\n        if (this.removed) {\n            return null;\n        }\n        var out = this.paper[this.type]().attr(this.attr());\n        this.__set__ && this.__set__.push(out);\n        return out;\n    };\n    /*\\\n     * Element.glow\n     [ method ]\n     **\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\n     *\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\n     **\n     > Parameters\n     **\n     - glow (object) #optional parameters object with all properties optional:\n     o {\n     o     width (number) size of the glow, default is `10`\n     o     fill (boolean) will it be filled, default is `false`\n     o     opacity (number) opacity, default is `0.5`\n     o     offsetx (number) horizontal offset, default is `0`\n     o     offsety (number) vertical offset, default is `0`\n     o     color (string) glow colour, default is `black`\n     o }\n     = (object) @Paper.set of elements that represents glow\n    \\*/\n    elproto.glow = function (glow) {\n        if (this.type == \"text\") {\n            return null;\n        }\n        glow = glow || {};\n        var s = {\n            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\n            fill: glow.fill || false,\n            opacity: glow.opacity || .5,\n            offsetx: glow.offsetx || 0,\n            offsety: glow.offsety || 0,\n            color: glow.color || \"#000\"\n        },\n            c = s.width / 2,\n            r = this.paper,\n            out = r.set(),\n            path = this.realPath || getPath[this.type](this);\n        path = this.matrix ? mapPath(path, this.matrix) : path;\n        for (var i = 1; i < c + 1; i++) {\n            out.push(r.path(path).attr({\n                stroke: s.color,\n                fill: s.fill ? s.color : \"none\",\n                \"stroke-linejoin\": \"round\",\n                \"stroke-linecap\": \"round\",\n                \"stroke-width\": +(s.width / c * i).toFixed(3),\n                opacity: +(s.opacity / c).toFixed(3)\n            }));\n        }\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\n    };\n    var curveslengths = {},\n    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    },\n    getLengthFactory = function (istotal, subpath) {\n        return function (path, length, onlystart) {\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return {x: point.x, y: point.y, alpha: point.alpha};\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\n            return point;\n        };\n    };\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    /*\\\n     * Raphael.getTotalLength\n     [ method ]\n     **\n     * Returns length of the given path in pixels.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string.\n     **\n     = (number) length.\n    \\*/\n    R.getTotalLength = getTotalLength;\n    /*\\\n     * Raphael.getPointAtLength\n     [ method ]\n     **\n     * Return coordinates of the point located at the given length on the given path.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string\n     - length (number)\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate\n     o     y: (number) y coordinate\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    R.getPointAtLength = getPointAtLength;\n    /*\\\n     * Raphael.getSubpath\n     [ method ]\n     **\n     * Return subpath of a given path from given length to given length.\n     **\n     > Parameters\n     **\n     - path (string) SVG path string\n     - from (number) position of the start of the segment\n     - to (number) position of the end of the segment\n     **\n     = (string) pathstring for the segment\n    \\*/\n    R.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns length of the path in pixels. Only works for element of “path” type.\n     = (number) length.\n    \\*/\n    elproto.getTotalLength = function () {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n\n        return getTotalLength(path);\n    };\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\n     **\n     > Parameters\n     **\n     - length (number)\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate\n     o     y: (number) y coordinate\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        return getPointAtLength(path, length);\n    };\n    /*\\\n     * Element.getPath\n     [ method ]\n     **\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\n     = (object) path\n     **\n    \\*/\n    elproto.getPath = function () {\n        var path,\n            getPath = R._getPath[this.type];\n        \n        if (this.type == \"text\" || this.type == \"set\") {\n            return;\n        }\n\n        if (getPath) {\n            path = getPath(this);\n        }\n\n        return path;\n    };\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\n     **\n     > Parameters\n     **\n     - from (number) position of the start of the segment\n     - to (number) position of the end of the segment\n     **\n     = (string) pathstring for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        var path = this.getPath();\n        if (!path) {\n            return;\n        }\n\n        return R.getSubpath(path, from, to);\n    };\n    /*\\\n     * Raphael.easing_formulas\n     [ property ]\n     **\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\n     # <ul>\n     #     <li>“linear”</li>\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\n     #     <li>“>” or “easeOut” or “ease-out”</li>\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\n     #     <li>“backIn” or “back-in”</li>\n     #     <li>“backOut” or “back-out”</li>\n     #     <li>“elastic”</li>\n     #     <li>“bounce”</li>\n     # </ul>\n     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\n    \\*/\n    var ef = R.easing_formulas = {\n        linear: function (n) {\n            return n;\n        },\n        \"<\": function (n) {\n            return pow(n, 1.7);\n        },\n        \">\": function (n) {\n            return pow(n, .48);\n        },\n        \"<>\": function (n) {\n            var q = .48 - n / 1.04,\n                Q = math.sqrt(.1734 + q * q),\n                x = Q - q,\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n                y = -Q - q,\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n                t = X + Y + .5;\n            return (1 - t) * 3 * t * t + t * t * t;\n        },\n        backIn: function (n) {\n            var s = 1.70158;\n            return n * n * ((s + 1) * n - s);\n        },\n        backOut: function (n) {\n            n = n - 1;\n            var s = 1.70158;\n            return n * n * ((s + 1) * n + s) + 1;\n        },\n        elastic: function (n) {\n            if (n == !!n) {\n                return n;\n            }\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\n        },\n        bounce: function (n) {\n            var s = 7.5625,\n                p = 2.75,\n                l;\n            if (n < (1 / p)) {\n                l = s * n * n;\n            } else {\n                if (n < (2 / p)) {\n                    n -= (1.5 / p);\n                    l = s * n * n + .75;\n                } else {\n                    if (n < (2.5 / p)) {\n                        n -= (2.25 / p);\n                        l = s * n * n + .9375;\n                    } else {\n                        n -= (2.625 / p);\n                        l = s * n * n + .984375;\n                    }\n                }\n            }\n            return l;\n        }\n    };\n    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\n    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\n    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\n    ef[\"back-in\"] = ef.backIn;\n    ef[\"back-out\"] = ef.backOut;\n\n    var animationElements = [],\n        requestAnimFrame = window.requestAnimationFrame       ||\n                           window.webkitRequestAnimationFrame ||\n                           window.mozRequestAnimationFrame    ||\n                           window.oRequestAnimationFrame      ||\n                           window.msRequestAnimationFrame     ||\n                           function (callback) {\n                               setTimeout(callback, 16);\n                           },\n        animation = function () {\n            var Now = +new Date,\n                l = 0;\n            for (; l < animationElements.length; l++) {\n                var e = animationElements[l];\n                if (e.el.removed || e.paused) {\n                    continue;\n                }\n                var time = Now - e.start,\n                    ms = e.ms,\n                    easing = e.easing,\n                    from = e.from,\n                    diff = e.diff,\n                    to = e.to,\n                    t = e.t,\n                    that = e.el,\n                    set = {},\n                    now,\n                    init = {},\n                    key;\n                if (e.initstatus) {\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\n                    e.status = e.initstatus;\n                    delete e.initstatus;\n                    e.stop && animationElements.splice(l--, 1);\n                } else {\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\n                }\n                if (time < 0) {\n                    continue;\n                }\n                if (time < ms) {\n                    var pos = easing(time / ms);\n                    for (var attr in from) if (from[has](attr)) {\n                        switch (availableAnimAttrs[attr]) {\n                            case nu:\n                                now = +from[attr] + pos * ms * diff[attr];\n                                break;\n                            case \"colour\":\n                                now = \"rgb(\" + [\n                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\n                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\n                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\n                                ].join(\",\") + \")\";\n                                break;\n                            case \"path\":\n                                now = [];\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\n                                    now[i] = [from[attr][i][0]];\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\n                                    }\n                                    now[i] = now[i].join(S);\n                                }\n                                now = now.join(S);\n                                break;\n                            case \"transform\":\n                                if (diff[attr].real) {\n                                    now = [];\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                        now[i] = [from[attr][i][0]];\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\n                                        }\n                                    }\n                                } else {\n                                    var get = function (i) {\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\n                                    };\n                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\n                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\n                                }\n                                break;\n                            case \"csv\":\n                                if (attr == \"clip-rect\") {\n                                    now = [];\n                                    i = 4;\n                                    while (i--) {\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\n                                    }\n                                }\n                                break;\n                            default:\n                                var from2 = [][concat](from[attr]);\n                                now = [];\n                                i = that.paper.customAttributes[attr].length;\n                                while (i--) {\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\n                                }\n                                break;\n                        }\n                        set[attr] = now;\n                    }\n                    that.attr(set);\n                    (function (id, that, anim) {\n                        setTimeout(function () {\n                            eve(\"raphael.anim.frame.\" + id, that, anim);\n                        });\n                    })(that.id, that, e.anim);\n                } else {\n                    (function(f, el, a) {\n                        setTimeout(function() {\n                            eve(\"raphael.anim.frame.\" + el.id, el, a);\n                            eve(\"raphael.anim.finish.\" + el.id, el, a);\n                            R.is(f, \"function\") && f.call(el);\n                        });\n                    })(e.callback, that, e.anim);\n                    that.attr(to);\n                    animationElements.splice(l--, 1);\n                    if (e.repeat > 1 && !e.next) {\n                        for (key in to) if (to[has](key)) {\n                            init[key] = e.totalOrigin[key];\n                        }\n                        e.el.attr(init);\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\n                    }\n                    if (e.next && !e.stop) {\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\n                    }\n                }\n            }\n            R.svg && that && that.paper && that.paper.safari();\n            animationElements.length && requestAnimFrame(animation);\n        },\n        upto255 = function (color) {\n            return color > 255 ? 255 : color < 0 ? 0 : color;\n        };\n    /*\\\n     * Element.animateWith\n     [ method ]\n     **\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\n     **\n     > Parameters\n     **\n     - el (object) element to sync with\n     - anim (object) animation to sync with\n     - params (object) #optional final attributes for the element, see also @Element.attr\n     - ms (number) #optional number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     * or\n     - element (object) element to sync with\n     - anim (object) animation to sync with\n     - animation (object) #optional animation object, see @Raphael.animation\n     **\n     = (object) original element\n    \\*/\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\n        var element = this;\n        if (element.removed) {\n            callback && callback.call(element);\n            return element;\n        }\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\n            x, y;\n        runAnimation(a, element, a.percents[0], null, element.attr());\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\n                animationElements[ii - 1].start = animationElements[i].start;\n                break;\n            }\n        }\n        return element;\n        // \n        // \n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\n        //     status = element.status(anim);\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\n    };\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\n        var cx = 3 * p1x,\n            bx = 3 * (p2x - p1x) - cx,\n            ax = 1 - cx - bx,\n            cy = 3 * p1y,\n            by = 3 * (p2y - p1y) - cy,\n            ay = 1 - cy - by;\n        function sampleCurveX(t) {\n            return ((ax * t + bx) * t + cx) * t;\n        }\n        function solve(x, epsilon) {\n            var t = solveCurveX(x, epsilon);\n            return ((ay * t + by) * t + cy) * t;\n        }\n        function solveCurveX(x, epsilon) {\n            var t0, t1, t2, x2, d2, i;\n            for(t2 = x, i = 0; i < 8; i++) {\n                x2 = sampleCurveX(t2) - x;\n                if (abs(x2) < epsilon) {\n                    return t2;\n                }\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\n                if (abs(d2) < 1e-6) {\n                    break;\n                }\n                t2 = t2 - x2 / d2;\n            }\n            t0 = 0;\n            t1 = 1;\n            t2 = x;\n            if (t2 < t0) {\n                return t0;\n            }\n            if (t2 > t1) {\n                return t1;\n            }\n            while (t0 < t1) {\n                x2 = sampleCurveX(t2);\n                if (abs(x2 - x) < epsilon) {\n                    return t2;\n                }\n                if (x > x2) {\n                    t0 = t2;\n                } else {\n                    t1 = t2;\n                }\n                t2 = (t1 - t0) / 2 + t0;\n            }\n            return t2;\n        }\n        return solve(t, 1 / (200 * duration));\n    }\n    elproto.onAnimation = function (f) {\n        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\n        return this;\n    };\n    function Animation(anim, ms) {\n        var percents = [],\n            newAnim = {};\n        this.ms = ms;\n        this.times = 1;\n        if (anim) {\n            for (var attr in anim) if (anim[has](attr)) {\n                newAnim[toFloat(attr)] = anim[attr];\n                percents.push(toFloat(attr));\n            }\n            percents.sort(sortByNumber);\n        }\n        this.anim = newAnim;\n        this.top = percents[percents.length - 1];\n        this.percents = percents;\n    }\n    /*\\\n     * Animation.delay\n     [ method ]\n     **\n     * Creates a copy of existing animation object with given delay.\n     **\n     > Parameters\n     **\n     - delay (number) number of ms to pass between animation start and actual animation\n     **\n     = (object) new altered Animation object\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\n     | circle1.animate(anim); // run the given animation immediately\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\n    \\*/\n    Animation.prototype.delay = function (delay) {\n        var a = new Animation(this.anim, this.ms);\n        a.times = this.times;\n        a.del = +delay || 0;\n        return a;\n    };\n    /*\\\n     * Animation.repeat\n     [ method ]\n     **\n     * Creates a copy of existing animation object with given repetition.\n     **\n     > Parameters\n     **\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\n     **\n     = (object) new altered Animation object\n    \\*/\n    Animation.prototype.repeat = function (times) {\n        var a = new Animation(this.anim, this.ms);\n        a.del = this.del;\n        a.times = math.floor(mmax(times, 0)) || 1;\n        return a;\n    };\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\n        percent = toFloat(percent);\n        var params,\n            isInAnim,\n            isInAnimSet,\n            percents = [],\n            next,\n            prev,\n            timestamp,\n            ms = anim.ms,\n            from = {},\n            to = {},\n            diff = {};\n        if (status) {\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\n                var e = animationElements[i];\n                if (e.el.id == element.id && e.anim == anim) {\n                    if (e.percent != percent) {\n                        animationElements.splice(i, 1);\n                        isInAnimSet = 1;\n                    } else {\n                        isInAnim = e;\n                    }\n                    element.attr(e.totalOrigin);\n                    break;\n                }\n            }\n        } else {\n            status = +to; // NaN\n        }\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\n                percent = anim.percents[i];\n                prev = anim.percents[i - 1] || 0;\n                ms = ms / anim.top * (percent - prev);\n                next = anim.percents[i + 1];\n                params = anim.anim[percent];\n                break;\n            } else if (status) {\n                element.attr(anim.anim[anim.percents[i]]);\n            }\n        }\n        if (!params) {\n            return;\n        }\n        if (!isInAnim) {\n            for (var attr in params) if (params[has](attr)) {\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\n                    from[attr] = element.attr(attr);\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\n                    to[attr] = params[attr];\n                    switch (availableAnimAttrs[attr]) {\n                        case nu:\n                            diff[attr] = (to[attr] - from[attr]) / ms;\n                            break;\n                        case \"colour\":\n                            from[attr] = R.getRGB(from[attr]);\n                            var toColour = R.getRGB(to[attr]);\n                            diff[attr] = {\n                                r: (toColour.r - from[attr].r) / ms,\n                                g: (toColour.g - from[attr].g) / ms,\n                                b: (toColour.b - from[attr].b) / ms\n                            };\n                            break;\n                        case \"path\":\n                            var pathes = path2curve(from[attr], to[attr]),\n                                toPath = pathes[1];\n                            from[attr] = pathes[0];\n                            diff[attr] = [];\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                diff[attr][i] = [0];\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\n                                }\n                            }\n                            break;\n                        case \"transform\":\n                            var _ = element._,\n                                eq = equaliseTransform(_[attr], to[attr]);\n                            if (eq) {\n                                from[attr] = eq.from;\n                                to[attr] = eq.to;\n                                diff[attr] = [];\n                                diff[attr].real = true;\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\n                                    diff[attr][i] = [from[attr][i][0]];\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\n                                    }\n                                }\n                            } else {\n                                var m = (element.matrix || new Matrix),\n                                    to2 = {\n                                        _: {transform: _.transform},\n                                        getBBox: function () {\n                                            return element.getBBox(1);\n                                        }\n                                    };\n                                from[attr] = [\n                                    m.a,\n                                    m.b,\n                                    m.c,\n                                    m.d,\n                                    m.e,\n                                    m.f\n                                ];\n                                extractTransform(to2, to[attr]);\n                                to[attr] = to2._.transform;\n                                diff[attr] = [\n                                    (to2.matrix.a - m.a) / ms,\n                                    (to2.matrix.b - m.b) / ms,\n                                    (to2.matrix.c - m.c) / ms,\n                                    (to2.matrix.d - m.d) / ms,\n                                    (to2.matrix.e - m.e) / ms,\n                                    (to2.matrix.f - m.f) / ms\n                                ];\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\n                                // extractTransform(to2, to[attr]);\n                                // diff[attr] = [\n                                //     (to2._.sx - _.sx) / ms,\n                                //     (to2._.sy - _.sy) / ms,\n                                //     (to2._.deg - _.deg) / ms,\n                                //     (to2._.dx - _.dx) / ms,\n                                //     (to2._.dy - _.dy) / ms\n                                // ];\n                            }\n                            break;\n                        case \"csv\":\n                            var values = Str(params[attr])[split](separator),\n                                from2 = Str(from[attr])[split](separator);\n                            if (attr == \"clip-rect\") {\n                                from[attr] = from2;\n                                diff[attr] = [];\n                                i = from2.length;\n                                while (i--) {\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\n                                }\n                            }\n                            to[attr] = values;\n                            break;\n                        default:\n                            values = [][concat](params[attr]);\n                            from2 = [][concat](from[attr]);\n                            diff[attr] = [];\n                            i = element.paper.customAttributes[attr].length;\n                            while (i--) {\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\n                            }\n                            break;\n                    }\n                }\n            }\n            var easing = params.easing,\n                easyeasy = R.easing_formulas[easing];\n            if (!easyeasy) {\n                easyeasy = Str(easing).match(bezierrg);\n                if (easyeasy && easyeasy.length == 5) {\n                    var curve = easyeasy;\n                    easyeasy = function (t) {\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\n                    };\n                } else {\n                    easyeasy = pipe;\n                }\n            }\n            timestamp = params.start || anim.start || +new Date;\n            e = {\n                anim: anim,\n                percent: percent,\n                timestamp: timestamp,\n                start: timestamp + (anim.del || 0),\n                status: 0,\n                initstatus: status || 0,\n                stop: false,\n                ms: ms,\n                easing: easyeasy,\n                from: from,\n                diff: diff,\n                to: to,\n                el: element,\n                callback: params.callback,\n                prev: prev,\n                next: next,\n                repeat: times || anim.times,\n                origin: element.attr(),\n                totalOrigin: totalOrigin\n            };\n            animationElements.push(e);\n            if (status && !isInAnim && !isInAnimSet) {\n                e.stop = true;\n                e.start = new Date - ms * status;\n                if (animationElements.length == 1) {\n                    return animation();\n                }\n            }\n            if (isInAnimSet) {\n                e.start = new Date - e.ms * status;\n            }\n            animationElements.length == 1 && requestAnimFrame(animation);\n        } else {\n            isInAnim.initstatus = status;\n            isInAnim.start = new Date - isInAnim.ms * status;\n        }\n        eve(\"raphael.anim.start.\" + element.id, element, anim);\n    }\n    /*\\\n     * Raphael.animation\n     [ method ]\n     **\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\n     * See also @Animation.delay and @Animation.repeat methods.\n     **\n     > Parameters\n     **\n     - params (object) final attributes for the element, see also @Element.attr\n     - ms (number) number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     **\n     = (object) @Animation\n    \\*/\n    R.animation = function (params, ms, easing, callback) {\n        if (params instanceof Animation) {\n            return params;\n        }\n        if (R.is(easing, \"function\") || !easing) {\n            callback = callback || easing || null;\n            easing = null;\n        }\n        params = Object(params);\n        ms = +ms || 0;\n        var p = {},\n            json,\n            attr;\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\n            json = true;\n            p[attr] = params[attr];\n        }\n        if (!json) {\n            return new Animation(params, ms);\n        } else {\n            easing && (p.easing = easing);\n            callback && (p.callback = callback);\n            return new Animation({100: p}, ms);\n        }\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Creates and starts animation for given element.\n     **\n     > Parameters\n     **\n     - params (object) final attributes for the element, see also @Element.attr\n     - ms (number) number of milliseconds for animation to run\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\n     - callback (function) #optional callback function. Will be called at the end of animation.\n     * or\n     - animation (object) animation object, see @Raphael.animation\n     **\n     = (object) original element\n    \\*/\n    elproto.animate = function (params, ms, easing, callback) {\n        var element = this;\n        if (element.removed) {\n            callback && callback.call(element);\n            return element;\n        }\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\n        return element;\n    };\n    /*\\\n     * Element.setTime\n     [ method ]\n     **\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\n     **\n     > Parameters\n     **\n     - anim (object) animation object\n     - value (number) number of milliseconds from the beginning of the animation\n     **\n     = (object) original element if `value` is specified\n     * Note, that during animation following events are triggered:\n     *\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\n    \\*/\n    elproto.setTime = function (anim, value) {\n        if (anim && value != null) {\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\n        }\n        return this;\n    };\n    /*\\\n     * Element.status\n     [ method ]\n     **\n     * Gets or sets the status of animation of the element.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\n     **\n     = (number) status\n     * or\n     = (array) status if `anim` is not specified. Array of objects in format:\n     o {\n     o     anim: (object) animation object\n     o     status: (number) status\n     o }\n     * or\n     = (object) original element if `value` is specified\n    \\*/\n    elproto.status = function (anim, value) {\n        var out = [],\n            i = 0,\n            len,\n            e;\n        if (value != null) {\n            runAnimation(anim, this, -1, mmin(value, 1));\n            return this;\n        } else {\n            len = animationElements.length;\n            for (; i < len; i++) {\n                e = animationElements[i];\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\n                    if (anim) {\n                        return e.status;\n                    }\n                    out.push({\n                        anim: e.anim,\n                        status: e.status\n                    });\n                }\n            }\n            if (anim) {\n                return 0;\n            }\n            return out;\n        }\n    };\n    /*\\\n     * Element.pause\n     [ method ]\n     **\n     * Stops animation of the element with ability to resume it later on.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.pause = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\n                animationElements[i].paused = true;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.resume\n     [ method ]\n     **\n     * Resumes animation if it was paused with @Element.pause method.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.resume = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            var e = animationElements[i];\n            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\n                delete e.paused;\n                this.status(e.anim, e.status);\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops animation of the element.\n     **\n     > Parameters\n     **\n     - anim (object) #optional animation object\n     **\n     = (object) original element\n    \\*/\n    elproto.stop = function (anim) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\n            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\n                animationElements.splice(i--, 1);\n            }\n        }\n        return this;\n    };\n    function stopAnimation(paper) {\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\n            animationElements.splice(i--, 1);\n        }\n    }\n    eve.on(\"raphael.remove\", stopAnimation);\n    eve.on(\"raphael.clear\", stopAnimation);\n    elproto.toString = function () {\n        return \"Rapha\\xebl\\u2019s object\";\n    };\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set.\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it.\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set.\n     *\n     * If function returns `false` it will stop loop running.\n     **\n     > Parameters\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    for (var method in elproto) if (elproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname][apply](el, arg);\n                });\n            };\n        })(method);\n    }\n    setproto.attr = function (name, value) {\n        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\n            for (var j = 0, jj = name.length; j < jj; j++) {\n                this.items[j].attr(name[j]);\n            }\n        } else {\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\n                this.items[i].attr(name, value);\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removeds all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     > Parameters\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     > Parameters\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found & removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n    };\n    setproto.animate = function (params, ms, easing, callback) {\n        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\n        var len = this.items.length,\n            i = len,\n            item,\n            set = this,\n            collector;\n        if (!len) {\n            return this;\n        }\n        callback && (collector = function () {\n            !--len && callback.call(set);\n        });\n        easing = R.is(easing, string) ? easing : collector;\n        var anim = R.animation(params, ms, easing, collector);\n        item = this.items[--i].animate(anim);\n        while (i--) {\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\n            (this.items[i] && !this.items[i].removed) || len--;\n        }\n        return this;\n    };\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin[apply](0, x);\n        y = mmin[apply](0, y);\n        x2 = mmax[apply](0, x2);\n        y2 = mmax[apply](0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y\n        };\n    };\n    setproto.clone = function (s) {\n        s = this.paper.set();\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Rapha\\xebl\\u2018s set\";\n    };\n\n    setproto.glow = function(glowConfig) {\n        var ret = this.paper.set();\n        this.forEach(function(shape, index){\n            var g = shape.glow(glowConfig);\n            if(g != null){\n                g.forEach(function(shape2, index2){\n                    ret.push(shape2);\n                });\n            }\n        });\n        return ret;\n    };\n\n\n    /*\\\n     * Set.isPointInside\n     [ method ]\n     **\n     * Determine if given point is inside this set’s elements\n     **\n     > Parameters\n     **\n     - x (number) x coordinate of the point\n     - y (number) y coordinate of the point\n     = (boolean) `true` if point is inside any of the set's elements\n     \\*/\n    setproto.isPointInside = function (x, y) {\n        var isPointInside = false;\n        this.forEach(function (el) {\n            if (el.isPointInside(x, y)) {\n                isPointInside = true;\n                return false; // stop loop\n            }\n        });\n        return isPointInside;\n    };\n\n    /*\\\n     * Raphael.registerFont\n     [ method ]\n     **\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\n     * Returns original parameter, so it could be used with chaining.\n     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\n     **\n     > Parameters\n     **\n     - font (object) the font to register\n     = (object) the font you passed in\n     > Usage\n     | Cufon.registerFont(Raphael.registerFont({…}));\n    \\*/\n    R.registerFont = function (font) {\n        if (!font.face) {\n            return font;\n        }\n        this.fonts = this.fonts || {};\n        var fontcopy = {\n                w: font.w,\n                face: {},\n                glyphs: {}\n            },\n            family = font.face[\"font-family\"];\n        for (var prop in font.face) if (font.face[has](prop)) {\n            fontcopy.face[prop] = font.face[prop];\n        }\n        if (this.fonts[family]) {\n            this.fonts[family].push(fontcopy);\n        } else {\n            this.fonts[family] = [fontcopy];\n        }\n        if (!font.svg) {\n            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\n                var path = font.glyphs[glyph];\n                fontcopy.glyphs[glyph] = {\n                    w: path.w,\n                    k: {},\n                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\n                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\n                        }) + \"z\"\n                };\n                if (path.k) {\n                    for (var k in path.k) if (path[has](k)) {\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    /*\\\n     * Paper.getFont\n     [ method ]\n     **\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\n     **\n     > Parameters\n     **\n     - family (string) font family name or any word from it\n     - weight (string) #optional font weight\n     - style (string) #optional font style\n     - stretch (string) #optional font stretch\n     = (object) the font object\n     > Usage\n     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\n    \\*/\n    paperproto.getFont = function (family, weight, style, stretch) {\n        stretch = stretch || \"normal\";\n        style = style || \"normal\";\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\n        if (!R.fonts) {\n            return;\n        }\n        var font = R.fonts[family];\n        if (!font) {\n            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\n                if (name.test(fontName)) {\n                    font = R.fonts[fontName];\n                    break;\n                }\n            }\n        }\n        var thefont;\n        if (font) {\n            for (var i = 0, ii = font.length; i < ii; i++) {\n                thefont = font[i];\n                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\n                    break;\n                }\n            }\n        }\n        return thefont;\n    };\n    /*\\\n     * Paper.print\n     [ method ]\n     **\n     * Creates path that represent given text written using given font at given position with given size.\n     * Result of the method is path element that contains whole text as a separate path.\n     **\n     > Parameters\n     **\n     - x (number) x position of the text\n     - y (number) y position of the text\n     - string (string) text to print\n     - font (object) font object, see @Paper.getFont\n     - size (number) #optional size of the font, default is `16`\n     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\n     = (object) resulting path element, which consist of all letters\n     > Usage\n     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\n    \\*/\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\n        origin = origin || \"middle\"; // baseline|middle\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\n        var letters = Str(string)[split](E),\n            shift = 0,\n            notfirst = 0,\n            path = E,\n            scale;\n        R.is(font, \"string\") && (font = this.getFont(font));\n        if (font) {\n            scale = (size || 16) / font.face[\"units-per-em\"];\n            var bb = font.face.bbox[split](separator),\n                top = +bb[0],\n                lineHeight = bb[3] - bb[1],\n                shifty = 0,\n                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\n            for (var i = 0, ii = letters.length; i < ii; i++) {\n                if (letters[i] == \"\\n\") {\n                    shift = 0;\n                    curr = 0;\n                    notfirst = 0;\n                    shifty += lineHeight * line_spacing;\n                } else {\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\n                        curr = font.glyphs[letters[i]];\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\n                    notfirst = 1;\n                }\n                if (curr && curr.d) {\n                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\n                }\n            }\n        }\n        return this.path(path).attr({\n            fill: \"#000\",\n            stroke: \"none\"\n        });\n    };\n\n    /*\\\n     * Paper.add\n     [ method ]\n     **\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\n     **\n     > Parameters\n     **\n     - json (array)\n     = (object) resulting set of imported elements\n     > Usage\n     | paper.add([\n     |     {\n     |         type: \"circle\",\n     |         cx: 10,\n     |         cy: 10,\n     |         r: 5\n     |     },\n     |     {\n     |         type: \"rect\",\n     |         x: 10,\n     |         y: 10,\n     |         width: 10,\n     |         height: 10,\n     |         fill: \"#fc0\"\n     |     }\n     | ]);\n    \\*/\n    paperproto.add = function (json) {\n        if (R.is(json, \"array\")) {\n            var res = this.set(),\n                i = 0,\n                ii = json.length,\n                j;\n            for (; i < ii; i++) {\n                j = json[i] || {};\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\n            }\n        }\n        return res;\n    };\n\n    /*\\\n     * Raphael.format\n     [ method ]\n     **\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\n     **\n     > Parameters\n     **\n     - token (string) string to format\n     - … (string) rest of arguments will be treated as parameters for replacement\n     = (string) formated string\n     > Usage\n     | var x = 10,\n     |     y = 20,\n     |     width = 40,\n     |     height = 50;\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\n    \\*/\n    R.format = function (token, params) {\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\n            return args[++i] == null ? E : args[i];\n        }));\n        return token || E;\n    };\n    /*\\\n     * Raphael.fullfill\n     [ method ]\n     **\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\n     **\n     > Parameters\n     **\n     - token (string) string to format\n     - json (object) object which properties will be used as a replacement\n     = (string) formated string\n     > Usage\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n     |     x: 10,\n     |     y: 20,\n     |     dim: {\n     |         width: 40,\n     |         height: 50,\n     |         \"negative width\": -40\n     |     }\n     | }));\n    \\*/\n    R.fullfill = (function () {\n        var tokenRegex = /\\{([^\\}]+)\\}/g,\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n            replacer = function (all, key, obj) {\n                var res = obj;\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                    name = name || quotedName;\n                    if (res) {\n                        if (name in res) {\n                            res = res[name];\n                        }\n                        typeof res == \"function\" && isFunc && (res = res());\n                    }\n                });\n                res = (res == null || res == obj ? all : res) + \"\";\n                return res;\n            };\n        return function (str, obj) {\n            return String(str).replace(tokenRegex, function (all, key) {\n                return replacer(all, key, obj);\n            });\n        };\n    })();\n    /*\\\n     * Raphael.ninja\n     [ method ]\n     **\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existance.\n     **\n     = (object) Raphael object\n     > Usage\n     | (function (local_raphael) {\n     |     var paper = local_raphael(10, 10, 320, 200);\n     |     …\n     | })(Raphael.ninja());\n    \\*/\n    R.ninja = function () {\n        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;\n        return R;\n    };\n    /*\\\n     * Raphael.st\n     [ property (object) ]\n     **\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\n     * you added, so you will be able to call the same method on sets too.\n     **\n     * See also @Raphael.el.\n     > Usage\n     | Raphael.el.red = function () {\n     |     this.attr({fill: \"#f00\"});\n     | };\n     | Raphael.st.red = function () {\n     |     this.forEach(function (el) {\n     |         el.red();\n     |     });\n     | };\n     | // then use it\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\n    \\*/\n    R.st = setproto;\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\n    (function (doc, loaded, f) {\n        if (doc.readyState == null && doc.addEventListener){\n            doc.addEventListener(loaded, f = function () {\n                doc.removeEventListener(loaded, f, false);\n                doc.readyState = \"complete\";\n            }, false);\n            doc.readyState = \"loading\";\n        }\n        function isLoaded() {\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\n        }\n        isLoaded();\n    })(document, \"DOMContentLoaded\");\n\n    eve.on(\"raphael.DOMload\", function () {\n        loaded = true;\n    });\n\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\n// │ SVG Module                                                          │ \\\\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function(){\n    if (!R.svg) {\n        return;\n    }\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        toInt = parseInt,\n        math = Math,\n        mmax = math.max,\n        abs = math.abs,\n        pow = math.pow,\n        separator = /[, ]+/,\n        eve = R.eve,\n        E = \"\",\n        S = \" \";\n    var xlink = \"http://www.w3.org/1999/xlink\",\n        markers = {\n            block: \"M5,0 0,2.5 5,5z\",\n            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\n            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\n            open: \"M6,1 1,3.5 6,6\",\n            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\n        },\n        markerCounter = {};\n    R.toString = function () {\n        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\n    };\n    var $ = function (el, attr) {\n        if (attr) {\n            if (typeof el == \"string\") {\n                el = $(el);\n            }\n            for (var key in attr) if (attr[has](key)) {\n                if (key.substring(0, 6) == \"xlink:\") {\n                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\n                } else {\n                    el.setAttribute(key, Str(attr[key]));\n                }\n            }\n        } else {\n            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\n            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\n        }\n        return el;\n    },\n    addGradientFill = function (element, gradient) {\n        var type = \"linear\",\n            id = element.id + gradient,\n            fx = .5, fy = .5,\n            o = element.node,\n            SVG = element.paper,\n            s = o.style,\n            el = R._g.doc.getElementById(id);\n        if (!el) {\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\n                type = \"radial\";\n                if (_fx && _fy) {\n                    fx = toFloat(_fx);\n                    fy = toFloat(_fy);\n                    var dir = ((fy > .5) * 2 - 1);\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\n                        fy != .5 &&\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\n                }\n                return E;\n            });\n            gradient = gradient.split(/\\s*\\-\\s*/);\n            if (type == \"linear\") {\n                var angle = gradient.shift();\n                angle = -toFloat(angle);\n                if (isNaN(angle)) {\n                    return null;\n                }\n                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\n                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\n                vector[2] *= max;\n                vector[3] *= max;\n                if (vector[2] < 0) {\n                    vector[0] = -vector[2];\n                    vector[2] = 0;\n                }\n                if (vector[3] < 0) {\n                    vector[1] = -vector[3];\n                    vector[3] = 0;\n                }\n            }\n            var dots = R._parseDots(gradient);\n            if (!dots) {\n                return null;\n            }\n            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\n            \n            if (element.gradient && id != element.gradient.id) {\n                SVG.defs.removeChild(element.gradient);\n                delete element.gradient;\n            }\n\n            if (!element.gradient) {\n                el = $(type + \"Gradient\", {id: id});\n                element.gradient = el;\n                $(el, type == \"radial\" ? {\n                    fx: fx,\n                    fy: fy\n                } : {\n                    x1: vector[0],\n                    y1: vector[1],\n                    x2: vector[2],\n                    y2: vector[3],\n                    gradientTransform: element.matrix.invert()\n                });\n                SVG.defs.appendChild(el);\n                for (var i = 0, ii = dots.length; i < ii; i++) {\n                    el.appendChild($(\"stop\", {\n                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\n                        \"stop-color\": dots[i].color || \"#fff\"\n                    }));\n                }\n            }\n        }\n        $(o, {\n            fill: \"url(#\" + id + \")\",\n            opacity: 1,\n            \"fill-opacity\": 1\n        });\n        s.fill = E;\n        s.opacity = 1;\n        s.fillOpacity = 1;\n        return 1;\n    },\n    updatePosition = function (o) {\n        var bbox = o.getBBox(1);\n        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\n    },\n    addArrow = function (o, value, isEnd) {\n        if (o.type == \"path\") {\n            var values = Str(value).toLowerCase().split(\"-\"),\n                p = o.paper,\n                se = isEnd ? \"end\" : \"start\",\n                node = o.node,\n                attrs = o.attrs,\n                stroke = attrs[\"stroke-width\"],\n                i = values.length,\n                type = \"classic\",\n                from,\n                to,\n                dx,\n                refX,\n                attr,\n                w = 3,\n                h = 3,\n                t = 5;\n            while (i--) {\n                switch (values[i]) {\n                    case \"block\":\n                    case \"classic\":\n                    case \"oval\":\n                    case \"diamond\":\n                    case \"open\":\n                    case \"none\":\n                        type = values[i];\n                        break;\n                    case \"wide\": h = 5; break;\n                    case \"narrow\": h = 2; break;\n                    case \"long\": w = 5; break;\n                    case \"short\": w = 2; break;\n                }\n            }\n            if (type == \"open\") {\n                w += 2;\n                h += 2;\n                t += 2;\n                dx = 1;\n                refX = isEnd ? 4 : 1;\n                attr = {\n                    fill: \"none\",\n                    stroke: attrs.stroke\n                };\n            } else {\n                refX = dx = w / 2;\n                attr = {\n                    fill: attrs.stroke,\n                    stroke: \"none\"\n                };\n            }\n            if (o._.arrows) {\n                if (isEnd) {\n                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\n                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\n                } else {\n                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\n                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\n                }\n            } else {\n                o._.arrows = {};\n            }\n            if (type != \"none\") {\n                var pathId = \"raphael-marker-\" + type,\n                    markerId = \"raphael-marker-\" + se + type + w + h;\n                if (!R._g.doc.getElementById(pathId)) {\n                    p.defs.appendChild($($(\"path\"), {\n                        \"stroke-linecap\": \"round\",\n                        d: markers[type],\n                        id: pathId\n                    }));\n                    markerCounter[pathId] = 1;\n                } else {\n                    markerCounter[pathId]++;\n                }\n                var marker = R._g.doc.getElementById(markerId),\n                    use;\n                if (!marker) {\n                    marker = $($(\"marker\"), {\n                        id: markerId,\n                        markerHeight: h,\n                        markerWidth: w,\n                        orient: \"auto\",\n                        refX: refX,\n                        refY: h / 2\n                    });\n                    use = $($(\"use\"), {\n                        \"xlink:href\": \"#\" + pathId,\n                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\n                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\n                    });\n                    marker.appendChild(use);\n                    p.defs.appendChild(marker);\n                    markerCounter[markerId] = 1;\n                } else {\n                    markerCounter[markerId]++;\n                    use = marker.getElementsByTagName(\"use\")[0];\n                }\n                $(use, attr);\n                var delta = dx * (type != \"diamond\" && type != \"oval\");\n                if (isEnd) {\n                    from = o._.arrows.startdx * stroke || 0;\n                    to = R.getTotalLength(attrs.path) - delta * stroke;\n                } else {\n                    from = delta * stroke;\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n                }\n                attr = {};\n                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\n                if (to || from) {\n                    attr.d = R.getSubpath(attrs.path, from, to);\n                }\n                $(node, attr);\n                o._.arrows[se + \"Path\"] = pathId;\n                o._.arrows[se + \"Marker\"] = markerId;\n                o._.arrows[se + \"dx\"] = delta;\n                o._.arrows[se + \"Type\"] = type;\n                o._.arrows[se + \"String\"] = value;\n            } else {\n                if (isEnd) {\n                    from = o._.arrows.startdx * stroke || 0;\n                    to = R.getTotalLength(attrs.path) - from;\n                } else {\n                    from = 0;\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\n                }\n                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\n                delete o._.arrows[se + \"Path\"];\n                delete o._.arrows[se + \"Marker\"];\n                delete o._.arrows[se + \"dx\"];\n                delete o._.arrows[se + \"Type\"];\n                delete o._.arrows[se + \"String\"];\n            }\n            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\n                var item = R._g.doc.getElementById(attr);\n                item && item.parentNode.removeChild(item);\n            }\n        }\n    },\n    dasharray = {\n        \"\": [0],\n        \"none\": [0],\n        \"-\": [3, 1],\n        \".\": [1, 1],\n        \"-.\": [3, 1, 1, 1],\n        \"-..\": [3, 1, 1, 1, 1, 1],\n        \". \": [1, 3],\n        \"- \": [4, 3],\n        \"--\": [8, 3],\n        \"- .\": [4, 3, 1, 3],\n        \"--.\": [8, 3, 1, 3],\n        \"--..\": [8, 3, 1, 3, 1, 3]\n    },\n    addDashes = function (o, value, params) {\n        value = dasharray[Str(value).toLowerCase()];\n        if (value) {\n            var width = o.attrs[\"stroke-width\"] || \"1\",\n                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\n                dashes = [],\n                i = value.length;\n            while (i--) {\n                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\n            }\n            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\n        }\n    },\n    setFillAndStroke = function (o, params) {\n        var node = o.node,\n            attrs = o.attrs,\n            vis = node.style.visibility;\n        node.style.visibility = \"hidden\";\n        for (var att in params) {\n            if (params[has](att)) {\n                if (!R._availableAttrs[has](att)) {\n                    continue;\n                }\n                var value = params[att];\n                attrs[att] = value;\n                switch (att) {\n                    case \"blur\":\n                        o.blur(value);\n                        break;\n                    case \"title\":\n                        var title = node.getElementsByTagName(\"title\");\n\n                        // Use the existing <title>.\n                        if (title.length && (title = title[0])) {\n                          title.firstChild.nodeValue = value;\n                        } else {\n                          title = $(\"title\");\n                          var val = R._g.doc.createTextNode(value);\n                          title.appendChild(val);\n                          node.appendChild(title);\n                        }\n                        break;\n                    case \"href\":\n                    case \"target\":\n                        var pn = node.parentNode;\n                        if (pn.tagName.toLowerCase() != \"a\") {\n                            var hl = $(\"a\");\n                            pn.insertBefore(hl, node);\n                            hl.appendChild(node);\n                            pn = hl;\n                        }\n                        if (att == \"target\") {\n                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\n                        } else {\n                            pn.setAttributeNS(xlink, att, value);\n                        }\n                        break;\n                    case \"cursor\":\n                        node.style.cursor = value;\n                        break;\n                    case \"transform\":\n                        o.transform(value);\n                        break;\n                    case \"arrow-start\":\n                        addArrow(o, value);\n                        break;\n                    case \"arrow-end\":\n                        addArrow(o, value, 1);\n                        break;\n                    case \"clip-rect\":\n                        var rect = Str(value).split(separator);\n                        if (rect.length == 4) {\n                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\n                            var el = $(\"clipPath\"),\n                                rc = $(\"rect\");\n                            el.id = R.createUUID();\n                            $(rc, {\n                                x: rect[0],\n                                y: rect[1],\n                                width: rect[2],\n                                height: rect[3]\n                            });\n                            el.appendChild(rc);\n                            o.paper.defs.appendChild(el);\n                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\n                            o.clip = rc;\n                        }\n                        if (!value) {\n                            var path = node.getAttribute(\"clip-path\");\n                            if (path) {\n                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\n                                clip && clip.parentNode.removeChild(clip);\n                                $(node, {\"clip-path\": E});\n                                delete o.clip;\n                            }\n                        }\n                    break;\n                    case \"path\":\n                        if (o.type == \"path\") {\n                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\n                            o._.dirty = 1;\n                            if (o._.arrows) {\n                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                            }\n                        }\n                        break;\n                    case \"width\":\n                        node.setAttribute(att, value);\n                        o._.dirty = 1;\n                        if (attrs.fx) {\n                            att = \"x\";\n                            value = attrs.x;\n                        } else {\n                            break;\n                        }\n                    case \"x\":\n                        if (attrs.fx) {\n                            value = -attrs.x - (attrs.width || 0);\n                        }\n                    case \"rx\":\n                        if (att == \"rx\" && o.type == \"rect\") {\n                            break;\n                        }\n                    case \"cx\":\n                        node.setAttribute(att, value);\n                        o.pattern && updatePosition(o);\n                        o._.dirty = 1;\n                        break;\n                    case \"height\":\n                        node.setAttribute(att, value);\n                        o._.dirty = 1;\n                        if (attrs.fy) {\n                            att = \"y\";\n                            value = attrs.y;\n                        } else {\n                            break;\n                        }\n                    case \"y\":\n                        if (attrs.fy) {\n                            value = -attrs.y - (attrs.height || 0);\n                        }\n                    case \"ry\":\n                        if (att == \"ry\" && o.type == \"rect\") {\n                            break;\n                        }\n                    case \"cy\":\n                        node.setAttribute(att, value);\n                        o.pattern && updatePosition(o);\n                        o._.dirty = 1;\n                        break;\n                    case \"r\":\n                        if (o.type == \"rect\") {\n                            $(node, {rx: value, ry: value});\n                        } else {\n                            node.setAttribute(att, value);\n                        }\n                        o._.dirty = 1;\n                        break;\n                    case \"src\":\n                        if (o.type == \"image\") {\n                            node.setAttributeNS(xlink, \"href\", value);\n                        }\n                        break;\n                    case \"stroke-width\":\n                        if (o._.sx != 1 || o._.sy != 1) {\n                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\n                        }\n                        if (o.paper._vbSize) {\n                            value *= o.paper._vbSize;\n                        }\n                        node.setAttribute(att, value);\n                        if (attrs[\"stroke-dasharray\"]) {\n                            addDashes(o, attrs[\"stroke-dasharray\"], params);\n                        }\n                        if (o._.arrows) {\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                        }\n                        break;\n                    case \"stroke-dasharray\":\n                        addDashes(o, value, params);\n                        break;\n                    case \"fill\":\n                        var isURL = Str(value).match(R._ISURL);\n                        if (isURL) {\n                            el = $(\"pattern\");\n                            var ig = $(\"image\");\n                            el.id = R.createUUID();\n                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\n                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\n                            el.appendChild(ig);\n\n                            (function (el) {\n                                R._preload(isURL[1], function () {\n                                    var w = this.offsetWidth,\n                                        h = this.offsetHeight;\n                                    $(el, {width: w, height: h});\n                                    $(ig, {width: w, height: h});\n                                    o.paper.safari();\n                                });\n                            })(el);\n                            o.paper.defs.appendChild(el);\n                            $(node, {fill: \"url(#\" + el.id + \")\"});\n                            o.pattern = el;\n                            o.pattern && updatePosition(o);\n                            break;\n                        }\n                        var clr = R.getRGB(value);\n                        if (!clr.error) {\n                            delete params.gradient;\n                            delete attrs.gradient;\n                            !R.is(attrs.opacity, \"undefined\") &&\n                                R.is(params.opacity, \"undefined\") &&\n                                $(node, {opacity: attrs.opacity});\n                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\n                                R.is(params[\"fill-opacity\"], \"undefined\") &&\n                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\n                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\n                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\n                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n                                if (gradient) {\n                                    var stops = gradient.getElementsByTagName(\"stop\");\n                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\n                                }\n                            }\n                            attrs.gradient = value;\n                            attrs.fill = \"none\";\n                            break;\n                        }\n                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n                    case \"stroke\":\n                        clr = R.getRGB(value);\n                        node.setAttribute(att, clr.hex);\n                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\n                        if (att == \"stroke\" && o._.arrows) {\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\n                        }\n                        break;\n                    case \"gradient\":\n                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\n                        break;\n                    case \"opacity\":\n                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\n                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\n                        }\n                        // fall\n                    case \"fill-opacity\":\n                        if (attrs.gradient) {\n                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\n                            if (gradient) {\n                                stops = gradient.getElementsByTagName(\"stop\");\n                                $(stops[stops.length - 1], {\"stop-opacity\": value});\n                            }\n                            break;\n                        }\n                    default:\n                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\n                        var cssrule = att.replace(/(\\-.)/g, function (w) {\n                            return w.substring(1).toUpperCase();\n                        });\n                        node.style[cssrule] = value;\n                        o._.dirty = 1;\n                        node.setAttribute(att, value);\n                        break;\n                }\n            }\n        }\n\n        tuneText(o, params);\n        node.style.visibility = vis;\n    },\n    leading = 1.2,\n    tuneText = function (el, params) {\n        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\n            return;\n        }\n        var a = el.attrs,\n            node = el.node,\n            computedStyle = node.firstChild ? R._g.doc.defaultView.getComputedStyle(node.firstChild, E) : undefined,\n            fontSize = computedStyle ? toInt(computedStyle.getPropertyValue(\"font-size\"), 10) : 10;\n        \n\n        if (params[has](\"text\")) {\n            a.text = params.text;\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var texts = Str(params.text).split(\"\\n\"),\n                tspans = [],\n                tspan;\n            for (var i = 0, ii = texts.length; i < ii; i++) {\n                tspan = $(\"tspan\");\n                i && $(tspan, {dy: fontSize * leading, x: a.x});\n                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\n                node.appendChild(tspan);\n                tspans[i] = tspan;\n            }\n        } else {\n            tspans = node.getElementsByTagName(\"tspan\");\n            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\n                $(tspans[i], {dy: fontSize * leading, x: a.x});\n            } else {\n                $(tspans[0], {dy: 0});\n            }\n        }\n        $(node, {x: a.x, y: a.y});\n        el._.dirty = 1;\n        var bb = el._getBBox(),\n            dif = a.y - (bb.y + bb.height / 2);\n        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\n    },\n    Element = function (node, svg) {\n        var X = 0,\n            Y = 0;\n        /*\\\n         * Element.node\n         [ property (object) ]\n         **\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n         **\n         * Note: Don’t mess with it.\n         > Usage\n         | // draw a circle at coordinate 10,10 with radius of 10\n         | var c = paper.circle(10, 10, 10);\n         | c.node.onclick = function () {\n         |     c.attr(\"fill\", \"red\");\n         | };\n        \\*/\n        this[0] = this.node = node;\n        /*\\\n         * Element.raphael\n         [ property (object) ]\n         **\n         * Internal reference to @Raphael object. In case it is not available.\n         > Usage\n         | Raphael.el.red = function () {\n         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\n         |     hsb.h = 1;\n         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\n         | }\n        \\*/\n        node.raphael = true;\n        /*\\\n         * Element.id\n         [ property (number) ]\n         **\n         * Unique id of the element. Especially usesful when you want to listen to events of the element, \n         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\n        \\*/\n        this.id = R._oid++;\n        node.raphaelid = this.id;\n        this.matrix = R.matrix();\n        this.realPath = null;\n        /*\\\n         * Element.paper\n         [ property (object) ]\n         **\n         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\n         > Usage\n         | Raphael.el.cross = function () {\n         |     this.attr({fill: \"red\"});\n         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\n         |         .attr({stroke: \"red\"});\n         | }\n        \\*/\n        this.paper = svg;\n        this.attrs = this.attrs || {};\n        this._ = {\n            transform: [],\n            sx: 1,\n            sy: 1,\n            deg: 0,\n            dx: 0,\n            dy: 0,\n            dirty: 1\n        };\n        !svg.bottom && (svg.bottom = this);\n        /*\\\n         * Element.prev\n         [ property (object) ]\n         **\n         * Reference to the previous element in the hierarchy.\n        \\*/\n        this.prev = svg.top;\n        svg.top && (svg.top.next = this);\n        svg.top = this;\n        /*\\\n         * Element.next\n         [ property (object) ]\n         **\n         * Reference to the next element in the hierarchy.\n        \\*/\n        this.next = null;\n    },\n    elproto = R.el;\n\n    Element.prototype = elproto;\n    elproto.constructor = Element;\n\n    R._engine.path = function (pathString, SVG) {\n        var el = $(\"path\");\n        SVG.canvas && SVG.canvas.appendChild(el);\n        var p = new Element(el, SVG);\n        p.type = \"path\";\n        setFillAndStroke(p, {\n            fill: \"none\",\n            stroke: \"#000\",\n            path: pathString\n        });\n        return p;\n    };\n    /*\\\n     * Element.rotate\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds rotation by given angle around given point to the list of\n     * transformations of the element.\n     > Parameters\n     - deg (number) angle in degrees\n     - cx (number) #optional x coordinate of the centre of rotation\n     - cy (number) #optional y coordinate of the centre of rotation\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\n     = (object) @Element\n    \\*/\n    elproto.rotate = function (deg, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        deg = Str(deg).split(separator);\n        if (deg.length - 1) {\n            cx = toFloat(deg[1]);\n            cy = toFloat(deg[2]);\n        }\n        deg = toFloat(deg[0]);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n            cx = bbox.x + bbox.width / 2;\n            cy = bbox.y + bbox.height / 2;\n        }\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n        return this;\n    };\n    /*\\\n     * Element.scale\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds scale by given amount relative to given point to the list of\n     * transformations of the element.\n     > Parameters\n     - sx (number) horisontal scale amount\n     - sy (number) vertical scale amount\n     - cx (number) #optional x coordinate of the centre of scale\n     - cy (number) #optional y coordinate of the centre of scale\n     * If cx & cy aren’t specified centre of the shape is used instead.\n     = (object) @Element\n    \\*/\n    elproto.scale = function (sx, sy, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        sx = Str(sx).split(separator);\n        if (sx.length - 1) {\n            sy = toFloat(sx[1]);\n            cx = toFloat(sx[2]);\n            cy = toFloat(sx[3]);\n        }\n        sx = toFloat(sx[0]);\n        (sy == null) && (sy = sx);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n        }\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n        return this;\n    };\n    /*\\\n     * Element.translate\n     [ method ]\n     **\n     * Deprecated! Use @Element.transform instead.\n     * Adds translation by given amount to the list of transformations of the element.\n     > Parameters\n     - dx (number) horisontal shift\n     - dy (number) vertical shift\n     = (object) @Element\n    \\*/\n    elproto.translate = function (dx, dy) {\n        if (this.removed) {\n            return this;\n        }\n        dx = Str(dx).split(separator);\n        if (dx.length - 1) {\n            dy = toFloat(dx[1]);\n        }\n        dx = toFloat(dx[0]) || 0;\n        dy = +dy || 0;\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n        return this;\n    };\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Adds transformation to the element which is separate to other attributes,\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\n     * of transformation string is similar to the path string syntax:\n     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\n     * scale and `m` is for matrix.\n     *\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\n     *\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\n     * coordinates as optional parameters, the default is the centre point of the element.\n     * Matrix accepts six parameters.\n     > Usage\n     | var el = paper.rect(10, 20, 300, 200);\n     | // translate 100, 100, rotate 45°, translate -100, 0\n     | el.transform(\"t100,100r45t-100,0\");\n     | // if you want you can append or prepend transformations\n     | el.transform(\"...t50,50\");\n     | el.transform(\"s2...\");\n     | // or even wrap\n     | el.transform(\"t50,50...t-50-50\");\n     | // to reset transformation call method with empty string\n     | el.transform(\"\");\n     | // to get current value call it without parameters\n     | console.log(el.transform());\n     > Parameters\n     - tstr (string) #optional transformation string\n     * If tstr isn’t specified\n     = (string) current transformation string\n     * else\n     = (object) @Element\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            return _.transform;\n        }\n        R._extractTransform(this, tstr);\n\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\n        this.pattern && updatePosition(this);\n        this.node && $(this.node, {transform: this.matrix});\n    \n        if (_.sx != 1 || _.sy != 1) {\n            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\n            this.attr({\"stroke-width\": sw});\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.hide\n     [ method ]\n     **\n     * Makes element invisible. See @Element.show.\n     = (object) @Element\n    \\*/\n    elproto.hide = function () {\n        !this.removed && this.paper.safari(this.node.style.display = \"none\");\n        return this;\n    };\n    /*\\\n     * Element.show\n     [ method ]\n     **\n     * Makes element visible. See @Element.hide.\n     = (object) @Element\n    \\*/\n    elproto.show = function () {\n        !this.removed && this.paper.safari(this.node.style.display = \"\");\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the paper.\n    \\*/\n    elproto.remove = function () {\n        if (this.removed || !this.node.parentNode) {\n            return;\n        }\n        var paper = this.paper;\n        paper.__set__ && paper.__set__.exclude(this);\n        eve.unbind(\"raphael.*.*.\" + this.id);\n        if (this.gradient) {\n            paper.defs.removeChild(this.gradient);\n        }\n        R._tear(this, paper);\n        if (this.node.parentNode.tagName.toLowerCase() == \"a\") {\n            this.node.parentNode.parentNode.removeChild(this.node.parentNode);\n        } else {\n            this.node.parentNode.removeChild(this.node);\n        }\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        this.removed = true;\n    };\n    elproto._getBBox = function () {\n        if (this.node.style.display == \"none\") {\n            this.show();\n            var hide = true;\n        }\n        var bbox = {};\n        try {\n            bbox = this.node.getBBox();\n        } catch(e) {\n            // Firefox 3.0.x plays badly here\n        } finally {\n            bbox = bbox || {};\n        }\n        hide && this.hide();\n        return bbox;\n    };\n    /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Sets the attributes of the element.\n     > Parameters\n     - attrName (string) attribute’s name\n     - value (string) value\n     * or\n     - params (object) object of name/value pairs\n     * or\n     - attrName (string) attribute’s name\n     * or\n     - attrNames (array) in this case method returns array of current values for given attribute names\n     = (object) @Element if attrsName & value or params are passed in.\n     = (...) value of the attribute if only attrsName is passed in.\n     = (array) array of values of the attribute if attrsNames is passed in.\n     = (object) object of attributes if nothing is passed in.\n     > Possible parameters\n     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\n     o clip-rect (string) comma or space separated values: x, y, width and height\n     o cursor (string) CSS type of the cursor\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\n     o fill (string) colour, gradient or image\n     o fill-opacity (number)\n     o font (string)\n     o font-family (string)\n     o font-size (number) font size in pixels\n     o font-weight (string)\n     o height (number)\n     o href (string) URL, if specified element behaves as hyperlink\n     o opacity (number)\n     o path (string) SVG path string format\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\n     o rx (number) horisontal radius of the ellipse\n     o ry (number) vertical radius of the ellipse\n     o src (string) image URL, only works for @Element.image element\n     o stroke (string) stroke colour\n     o stroke-dasharray (string) [“”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\n     o stroke-miterlimit (number)\n     o stroke-opacity (number)\n     o stroke-width (number) stroke width in pixels, default is '1'\n     o target (string) used with href\n     o text (string) contents of the text element. Use `\\n` for multiline text\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\n     o title (string) will create tooltip with a given text\n     o transform (string) see @Element.transform\n     o width (number)\n     o x (number)\n     o y (number)\n     > Gradients\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\n     *\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\n     > Path String\n     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\n     > Colour Parsing\n     # <ul>\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\n     # </ul>\n    \\*/\n    elproto.attr = function (name, value) {\n        if (this.removed) {\n            return this;\n        }\n        if (name == null) {\n            var res = {};\n            for (var a in this.attrs) if (this.attrs[has](a)) {\n                res[a] = this.attrs[a];\n            }\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n            res.transform = this._.transform;\n            return res;\n        }\n        if (value == null && R.is(name, \"string\")) {\n            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\n                return this.attrs.gradient;\n            }\n            if (name == \"transform\") {\n                return this._.transform;\n            }\n            var names = name.split(separator),\n                out = {};\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                name = names[i];\n                if (name in this.attrs) {\n                    out[name] = this.attrs[name];\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n                    out[name] = this.paper.customAttributes[name].def;\n                } else {\n                    out[name] = R._availableAttrs[name];\n                }\n            }\n            return ii - 1 ? out : out[names[0]];\n        }\n        if (value == null && R.is(name, \"array\")) {\n            out = {};\n            for (i = 0, ii = name.length; i < ii; i++) {\n                out[name[i]] = this.attr(name[i]);\n            }\n            return out;\n        }\n        if (value != null) {\n            var params = {};\n            params[name] = value;\n        } else if (name != null && R.is(name, \"object\")) {\n            params = name;\n        }\n        for (var key in params) {\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n        }\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n            this.attrs[key] = params[key];\n            for (var subkey in par) if (par[has](subkey)) {\n                params[subkey] = par[subkey];\n            }\n        }\n        setFillAndStroke(this, params);\n        return this;\n    };\n    /*\\\n     * Element.toFront\n     [ method ]\n     **\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\n     = (object) @Element\n    \\*/\n    elproto.toFront = function () {\n        if (this.removed) {\n            return this;\n        }\n        if (this.node.parentNode.tagName.toLowerCase() == \"a\") {\n            this.node.parentNode.parentNode.appendChild(this.node.parentNode);\n        } else {\n            this.node.parentNode.appendChild(this.node);\n        }\n        var svg = this.paper;\n        svg.top != this && R._tofront(this, svg);\n        return this;\n    };\n    /*\\\n     * Element.toBack\n     [ method ]\n     **\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\n     = (object) @Element\n    \\*/\n    elproto.toBack = function () {\n        if (this.removed) {\n            return this;\n        }\n        var parent = this.node.parentNode;\n        if (parent.tagName.toLowerCase() == \"a\") {\n            parent.parentNode.insertBefore(this.node.parentNode, this.node.parentNode.parentNode.firstChild); \n        } else if (parent.firstChild != this.node) {\n            parent.insertBefore(this.node, this.node.parentNode.firstChild);\n        }\n        R._toback(this, this.paper);\n        var svg = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts current object after the given one.\n     = (object) @Element\n    \\*/\n    elproto.insertAfter = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        var node = element.node || element[element.length - 1].node;\n        if (node.nextSibling) {\n            node.parentNode.insertBefore(this.node, node.nextSibling);\n        } else {\n            node.parentNode.appendChild(this.node);\n        }\n        R._insertafter(this, element, this.paper);\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts current object before the given one.\n     = (object) @Element\n    \\*/\n    elproto.insertBefore = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        var node = element.node || element[0].node;\n        node.parentNode.insertBefore(this.node, node);\n        R._insertbefore(this, element, this.paper);\n        return this;\n    };\n    elproto.blur = function (size) {\n        // Experimental. No Safari support. Use it on your own risk.\n        var t = this;\n        if (+size !== 0) {\n            var fltr = $(\"filter\"),\n                blur = $(\"feGaussianBlur\");\n            t.attrs.blur = size;\n            fltr.id = R.createUUID();\n            $(blur, {stdDeviation: +size || 1.5});\n            fltr.appendChild(blur);\n            t.paper.defs.appendChild(fltr);\n            t._blur = fltr;\n            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\n        } else {\n            if (t._blur) {\n                t._blur.parentNode.removeChild(t._blur);\n                delete t._blur;\n                delete t.attrs.blur;\n            }\n            t.node.removeAttribute(\"filter\");\n        }\n        return t;\n    };\n    R._engine.circle = function (svg, x, y, r) {\n        var el = $(\"circle\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\n        res.type = \"circle\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.rect = function (svg, x, y, w, h, r) {\n        var el = $(\"rect\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {x: x, y: y, width: w, height: h, r: r || 0, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\n        res.type = \"rect\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\n        var el = $(\"ellipse\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\n        res.type = \"ellipse\";\n        $(el, res.attrs);\n        return res;\n    };\n    R._engine.image = function (svg, src, x, y, w, h) {\n        var el = $(\"image\");\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\n        el.setAttributeNS(xlink, \"href\", src);\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\n        res.type = \"image\";\n        return res;\n    };\n    R._engine.text = function (svg, x, y, text) {\n        var el = $(\"text\");\n        svg.canvas && svg.canvas.appendChild(el);\n        var res = new Element(el, svg);\n        res.attrs = {\n            x: x,\n            y: y,\n            \"text-anchor\": \"middle\",\n            text: text,\n            font: R._availableAttrs.font,\n            stroke: \"none\",\n            fill: \"#000\"\n        };\n        res.type = \"text\";\n        setFillAndStroke(res, res.attrs);\n        return res;\n    };\n    R._engine.setSize = function (width, height) {\n        this.width = width || this.width;\n        this.height = height || this.height;\n        this.canvas.setAttribute(\"width\", this.width);\n        this.canvas.setAttribute(\"height\", this.height);\n        if (this._viewBox) {\n            this.setViewBox.apply(this, this._viewBox);\n        }\n        return this;\n    };\n    R._engine.create = function () {\n        var con = R._getContainer.apply(0, arguments),\n            container = con && con.container,\n            x = con.x,\n            y = con.y,\n            width = con.width,\n            height = con.height;\n        if (!container) {\n            throw new Error(\"SVG container not found.\");\n        }\n        var cnvs = $(\"svg\"),\n            css = \"overflow:hidden;\",\n            isFloating;\n        x = x || 0;\n        y = y || 0;\n        width = width || 512;\n        height = height || 342;\n        $(cnvs, {\n            height: height,\n            version: 1.1,\n            width: width,\n            xmlns: \"http://www.w3.org/2000/svg\"\n        });\n        if (container == 1) {\n            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\n            R._g.doc.body.appendChild(cnvs);\n            isFloating = 1;\n        } else {\n            cnvs.style.cssText = css + \"position:relative\";\n            if (container.firstChild) {\n                container.insertBefore(cnvs, container.firstChild);\n            } else {\n                container.appendChild(cnvs);\n            }\n        }\n        container = new R._Paper;\n        container.width = width;\n        container.height = height;\n        container.canvas = cnvs;\n        container.clear();\n        container._left = container._top = 0;\n        isFloating && (container.renderfix = function () {});\n        container.renderfix();\n        return container;\n    };\n    R._engine.setViewBox = function (x, y, w, h, fit) {\n        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n        var size = mmax(w / this.width, h / this.height),\n            top = this.top,\n            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\n            vb,\n            sw;\n        if (x == null) {\n            if (this._vbSize) {\n                size = 1;\n            }\n            delete this._vbSize;\n            vb = \"0 0 \" + this.width + S + this.height;\n        } else {\n            this._vbSize = size;\n            vb = x + S + y + S + w + S + h;\n        }\n        $(this.canvas, {\n            viewBox: vb,\n            preserveAspectRatio: aspectRatio\n        });\n        while (size && top) {\n            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\n            top.attr({\"stroke-width\": sw});\n            top._.dirty = 1;\n            top._.dirtyT = 1;\n            top = top.prev;\n        }\n        this._viewBox = [x, y, w, h, !!fit];\n        return this;\n    };\n    /*\\\n     * Paper.renderfix\n     [ method ]\n     **\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependant\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\n     * This method fixes the issue.\n     **\n       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\n    \\*/\n    R.prototype.renderfix = function () {\n        var cnvs = this.canvas,\n            s = cnvs.style,\n            pos;\n        try {\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\n        } catch (e) {\n            pos = cnvs.createSVGMatrix();\n        }\n        var left = -pos.e % 1,\n            top = -pos.f % 1;\n        if (left || top) {\n            if (left) {\n                this._left = (this._left + left) % 1;\n                s.left = this._left + \"px\";\n            }\n            if (top) {\n                this._top = (this._top + top) % 1;\n                s.top = this._top + \"px\";\n            }\n        }\n    };\n    /*\\\n     * Paper.clear\n     [ method ]\n     **\n     * Clears the paper, i.e. removes all the elements.\n    \\*/\n    R.prototype.clear = function () {\n        R.eve(\"raphael.clear\", this);\n        var c = this.canvas;\n        while (c.firstChild) {\n            c.removeChild(c.firstChild);\n        }\n        this.bottom = this.top = null;\n        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\n        c.appendChild(this.desc);\n        c.appendChild(this.defs = $(\"defs\"));\n    };\n    /*\\\n     * Paper.remove\n     [ method ]\n     **\n     * Removes the paper from the DOM.\n    \\*/\n    R.prototype.remove = function () {\n        eve(\"raphael.remove\", this);\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n    };\n    var setproto = R.st;\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname].apply(el, arg);\n                });\n            };\n        })(method);\n    }\n})();\n\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\n// │ VML Module                                                          │ \\\\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\n\n(function(){\n    if (!R.vml) {\n        return;\n    }\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        math = Math,\n        round = math.round,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        fillString = \"fill\",\n        separator = /[, ]+/,\n        eve = R.eve,\n        ms = \" progid:DXImageTransform.Microsoft\",\n        S = \" \",\n        E = \"\",\n        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\n        bites = /([clmz]),?([^clmz]*)/gi,\n        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\n        val = /-?[^,\\s-]+/g,\n        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px\",\n        zoom = 21600,\n        pathTypes = {path: 1, rect: 1, image: 1},\n        ovalTypes = {circle: 1, ellipse: 1},\n        path2vml = function (path) {\n            var total =  /[ahqstv]/ig,\n                command = R._pathToAbsolute;\n            Str(path).match(total) && (command = R._path2curve);\n            total = /[clmz]/g;\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\n                var res = Str(path).replace(bites, function (all, command, args) {\n                    var vals = [],\n                        isMove = command.toLowerCase() == \"m\",\n                        res = map[command];\n                    args.replace(val, function (value) {\n                        if (isMove && vals.length == 2) {\n                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\n                            vals = [];\n                        }\n                        vals.push(round(value * zoom));\n                    });\n                    return res + vals;\n                });\n                return res;\n            }\n            var pa = command(path), p, r;\n            res = [];\n            for (var i = 0, ii = pa.length; i < ii; i++) {\n                p = pa[i];\n                r = pa[i][0].toLowerCase();\n                r == \"z\" && (r = \"x\");\n                for (var j = 1, jj = p.length; j < jj; j++) {\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\n                }\n                res.push(r);\n            }\n            return res.join(S);\n        },\n        compensation = function (deg, dx, dy) {\n            var m = R.matrix();\n            m.rotate(-deg, .5, .5);\n            return {\n                dx: m.x(dx, dy),\n                dy: m.y(dx, dy)\n            };\n        },\n        setCoords = function (p, sx, sy, dx, dy, deg) {\n            var _ = p._,\n                m = p.matrix,\n                fillpos = _.fillpos,\n                o = p.node,\n                s = o.style,\n                y = 1,\n                flip = \"\",\n                dxdy,\n                kx = zoom / sx,\n                ky = zoom / sy;\n            s.visibility = \"hidden\";\n            if (!sx || !sy) {\n                return;\n            }\n            o.coordsize = abs(kx) + S + abs(ky);\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\n            if (deg) {\n                var c = compensation(deg, dx, dy);\n                dx = c.dx;\n                dy = c.dy;\n            }\n            sx < 0 && (flip += \"x\");\n            sy < 0 && (flip += \" y\") && (y = -1);\n            s.flip = flip;\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\n            if (fillpos || _.fillsize) {\n                var fill = o.getElementsByTagName(fillString);\n                fill = fill && fill[0];\n                o.removeChild(fill);\n                if (fillpos) {\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\n                    fill.position = c.dx * y + S + c.dy * y;\n                }\n                if (_.fillsize) {\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\n                }\n                o.appendChild(fill);\n            }\n            s.visibility = \"visible\";\n        };\n    R.toString = function () {\n        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\n    };\n    var addArrow = function (o, value, isEnd) {\n        var values = Str(value).toLowerCase().split(\"-\"),\n            se = isEnd ? \"end\" : \"start\",\n            i = values.length,\n            type = \"classic\",\n            w = \"medium\",\n            h = \"medium\";\n        while (i--) {\n            switch (values[i]) {\n                case \"block\":\n                case \"classic\":\n                case \"oval\":\n                case \"diamond\":\n                case \"open\":\n                case \"none\":\n                    type = values[i];\n                    break;\n                case \"wide\":\n                case \"narrow\": h = values[i]; break;\n                case \"long\":\n                case \"short\": w = values[i]; break;\n            }\n        }\n        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\n        stroke[se + \"arrow\"] = type;\n        stroke[se + \"arrowlength\"] = w;\n        stroke[se + \"arrowwidth\"] = h;\n    },\n    setFillAndStroke = function (o, params) {\n        // o.paper.canvas.style.display = \"none\";\n        o.attrs = o.attrs || {};\n        var node = o.node,\n            a = o.attrs,\n            s = node.style,\n            xy,\n            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\n            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\n            res = o;\n\n\n        for (var par in params) if (params[has](par)) {\n            a[par] = params[par];\n        }\n        if (newpath) {\n            a.path = R._getPath[o.type](o);\n            o._.dirty = 1;\n        }\n        params.href && (node.href = params.href);\n        params.title && (node.title = params.title);\n        params.target && (node.target = params.target);\n        params.cursor && (s.cursor = params.cursor);\n        \"blur\" in params && o.blur(params.blur);\n        if (params.path && o.type == \"path\" || newpath) {\n            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\n            if (o.type == \"image\") {\n                o._.fillpos = [a.x, a.y];\n                o._.fillsize = [a.width, a.height];\n                setCoords(o, 1, 1, 0, 0, 0);\n            }\n        }\n        \"transform\" in params && o.transform(params.transform);\n        if (isOval) {\n            var cx = +a.cx,\n                cy = +a.cy,\n                rx = +a.rx || +a.r || 0,\n                ry = +a.ry || +a.r || 0;\n            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\n            o._.dirty = 1;\n        }\n        if (\"clip-rect\" in params) {\n            var rect = Str(params[\"clip-rect\"]).split(separator);\n            if (rect.length == 4) {\n                rect[2] = +rect[2] + (+rect[0]);\n                rect[3] = +rect[3] + (+rect[1]);\n                var div = node.clipRect || R._g.doc.createElement(\"div\"),\n                    dstyle = div.style;\n                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\n                if (!node.clipRect) {\n                    dstyle.position = \"absolute\";\n                    dstyle.top = 0;\n                    dstyle.left = 0;\n                    dstyle.width = o.paper.width + \"px\";\n                    dstyle.height = o.paper.height + \"px\";\n                    node.parentNode.insertBefore(div, node);\n                    div.appendChild(node);\n                    node.clipRect = div;\n                }\n            }\n            if (!params[\"clip-rect\"]) {\n                node.clipRect && (node.clipRect.style.clip = \"auto\");\n            }\n        }\n        if (o.textpath) {\n            var textpathStyle = o.textpath.style;\n            params.font && (textpathStyle.font = params.font);\n            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\n            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\n            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\n            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\n        }\n        if (\"arrow-start\" in params) {\n            addArrow(res, params[\"arrow-start\"]);\n        }\n        if (\"arrow-end\" in params) {\n            addArrow(res, params[\"arrow-end\"], 1);\n        }\n        if (params.opacity != null || \n            params[\"stroke-width\"] != null ||\n            params.fill != null ||\n            params.src != null ||\n            params.stroke != null ||\n            params[\"stroke-width\"] != null ||\n            params[\"stroke-opacity\"] != null ||\n            params[\"fill-opacity\"] != null ||\n            params[\"stroke-dasharray\"] != null ||\n            params[\"stroke-miterlimit\"] != null ||\n            params[\"stroke-linejoin\"] != null ||\n            params[\"stroke-linecap\"] != null) {\n            var fill = node.getElementsByTagName(fillString),\n                newfill = false;\n            fill = fill && fill[0];\n            !fill && (newfill = fill = createNode(fillString));\n            if (o.type == \"image\" && params.src) {\n                fill.src = params.src;\n            }\n            params.fill && (fill.on = true);\n            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\n                fill.on = false;\n            }\n            if (fill.on && params.fill) {\n                var isURL = Str(params.fill).match(R._ISURL);\n                if (isURL) {\n                    fill.parentNode == node && node.removeChild(fill);\n                    fill.rotate = true;\n                    fill.src = isURL[1];\n                    fill.type = \"tile\";\n                    var bbox = o.getBBox(1);\n                    fill.position = bbox.x + S + bbox.y;\n                    o._.fillpos = [bbox.x, bbox.y];\n\n                    R._preload(isURL[1], function () {\n                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\n                    });\n                } else {\n                    fill.color = R.getRGB(params.fill).hex;\n                    fill.src = E;\n                    fill.type = \"solid\";\n                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\n                        a.fill = \"none\";\n                        a.gradient = params.fill;\n                        fill.rotate = false;\n                    }\n                }\n            }\n            if (\"fill-opacity\" in params || \"opacity\" in params) {\n                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\n                opacity = mmin(mmax(opacity, 0), 1);\n                fill.opacity = opacity;\n                if (fill.src) {\n                    fill.color = \"none\";\n                }\n            }\n            node.appendChild(fill);\n            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\n            newstroke = false;\n            !stroke && (newstroke = stroke = createNode(\"stroke\"));\n            if ((params.stroke && params.stroke != \"none\") ||\n                params[\"stroke-width\"] ||\n                params[\"stroke-opacity\"] != null ||\n                params[\"stroke-dasharray\"] ||\n                params[\"stroke-miterlimit\"] ||\n                params[\"stroke-linejoin\"] ||\n                params[\"stroke-linecap\"]) {\n                stroke.on = true;\n            }\n            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\n            var strokeColor = R.getRGB(params.stroke);\n            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\n            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\n            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\n            opacity = mmin(mmax(opacity, 0), 1);\n            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\n            params[\"stroke-width\"] && (stroke.weight = width);\n            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\n            stroke.opacity = opacity;\n        \n            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\n            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\n            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\n            if (\"stroke-dasharray\" in params) {\n                var dasharray = {\n                    \"-\": \"shortdash\",\n                    \".\": \"shortdot\",\n                    \"-.\": \"shortdashdot\",\n                    \"-..\": \"shortdashdotdot\",\n                    \". \": \"dot\",\n                    \"- \": \"dash\",\n                    \"--\": \"longdash\",\n                    \"- .\": \"dashdot\",\n                    \"--.\": \"longdashdot\",\n                    \"--..\": \"longdashdotdot\"\n                };\n                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\n            }\n            newstroke && node.appendChild(stroke);\n        }\n        if (res.type == \"text\") {\n            res.paper.canvas.style.display = E;\n            var span = res.paper.span,\n                m = 100,\n                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\n            s = span.style;\n            a.font && (s.font = a.font);\n            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\n            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\n            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\n            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\n            s.fontSize = fontSize * m + \"px\";\n            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\n            var brect = span.getBoundingClientRect();\n            res.W = a.w = (brect.right - brect.left) / m;\n            res.H = a.h = (brect.bottom - brect.top) / m;\n            // res.paper.canvas.style.display = \"none\";\n            res.X = a.x;\n            res.Y = a.y + res.H / 2;\n\n            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\n            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\n            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\n                res._.dirty = 1;\n                break;\n            }\n        \n            // text-anchor emulation\n            switch (a[\"text-anchor\"]) {\n                case \"start\":\n                    res.textpath.style[\"v-text-align\"] = \"left\";\n                    res.bbx = res.W / 2;\n                break;\n                case \"end\":\n                    res.textpath.style[\"v-text-align\"] = \"right\";\n                    res.bbx = -res.W / 2;\n                break;\n                default:\n                    res.textpath.style[\"v-text-align\"] = \"center\";\n                    res.bbx = 0;\n                break;\n            }\n            res.textpath.style[\"v-text-kern\"] = true;\n        }\n        // res.paper.canvas.style.display = E;\n    },\n    addGradientFill = function (o, gradient, fill) {\n        o.attrs = o.attrs || {};\n        var attrs = o.attrs,\n            pow = Math.pow,\n            opacity,\n            oindex,\n            type = \"linear\",\n            fxfy = \".5 .5\";\n        o.attrs.gradient = gradient;\n        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\n            type = \"radial\";\n            if (fx && fy) {\n                fx = toFloat(fx);\n                fy = toFloat(fy);\n                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\n                fxfy = fx + S + fy;\n            }\n            return E;\n        });\n        gradient = gradient.split(/\\s*\\-\\s*/);\n        if (type == \"linear\") {\n            var angle = gradient.shift();\n            angle = -toFloat(angle);\n            if (isNaN(angle)) {\n                return null;\n            }\n        }\n        var dots = R._parseDots(gradient);\n        if (!dots) {\n            return null;\n        }\n        o = o.shape || o.node;\n        if (dots.length) {\n            o.removeChild(fill);\n            fill.on = true;\n            fill.method = \"none\";\n            fill.color = dots[0].color;\n            fill.color2 = dots[dots.length - 1].color;\n            var clrs = [];\n            for (var i = 0, ii = dots.length; i < ii; i++) {\n                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\n            }\n            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\n            if (type == \"radial\") {\n                fill.type = \"gradientTitle\";\n                fill.focus = \"100%\";\n                fill.focussize = \"0 0\";\n                fill.focusposition = fxfy;\n                fill.angle = 0;\n            } else {\n                // fill.rotate= true;\n                fill.type = \"gradient\";\n                fill.angle = (270 - angle) % 360;\n            }\n            o.appendChild(fill);\n        }\n        return 1;\n    },\n    Element = function (node, vml) {\n        this[0] = this.node = node;\n        node.raphael = true;\n        this.id = R._oid++;\n        node.raphaelid = this.id;\n        this.X = 0;\n        this.Y = 0;\n        this.attrs = {};\n        this.paper = vml;\n        this.matrix = R.matrix();\n        this._ = {\n            transform: [],\n            sx: 1,\n            sy: 1,\n            dx: 0,\n            dy: 0,\n            deg: 0,\n            dirty: 1,\n            dirtyT: 1\n        };\n        !vml.bottom && (vml.bottom = this);\n        this.prev = vml.top;\n        vml.top && (vml.top.next = this);\n        vml.top = this;\n        this.next = null;\n    };\n    var elproto = R.el;\n\n    Element.prototype = elproto;\n    elproto.constructor = Element;\n    elproto.transform = function (tstr) {\n        if (tstr == null) {\n            return this._.transform;\n        }\n        var vbs = this.paper._viewBoxShift,\n            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\n            oldt;\n        if (vbs) {\n            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\n        }\n        R._extractTransform(this, vbt + tstr);\n        var matrix = this.matrix.clone(),\n            skew = this.skew,\n            o = this.node,\n            split,\n            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\n            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\n        matrix.translate(1, 1);\n        if (isPatt || isGrad || this.type == \"image\") {\n            skew.matrix = \"1 0 0 1\";\n            skew.offset = \"0 0\";\n            split = matrix.split();\n            if ((isGrad && split.noRotation) || !split.isSimple) {\n                o.style.filter = matrix.toFilter();\n                var bb = this.getBBox(),\n                    bbt = this.getBBox(1),\n                    dx = bb.x - bbt.x,\n                    dy = bb.y - bbt.y;\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\n                setCoords(this, 1, 1, dx, dy, 0);\n            } else {\n                o.style.filter = E;\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\n            }\n        } else {\n            o.style.filter = E;\n            skew.matrix = Str(matrix);\n            skew.offset = matrix.offset();\n        }\n        oldt && (this._.transform = oldt);\n        return this;\n    };\n    elproto.rotate = function (deg, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        if (deg == null) {\n            return;\n        }\n        deg = Str(deg).split(separator);\n        if (deg.length - 1) {\n            cx = toFloat(deg[1]);\n            cy = toFloat(deg[2]);\n        }\n        deg = toFloat(deg[0]);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n            cx = bbox.x + bbox.width / 2;\n            cy = bbox.y + bbox.height / 2;\n        }\n        this._.dirtyT = 1;\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\n        return this;\n    };\n    elproto.translate = function (dx, dy) {\n        if (this.removed) {\n            return this;\n        }\n        dx = Str(dx).split(separator);\n        if (dx.length - 1) {\n            dy = toFloat(dx[1]);\n        }\n        dx = toFloat(dx[0]) || 0;\n        dy = +dy || 0;\n        if (this._.bbox) {\n            this._.bbox.x += dx;\n            this._.bbox.y += dy;\n        }\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\n        return this;\n    };\n    elproto.scale = function (sx, sy, cx, cy) {\n        if (this.removed) {\n            return this;\n        }\n        sx = Str(sx).split(separator);\n        if (sx.length - 1) {\n            sy = toFloat(sx[1]);\n            cx = toFloat(sx[2]);\n            cy = toFloat(sx[3]);\n            isNaN(cx) && (cx = null);\n            isNaN(cy) && (cy = null);\n        }\n        sx = toFloat(sx[0]);\n        (sy == null) && (sy = sx);\n        (cy == null) && (cx = cy);\n        if (cx == null || cy == null) {\n            var bbox = this.getBBox(1);\n        }\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\n    \n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\n        this._.dirtyT = 1;\n        return this;\n    };\n    elproto.hide = function () {\n        !this.removed && (this.node.style.display = \"none\");\n        return this;\n    };\n    elproto.show = function () {\n        !this.removed && (this.node.style.display = E);\n        return this;\n    };\n    elproto._getBBox = function () {\n        if (this.removed) {\n            return {};\n        }\n        return {\n            x: this.X + (this.bbx || 0) - this.W / 2,\n            y: this.Y - this.H,\n            width: this.W,\n            height: this.H\n        };\n    };\n    elproto.remove = function () {\n        if (this.removed || !this.node.parentNode) {\n            return;\n        }\n        this.paper.__set__ && this.paper.__set__.exclude(this);\n        R.eve.unbind(\"raphael.*.*.\" + this.id);\n        R._tear(this, this.paper);\n        this.node.parentNode.removeChild(this.node);\n        this.shape && this.shape.parentNode.removeChild(this.shape);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        this.removed = true;\n    };\n    elproto.attr = function (name, value) {\n        if (this.removed) {\n            return this;\n        }\n        if (name == null) {\n            var res = {};\n            for (var a in this.attrs) if (this.attrs[has](a)) {\n                res[a] = this.attrs[a];\n            }\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\n            res.transform = this._.transform;\n            return res;\n        }\n        if (value == null && R.is(name, \"string\")) {\n            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\n                return this.attrs.gradient;\n            }\n            var names = name.split(separator),\n                out = {};\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                name = names[i];\n                if (name in this.attrs) {\n                    out[name] = this.attrs[name];\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\n                    out[name] = this.paper.customAttributes[name].def;\n                } else {\n                    out[name] = R._availableAttrs[name];\n                }\n            }\n            return ii - 1 ? out : out[names[0]];\n        }\n        if (this.attrs && value == null && R.is(name, \"array\")) {\n            out = {};\n            for (i = 0, ii = name.length; i < ii; i++) {\n                out[name[i]] = this.attr(name[i]);\n            }\n            return out;\n        }\n        var params;\n        if (value != null) {\n            params = {};\n            params[name] = value;\n        }\n        value == null && R.is(name, \"object\") && (params = name);\n        for (var key in params) {\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\n        }\n        if (params) {\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\n                this.attrs[key] = params[key];\n                for (var subkey in par) if (par[has](subkey)) {\n                    params[subkey] = par[subkey];\n                }\n            }\n            // this.paper.canvas.style.display = \"none\";\n            if (params.text && this.type == \"text\") {\n                this.textpath.string = params.text;\n            }\n            setFillAndStroke(this, params);\n            // this.paper.canvas.style.display = E;\n        }\n        return this;\n    };\n    elproto.toFront = function () {\n        !this.removed && this.node.parentNode.appendChild(this.node);\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\n        return this;\n    };\n    elproto.toBack = function () {\n        if (this.removed) {\n            return this;\n        }\n        if (this.node.parentNode.firstChild != this.node) {\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\n            R._toback(this, this.paper);\n        }\n        return this;\n    };\n    elproto.insertAfter = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        if (element.constructor == R.st.constructor) {\n            element = element[element.length - 1];\n        }\n        if (element.node.nextSibling) {\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\n        } else {\n            element.node.parentNode.appendChild(this.node);\n        }\n        R._insertafter(this, element, this.paper);\n        return this;\n    };\n    elproto.insertBefore = function (element) {\n        if (this.removed) {\n            return this;\n        }\n        if (element.constructor == R.st.constructor) {\n            element = element[0];\n        }\n        element.node.parentNode.insertBefore(this.node, element.node);\n        R._insertbefore(this, element, this.paper);\n        return this;\n    };\n    elproto.blur = function (size) {\n        var s = this.node.runtimeStyle,\n            f = s.filter;\n        f = f.replace(blurregexp, E);\n        if (+size !== 0) {\n            this.attrs.blur = size;\n            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\n            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\n        } else {\n            s.filter = f;\n            s.margin = 0;\n            delete this.attrs.blur;\n        }\n        return this;\n    };\n\n    R._engine.path = function (pathString, vml) {\n        var el = createNode(\"shape\");\n        el.style.cssText = cssDot;\n        el.coordsize = zoom + S + zoom;\n        el.coordorigin = vml.coordorigin;\n        var p = new Element(el, vml),\n            attr = {fill: \"none\", stroke: \"#000\"};\n        pathString && (attr.path = pathString);\n        p.type = \"path\";\n        p.path = [];\n        p.Path = E;\n        setFillAndStroke(p, attr);\n        vml.canvas.appendChild(el);\n        var skew = createNode(\"skew\");\n        skew.on = true;\n        el.appendChild(skew);\n        p.skew = skew;\n        p.transform(E);\n        return p;\n    };\n    R._engine.rect = function (vml, x, y, w, h, r) {\n        var path = R._rectPath(x, y, w, h, r),\n            res = vml.path(path),\n            a = res.attrs;\n        res.X = a.x = x;\n        res.Y = a.y = y;\n        res.W = a.width = w;\n        res.H = a.height = h;\n        a.r = r;\n        a.path = path;\n        res.type = \"rect\";\n        return res;\n    };\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\n        var res = vml.path(),\n            a = res.attrs;\n        res.X = x - rx;\n        res.Y = y - ry;\n        res.W = rx * 2;\n        res.H = ry * 2;\n        res.type = \"ellipse\";\n        setFillAndStroke(res, {\n            cx: x,\n            cy: y,\n            rx: rx,\n            ry: ry\n        });\n        return res;\n    };\n    R._engine.circle = function (vml, x, y, r) {\n        var res = vml.path(),\n            a = res.attrs;\n        res.X = x - r;\n        res.Y = y - r;\n        res.W = res.H = r * 2;\n        res.type = \"circle\";\n        setFillAndStroke(res, {\n            cx: x,\n            cy: y,\n            r: r\n        });\n        return res;\n    };\n    R._engine.image = function (vml, src, x, y, w, h) {\n        var path = R._rectPath(x, y, w, h),\n            res = vml.path(path).attr({stroke: \"none\"}),\n            a = res.attrs,\n            node = res.node,\n            fill = node.getElementsByTagName(fillString)[0];\n        a.src = src;\n        res.X = a.x = x;\n        res.Y = a.y = y;\n        res.W = a.width = w;\n        res.H = a.height = h;\n        a.path = path;\n        res.type = \"image\";\n        fill.parentNode == node && node.removeChild(fill);\n        fill.rotate = true;\n        fill.src = src;\n        fill.type = \"tile\";\n        res._.fillpos = [x, y];\n        res._.fillsize = [w, h];\n        node.appendChild(fill);\n        setCoords(res, 1, 1, 0, 0, 0);\n        return res;\n    };\n    R._engine.text = function (vml, x, y, text) {\n        var el = createNode(\"shape\"),\n            path = createNode(\"path\"),\n            o = createNode(\"textpath\");\n        x = x || 0;\n        y = y || 0;\n        text = text || \"\";\n        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\n        path.textpathok = true;\n        o.string = Str(text);\n        o.on = true;\n        el.style.cssText = cssDot;\n        el.coordsize = zoom + S + zoom;\n        el.coordorigin = \"0 0\";\n        var p = new Element(el, vml),\n            attr = {\n                fill: \"#000\",\n                stroke: \"none\",\n                font: R._availableAttrs.font,\n                text: text\n            };\n        p.shape = el;\n        p.path = path;\n        p.textpath = o;\n        p.type = \"text\";\n        p.attrs.text = Str(text);\n        p.attrs.x = x;\n        p.attrs.y = y;\n        p.attrs.w = 1;\n        p.attrs.h = 1;\n        setFillAndStroke(p, attr);\n        el.appendChild(o);\n        el.appendChild(path);\n        vml.canvas.appendChild(el);\n        var skew = createNode(\"skew\");\n        skew.on = true;\n        el.appendChild(skew);\n        p.skew = skew;\n        p.transform(E);\n        return p;\n    };\n    R._engine.setSize = function (width, height) {\n        var cs = this.canvas.style;\n        this.width = width;\n        this.height = height;\n        width == +width && (width += \"px\");\n        height == +height && (height += \"px\");\n        cs.width = width;\n        cs.height = height;\n        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\n        if (this._viewBox) {\n            R._engine.setViewBox.apply(this, this._viewBox);\n        }\n        return this;\n    };\n    R._engine.setViewBox = function (x, y, w, h, fit) {\n        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\n        var width = this.width,\n            height = this.height,\n            size = 1 / mmax(w / width, h / height),\n            H, W;\n        if (fit) {\n            H = height / h;\n            W = width / w;\n            if (w * H < width) {\n                x -= (width - w * H) / 2 / H;\n            }\n            if (h * W < height) {\n                y -= (height - h * W) / 2 / W;\n            }\n        }\n        this._viewBox = [x, y, w, h, !!fit];\n        this._viewBoxShift = {\n            dx: -x,\n            dy: -y,\n            scale: size\n        };\n        this.forEach(function (el) {\n            el.transform(\"...\");\n        });\n        return this;\n    };\n    var createNode;\n    R._engine.initWin = function (win) {\n            var doc = win.document;\n            doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n            try {\n                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\n                createNode = function (tagName) {\n                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n                };\n            } catch (e) {\n                createNode = function (tagName) {\n                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n                };\n            }\n        };\n    R._engine.initWin(R._g.win);\n    R._engine.create = function () {\n        var con = R._getContainer.apply(0, arguments),\n            container = con.container,\n            height = con.height,\n            s,\n            width = con.width,\n            x = con.x,\n            y = con.y;\n        if (!container) {\n            throw new Error(\"VML container not found.\");\n        }\n        var res = new R._Paper,\n            c = res.canvas = R._g.doc.createElement(\"div\"),\n            cs = c.style;\n        x = x || 0;\n        y = y || 0;\n        width = width || 512;\n        height = height || 342;\n        res.width = width;\n        res.height = height;\n        width == +width && (width += \"px\");\n        height == +height && (height += \"px\");\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\n        res.coordorigin = \"0 0\";\n        res.span = R._g.doc.createElement(\"span\");\n        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\n        c.appendChild(res.span);\n        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\n        if (container == 1) {\n            R._g.doc.body.appendChild(c);\n            cs.left = x + \"px\";\n            cs.top = y + \"px\";\n            cs.position = \"absolute\";\n        } else {\n            if (container.firstChild) {\n                container.insertBefore(c, container.firstChild);\n            } else {\n                container.appendChild(c);\n            }\n        }\n        res.renderfix = function () {};\n        return res;\n    };\n    R.prototype.clear = function () {\n        R.eve(\"raphael.clear\", this);\n        this.canvas.innerHTML = E;\n        this.span = R._g.doc.createElement(\"span\");\n        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\n        this.canvas.appendChild(this.span);\n        this.bottom = this.top = null;\n    };\n    R.prototype.remove = function () {\n        R.eve(\"raphael.remove\", this);\n        this.canvas.parentNode.removeChild(this.canvas);\n        for (var i in this) {\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\n        }\n        return true;\n    };\n\n    var setproto = R.st;\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\n        setproto[method] = (function (methodname) {\n            return function () {\n                var arg = arguments;\n                return this.forEach(function (el) {\n                    el[methodname].apply(el, arg);\n                });\n            };\n        })(method);\n    }\n})();\n\n    // EXPOSE\n    // SVG and VML are appended just before the EXPOSE line\n    // Even with AMD, Raphael should be defined globally\n    oldRaphael.was ? (g.win.Raphael = R) : (Raphael = R);\n\n    if(typeof exports == \"object\"){\n        module.exports = R;\n    }\n    return R;\n}));\n\n","/**\n * ORGINAL VERSION:\n * ScaleRaphael 0.8 by Zevan Rosser 2010 \n * For use with Raphael library : www.raphaeljs.com\n * Licensed under the MIT license.\n * www.shapevent.com/scaleraphael/\n * \n * MODIFIED VERSION:\n * @author Bertrand Chevrier <bertrand@taotesting.com> for OAT SA\n * - Code refactoring to fit AMD modules\n */\ndefine('scale.raphael',['jquery', 'raphael'], function($, Raphael){\n    \n  var scaleRaphael = function(container, width, height){\n    var wrapper = container.style ? container : document.getElementById(container);\n    \n   if (!wrapper.style.position){\n         wrapper.style.position = \"relative\";\n    }\n\n    wrapper.style.width = width + \"px\";\n    wrapper.style.height = height + \"px\";\n    //wrapper.style.overflow = \"hidden\";\n    \n    var nestedWrapper;\n      \n    if (Raphael.type === \"VML\"){\n      wrapper.innerHTML = \"<rvml:group style='position : absolute; width: 1000px; height: 1000px; top: 0px; left: 0px' coordsize='1000,1000' class='rvml'><\\/rvml:group>\";\n      nestedWrapper = $(\".rvml\", $(wrapper))[0];\n    }else{\n      wrapper.innerHTML = \"<div class='svggroup'><\\/div>\";\n      nestedWrapper = $(\".svggroup\", $(wrapper))[0];\n    }\n\n    var paper = new Raphael(nestedWrapper, width, height);\n    var vmlDiv;\n    \n    if (Raphael.type === \"SVG\"){\n      paper.canvas.setAttribute(\"viewBox\", \"0 0 \"+width+\" \"+height);\n    }else{\n      vmlDiv = wrapper.getElementsByTagName(\"div\")[0];\n    }\n    \n    paper.changeSize = function(w, h, center, clipping){\n      clipping = !clipping;\n      \n      var ratioW = w / width;\n      var ratioH = h / height;\n      var scale = ratioW < ratioH ? ratioW : ratioH;\n      \n      var newHeight = parseInt(height * scale);\n      var newWidth = parseInt(width * scale);\n      \n      if (Raphael.type === \"VML\"){\n         // scale the textpaths\n       var txt = document.getElementsByTagName(\"textpath\");\n        for (var i in txt){\n          var curr = txt[i];\n          if (curr.style){\n            if(!curr._fontSize){\n              var mod = curr.style.font.split(\"px\");\n              curr._fontSize = parseInt(mod[0]);\n              curr._font = mod[1];\n            }\n            curr.style.font = curr._fontSize * scale + \"px\" + curr._font;\n          }\n        }\n        var newSize; \n        if (newWidth < newHeight){\n         newSize = newWidth * 1000 / width;\n        }else{\n         newSize = newHeight * 1000 / height;\n        }\n        newSize = parseInt(newSize);\n        nestedWrapper.style.width = newSize + \"px\";\n        nestedWrapper.style.height = newSize + \"px\";\n        if (clipping){\n          nestedWrapper.style.left = parseInt((w - newWidth) / 2) + \"px\";\n          nestedWrapper.style.top = parseInt((h - newHeight) / 2) + \"px\";\n        }\n        vmlDiv.style.overflow = \"visible\";\n      }\n      \n      if (clipping){\n        newWidth = w;\n        newHeight = h;\n      }\n      \n      wrapper.style.width = newWidth + \"px\";\n      wrapper.style.height = newHeight + \"px\";\n      paper.setSize(newWidth, newHeight);\n      \n      if (center){\n        wrapper.style.position = \"absolute\";\n        wrapper.style.left = parseInt((w - newWidth) / 2) + \"px\";\n        wrapper.style.top = parseInt((h - newHeight) / 2) + \"px\";\n      }\n    };\n    \n    paper.scaleAll = function(amount){\n      paper.changeSize(width * amount, height * amount);\n    };\n    \n    paper.changeSize(width, height);\n    \n    paper.w = width;\n    paper.h = height;\n    \n    return paper;\n  };\n\n    return scaleRaphael;\n});\n\n","\ndefine(\"json!taoQtiItem/qtiCommonRenderer/renderers/graphic-style.json\", function(){ return {    \n    \"basic\" : {\n        \"stroke\" : \"#8D949E\",\n        \"stroke-width\" : 2,\n        \"stroke-dasharray\": \"\",\n        \"stroke-linejoin\" : \"round\",\n        \"fill\" : \"#cccccc\",\n        \"fill-opacity\" : 0.5,\n        \"cursor\" : \"pointer\"\n    },\n    \"hover\"  : {\n        \"stroke\" : \"#3E7DA7\",\n        \"fill\" :  \"#0E5D91\", \n        \"fill-opacity\" : 0.3\n    },\n    \"selectable\"  : {\n        \"stroke-dasharray\": \"-\",\n        \"stroke\" : \"#3E7DA7\",\n        \"fill\" : \"#cccccc\",\n        \"fill-opacity\" : 0.5\n    },\n    \"active\" : {\n        \"stroke\" : \"#3E7DA7\",\n        \"stroke-dasharray\": \"\",\n        \"fill\" :  \"#0E5D91\",\n        \"fill-opacity\" : 0.5\n    },\n    \"error\" : {\n        \"stroke\" : \"#C74155\",\n        \"stroke-dasharray\": \"\",\n        \"fill-opacity\" : 0.5,\n        \"fill\" :  \"#661728\"  \n    },\n    \"success\" : {\n        \"stroke\" : \"#C74155\",\n        \"stroke-dasharray\": \"\",\n        \"fill\" :  \"#0E914B\",\n        \"fill-opacity\" : 0.5\n    },\n    \"layer\" : {\n        \"fill\" :  \"#ffffff\", \n        \"opacity\" : 0, \n        \"cursor\": \"pointer\"\n    },\n    \"creator\" : {\n        \"fill-opacity\" : 0.5,\n        \"stroke\" : \"#3E7DA7\",\n        \"stroke-dasharray\": \"\",\n        \"fill\" :  \"#0E5D91\", \n        \"cursor\" : \"pointer\"\n    },\n    \"imageset-rect-stroke\" : {\n            \"fill\" : \"#ffffff\",\n            \"stroke\" : \"#666666\",\n            \"stroke-width\" : 1,\n            \"stroke-linejoin\" : \"round\",\n            \"cursor\" : \"pointer\"\n    },\n    \"imageset-rect-no-stroke\" : {\n            \"fill\" : \"#ffffff\",\n            \"stroke\" : \"#ffffff\",\n            \"stroke-width\" : 2,\n            \"stroke-linejoin\" : \"round\",\n            \"cursor\" : \"pointer\"\n    },\n    \"imageset-img\" : {\n        \"cursor\" : \"pointer\"\n    },\n    \"order-text\" : {\n        \"fill\" : \"#ffffff\",\n        \"stroke\": \"#000000\",\n        \"stroke-width\" : 0.7,\n        \"font-family\" : \"sans-serif\",\n        \"font-weight\": \"bold\", \n        \"font-size\" : 22,\n        \"cursor\" : \"pointer\"\n    },\n    \"score-text-default\" : {\n        \"stroke\": \"#444444\",\n        \"stroke-width\" : 0.5,\n        \"font-family\" : \"sans-serif\",\n        \"font-weight\": \"normal\", \n        \"font-size\" : 20,\n        \"cursor\" : \"pointer\"\n    },\n    \"score-text\" : {\n        \"stroke\": \"#000000\",\n        \"stroke-width\" : 0.5,\n        \"font-family\" : \"sans-serif\",\n        \"font-weight\": \"normal\", \n        \"font-size\" : 20,\n        \"cursor\" : \"pointer\"\n    },\n    \"small-text\" : {\n        \"stroke\": \"#000000\",\n        \"stroke-width\" : 0.5,\n        \"font-family\" : \"sans-serif\",\n        \"font-weight\": \"normal\", \n        \"font-size\" : 16,\n        \"cursor\" : \"pointer\"\n    },\n    \"layer-pos-text\" : {\n        \"stroke\": \"#333\",\n        \"stroke-width\" : 0.5,\n        \"font-family\" : \"sans-serif\",\n        \"font-weight\": \"normal\", \n        \"font-size\" : 14\n    },\n    \"target\" : {\n        \"path\" : \"m 18,8.4143672 -1.882582,0 C 15.801891,4.9747852 13.071059,2.2344961 9.63508,1.9026738 L 9.63508,0 8.2305176,0 l 0,1.9026387 C 4.7947148,2.2343027 2.0637246,4.9746621 1.7481973,8.4143672 l -1.7481973,0 0,1.4045625 1.754877,0 c 0.3460429,3.4066753 3.0632871,6.1119843 6.4756406,6.4413813 l 0,1.739689 1.4045624,0 0,-1.739725 c 3.412547,-0.329537 6.129633,-3.034793 6.475641,-6.4413453 l 1.889279,0 z m -8.36492,6.5188648 0,-4.064673 -1.4045624,0 0,4.063882 C 5.5511016,14.612555 3.4232695,12.494619 3.0864551,9.8189297 l 4.0449512,0 0,-1.4045625 -4.0546368,0 C 3.3788672,5.6984941 5.5228887,3.5393379 8.2305176,3.2161113 l 0,3.9153125 1.4045624,0 0,-3.9160859 c 2.711162,0.3203965 4.858576,2.4808887 5.160955,5.1990293 l -3.927441,0 0,1.4045625 3.917773,0 C 14.449289,12.496957 12.318363,14.616158 9.63508,14.933232 z\",\n        \"fill\" : \"#0E914B\",\n        \"width\" : 1,\n        \"stroke-width\" : 0,\n        \"cursor\" : \"pointer\"\n    },\n    \"target-hover\" : {\n        \"fill\" : \"#3E7DA7\", \n        \"fill-opacity\" : 1\n    },\n    \"target-success\" : {\n        \"fill\" : \"#0E914B\", \n        \"fill-opacity\" : 1\n   },\n   \"assoc\" : {\n        \"stroke-width\" : 2, \n        \"stroke-linecap\" : \"round\", \n        \"cursor\" : \"pointer\"\n   },\n   \"assoc-layer\" : {\n        \"stroke-width\" : 12, \n        \"cursor\" : \"pointer\", \n        \"stroke-opacity\" : 0\n   },\n   \"assoc-bullet\" : {\n        \"fill\": \"#000000\"\n   },\n    \"close\" : {\n        \"path\" : \"m 8.9997236,18.000001 c -4.9703918,0 -8.99972284217367,-4.02901 -8.99972284217367,-9 C 7.5782633e-7,4.029011 4.0293108,9.8531742e-7 8.9997236,9.8531742e-7 13.970691,9.8531742e-7 18.000001,4.029011 18.000001,9.000001 c 0,4.97099 -4.02931,9 -9.0002774,9 z m 0.0045,-16.37151 c -4.06191,0 -7.35492,3.29635 -7.35492,7.36251 0,4.06562 3.292989,7.36255 7.35492,7.36255 4.0630384,0 7.3554334,-3.29693 7.3554334,-7.36255 0,-4.06614 -3.292969,-7.36251 -7.3554334,-7.36251 v 0 z m 3.1314894,9.31167 -1.953823,-1.94014 1.953843,-1.94018 c 0.08964,-0.089 0.134622,-0.19099 0.135073,-0.30584 4.31e-4,-0.11488 -0.04383,-0.21712 -0.132838,-0.30681 l -0.54267,-0.54685 c -0.08898,-0.0897 -0.190903,-0.13473 -0.305719,-0.13514 -0.114837,-4.4e-4 -0.217064,0.0439 -0.306703,0.1329 l -1.9623724,1.94865 -1.962395,-1.94865 c -0.08964,-0.089 -0.191845,-0.13336 -0.306702,-0.1329 -0.114837,4.3e-4 -0.216736,0.0455 -0.305719,0.13514 l -0.54265,0.54685 c -0.08902,0.0897 -0.133269,0.19193 -0.132838,0.30681 4.3e-4,0.11485 0.04543,0.21681 0.135073,0.30584 l 1.953823,1.94018 -1.953782,1.94014 c -0.0896,0.089 -0.134684,0.19094 -0.135114,0.3058 -4.31e-4,0.11486 0.04386,0.21716 0.132838,0.30681 l 0.542671,0.54687 c 0.08896,0.0897 0.190923,0.13467 0.305718,0.13516 0.114857,3.9e-4 0.217105,-0.0439 0.306724,-0.13288 l 1.962332,-1.94863 1.9623324,1.94863 c 0.08962,0.089 0.191886,0.13323 0.306744,0.13288 0.114836,-4.5e-4 0.216736,-0.0455 0.305698,-0.13516 l 0.542691,-0.54687 c 0.089,-0.0897 0.133227,-0.19193 0.132838,-0.30681 -3.9e-4,-0.1149 -0.0455,-0.21683 -0.135073,-0.3058 z\",\n        \"fill\" : \"#0E5D91\",\n        \"width\" : 1,\n        \"opacity\" : 0,\n        \"stroke-width\" : 0,\n        \"cursor\" : \"pointer\"\n   },\n   \"close-bg\" : {\n        \"fill\" : \"#ffffff\",\n        \"stroke\" : \"none\",\n        \"cursor\" : \"pointer\",\n        \"opacity\" : 0  \n    },\n    \"touch-circle\" : {\n        \"fill\" : \"none\", \n        \"stroke\" : \"#3E7DA7\",\n        \"stroke-width\" : 2\n    }\n}\n;});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n\ndefine('taoQtiItem/qtiCommonRenderer/helpers/Graphic',[\n    'jquery',\n    'lodash',\n    'raphael',\n    'scale.raphael',\n    'json!taoQtiItem/qtiCommonRenderer/renderers/graphic-style.json'\n], function($, _, raphael, scaleRaphael, gstyle) {\n    'use strict';\n\n\n    //maps the QTI shapes to Raphael shapes\n    var shapeMap = {\n        'default' : 'rect',\n        'poly'    : 'path'\n    };\n\n\n    //length constraints to validate coords\n    var coordsValidator = {\n        'rect'    : 4,\n        'ellipse' : 4,\n        'circle'  : 3,\n        'poly'    : 6,\n        'default' : 0\n    };\n\n\n    //transform the coords from the QTI system to Raphael system\n    var qti2raphCoordsMapper = {\n\n        /**\n         * Rectangle coordinate mapper:  from left-x,top-y,right-x-bottom-y to x,y,w,h\n         * @param {Array} coords - QTI coords\n         * @returns {Array} raphael coords\n         */\n        'rect' : function(coords) {\n            return [\n                coords[0],\n                coords[1],\n                coords[2] - coords[0],\n                coords[3] - coords[1]\n            ];\n        },\n\n\n        /**\n         * Creates the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        'default' : function(paper) {\n            return [ 0, 0, paper.width, paper.height ];\n        },\n\n\n        /**\n         * polygone coordinate mapper:  from x1,y1,...,xn,yn to SVG path format\n         * @param {Array} coords - QTI coords\n         * @returns {Array} path desc\n         */\n        'poly' : function(coords) {\n            var a;\n            var size = coords.length;\n\n            // autoClose if needed\n            if ((coords[0] !== coords[size - 2]) && (coords[1] !== coords[size - 1])) {\n                coords.push(coords[0]);\n                coords.push(coords[1]);\n            }\n\n            // move to first point\n            coords[0] = \"M\" + coords[0];\n\n            for(a = 1; a < size; a++) {\n                if (a % 2 === 0) {\n                    coords[a] = \"L\" + coords[a];\n                }\n            }\n\n            return [coords.join(\" \")];\n        }\n    };\n\n    //transform the coords from a raphael shape to the QTI system\n    var raph2qtiCoordsMapper = {\n\n        /**\n         * Rectangle coordinate mapper: from x,y,w,h to left-x,top-y,right-x-bottom-y\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        'rect' : function(attr) {\n            return [\n                attr.x,\n                attr.y,\n                attr.x + attr.width,\n                attr.y + attr.height\n            ];\n        },\n\n\n        /**\n         * Circle coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        'circle' : function(attr) {\n            return [\n                attr.cx,\n                attr.cy,\n                attr.r\n            ];\n        },\n\n\n        /**\n         * Ellispe coordinate mapper\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        'ellipse' : function(attr) {\n            return [\n                attr.cx,\n                attr.cy,\n                attr.rx,\n                attr.ry\n            ];\n        },\n\n\n        /**\n         * Get the coords for a default shape (a rectangle that covers all the paper)\n         * @param {Object} attr - Raphael Element's attributes\n         * @returns {Array} qti based coords\n         */\n        'default' : function(attr) {\n            return this.rect(attr);\n        },\n\n\n        /**\n         * polygone coordinate mapper:  from SVG path (available as segments) to x1,y1,...,xn,yn format\n         * @param {Raphael.Paper} paper - the paper\n         * @returns {Array} raphael coords\n         */\n        'path' : function(attr) {\n            var poly = [];\n            var i;\n\n            if (_.isArray(attr.path)) {\n                for(i = 1; i < attr.path.length; i++) {\n                    if (attr.path[i].length === 3) {\n                        poly.push(attr.path[i][1]);\n                        poly.push(attr.path[i][2]);\n                    }\n                }\n            }\n\n            return poly;\n        }\n    };\n\n\n    /**\n     * Graphic interaction helper\n     * @exports qtiCommonRenderer/helpers/Graphic\n     */\n    var GraphicHelper = {\n\n        /**\n         * Raw access to the styles\n         * @type {Object}\n         */\n        _style : gstyle,\n\n\n        /**\n         * Apply the style defined by name to the element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         */\n        setStyle : function(element, name) {\n            if (element && gstyle[name]) {\n                element.attr(gstyle[name]);\n            }\n        },\n\n\n        /**\n         * Create a Raphael paper with a bg image, that is width responsive\n         * @param {String} id - the id of the DOM element that will contain the paper\n         * @param {String} serial - the interaction unique indentifier\n         * @param {Object} options - the paper parameters\n         * @param {String} options.img - the url of the background image\n         * @param {jQueryElement} [options.container] - the parent of the paper element (got the closest parent by default)\n         * @param {Number} [options.width] - the paper width\n         * @param {Number} [options.height] - the paper height\n         * @param {String} [options.imgId] - an identifier for the image element\n         * @param {Function} [options.done] - executed once the image is loaded\n         * @returns {Raphael.Paper} the paper\n         */\n        responsivePaper : function(id, serial, options) {\n\n            var paper, image;\n\n            var $container = options.container || $('#' + id).parent();\n            var $editor    = $('.image-editor', $container);\n            var $body      = $container.closest('.qti-itemBody');\n            var resizer    = _.throttle(resizePaper, 10);\n\n            var imgWidth  = options.width  || $container.innerWidth();\n            var imgHeight = options.height || $container.innerHeight();\n\n            paper    = scaleRaphael(id, imgWidth, imgHeight);\n            image    = paper.image(options.img, 0, 0, imgWidth, imgHeight);\n            image.id = options.imgId || image.id;\n            paper.setViewBox(0, 0, imgWidth, imgHeight);\n\n            resizer();\n\n            //retry to resize once the SVG is loaded\n            $(image.node)\n                .attr('externalResourcesRequired', 'true')\n                .on('load', resizer);\n\n            if (raphael.type === 'SVG') {\n                // TODO: move listeners somewhere they can be easily turned off\n                $(window).on('resize.qti-widget.'  + serial, resizer);\n                // TODO: favor window resize event and deprecate $container resive event (or don't allow $container to be destroyed and rebuilt\n                $container.on('resize.qti-widget.' + serial, resizer);\n                $(document).on('customcssloaded.styleeditor', resizer);\n            } else {\n                $container.find('.main-image-box').width(imgWidth);\n                if (typeof options.resize === 'function') {\n                    options.resize(imgWidth, 1);\n                }\n            }\n\n            /**\n             * scale the raphael paper\n             * @private\n             */\n            function resizePaper(e, givenWidth) {\n                var diff, maxWidth, containerWidth, containerHeight, factor;\n\n                if (e) {\n                    e.stopPropagation();\n                }\n\n                diff           = ($editor.outerWidth() - $editor.width()) + ($container.outerWidth() - $container.width()) + 1;\n                maxWidth       = $body.width();\n                containerWidth = $container.innerWidth();\n\n                if (containerWidth > 0 || givenWidth > 0) {\n\n                    if (givenWidth < containerWidth && givenWidth < maxWidth) {\n                        containerWidth = givenWidth - diff;\n                    } else if (containerWidth > maxWidth) {\n                        containerWidth = maxWidth - diff;\n                    } else {\n                        containerWidth -= diff;\n                    }\n\n                    factor          = containerWidth / imgWidth;\n                    containerHeight = imgHeight * factor;\n\n                    if (containerWidth > 0) {\n                        paper.changeSize(containerWidth, containerHeight, false, false);\n                    }\n\n                    if (typeof options.resize === 'function') {\n                        options.resize(containerWidth, factor);\n                    }\n\n                    $container.trigger('resized.qti-widget');\n                }\n            }\n\n            return paper;\n        },\n\n\n        /**\n         * Create a new Element into a raphael paper\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @param {Object} [options] - additional creation options\n         * @param {String} [options.id] - to set the new element id\n         * @param {String} [options.title] - to set the new element title\n         * @param {String} [options.style = basic] - to default style\n         * @param {Boolean} [options.hover = true] - to disable the default hover state\n         * @param {Boolean} [options.touchEffect = true] - a circle appears on touch\n         * @param {Boolean} [options.qtiCoords = true] - if the coords are in QTI format\n         * @returns {Raphael.Element} the created element\n         */\n        createElement : function(paper, type, coords, options) {\n            var self = this;\n            var element;\n            var shaper = shapeMap[type] ? paper[shapeMap[type]] : paper[type];\n            var shapeCoords = options.qtiCoords !== false ? self.raphaelCoords(paper, type, coords) : coords;\n\n            if (typeof shaper === 'function') {\n                element = shaper.apply(paper, shapeCoords);\n                if (element) {\n                    if (options.id) {\n                        element.id = options.id;\n                    }\n\n                    if (options.title) {\n                        element.attr('title', options.title);\n                    }\n\n                    element.attr(gstyle[options.style || 'basic']).toFront();\n\n                    //prevent issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n\n                    if (options.hover !== false) {\n                        element.hover(function() {\n                            if (!element.flashing) {\n                                self.updateElementState(this, 'hover');\n                            }\n                        }, function() {\n                            if (!element.flashing) {\n                                self.updateElementState(this, this.active ? 'active' : this.selectable ? 'selectable' : 'basic');\n                            }\n                        });\n                    }\n\n                    if (options.touchEffect !== false) {\n                        element.touchstart(function() {\n                            self.createTouchCircle(paper, element.getBBox());\n                        });\n                    }\n                }\n\n            } else {\n                throw new Error('Unable to find method ' + type + ' on paper');\n            }\n\n            return element;\n        },\n\n\n        /**\n         * Create target point\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} [options]\n         * @param {Object} [options.id] - and id to identify the target\n         * @param {Object} [options.point] - the point to add to the paper\n         * @param {Number} [options.point.x = 0] - point's x coord\n         * @param {Number} [options.point.y = 0] - point's y coord\n         * @param {Boolean} [options.hover] = true - the target has an hover effect\n         * @param {Function} [options.create] - call once created\n         * @param {Function} [options.remove] - call once removed\n         */\n        createTarget : function createTarget(paper, options) {\n            var baseSize,\n                count,\n                factor,\n                half,\n                hover,\n                layer,\n                point,\n                self,\n                tBBox,\n                targetSize,\n                x,\n                y,\n                target;\n\n            options = options || {};\n\n            self   = this;\n            point  = options.point || {x : 0, y : 0};\n            factor = paper.w !== 0 ? paper.width / paper.w : 1;\n            hover  = typeof options.hover === 'undefined' ? true : !!options.hover;\n\n            baseSize   = 18; // this is the base size of the path element to be placed on svg (i.e. the path element crosshair is created to have a size of 18)\n            half       = baseSize / 2;\n            x          = point.x - half;\n            y          = point.y - half;\n            targetSize = factor !== 0 ? 2 / factor : 2;\n\n            //create the target from a path\n            target = paper\n                .path(gstyle.target.path)\n                .transform('t' + x + ',' + y + 's' + targetSize)\n                .attr(gstyle.target)\n                .attr('title', _('Click again to remove'));\n\n            //generate an id if not set in options\n            if (options.id) {\n                target.id = options.id;\n            } else {\n                count = 0;\n                paper.forEach(function(element) {\n                    if (element.data('target')) {\n                        count++;\n                    }\n                });\n                target.id = 'target-' + count;\n            }\n\n            tBBox = target.getBBox();\n\n            //create an invisible rect over the target to ensure path selection\n            layer = paper\n                .rect(tBBox.x, tBBox.y, tBBox.width, tBBox.height)\n                .attr(gstyle.layer)\n                .click(function() {\n                    var id = target.id;\n                    var p  = this.data('point');\n\n                    if (_.isFunction(options.select)) {\n                        options.select(target, p, this);\n                    }\n\n                    if (_.isFunction(options.remove)) {\n                        this.remove();\n                        target.remove();\n                        options.remove(id, p);\n                    }\n                });\n\n            if (hover) {\n                layer.hover(function() {\n                    if (!target.flashing) {\n                        self.setStyle(target, 'target-hover');\n                    }\n                }, function() {\n                    if (!target.flashing) {\n                        self.setStyle(target, 'target-success');\n                    }\n                });\n            }\n\n            layer.id = 'layer-' + target.id;\n            layer.data('point', point);\n            target.data('target', point);\n\n            if (_.isFunction(options.create)) {\n                options.create(target);\n            }\n\n            return target;\n        },\n\n\n        /**\n         * Get the Raphael coordinate from QTI coordinate\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {String} type - the shape type\n         * @param {String|Array.<Number>} coords - qti coords as a string or an array of number\n         * @returns {Array} the arguments array of coordinate to give to the approriate raphael shapre creator\n         */\n        raphaelCoords :  function raphaelCoords(paper, type, coords) {\n            var shapeCoords;\n\n            if (_.isString(coords)) {\n                coords = _.map(coords.split(','), function(coord) {\n                    return parseInt(coord, 10);\n                });\n            }\n\n            if (!_.isArray(coords) || coords.length < coordsValidator[type]) {\n                throw new Error('Invalid coords ' + JSON.stringify(coords) + '  for type ' + type);\n            }\n\n            switch(type) {\n                case 'rect'    : shapeCoords = qti2raphCoordsMapper.rect(coords); break;\n                case 'default' : shapeCoords = qti2raphCoordsMapper['default'].call(null, paper); break;\n                case 'poly'    : shapeCoords = qti2raphCoordsMapper.poly(coords); break;\n                default        : shapeCoords = coords; break;\n            }\n\n            return shapeCoords;\n        },\n\n\n        /**\n         * Get the QTI coordinates from a Raphael Element\n         * @param {Raphael.Element} element - the shape to get the coords from\n         * @returns {String} the QTI coords\n         */\n        qtiCoords : function qtiCoords(element) {\n            var mapper = raph2qtiCoordsMapper[element.type];\n            var result = '';\n\n            if (_.isFunction(mapper)) {\n                result = _.map(mapper.call(raph2qtiCoordsMapper, element.attr()), function(coord) {\n                    return _.parseInt(coord);\n                }).join(',');\n            }\n\n            return result;\n        },\n\n\n        /**\n         * Create a circle that animate and disapear from a shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} element - used to get the bbox from\n         */\n        createTouchCircle : function(paper, bbox) {\n            var radius  = bbox.width > bbox.height ? bbox.width : bbox.height;\n            var tCircle = paper.circle( (bbox.x + (bbox.width / 2)),  (bbox.y + (bbox.height / 2)), radius);\n\n            tCircle.attr(gstyle['touch-circle']);\n\n            _.defer(function() {\n                tCircle.animate({ 'r' : radius + 5, opacity: 0.7 }, 300, function() {\n                    tCircle.remove();\n                });\n            });\n        },\n\n\n        /**\n         * Create a text, that scales.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - the text options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @returns {Raphael.Element} the created text\n         */\n        createText : function(paper, options) {\n            var fontSize, scaledFontSize, text;\n            var top     = options.top || 0;\n            var left    = options.left || 0;\n            var content = options.content || '';\n            var style   = options.style || 'small-text';\n            var title   = options.title || '';\n            var factor  = 1;\n\n            if (paper.width && paper.w) {\n                factor = paper.width / paper.w;\n            }\n\n            text = paper.text(left , top, content).toFront();\n            if (options.id) {\n                text.id = options.id;\n            }\n\n            if (options.hide) {\n                text.hide();\n            }\n\n            text.attr(gstyle[style]);\n\n            if (typeof factor !== 'undefined' && factor !== 1) {\n                fontSize = parseInt(text.attr('font-size'), 10);\n                scaledFontSize   = Math.floor(fontSize / factor) + 1;\n\n                text.attr('font-size', scaledFontSize);\n            }\n\n            if (title) {\n                this.updateTitle(text, title);\n            }\n\n            return text;\n        },\n\n\n        /**\n         * Create a text in the middle of the related shape.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Raphael.Element} shape - the shape to add the text to\n         * @param {Object} options - the text options\n         * @param {String} [options.content] - the text content\n         * @param {String} [options.id] - the element identifier\n         * @param {String} [options.style = 'small-text'] - the style name according to the graphic-style.json keys\n         * @param {String} [options.title] - the text tooltip content\n         * @param {Boolean} [options.hide = false] - if the text starts hidden\n         * @param {Boolean} [options.shapeClick = false] - clicking the text delegates to the shape\n         * @returns {Raphael.Element} the created text\n         */\n        createShapeText : function(paper, shape, options) {\n            var self = this;\n            var bbox = shape.getBBox();\n\n            var text = this.createText(paper, _.merge({\n                left : bbox.x + (bbox.width / 2),\n                top  : bbox.y + (bbox.height / 2)\n            }, options));\n\n            if (options.shapeClick) {\n                text.click(function() {\n                    self.trigger(shape, 'click');\n                });\n            }\n\n            return text;\n        },\n\n\n        /**\n         * Create an image with a padding and a border, using a set.\n         *\n         * @param {Raphael.Paper} paper - the paper\n         * @param {Object} options - image options\n         * @param {Number} options.left - x coord\n         * @param {Number} options.top - y coord\n         * @param {Number} options.width - image width\n         * @param {Number} options.height - image height\n         * @param {Number} options.url - image ulr\n         * @param {Number} [options.padding = 6] - a multiple of 2 is welcomed\n         * @param {Boolean} [options.border = false] - add a border around the image\n         * @param {Boolean} [options.shadow = false] - add a shadow back the image\n         * @returns {Raphael.Element} the created set, augmented of a move(x,y) method\n         */\n        createBorderedImage : function(paper, options) {\n            var padding = options.padding >= 0 ? options.padding : 6;\n            var halfPad = padding / 2;\n\n            var rx = options.left,\n                ry = options.top,\n                rw = options.width + padding,\n                rh = options.height + padding;\n\n            var ix = options.left + halfPad,\n                iy = options.top + halfPad,\n                iw = options.width,\n                ih = options.height;\n\n            var set = paper.set();\n\n            //create a rectangle with a padding and a border.\n            var rect = paper\n                .rect(rx, ry, rw, rh)\n                .attr(options.border ? gstyle['imageset-rect-stroke'] : gstyle['imageset-rect-no-stroke']);\n\n            //and an image centered into the rectangle.\n            var image = paper\n                .image(options.url, ix, iy, iw, ih)\n                .attr(gstyle['imageset-img']);\n\n            if (options.shadow) {\n                set.push(rect.glow({\n                    width   : 2,\n                    offsetx : 1,\n                    offsety : 1\n                }));\n            }\n\n            set.push(rect, image);\n\n            /**\n             * Add a move method to set that keep the given coords during an animation\n             * @private\n             * @param {Number} x - destination\n             * @param {Number} y - destination\n             * @param {Number} [duration = 400] - the animation duration\n             * @returns {Raphael.Element} the set for chaining\n             */\n            set.move = function move(x, y, duration) {\n                var animation = raphael.animation({x: x, y : y}, duration || 400);\n                var elt = rect.animate(animation);\n                image.animateWith(elt, animation, {x : x + halfPad, y : y + halfPad}, duration || 400);\n                return set;\n            };\n\n            return set;\n        },\n\n\n        /**\n         * Update the visual state of an Element\n         * @param {Raphael.Element} element - the element to change the state\n         * @param {String} state - the name of the state (from states) to switch to\n         * @param {String} [title] - a title linked to this step\n         */\n        updateElementState : function(element, state, title) {\n            if (element && element.animate) {\n                element.animate(gstyle[state], 200, 'linear', function() {\n                    element.attr(gstyle[state]); //for attr that don't animate\n\n                    //preven issue in firefox 37\n                    $(element.node).removeAttr('stroke-dasharray');\n                });\n\n                if (title) {\n                    this.updateTitle(element, title);\n                }\n            }\n        },\n\n\n        /**\n         * Update the title of an element (the attr method of Raphael adds only new node instead of updating exisitings).\n         * @param {Raphael.Element} element - the element to update the title\n         * @param {String} [title] - the new title\n         */\n        updateTitle : function(element, title) {\n            if (element && element.node) {\n                //removes all remaining titles nodes\n                _.forEach(element.node.children, function(child) {\n                    if (child.nodeName.toLowerCase() === 'title') {\n                        element.node.removeChild(child);\n                    }\n                });\n\n                //then set the new title\n                element.attr('title', title);\n            }\n        },\n\n\n        /**\n         * Highlight an element with the error style\n         * @param {Raphael.Element} element - the element to hightlight\n         * @param {String} [restorState = 'basic'] - the state to restore the elt into after flash\n         */\n        highlightError : function(element, restoredState) {\n            var self = this;\n            if (element) {\n                element.flashing = true;\n                self.updateElementState(element, 'error');\n                _.delay(function() {\n                    self.updateElementState(element, restoredState || 'basic');\n                    element.flashing = false;\n                }, 800);\n            }\n        },\n\n\n        /**\n         * Trigger an event already bound to a raphael element\n         * @param {Raphael.Element} element\n         * @param {String} event - the event name\n         *\n         */\n        trigger : function(element, event) {\n            var evt = _.where(element.events, { name : event});\n            if (evt.length && evt[0] && typeof evt[0].f === 'function') {\n                evt[0].f.apply(element, Array.prototype.slice.call(arguments, 2));\n            }\n        },\n\n\n        /**\n         * Get an x/y point from a MouseEvent\n         * @param {MouseEvent} event - the source event\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @param {jQueryElement} $container - the paper container\n         * @param {Boolean} isResponsive - if the paper is scaling\n         * @returns {Object} x,y point\n         */\n        getPoint : function getPoint(event, paper, $container) {\n            var point  = this.clickPoint($container, event);\n            var rect   = $container.get(0).getBoundingClientRect();\n            var factor = paper.w / rect.width;\n\n            point.x = Math.round(point.x * factor);\n            point.y = Math.round(point.y * factor);\n\n            return point;\n        },\n\n\n        /**\n         * Get paper position relative to the container\n         * @param {jQueryElement} $container - the paper container\n         * @param {Raphael.Paper} paper - the interaction paper\n         * @returns {Object} position with top and left\n         */\n        position : function($container, paper) {\n            var pw = parseInt(paper.w || paper.width, 10);\n            var cw = parseInt($container.width(), 10);\n            var ph = parseInt(paper.w || paper.width, 10);\n            var ch = parseInt($container.height(), 10);\n\n            return {\n                left : ((cw - pw) / 2),\n                top : ((ch - ph) / 2)\n            };\n        },\n\n\n        /**\n         * Get a point from a click event\n         * @param {jQueryElement} $container - the element that contains the paper\n         * @param {MouseEvent} event - the event triggered by the click\n         * @returns {Object} the x,y point\n         */\n        clickPoint : function($container, event) {\n            var x, y;\n            var offset = $container.offset();\n\n            if (event.pageX || event.pageY) {\n                x = event.pageX - offset.left;\n                y = event.pageY - offset.top;\n            } else if (event.clientX || event.clientY) {\n                x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft - offset.left;\n                y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop - offset.top;\n            }\n\n            return { x : x, y : y };\n        }\n    };\n\n    return GraphicHelper;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/graphicAssociateInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/Graphic',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'\n], function($, _, __, Promise, tpl, graphic,  pciResponse, containerHelper, instructionMgr){\n    'use strict';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction){\n        var self = this;\n\n        return new Promise(function(resolve, reject){\n\n            var $container = containerHelper.get(interaction);\n            var background = interaction.object.attributes;\n            var $imageBox  = $('.main-image-box', $container);\n            interaction._vsets = [];\n\n            $container\n                .off('resized.qti-widget.resolve')\n                .one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper( 'graphic-paper-' + interaction.serial, interaction.serial, {\n                width       : background.width,\n                height      : background.height,\n                img         : self.resolveUrl(background.data),\n                imgId       : 'bg-image-' + interaction.serial,\n                container   : $container\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //make the paper clear the selection by clicking it\n            _paperUnSelect(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minAssociations'),\n                max: interaction.attr('maxAssociations'),\n                getResponse : _getRawResponse,\n                onError : function(data){\n                    if(data && data.target){\n                        graphic.highlightError(data.target);\n                    }\n                }\n            });\n        });\n    };\n\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice  =  function _renderChoice(interaction, choice){\n        var shape = choice.attr('shape');\n        var coords = choice.attr('coords');\n        var maxAssociations = interaction.attr('maxAssociations');\n\n        var rElement = graphic.createElement(interaction.paper, shape, coords, {\n            id : choice.serial,\n            title : __('Select this area to start an association')\n        })\n        .data('max', choice.attr('matchMax'))\n        .data('matching', 0)\n        .removeData('assocs')\n        .click(function(){\n            var self = this;\n            var active, assocs;\n\n            //can't create more associations than the maxAssociations attr\n            if(maxAssociations > 0 && _getRawResponse(interaction).length >= maxAssociations){\n                _shapesUnSelectable(interaction);\n                instructionMgr.validateInstructions(interaction, { choice : choice, target : this });\n                return;\n            }\n\n            if(this.selectable) {\n                active = _getActiveElement(interaction);\n                if(active){\n\n                    //increment the matching counter\n                    active.data('matching', active.data('matching') + 1);\n                    this.data('matching', this.data('matching') + 1);\n\n                    //attach the response to the active (not the dest)\n                    assocs = active.data('assocs') || [];\n                    assocs.push(choice.id());\n                    active.data('assocs', assocs);\n\n                    //and create the path\n                    _createPath(interaction, active, this, function onRemove(){\n\n                        //decrement the matching counter\n                        active.data('matching', active.data('matching') - 1);\n                        self.data('matching', self.data('matching') - 1);\n\n                        //detach the response from the active\n                        active.data('assocs', _.remove(active.data('assocs') || [], choice.id()));\n\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                        instructionMgr.validateInstructions(interaction, { choice : choice, target : self });\n                    });\n                }\n                _shapesUnSelectable(interaction);\n\n            } else if(this.active) {\n                graphic.updateElementState(this, 'basic', __('Select another area to complete the association'));\n                this.active = false;\n                _shapesUnSelectable(interaction);\n            } else if(_isMatchable(this)){\n                graphic.updateElementState(this, 'active', __('Select this area to start an association'));\n                this.active = true;\n                _shapesSelectable(interaction, this);\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction, { choice : choice, target : this });\n        });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    var _paperUnSelect = function _paperUnSelect(interaction){\n        var $container = containerHelper.get(interaction);\n        var image = interaction.paper.getById('bg-image-' + interaction.serial);\n        if(image){\n            image.click(function(){\n                _shapesUnSelectable(interaction);\n                $container.trigger('unselect.graphicassociate');\n            });\n        }\n    };\n\n    /**\n     * Get the element that has the active state\n     * @private\n     * @param {Object} interaction\n     * @returns {Raphael.Element} the active element\n     */\n    var _getActiveElement = function _getActiveElement(interaction){\n        var active;\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(element && element.active === true){\n                active = element;\n                return false;\n            }\n        });\n        return active;\n    };\n\n    /**\n     * Create a path from a src element to a destination.\n     * The path is selectable and can be removed by itself\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} srcElement - the path starts from this shape\n     * @param {Raphael.Element} destElement - the path ends to this shape\n     * @param {Function} onRemove - called back on path remove\n     */\n    var _createPath = function _createPath(interaction, srcElement, destElement, onRemove){\n        var $container = containerHelper.get(interaction);\n\n        //virtual set, not a raphael one, just to group the elements\n        var vset = [];\n\n        //get the middle point of the source shape\n        var src = srcElement.getBBox();\n        var sx = src.x + (src.width / 2);\n        var sy = src.y + (src.height / 2);\n\n        //get the middle point of the source shape\n        var dest = destElement.getBBox();\n        var dx = dest.x + (dest.width / 2);\n        var dy = dest.y + (dest.height / 2);\n\n        //create a path with bullets at the beginning and the end\n        var srcBullet = interaction.paper.circle(sx, sy, 3)\n            .attr(graphic._style['assoc-bullet']);\n\n        var destBullet = interaction.paper.circle(dx, dy, 3)\n            .attr(graphic._style['assoc-bullet']);\n\n        var path = interaction.paper.path('M' + sx + ',' + sy + 'L' + sx + ',' + sy)\n            .attr(graphic._style.assoc)\n            .animate({path : 'M' + sx + ',' + sy + 'L' + dx + ',' + dy}, 300);\n\n        //create an overall layer that make easier the path selection\n        var layer = interaction.paper.path('M' + sx + ',' + sy + 'L' + dx + ',' + dy)\n            .attr(graphic._style['assoc-layer']);\n\n        //get the middle of the path\n        var midPath = layer.getPointAtLength(layer.getTotalLength() / 2);\n\n        //create an hidden background for the closer\n        var closerBg = interaction.paper.circle(midPath.x, midPath.y, 9)\n            .attr(graphic._style['close-bg'])\n            .toBack();\n\n        //create an hidden closer\n        var closer = interaction.paper.path(graphic._style.close.path)\n            .attr(graphic._style.close)\n            .transform('T' + (midPath.x - 9 ) + ',' + (midPath.y - 9))\n            .attr('title', _('Click again to remove'))\n            .toBack();\n\n        //the path is below the shapes\n        srcElement.toFront();\n        destElement.toFront();\n\n        //add the path into a set\n        vset = [srcBullet, path, destBullet, layer, closerBg, closer];\n        interaction._vsets.push(vset);\n\n        //to identify the element of the set outside the context\n        _.invoke(vset, 'data', 'assoc-path', true);\n\n        //enable to select the path by clicking the invisible layer\n        layer.click(function selectLigne (){\n            if(closer.attrs.opacity === 0){\n                showCloser();\n            } else {\n                hideCloser();\n            }\n        });\n\n        $container.on('unselect.graphicassociate', function(){\n            hideCloser();\n        });\n\n        function showCloser(){\n            closerBg\n                .toFront()\n                .animate({opacity: 0.8}, 300)\n                .click(removeSet);\n            closer\n                .toFront()\n                .animate({opacity: 1}, 300)\n                .click(removeSet);\n        }\n\n        function hideCloser(){\n           if(closerBg && closerBg.type){\n                closerBg\n                    .animate({opacity: 0}, 300, function(){\n                        closerBg.toBack();\n                    })\n                    .unclick();\n                closer\n                    .animate({opacity: 0}, 300, function(){\n                        closer.toBack();\n                    })\n                    .unclick();\n            }\n        }\n\n        //remove set handler\n        function removeSet(){\n            _.invoke(vset, 'remove');\n            interaction._vsets = _.without(interaction._vsets, vset);\n            if(typeof onRemove === 'function'){\n                onRemove();\n            }\n        }\n    };\n\n    /**\n     * Makes the shapes selectable\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} active - the active shape\n     */\n    var _shapesSelectable = function _shapesSelectable(interaction, active){\n\n        var assocs = active.data('assocs') || [];\n\n        //update the shape state\n        _.forEach(interaction.getChoices(), function(choice){\n            var element;\n            if(!_.contains(assocs, choice.id())){\n                element = interaction.paper.getById(choice.serial);\n                if(!element.active && element.id !== active.id &&  _isMatchable(element, active)){\n                    element.selectable = true;\n                    graphic.updateElementState(element, 'selectable');\n                }\n            }\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    var _shapesUnSelectable = function _shapesUnSelectable(interaction){\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(element){\n                element.selectable = false;\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n    };\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    var _isMatchable = function(element){\n        var matchable = false;\n        var matching, matchMax;\n        if(element){\n            matchMax = element.data('max') || 0;\n            matching = element.data('matching') || 0;\n            matchable = (matchMax === 0 || matchMax > matching);\n        }\n        return matchable;\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    var _getRawResponse = function _getRawResponse(interaction){\n        var responses = [];\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            var assocs = element.data('assocs');\n            if(element && assocs){\n               responses = responses.concat(_.map(assocs, function(id){\n                    return [choice.id(), id];\n               }));\n            }\n        });\n        return responses;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n\n        var responseValues;\n        if(response && interaction.paper){\n\n            try{\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch(e){}\n\n            if(_.isArray(responseValues)){\n                //create an object with choiceId => shapeElement\n                var map =  _.transform(interaction.getChoices(), function(res, choice){\n                    res[choice.id()] = interaction.paper.getById(choice.serial);\n                });\n               _.forEach(responseValues, function(responseValue){\n                    var el1, el2;\n                    if(_.isArray(responseValue) && responseValue.length === 2){\n                        el1 = map[responseValue[0]];\n                        el2 = map[responseValue[1]];\n                        if(el1 && el2){\n                           graphic.trigger(el1, 'click');\n                           graphic.trigger(el2, 'click');\n                        }\n                    }\n               });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var resetResponse = function resetResponse(interaction){\n        var toRemove = [];\n\n        //reset response and state bound to shapes\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(element){\n                element.data({\n                    'max' : choice.attr('matchMax'),\n                    'matching' : 0,\n                    'assocs' : []\n                });\n            }\n        });\n\n        //remove the paths, but outside the forEach as it is implemented as a linked list\n        interaction.paper.forEach(function(elt){\n            if(elt.data('assoc-path')){\n                toRemove.push(elt);\n            }\n        });\n        _.invoke(toRemove, 'remove');\n    };\n\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        var raw = _getRawResponse(interaction);\n        var response =  pciResponse.serialize(_getRawResponse(interaction), interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction){\n        var $container;\n        if(interaction.paper){\n            $container = containerHelper.get(interaction);\n\n            $(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $container.off('.graphicassociate');\n\n            $('.main-image-box', $container).empty().removeAttr('style');\n            $('.image-editor', $container).removeAttr('style');\n            $('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction\n     */\n    return {\n        qtiClass : 'graphicAssociateInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/graphicGapMatchInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program7(depth0,data) {\n  \n  var stack1;\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicGapMatchInteraction clearfix\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal source\\\">\\n            \";\n  options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}\n  if (helper = helpers.gapImgs) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.gapImgs); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.gapImgs) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'core/promise',\n    'core/mouseEvent',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/graphicGapMatchInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/Graphic',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'interact',\n    'ui/interactUtils'\n], function($, _, __, module, Promise, triggerMouseEvent, tpl, graphic,  pciResponse, containerHelper, instructionMgr, interact, interactUtils){\n    'use strict';\n\n    var isDragAndDropEnabled;\n\n    // this represents the state for the active droppable zone\n    // we need it only to access the active dropzone in the iFrameFix\n    // should be removed when the old test runner is discarded\n    var activeDrop = null;\n\n    /**\n     * Global variable to count number of choice usages:\n     * @type {object}\n     */\n    var _choiceUsages = {};\n\n    /**\n     * This options enables to support old items created with the wrong\n     * direction in the directedpairs.\n     *\n     * @deprecated\n     */\n    var isDirectedPairFlipped = module.config().flipDirectedPair;\n\n    /**\n     * Check if a shape can accept matches\n     * @private\n     * @param {Raphael.Element} element - the shape\n     * @returns {Boolean} true if the element is matchable\n     */\n    var _isMatchable = function(element){\n        var matchable = false;\n        var matching, matchMax;\n        if(element){\n            matchMax = element.data('max') || 0;\n            matching = element.data('matching') || [];\n            matchable = (matchMax === 0 || matchMax > matching.length);\n        }\n        return matchable;\n    };\n\n    /**\n     * Makes the shapes selectable (at least those who can still accept matches)\n     * @private\n     * @param {Object} interaction\n     */\n    var _shapesSelectable = function _shapesSelectable(interaction){\n\n        var tooltip = __('Select the area to add an image');\n\n        //update the shape state\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(_isMatchable(element)){\n                element.selectable = true;\n                graphic.setStyle(element, 'selectable');\n                graphic.updateTitle(element, tooltip);\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function(gapFiller){\n            gapFiller.forEach(function(element){\n                graphic.updateTitle(element, tooltip);\n            });\n        });\n    };\n\n    /**\n     * Makes all the shapes UNselectable\n     * @private\n     * @param {Object} interaction\n     */\n    var _shapesUnSelectable = function _shapesUnSelectable(interaction){\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(element){\n                element.selectable = false;\n                graphic.setStyle(element, 'basic');\n                graphic.updateTitle(element, __('Select an image first'));\n            }\n        });\n\n        //update the gap images tooltip\n        _.forEach(interaction.gapFillers, function(gapFiller){\n            gapFiller.forEach(function(element){\n                graphic.updateTitle(element, __('Remove'));\n            });\n        });\n    };\n\n    /**\n     * By clicking the paper image the shapes are restored to their default state\n     * @private\n     * @param {Object} interaction\n     */\n    var _paperUnSelect = function _paperUnSelect(interaction){\n        var $container = containerHelper.get(interaction);\n        var $gapImages = $('ul > li', $container);\n        var bgImage = interaction.paper.getById('bg-image-' + interaction.serial);\n        if(bgImage){\n            interact(bgImage.node).on('tap', function() {\n                _shapesUnSelectable(interaction);\n                $gapImages.removeClass('active');\n            });\n        }\n    };\n\n    /**\n     * Sets a choice and marks as disabled if at max\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    var _setChoice = function _setChoice(interaction, $choice) {\n        var choiceSerial = $choice.data('serial');\n        var choice = interaction.getGapImg(choiceSerial);\n        var matchMax;\n        var usages;\n\n        if (!_choiceUsages[choiceSerial]) {\n            _choiceUsages[choiceSerial] = 0;\n        }\n\n        _choiceUsages[choiceSerial]++;\n\n        // disable choice if maxium usage reached\n        if (!interaction.responseMappingMode && choice.attr('matchMax')) {\n            matchMax = +choice.attr('matchMax');\n            usages = +_choiceUsages[choiceSerial];\n\n            // note: if matchMax is 0, then test taker is allowed unlimited usage of that choice\n            if (matchMax !== 0 && matchMax <= usages) {\n                interact($choice.get(0)).draggable(false);\n                $choice.addClass('disabled');\n                $choice.removeClass('selectable');\n            }\n        }\n    };\n\n    /**\n     * Unset a choice and unmark as disabled\n     * @private\n     * @param {Object} interaction\n     * @param {JQuery Element} $choice\n     */\n    var _unsetChoice = function _unsetChoice(interaction, $choice) {\n        var choiceSerial = $choice.data('serial');\n\n        _choiceUsages[choiceSerial]--;\n\n        $choice.removeClass('disabled');\n        $choice.addClass('selectable');\n        interact($choice.get(0)).draggable(true);\n    };\n\n    /**\n     * Select a shape (= hotspot) (a gap image must be active)\n     * @private\n     * @param {Object} interaction\n     * @param {Raphael.Element} element - the selected shape\n     * @param {Boolean} [trackResponse = true] - if the selection trigger a response chane\n     */\n    var _selectShape = function _selectShape(interaction, element, trackResponse){\n        var $img,\n            $clone,\n            gapFiller,\n            id,\n            bbox,\n            shapeOffset,\n            activeOffset,\n            matching,\n            currentCount;\n\n        //lookup for the active element\n        var $container = containerHelper.get(interaction);\n        var $gapList = $('ul', $container);\n        var $active = $gapList.find('.active:first');\n        var $imageBox = $('.main-image-box', $container);\n        var boxOffset   = $imageBox.offset();\n\n        if(typeof trackResponse === 'undefined'){\n            trackResponse = true;\n        }\n\n        if($active.length){\n\n            //the macthing elements are linked to the shape\n            id = $active.data('identifier');\n            matching = element.data('matching') || [];\n            matching.push(id);\n            element.data('matching', matching);\n            currentCount = matching.length;\n\n            //the image to clone\n            $img = $active.find('img');\n\n            //then reset the state of the shapes and the gap images\n            _shapesUnSelectable(interaction);\n            $gapList.children().removeClass('active');\n\n            _setChoice(interaction, $active);\n\n            $clone = $img.clone();\n            shapeOffset  = $(element.node).offset();\n            activeOffset   = $active.offset();\n\n            $clone.css({\n                'position' : 'absolute',\n                'display'  : 'block',\n                'z-index'  : 10000,\n                'opacity'  : 0.8,\n                'top'      : activeOffset.top - boxOffset.top,\n                'left'     : activeOffset.left - boxOffset.left\n            });\n\n            $clone.appendTo($imageBox);\n            $clone.animate({\n                'top'       : shapeOffset.top - boxOffset.top,\n                'left'      : shapeOffset.left - boxOffset.left\n            }, 200, function animationEnd(){\n                var gapFillerImage;\n\n                $clone.remove();\n\n                //extract some coords for positioning\n                bbox = element.getBBox();\n\n                //create an image into the paper and move it to the selected shape\n                gapFiller = graphic.createBorderedImage(interaction.paper, {\n                    url     :  $img.attr('src'),\n                    left    : bbox.x + (8 * (currentCount - 1)),\n                    top     : bbox.y + (8 * (currentCount - 1)),\n                    width   : parseInt($img.attr('width'), 10),\n                    height  : parseInt($img.attr('height'), 10),\n                    padding : 0,\n                    border  : false,\n                    shadow  : true\n                })\n                .data('identifier', id)\n                .toFront();\n\n                gapFillerImage = gapFiller[2].node;\n                interact(gapFillerImage).on('tap', function (e) {\n                    var target = e.currentTarget;\n                    var rElement = interaction.paper.getById(target.raphaelid);\n\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    // adding a new gapfiller on the hotspot by simulating a click on the underlying shape...\n                    if($gapList.find('.active').length > 0){\n                        interactUtils.tapOn(element.node);\n\n                    // ... or removing the existing gapfiller\n                    } else {\n                        //update the element matching array\n                        element.data('matching', _.without(element.data('matching') || [], rElement.data('identifier')));\n\n                        //delete interaction.gapFillers[interaction.gapFillers.indexOf(gapFiller)];\n                        interaction.gapFillers = _.without(interaction.gapFillers, gapFiller);\n\n                        gapFiller.remove();\n\n                        _unsetChoice(interaction, $active);\n\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                    }\n                });\n\n                interaction.gapFillers.push(gapFiller);\n\n                containerHelper.triggerResponseChangeEvent(interaction);\n            });\n        }\n    };\n\n    /**\n     * Render a choice (= hotspot) inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     *\n     * @private\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice  =  function _renderChoice(interaction, choice){\n\n        //create the shape\n        var rElement = graphic.createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n            id : choice.serial,\n            title : __('Select an image first'),\n            hover : false\n        })\n        .data('max', choice.attr('matchMax') )\n        .data('matching', []);\n\n        interact(rElement.node).on('tap', function onClickShape(){\n            handleShapeSelect();\n        });\n\n        if (isDragAndDropEnabled) {\n            interact(rElement.node).dropzone({\n                overlap: 0.15,\n                ondragenter: function() {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'hover');\n                        activeDrop = rElement.node;\n                    }\n                },\n                ondrop: function () {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        handleShapeSelect();\n                        activeDrop = null;\n                    }\n                },\n                ondragleave: function() {\n                    if (_isMatchable(rElement)) {\n                        graphic.setStyle(rElement, 'selectable');\n                        activeDrop = null;\n                    }\n                }\n            });\n        }\n\n        function handleShapeSelect() {\n            // check if can make the shape selectable on click\n            if(_isMatchable(rElement) && rElement.selectable === true){\n                _selectShape(interaction, rElement);\n            }\n        }\n    };\n\n    var _iFrameDragFix = function _iFrameDragFix(draggableSelector, target) {\n        interactUtils.iFrameDragFixOn(function () {\n            if (activeDrop) {\n                interact(activeDrop).fire({\n                    type: 'drop',\n                    target: activeDrop,\n                    relatedTarget: target\n                });\n            }\n            interact(draggableSelector).fire({\n                type: 'dragend',\n                target: target\n            });\n        });\n    };\n\n    /**\n     * Render the list of gap fillers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $gapList - the list than contains the orderers\n     */\n    var _renderGapList = function _renderGapList(interaction, $gapList){\n\n        var gapFillersSelector = $gapList.selector + ' li';\n        var dragOptions;\n\n        interact(gapFillersSelector).on('tap', function onClickGapImg(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            toggleActiveGapState($(e.currentTarget));\n        });\n\n        if (isDragAndDropEnabled) {\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: \".qti-interaction\",\n                    endOnly: false,\n                    elementRect: {top: 0, left: 0, bottom: 1, right: 1}\n                }\n            };\n\n            $(gapFillersSelector).each(function(index, gap) {\n                interact(gap)\n                .draggable(_.assign({}, dragOptions, {\n                    onstart: function (e) {\n                        var $target = $(e.target);\n                        _setActiveGapState($target);\n                        $target.addClass('dragged');\n\n                        _iFrameDragFix(gapFillersSelector, e.target);\n                    },\n                    onmove: function (e) {\n                        interactUtils.moveElement(e.target, e.dx, e.dy);\n                    },\n                    onend: function (e) {\n                        var $target = $(e.target);\n                        _setInactiveGapState($target);\n                        $target.removeClass('dragged');\n                        interactUtils.restoreOriginalPosition($target);\n                        interactUtils.iFrameDragFixOff();\n                    }\n                }))\n                .styleCursor(false);\n            });\n        }\n\n        function toggleActiveGapState($target) {\n            if(!$target.hasClass('disabled')){\n                if($target.hasClass('active')){\n                    _setInactiveGapState($target);\n                } else {\n                    _setActiveGapState($target);\n                }\n            }\n        }\n\n        function _setActiveGapState($target) {\n            $gapList.children('li').removeClass('active');\n            $target.addClass('active');\n            _shapesSelectable(interaction);\n        }\n\n        function _setInactiveGapState($target) {\n            $target.removeClass('active');\n            _shapesUnSelectable(interaction);\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @return {Promise}\n     */\n    var render = function render(interaction){\n        var self = this;\n\n        return new Promise(function(resolve){\n\n            var $container = containerHelper.get(interaction);\n            var $gapList = $('ul.source', $container);\n            var background = interaction.object.attributes;\n\n            interaction.gapFillers = [];\n\n            if (self.getOption && self.getOption(\"enableDragAndDrop\") && self.getOption(\"enableDragAndDrop\").graphicGapMatch) {\n                isDragAndDropEnabled = self.getOption(\"enableDragAndDrop\").graphicGapMatch;\n            }\n\n            $container\n                .off('resized.qti-widget.resolve')\n                .one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper( 'graphic-paper-' + interaction.serial, interaction.serial, {\n                width       : background.width,\n                height      : background.height,\n                img         : self.resolveUrl(background.data),\n                imgId       : 'bg-image-' + interaction.serial,\n                container   : $container,\n                resize      : function(newSize, factor){\n                    $gapList.css('max-width', newSize + 'px');\n                    if(factor !== 1){\n                        $gapList.find('img').each(function(){\n                            var $img = $(this);\n                            $img.width( $img.attr('width') * factor );\n                            $img.height( $img.attr('height') * factor );\n                        });\n                    }\n                }\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //create the list of gap images\n            _renderGapList(interaction, $gapList);\n\n            //clicking the paper to reset selection\n            _paperUnSelect(interaction);\n\n        });\n    };\n\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of matches\n     */\n    var _getRawResponse = function _getRawResponse(interaction){\n        var pairs = [];\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(element && _.isArray(element.data('matching'))){\n                _.forEach(element.data('matching'), function(match){\n\n                    //backward support of previous order\n                    if(isDirectedPairFlipped){\n                        pairs.push([choice.id(), match]);\n                    } else {\n                        pairs.push([match, choice.id()]);\n                    }\n                });\n            }\n        });\n        return pairs;\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n        var $container = containerHelper.get(interaction);\n        var responseValues;\n        if(response && interaction.paper){\n            try{\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch(e){\n                responseValues = null;\n            }\n\n            if(_.isArray(responseValues)){\n                _.forEach(interaction.getChoices(), function(choice){\n                    var element = interaction.paper.getById(choice.serial);\n                    if(element){\n                        _.forEach(responseValues, function(pair){\n                            var responseChoice;\n                            var responseGap;\n                            if(pair.length === 2){\n\n                                //backward support of previous order\n                                responseChoice = isDirectedPairFlipped ? pair[0] : pair[1];\n                                responseGap    = isDirectedPairFlipped ? pair[1] : pair[0];\n                                if(responseChoice === choice.id()){\n                                    $(\"[data-identifier=\" + responseGap + \"]\", $container).addClass('active');\n                                    _selectShape(interaction, element, false);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     */\n    var resetResponse = function resetResponse(interaction){\n        _shapesUnSelectable(interaction);\n\n        _.forEach(interaction.gapFillers, function(gapFiller){\n            interactUtils.tapOn(gapFiller.items[2][0]); // this refers to the gapFiller image\n        });\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        var raw = _getRawResponse(interaction);\n        return pciResponse.serialize(raw, interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction){\n        var $container;\n        if(interaction.paper){\n            $container = containerHelper.get(interaction);\n\n            $(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $('.main-image-box', $container).empty().removeAttr('style');\n            $('.image-editor', $container).removeAttr('style');\n            $('ul', $container).empty();\n\n            interact($container.find('ul.source li').selector).unset(); // gapfillers\n            interact($container.find('.main-image-box rect').selector).unset(); // choices/hotspot\n        }\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    return {\n        qtiClass:              'graphicGapMatchInteraction',\n        template:              tpl,\n        render:                render,\n        getContainer:          containerHelper.get,\n        setResponse:           setResponse,\n        getResponse:           getResponse,\n        resetResponse:         resetResponse,\n        destroy:               destroy,\n        setState:              setState,\n        getState:              getState,\n        isDirectedPairFlipped: isDirectedPairFlipped\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/graphicOrderInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-graphicOrderInteraction clearfix\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"main-image-box\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <ul class=\\\"none block-listing horizontal ordinals\\\"></ul>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/graphicOrderInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/Graphic',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'\n], function($, _, __, Promise, tpl, graphic,  pciResponse, containerHelper, instructionMgr){\n    'use strict';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction){\n        var self = this;\n\n        return new Promise(function(resolve, reject){\n            var $container = containerHelper.get(interaction);\n            var $orderList = $('ul', $container);\n            var background = interaction.object.attributes;\n\n            $container\n                .off('resized.qti-widget.resolve')\n                .one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper( 'graphic-paper-' + interaction.serial, interaction.serial, {\n                width       : background.width,\n                height      : background.height,\n                img         : self.resolveUrl(background.data),\n                imgId       : 'bg-image-' + interaction.serial,\n                container   : $container\n            });\n\n            //create the list of number to order\n            _renderOrderList(interaction, $orderList);\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction, $orderList));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse : _getRawResponse,\n                onError : function(data){\n                    graphic.highlightError(data.target);\n                }\n            });\n        });\n    };\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice  =  function _renderChoice(interaction, $orderList, choice){\n\n        var rElement = graphic.createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n            id : choice.serial,\n            title : __('Select this area')\n        })\n        .click(function(){\n            if(this.active){\n                _unselectShape(interaction.paper, this, $orderList);\n            } else {\n                _selectShape(interaction.paper, this, $orderList);\n            }\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction, { choice : choice });\n        });\n    };\n\n    /**\n     * Render the list of numbers\n     * @private\n     * @param {Object} interaction\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    var _renderOrderList = function _renderOrderList(interaction, $orderList){\n        var $orderers;\n        var size = _.size(interaction.getChoices());\n        var min = interaction.attr('minChoices');\n        var max = interaction.attr('maxChoices');\n\n        //calculate the number of orderer to display\n        if(max > 0 && max < size){\n            size = max;\n        } else if(min > 0 && min < size){\n           size = min;\n        }\n\n        //add them to the list\n        _.times(size, function(index){\n            var position = index + 1;\n            var $orderer = $('<li class=\"selectable\" data-number=\"' + position + '\">' + position +  '</li>');\n            if(index === 0){\n                $orderer.addClass('active');\n            }\n            $orderList.append($orderer);\n        });\n\n        //create related svg texts\n        _createTexts(interaction.paper, size, $orderList);\n\n        //bind the activation event\n        $orderers = $orderList.children('li');\n        $orderers.click(function(e){\n            e.preventDefault();\n            var $orderer = $(this);\n\n            if(!$orderer.hasClass('active') && !$orderer.hasClass('disabled')){\n                $orderers.removeClass('active');\n                $orderer.addClass('active');\n            }\n        });\n    };\n\n    /**\n     * Select a shape to position an order\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the selected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    var _selectShape = function _selectShape(paper, element, $orderList){\n\n        //lookup for the active number\n        var $active = $orderList.find('.active:first');\n        if($active.length && $active.data('number') > 0){\n\n            //associate the current number directly to the element\n            element.data('number', $active.data('number'));\n            element.active  = true;\n            _showText(paper, element);\n            graphic.updateElementState(element, 'active');\n\n            //update the state of the order list\n            $active.toggleClass('active disabled').siblings(':not(.disabled)').first().toggleClass('active');\n        }\n    };\n\n    /**\n     * Unselect a shape to free the position\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.element} element - the unselected shape\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     */\n    var _unselectShape = function _unselectShape(paper, element, $orderList){\n        var number = element.data('number');\n\n        //update element state\n        element.active  = false;\n        _hideText(paper, element);\n        element.removeData('number');\n        graphic.updateElementState(element, 'basic');\n\n        //reset order list state and activate the removed number\n        $orderList\n            .children().removeClass('active')\n            .filter('[data-number='+number+']').removeClass('disabled').addClass('active');\n    };\n\n    /**\n     * Creates ALL the texts (the numbers to display in the shapes). They are created styled but hidden.\n     *\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Number} size - the number of numbers to create...\n     * @param {jQueryElement} $orderList - the list than contains the orderers\n     * @return {Array} the creates text element\n     */\n    var _createTexts = function _createTexts(paper, size){\n        var texts = [];\n        _.times(size, function(index){\n\n            var number = index + 1;\n            var text = graphic.createText(paper, {\n                id          : 'text-' + number,\n                content     : number,\n                title       : __('Remove'),\n                style       : 'order-text',\n                hide        : true\n            });\n\n            //clicking the text will has the same effect that clicking the shape: unselect.\n            text.click(function(){\n                paper.forEach(function(element){\n                    if(element.data('number') === number && element.events){  //we just need to retrieve the right element\n                        //call the click event\n                        var evt = _.where(element.events, { name : 'click'});\n                        if(evt.length && evt[0] && typeof evt[0].f === 'function'){\n                            evt[0].f.call(element);\n                        }\n                    }\n                });\n            });\n            texts.push(text);\n        });\n        return texts;\n    };\n\n    /**\n     * Show the text that match the element's number.\n     * We need to display it at the center of the shape.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to show the text for\n     */\n    var _showText =  function _showText(paper, element){\n        var bbox = element.getBBox();\n        var transf;\n\n        //we retrieve the good text from it's id\n        var text = paper.getById('text-' + element.data('number'));\n        if(text){\n\n            //move it to the center of the shape (using absolute transform), and than display it\n            transf = 'T' + (bbox.x + (bbox.width / 2)) + ',' +\n                           (bbox.y + (bbox.height / 2));\n            text.transform(transf)\n                .show()\n                .toFront();\n        }\n    };\n\n    /**\n     * Hide an element text.\n     * @private\n     * @param {Raphael.Paper} paper - the interaction paper\n     * @param {Raphael.Element} element - the element to hide the text for\n     */\n    var _hideText =  function _hideText (paper, element){\n        var text = paper.getById('text-' + element.data('number'));\n        if(text){\n            text.hide();\n        }\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    var _getRawResponse = function _getRawResponse(interaction){\n        var response = [];\n        _.forEach(interaction.getChoices(), function(choice){\n            var elt = interaction.paper.getById(choice.serial);\n            if(elt && elt.data('number')){\n                response.push({\n                    index : elt.data('number'),\n                    id : choice.id()\n                });\n            }\n        });\n        return _(response).sortBy('index').map('id').value();\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n        var responseValues;\n        var $container = containerHelper.get(interaction);\n        var $orderList = $('ul', $container);\n        if(response && interaction.paper){\n\n            try {\n                //try to unserualize tthe pci response\n                responseValues = pciResponse.unserialize(response, interaction);\n            } catch(e){}\n\n            if(_.isArray(responseValues)){\n                _.forEach(responseValues, function(responseValue, index){\n                    var element;\n                    var number = index + 1;\n\n                    //get the choice that match the response\n                    var choice = _(interaction.getChoices()).where({'attributes' : { 'identifier' : responseValue}}).first();\n                    if(choice){\n                       element = interaction.paper.getById(choice.serial);\n                       if(element){\n                            //activate the orderer to be consistant\n                            $orderList.children('[data-number='+number+']').addClass('active');\n\n                            //select the related shape\n                            _selectShape(interaction.paper, element, $orderList);\n                       }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var resetResponse = function resetResponse(interaction){\n        var $container = containerHelper.get(interaction);\n        var $orderList = $('ul', $container);\n\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(element){\n                _unselectShape(interaction.paper, element, $orderList);\n            }\n        });\n\n        $orderList.children('li').removeClass('active disabled').first().addClass('active');\n    };\n\n\n    /**\n     i* Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        return  pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction){\n        var $container;\n        if(interaction.paper){\n            $container = containerHelper.get(interaction);\n\n            $(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $('.main-image-box', $container).empty().removeAttr('style');\n            $('.image-editor', $container).removeAttr('style');\n            $('ul', $container).empty();\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    return {\n        qtiClass : 'graphicOrderInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/hotspotInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-hotspotInteraction clearfix\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/hotspotInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/Graphic',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'\n], function($, _, __, Promise, tpl, graphic,  pciResponse, containerHelper, instructionMgr){\n    'use strict';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction){\n        var self = this;\n\n        return new Promise(function(resolve, reject){\n            var $container = containerHelper.get(interaction);\n            var background = interaction.object.attributes;\n\n            $container\n                .off('resized.qti-widget.resolve')\n                .one('resized.qti-widget.resolve', resolve);\n\n            interaction.paper = graphic.responsivePaper( 'graphic-paper-' + interaction.serial, interaction.serial, {\n                width     : background.width,\n                height    : background.height,\n                img       : self.resolveUrl(background.data),\n                container : $container\n            });\n\n            //call render choice for each interaction's choices\n            _.forEach(interaction.getChoices(), _.partial(_renderChoice, interaction));\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                getResponse : _getRawResponse,\n                onError : function(data){\n                    if(data.target.active){\n                        data.target.active = false;\n                        graphic.updateElementState(this, 'basic', __('Select this area'));\n                        graphic.highlightError(data.target);\n                        containerHelper.triggerResponseChangeEvent(interaction);\n                        $container.trigger('inactiveChoice.qti-widget', [data.choice, data.target]);\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Render a choice inside the paper.\n     * Please note that the choice renderer isn't implemented separately because it relies on the Raphael paper instead of the DOM.\n     * @param {Paper} paper - the raphael paper to add the choices to\n     * @param {Object} interaction\n     * @param {Object} choice - the hotspot choice to add to the interaction\n     */\n    var _renderChoice  =  function _renderChoice(interaction, choice){\n        var $container = containerHelper.get(interaction);\n        var rElement = graphic.createElement(interaction.paper, choice.attr('shape'), choice.attr('coords'), {\n            id : choice.serial,\n            title : __('Select this area')\n        })\n        .click(function(){\n            if(this.active){\n                graphic.updateElementState(this, 'basic', __('Select this area'));\n                this.active = false;\n                $container.trigger('inactiveChoice.qti-widget', [choice, this]);\n            } else {\n                graphic.updateElementState(this, 'active', __('Click again to remove'));\n                this.active = true;\n                $container.trigger('activeChoice.qti-widget', [choice, this]);\n            }\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction, { choice : choice, target : this });\n        });\n    };\n\n    /**\n     * Get the response from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} the response in raw format\n     */\n    var _getRawResponse = function _getRawResponse(interaction){\n\n       return _(interaction.getChoices())\n        .map(function(choice){\n            var rElement = interaction.paper.getById(choice.serial);\n            return (rElement && rElement.active === true) ? choice.id() : false;\n       })\n        .filter(_.isString)\n        .value();\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n\n        var responseValues;\n        if(response && interaction.paper){\n\n            try{\n                responseValues = pciResponse.unserialize(response, interaction);\n\n            } catch(e){ }\n\n            if(_.isArray(responseValues)){\n\n                _.forEach(interaction.getChoices(), function(choice){\n                    var rElement;\n                    if(_.contains(responseValues, choice.attributes.identifier)){\n                        rElement = interaction.paper.getById(choice.serial);\n                        if(rElement){\n                            rElement.active = true;\n                            graphic.updateElementState(rElement, 'active', __('Click again to remove'));\n                            instructionMgr.validateInstructions(interaction, { choice : choice, target : rElement });\n                        }\n                    }\n                });\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var resetResponse = function resetResponse(interaction){\n        _.forEach(interaction.getChoices(), function(choice){\n            var element = interaction.paper.getById(choice.serial);\n            if(element){\n                element.active = false;\n                graphic.updateElementState(element, 'basic');\n            }\n        });\n        instructionMgr.resetInstructions(interaction);\n    };\n\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        var raw = _getRawResponse(interaction);\n        var response =  pciResponse.serialize(_getRawResponse(interaction), interaction);\n        return response;\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction){\n        var $container;\n        if(interaction.paper){\n            $container = containerHelper.get(interaction);\n\n            $(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $('.main-image-box', $container).empty().removeAttr('style');\n            $('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the hotspot interaction\n     * @exports qtiCommonRenderer/renderers/interactions/HotspotInteraction\n     */\n    return {\n        qtiClass : 'hotspotInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/hottextInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-hottextInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"hottextInteraction\\\">\\n  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"qti-flow-container\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/hottextInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'\n], function($, _, __, tpl, containerHelper, instructionMgr, pciResponse){\n    'use strict';\n\n    /**\n     * 'pseudo-label' is technically a div that behaves like a label.\n     * This allows the usage of block elements inside the fake label\n     */\n    var pseudoLabel = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n\n        var setChoice = function($choice, interaction){\n            var $inupt = $choice.find('input');\n\n            if($inupt.prop('checked') || $inupt.hasClass('disabled')){\n                $inupt.prop('checked', false);\n            }else{\n                var maxChoices = parseInt(interaction.attr('maxChoices'));\n                var currentChoices = _.values(_getRawResponse(interaction)).length;\n\n                if(currentChoices < maxChoices || maxChoices === 0){\n                    $inupt.prop('checked', true);\n                }\n            }\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction, {choice : $choice});\n        };\n\n        $('.hottext', $container).on('click', function(e){\n            e.preventDefault();\n            setChoice($(this), interaction);\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10278\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction){\n        pseudoLabel(interaction);\n\n        //set up the constraints instructions\n        instructionMgr.minMaxChoiceInstructions(interaction, {\n            min: interaction.attr('minChoices'),\n            max: interaction.attr('maxChoices'),\n            getResponse : _getRawResponse,\n            onError : function(data){\n                var $input, $choice, $icon;\n                if(data.choice && data.choice.length){\n                    $choice = data.choice.addClass('error');\n                    $input  = $choice.find('input');\n                    $icon   = $choice.find(' > label > span').addClass('error cross');\n\n\n                    setTimeout(function(){\n                        $input.prop('checked', false);\n                        $choice.removeClass('error');\n                        $icon.removeClass('error cross');\n                    }, 350);\n                }\n            }\n        });\n    };\n\n    var resetResponse = function(interaction){\n        var $container = containerHelper.get(interaction);\n        $('input', $container).prop('checked', false);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n\n        var $container = containerHelper.get(interaction);\n\n        try{\n            _.each(pciResponse.unserialize(response, interaction), function(identifier){\n                $container.find('input[value=' + identifier + ']').prop('checked', true);\n            });\n            instructionMgr.validateInstructions(interaction);\n        }catch(e){\n            throw new Error('wrong response format in argument : ' + e);\n        }\n    };\n\n    var _getRawResponse = function(interaction){\n        var values = [];\n        var $container = containerHelper.get(interaction);\n        $('input:checked', $container).each(function(){\n            values.push($(this).val());\n        });\n        return values;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction){\n        var $container = containerHelper.get(interaction);\n\n        //restore selected choices:\n        $container.find('.hottext').off('click');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n\n    return {\n        qtiClass : 'hottextInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/inlineChoiceInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1;\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<select \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-inlineChoiceInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"\\n        data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n        data-qti-class=\\\"inlineChoiceInteraction\\\"\\n        data-has-search=\\\"false\\\">\\n    <option></option>                \\n    <option value=\\\"empty\\\"></option>\\n    \";\n  options={hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data}\n  if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</select>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/inlineChoiceInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'select2',\n    'ui/tooltip'\n], function($, _, __, tpl, containerHelper, instructionMgr, pciResponse){\n    'use strict';\n\n    /**\n     * The value of the \"empty\" option\n     * @type String\n     */\n    var _emptyValue = 'empty';\n\n    var _defaultOptions = {\n        allowEmpty:true,\n        placeholderText:__('select a choice')\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction, options){\n\n        var opts = _.clone(_defaultOptions),\n            required = !!interaction.attr('required');\n        _.extend(opts, options);\n\n        var $container = containerHelper.get(interaction);\n\n        if(opts.allowEmpty && !required){\n            $container.find('option[value=' + _emptyValue + ']').text('--- ' + __('leave empty') + ' ---');\n        }else{\n            $container.find('option[value=' + _emptyValue + ']').remove();\n        }\n\n        $container.select2({\n            width : 'element',\n            placeholder : opts.placeholderText,\n            minimumResultsForSearch : -1,\n            dropdownCssClass  : 'qti-inlineChoiceInteraction-dropdown'\n        });\n\n        var $el = $container.select2('container');\n\n        _setInstructions(interaction);\n\n        $container.on('change', function(){\n\n            if(required && $container.val() !== \"\") {\n                $el.qtip('hide');\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n        }).on('select2-open', function(){\n            if(required){\n                $el.qtip('hide');\n            }\n        }).on('select2-close', function(){\n            if(required && $container.val() === \"\") {\n                $el.qtip('show');\n            }\n        });\n    };\n\n    var _setInstructions = function(interaction){\n\n        var required = !!interaction.attr('required'),\n            $container = interaction.getContainer(),\n            $el = $container.select2('container');\n\n        if(required){\n            //set up the tooltip plugin for the input\n            $el.qtip({\n                theme : 'warning',\n                content: {\n                    text: __('A choice must be selected')\n                }\n            });\n\n            if($container.val() === \"\") {\n                $el.qtip('show');\n            }\n        }\n\n    };\n\n    var resetResponse = function(interaction){\n        _setVal(interaction, _emptyValue);\n    };\n\n    var _setVal = function(interaction, choiceIdentifier){\n\n        containerHelper.get(interaction)\n            .val(choiceIdentifier)\n            .select2('val', choiceIdentifier);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n\n         _setVal(interaction, pciResponse.unserialize(response, interaction)[0]);\n    };\n\n    var _getRawResponse = function(interaction){\n        var value = containerHelper.get(interaction).val();\n        return (value && value !== _emptyValue) ? [value] : [];\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n     /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n\n        //remove event\n        $(document).off('.commonRenderer');\n\n        $container.select2('destroy');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        var $container;\n\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if(_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())){\n\n                $container = containerHelper.get(interaction);\n\n                //just in case the dropdown is opened\n                $container.select2('disable')\n                          .select2('close');\n\n                $('option[data-identifier]', $container)\n                    .sort(function(a, b){\n                        var aIndex = _.indexOf(state.order, $(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $(b).data('identifier'));\n                        if(aIndex > bIndex) {\n                            return 1;\n                        }\n                        if(aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($container);\n\n                $container.select2('enable');\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if(interaction.attr('shuffle') === true){\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $('option[data-identifier]', $container).each(function(){\n               state.order.push($(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the inline choice interaction\n     * @exports qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction\n     */\n    return {\n        qtiClass : 'inlineChoiceInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/matchInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program7(depth0,data) {\n  \n  var stack1;\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program9(depth0,data,depth1) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n      <tr>\\n        \";\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers.each.call(depth0, (depth1 && depth1.matchSet1), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n      </tr>\\n      \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  \n  return \"\\n        <td>\\n          <label>\\n            <input type=\\\"checkbox\\\" >\\n            <span class=\\\"icon-checkbox cross\\\"></span>\\n          </label>\\n        </td>\\n        \";\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-matchInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"matchInteraction\\\">\\n  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n  <div class=\\\"instruction-container\\\"></div>\\n  <div class=\\\"match-interaction-area\\\">\\n    <table class=\\\"matrix\\\">\\n      <thead>\\n      <tr>\\n        <th> </th>\\n        \";\n  options={hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}\n  if (helper = helpers.matchSet1) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.matchSet1); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.matchSet1) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n      </tr>\\n      </thead>\\n      <tbody>\\n      \";\n  options={hash:{},inverse:self.noop,fn:self.programWithDepth(9, program9, data, depth0),data:data}\n  if (helper = helpers.matchSet2) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.matchSet2); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.matchSet2) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.programWithDepth(9, program9, data, depth0),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/matchInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse'\n], function($, _,  __,tpl, containerHelper, instructionMgr, pciResponse){\n    'use strict';\n\n    /**\n     * TODO do not use global context var, it's value is shared between interaction instances\n     *\n     * Flag to not throw warning instruction if already\n     * displaying the warning. If such a flag is not used,\n     * disturbances can be seen by the candidate if he clicks\n     * like hell on choices.\n     */\n    var inWarning = false;\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction){\n        var $container = containerHelper.get(interaction);\n\n        // Initialize instructions system.\n        _setInstructions(interaction);\n\n        $container.on('click.commonRenderer', 'input[type=checkbox]', function(e){\n            _onCheckboxSelected(interaction, e);\n        });\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n\n        response = _filterResponse(response);\n\n        if(typeof response.list !== 'undefined' && typeof response.list.directedPair !== 'undefined'){\n            _(response.list.directedPair).forEach(function(directedPair){\n                var x = $('th[data-identifier=' + directedPair[0] + ']').index() - 1;\n                var y = $('th[data-identifier=' + directedPair[1] + ']').parent().index();\n\n                $('.matrix > tbody tr').eq(y).find('input[type=checkbox]').eq(x).attr('checked', true);\n            });\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10296\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        var response = pciResponse.serialize(_getRawResponse(interaction), interaction);\n        return response;\n    };\n\n    var resetResponse = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n        $('input[type=checkbox]:checked', $container).each(function(){\n            $(this).prop('checked', false);\n        });\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    var _filterResponse = function(response){\n        if(typeof response.list === 'undefined'){\n            // Maybe it's a base?\n            if(typeof response.base === 'undefined'){\n                // Oops, it is even not a base.\n                throw 'The given response is not compliant with PCI JSON representation.';\n            }\n            else{\n                // It's a base, Is it a directedPair? Null?\n                if (response.base === null) {\n                    return {\"list\" : {\"directedPair\" : []}};\n                }\n                else if (typeof response.base.directedPair === 'undefined'){\n                    // Oops again, it is not a directedPair.\n                    throw 'The matchInteraction only accepts directedPair values as responses.';\n                }\n                else{\n                    return {\"list\" : {\"directedPair\" : [response.base.directedPair]}};\n                }\n            }\n        }\n        else if(typeof response.list.directedPair === 'undefined'){\n            // Oops, not a directedPair.\n            throw 'The matchInteraction only accept directedPair values as responses.';\n        }\n        else{\n            return response;\n        }\n    };\n\n    var _getRawResponse = function(interaction){\n        var $container = containerHelper.get(interaction);\n        var values = [];\n\n        $container.find('input[type=checkbox]:checked').each(function(){\n            values.push(_inferValue(this));\n        });\n\n        return values;\n    };\n\n    var _inferValue = function(element){\n        var $element = $(element);\n        var y = $element.closest('tr').index();\n        var x = $element.closest('td').index();\n        var firstId = $('.matrix > thead th').eq(x).data('identifier');\n        var secondId = $('.matrix > tbody th').eq(y).data('identifier');\n        return [firstId, secondId];\n    };\n\n    var _onCheckboxSelected = function(interaction, e){\n\n        var choice;\n        var currentResponse = _getRawResponse(interaction);\n        var minAssociations = interaction.attr('minAssociations');\n        var maxAssociations = interaction.attr('maxAssociations');\n\n        if(maxAssociations === 0){\n            maxAssociations = _countChoices(interaction);\n        }\n\n        if(_.size(currentResponse) > maxAssociations){\n            // No more associations possible.\n            e.preventDefault();\n            instructionMgr.validateInstructions(interaction);\n\n        }else if((choice = _maxMatchReached(interaction, e.target)) !== false){\n\n            // Check if matchmax is respected for both choices\n            // involved in the selection.\n            e.preventDefault();\n            instructionMgr.validateInstructions(interaction, choice);\n\n        }else{\n\n            containerHelper.triggerResponseChangeEvent(interaction, {});\n            instructionMgr.validateInstructions(interaction);\n        }\n\n    };\n\n    var _maxMatchReached = function(interaction, input){\n\n        var association = _inferValue(input);\n        var overflow = false;\n\n        _(association).forEach(function(identifier){\n            var choice = _getChoiceDefinitionByIdentifier(interaction, identifier);\n            var matchMin = choice.attributes.matchMin;\n            var matchMax = choice.attributes.matchMax;\n            var assoc = _countAssociations(interaction, choice);\n\n            if(matchMax > 0 && assoc > matchMax){\n                overflow = choice;\n            }\n        });\n\n        return overflow;\n    };\n\n    var _countAssociations = function(interaction, choice){\n\n        var rawResponse = _getRawResponse(interaction);\n        var count = 0;\n\n        // How much time can we find rawChoice in rawResponses?\n        _(rawResponse).forEach(function(response){\n            if((response[0] === choice.attributes.identifier || response[1] === choice.attributes.identifier)){\n                count++;\n            }\n        });\n\n        return count;\n    };\n\n    var _countChoices = function(interaction){\n        var $container = containerHelper.get(interaction);\n        return $container.find('input[type=checkbox]').length;\n    };\n\n    var _getChoiceDefinitionByIdentifier = function(interaction, identifier){\n        var rawChoices = _getRawChoices(interaction);\n        return rawChoices[identifier];\n    };\n\n    var _getRawChoices = function(interaction){\n        var rawChoices = {};\n\n        _(interaction.choices).forEach(function(matchset){\n            _(matchset).forEach(function(choice){\n                rawChoices[choice.attributes.identifier] = choice;\n            });\n        });\n\n        return rawChoices;\n    };\n\n    var _setInstructions = function(interaction){\n\n        var msg;\n        var minAssociations = interaction.attr('minAssociations');\n        var maxAssociations = interaction.attr('maxAssociations');\n        var choiceCount = _countChoices(interaction);\n\n        // Super closure is here again to save our souls! Houray!\n        // ~~~~~~~ |==||||0__\n\n        var superClosure = function(){\n\n            var onMaxChoicesReached = function(report, msg){\n                if(inWarning === false){\n                    inWarning = true;\n\n                    report.update({\n                        level : 'warning',\n                        message : __('Maximum number of choices reached.'),\n                        timeout : 2000,\n                        stop : function(){\n                            report.update({level : 'success', message : msg});\n                            inWarning = false;\n                        }\n                    });\n                }\n            };\n\n            var onMatchMaxReached = function(interaction, choice, report, msg, level){\n\n                var $container = containerHelper.get(interaction);\n\n                if(inWarning === false){\n                    inWarning = true;\n\n                    var $choice = $container.find('.qti-simpleAssociableChoice[data-identifier=\"' + choice.attributes.identifier + '\"]');\n                    var originalBackgroundColor = $choice.css('background-color');\n                    var originalColor = $choice.css('color');\n\n                    report.update({\n                        level : 'warning',\n                        message : __('The highlighted choice cannot be associated more than %d time(s).').replace('%d', choice.attributes.matchMax),\n                        timeout : 3000,\n                        start : function(){\n                            $choice.animate({\n                                backgroundColor : '#fff',\n                                color : '#ba122b'\n                            }, 250, function(){\n                                $choice.animate({\n                                    backgroundColor : '#ba122b',\n                                    color : '#fff'\n                                }, 250);\n                            });\n                        },\n                        stop : function(){\n                            $choice.animate({\n                                backgroundColor : originalBackgroundColor,\n                                color : originalColor\n                            }, 500);\n                            report.update({level : level, message : msg});\n                            inWarning = false;\n                        }\n                    });\n                }\n            };\n\n            if(minAssociations === 0 && maxAssociations > 0){\n                // No minimum but maximum.\n                msg = __('You must select 0 to %d choices.').replace('%d', maxAssociations);\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice){\n                    var responseCount = _.size(_getRawResponse(interaction));\n\n                    if(choice && choice.attributes && choice.attributes.matchMax > 0 && _countAssociations(interaction, choice) > choice.attributes.matchMax){\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    }\n                    else if(responseCount <= maxAssociations){\n                        this.setLevel('success');\n                    }\n                    else if(responseCount > maxAssociations){\n                        onMaxChoicesReached(this, msg);\n                    }\n                    else{\n                        this.reset();\n                    }\n                });\n            }\n            else if(minAssociations === 0 && maxAssociations === 0){\n                // No minimum, no maximum.\n                msg = __('You must select 0 to %d choices.').replace('%d', choiceCount);\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice){\n\n                    if(choice && choice.attributes && choice.attributes.matchMax > 0 && _countAssociations(interaction, choice) > choice.attributes.matchMax){\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    }\n                    else{\n                        this.setLevel('success');\n                    }\n                });\n            }\n            else if(minAssociations > 0 && maxAssociations === 0){\n                // minimum but no maximum.\n                msg = __('You must select %1$d to %2$d choices.');\n                msg = msg.replace('%1$d', minAssociations);\n                msg = msg.replace('%2$d', choiceCount);\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice){\n                    var responseCount = _.size(_getRawResponse(interaction));\n\n                    if(choice && choice.attributes && choice.attributes.matchMax > 0 && _countAssociations(interaction, choice) > choice.attributes.matchMax){\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    }\n                    else if(responseCount < minAssociations){\n                        this.setLevel('info');\n                    }\n                    else if(responseCount > choiceCount){\n                        onMaxChoicesReached(this, msg);\n                    }\n                    else{\n                        this.setLevel('success');\n                    }\n                });\n            }\n            else if(minAssociations > 0 && maxAssociations > 0){\n                // minimum and maximum.\n                if(minAssociations !== maxAssociations){\n                    msg = __('You must select %1$d to %2$d choices.');\n                    msg = msg.replace('%1$d', minAssociations);\n                    msg = msg.replace('%2$d', maxAssociations);\n                }\n                else{\n                    msg = __('You must select exactly %d choice(s).');\n                    msg = msg.replace('%d', minAssociations);\n                }\n\n                instructionMgr.appendInstruction(interaction, msg, function(choice){\n                    var responseCount = _.size(_getRawResponse(interaction));\n\n                    if(choice && choice.attributes && choice.attributes.matchMax > 0 && _countAssociations(interaction, choice) > choice.attributes.matchMax){\n                        onMatchMaxReached(interaction, choice, this, msg, this.getLevel());\n                    }\n                    else if(responseCount < minAssociations){\n                        this.setLevel('info');\n                    }\n                    else if(responseCount > maxAssociations){\n                        onMaxChoicesReached(this, msg);\n                    }\n                    else if(responseCount >= minAssociations && responseCount <= maxAssociations){\n                        this.setLevel('success');\n                    }\n                });\n            }\n        };\n\n        superClosure();\n    };\n\n    var destroy = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n        $container.off('.commonRenderer');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        var $container;\n\n        if(_.isObject(state)){\n\n            //restore order of previously shuffled choices\n            if(_.isArray(state.order) && state.order.length === 2){\n\n                $container = containerHelper.get(interaction);\n\n                $('thead .qti-choice', $container)\n                    .sort(function(a, b){\n                        var aIndex = _.indexOf(state.order[0], $(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order[0], $(b).data('identifier'));\n                        if(aIndex > bIndex) {\n                            return 1;\n                        }\n                        if(aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($('thead tr', $container));\n\n                $('tbody .qti-choice', $container)\n                    .sort(function(a, b){\n                        var aIndex = _.indexOf(state.order[1], $(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order[1], $(b).data('identifier'));\n                        if(aIndex > bIndex) {\n                            return 1;\n                        }\n                        if(aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .each(function(index, elt){\n                        $(elt).prependTo($('tbody tr', $container).eq(index));\n                    });\n            }\n\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if(interaction.attr('shuffle') === true){\n            $container = containerHelper.get(interaction);\n\n            state.order = [[], []];\n            $('thead .qti-choice', $container).each(function(){\n               state.order[0].push($(this).data('identifier'));\n            });\n            $('tbody .qti-choice', $container).each(function(){\n               state.order[1].push($(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the match interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MatchInteraction\n     */\n    return {\n        qtiClass : 'matchInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState,\n        inferValue : _inferValue\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/mediaInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-mediaInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"media-container\\\"></div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Martin for OAT S.A. <code@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/mediaInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'ui/mediaplayer'\n], function($, _, __, Promise, tpl, pciResponse, containerHelper, mediaplayer) {\n    'use strict';\n\n\n    //some default values\n    var defaults = {\n        type   : 'video/mp4',\n        video : {\n            width: 480,\n            height: 270\n        },\n        audio : {\n            width: 400,\n            height: 30\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10391\n     *\n     * @param {object} interaction\n     * @fires playerready when the player is sucessfully loaded and configured\n     */\n    var render = function render(interaction) {\n        var self = this;\n        return new Promise(function(resolve) {\n\n            var $container = containerHelper.get(interaction);\n            var media      = interaction.object;\n            var $item      = $container.parents('.qti-item');\n            var maxPlays   = parseInt(interaction.attr('maxPlays'), 10) || 0;\n            var url        = media.attr('data') || '';\n\n\n            //check if the media can be played (using timesPlayed and maxPlays)\n            var canBePlayed = function canBePlayed(){\n                var current = parseInt($container.data('timesPlayed'), 10);\n                return maxPlays === 0 || maxPlays > current;\n            };\n\n\n            /**\n            * Resize video player elements to fit container size\n            * @param {Object} mediaElement - player instance\n            * @param {jQueryElement} $container   - container element to adapt\n            */\n            var resize = _.debounce(function resize () {\n                var width, height;\n                if (interaction.mediaElement){\n\n                    height = $container.find('.media-container').height();\n                    width =  $container.find('.media-container').width();\n\n                    interaction.mediaElement.resize(width, height);\n                }\n            }, 200);\n\n\n            //intialize the player if not yet done\n            var initMediaPlayer = function initMediaPlayer(){\n                if (!interaction.mediaElement) {\n                    interaction.mediaElement = mediaplayer({\n                        url: url && self.resolveUrl(url),\n                        type: media.attr('type') || defaults.type,\n                        canPause: $container.hasClass('pause'),\n                        maxPlays: maxPlays,\n                        canSeek: !maxPlays,\n                        width: media.attr('width'),\n                        height: media.attr('height'),\n                        volume: 100,\n                        autoStart: !!interaction.attr('autostart') && canBePlayed(),\n                        loop: !!interaction.attr('loop'),\n                        renderTo: $('.media-container', $container)\n                    })\n                    .on('render', function() {\n\n                        resize();\n\n                        $(window).off('resize.mediaInteraction')\n                            .on('resize.mediaInteraction', resize);\n\n                        $item.off('resize.gridEdit')\n                            .on('resize.gridEdit', resize);\n\n                        resolve();\n                    })\n                    .on('ready', function() {\n                       /**\n                        * @event playerready\n                        */\n                        $container.trigger('playerready');\n                    })\n                    .on('ended', function() {\n                        $container.data('timesPlayed', $container.data('timesPlayed') + 1);\n                        containerHelper.triggerResponseChangeEvent(interaction);\n\n                        if (!canBePlayed() ) {\n                            this.disable();\n                        }\n                    });\n                }\n            };\n\n\n\n            if(_.size(media.attributes) === 0){\n                //TODO move to afterCreate\n                media.attr('type', defaults.type);\n                media.attr('width', $container.innerWidth());\n\n                media.attr('height', defaults.video.height);\n                media.attr('data', '');\n            }\n\n            //set up the number of times played\n            if (!$container.data('timesPlayed')) {\n                $container.data('timesPlayed', 0);\n            }\n\n            //initialize the component\n            $container.on('responseSet', function() {\n                initMediaPlayer();\n            });\n\n            //gives a small chance to the responseSet event before initializing the player\n            initMediaPlayer();\n        });\n    };\n\n    /**\n     * Destroy the current interaction\n     * @param {Object} interaction\n     */\n    var destroy = function(interaction) {\n        var $container = containerHelper.get(interaction);\n\n        if (interaction.mediaElement) {\n            interaction.mediaElement.destroy();\n            interaction.mediaElement = null;\n        }\n\n        $('.instruction-container', $container).empty();\n        $('.media-container', $container).empty();\n\n        $container.removeData('timesPlayed');\n\n        $(window).off('resize.video');\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Get the responses from the interaction\n     * @private\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    var _getRawResponse = function _getRawResponse(interaction) {\n        return [containerHelper.get(interaction).data('timesPlayed') || 0];\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response) {\n        var responseValues;\n        if (response) {\n            try {\n                //try to unserialize the pci response\n                responseValues = pciResponse.unserialize(response, interaction);\n                containerHelper.get(interaction).data('timesPlayed', responseValues[0]);\n            } catch (e) {\n                // something went wrong\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var resetResponse = function resetResponse(interaction) {\n        containerHelper.get(interaction).data('timesPlayed', 0);\n    };\n\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction) {\n        return  pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/MediaInteraction\n     */\n    return {\n        qtiClass        : 'mediaInteraction',\n        template        : tpl,\n        render          : render,\n        getContainer    : containerHelper.get,\n        setResponse     : setResponse,\n        getResponse     : getResponse,\n        resetResponse   : resetResponse,\n        destroy         : destroy,\n        setState        : setState,\n        getState        : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/orderInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, blockHelperMissing=helpers.blockHelperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \" qti-horizontal\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" qti-vertical\";\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  \n  return \"horizontal\";\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \"vertical\";\n  }\n\nfunction program13(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program15(depth0,data) {\n  \n  var stack1;\n  stack1 = (typeof depth0 === functionType ? depth0.apply(depth0) : depth0);\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  return \"icon-down\";\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  return \"icon-right\";\n  }\n\nfunction program21(depth0,data) {\n  \n  \n  return \"icon-up\";\n  }\n\nfunction program23(depth0,data) {\n  \n  \n  return \"icon-left\";\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-orderInteraction\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"\\n     data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n     data-qti-class=\\\"orderInteraction\\\"\\n     data-orientation=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"order-interaction-area\\\">\\n        <ul class=\\\"choice-area square source solid block-listing \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n            \";\n  options={hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}\n  if (helper = helpers.choices) { stack1 = helper.call(depth0, options); }\n  else { helper = (depth0 && depth0.choices); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n  if (!helpers.choices) { stack1 = blockHelperMissing.call(depth0, stack1, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data}); }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n        <div class=\\\"arrow-bar middle\\\">\\n            <span class=\\\"icon-add-to-selection \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(19, program19, data),fn:self.program(17, program17, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\\n            <span class=\\\"icon-remove-from-selection \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(23, program23, data),fn:self.program(21, program21, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" inactive\\\"></span>\\n        </div>\\n        <ul class=\\\"drag-container block-listing\\\"></ul>\\n        <ul class=\\\"result-area decimal target solid block-listing \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n        </ul>\\n        <div class=\\\"arrow-bar\\\">\\n            <span class=\\\"icon-move-before \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(21, program21, data),fn:self.program(23, program23, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" inactive\\\"></span>\\n            <span class=\\\"icon-move-after \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.horizontal), {hash:{},inverse:self.program(17, program17, data),fn:self.program(19, program19, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" inactive\\\"></span>\\n        </div>\\n    </div>\\n    <div class=\\\"notification-container\\\"></div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',[\n    'lodash',\n    'jquery',\n    'i18n',\n    'core/mouseEvent',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/orderInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'interact',\n    'ui/interactUtils'\n], function(_, $, __, triggerMouseEvent, tpl, containerHelper, instructionMgr, pciResponse, interact, interactUtils){\n    'use strict';\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {Object} interaction - the interaction instance\n     */\n    var render = function(interaction){\n\n        var $container = containerHelper.get(interaction),\n            $choiceArea = $container.find('.choice-area'),\n            $resultArea = $container.find('.result-area'),\n            $iconAdd = $container.find('.icon-add-to-selection'),\n            $iconRemove = $container.find('.icon-remove-from-selection'),\n            $iconBefore = $container.find('.icon-move-before'),\n            $iconAfter = $container.find('.icon-move-after'),\n            $activeChoice = null,\n\n            choiceSelector = $choiceArea.selector + ' >li:not(.deactivated)',\n            resultSelector = $resultArea.selector + ' >li',\n\n            isDragAndDropEnabled,\n            dragOptions,\n            $dropzoneElement,\n            $dragContainer = $container.find('.drag-container'),\n\n            orientation = (interaction.attr('orientation')) ? interaction.attr('orientation') : 'vertical';\n\n        var _activeControls = function _activeControls(){\n            $iconAdd.addClass('inactive');\n            $iconRemove.removeClass('inactive').addClass('active');\n            $iconBefore.removeClass('inactive').addClass('active');\n            $iconAfter.removeClass('inactive').addClass('active');\n        };\n\n        var _resetControls = function _resetControls(){\n            $iconAdd.removeClass('inactive');\n            $iconRemove.removeClass('active').addClass('inactive');\n            $iconBefore.removeClass('active').addClass('inactive');\n            $iconAfter.removeClass('active').addClass('inactive');\n        };\n\n        var _setSelection = function _setSelection($choice){\n            if($activeChoice){\n                $activeChoice.removeClass('active');\n            }\n            $activeChoice = $choice;\n            $activeChoice.addClass('active');\n        };\n\n        var _resetSelection = function _resetSelection(){\n            if($activeChoice){\n                $activeChoice.removeClass('active');\n                $activeChoice = null;\n            }\n            _resetControls();\n        };\n\n        var _addChoiceToSelection = function _addChoiceToSelection($target, position) {\n            var $results = $(resultSelector);\n            _resetSelection();\n\n            //move choice to the result list:\n            if (typeof(position) !== 'undefined' && position < $results.length) {\n                $results.eq(position).before($target);\n            } else {\n                $resultArea.append($target);\n            }\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n\n            //update constraints :\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        var _toggleResultSelection = function _toggleResultSelection($target) {\n            if($target.hasClass('active')){\n                _resetSelection();\n            }else{\n                _setSelection($target);\n                _activeControls();\n            }\n        };\n\n        var _removeChoice = function _removeChoice() {\n            if($activeChoice){\n\n                //restore choice back to choice list\n                $choiceArea.append($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n\n                //update constraints :\n                instructionMgr.validateInstructions(interaction);\n            }\n\n            _resetSelection();\n        };\n\n        var _moveResultBefore = function _moveResultBefore() {\n            var $prev = $activeChoice.prev();\n\n            if($prev.length){\n                $prev.before($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n        var _moveResultAfter = function _moveResultAfter() {\n            var $next = $activeChoice.next();\n\n            if($next.length){\n                $next.after($activeChoice);\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }\n        };\n\n\n        // Point & click handlers\n\n        interact($container.selector).on('tap', function () {\n            _resetSelection();\n        });\n\n        interact(choiceSelector).on('tap', function (e) {\n            var $target = $(e.currentTarget);\n            e.stopPropagation();\n\n            $iconAdd.addClass('triggered');\n            setTimeout(function(){\n                $iconAdd.removeClass('triggered');\n            }, 150);\n\n            _addChoiceToSelection($target);\n        });\n\n        interact(resultSelector).on('tap', function (e) {\n            var $target = $(e.currentTarget);\n            e.stopPropagation();\n            _toggleResultSelection($target);\n        });\n\n        interact($iconRemove.selector).on('tap', function (e) {\n            e.stopPropagation();\n            _removeChoice();\n        });\n\n        interact($iconBefore.selector).on('tap', function (e) {\n            e.stopPropagation();\n            _moveResultBefore();\n        });\n\n        interact($iconAfter.selector).on('tap', function (e) {\n            e.stopPropagation();\n            _moveResultAfter();\n        });\n\n\n        // Drag & drop handlers\n\n        if (this.getOption && this.getOption(\"enableDragAndDrop\") && this.getOption(\"enableDragAndDrop\").order) {\n            isDragAndDropEnabled = this.getOption(\"enableDragAndDrop\").order;\n        }\n\n        function _iFrameDragFix(draggableSelector, target) {\n            interactUtils.iFrameDragFixOn(function () {\n                if (_isDropzoneVisible()) {\n                    interact($resultArea.selector).fire({\n                        type: 'drop',\n                        target: $dropzoneElement.eq(0),\n                        relatedTarget: target\n                    });\n                }\n                interact(draggableSelector).fire({\n                    type: 'dragend',\n                    target: target\n                });\n            });\n        }\n\n        if (isDragAndDropEnabled) {\n            $dropzoneElement = $('<li>', {'class' : 'dropzone qti-choice'});\n            $('<div>', {'class': 'qti-block'}).appendTo($dropzoneElement);\n\n            dragOptions = {\n                inertia: false,\n                autoScroll: true,\n                restrict: {\n                    restriction: \".qti-interaction\",\n                    endOnly: false,\n                    elementRect: {top: 0, left: 0, bottom: 1, right: 1}\n                }\n            };\n\n            // makes choices draggables\n            interact(choiceSelector).draggable(_.assign({}, dragOptions, {\n                onstart: function (e) {\n                    var $target = $(e.target);\n                    $target.addClass(\"dragged\");\n\n                    _iFrameDragFix(choiceSelector, e.target);\n                },\n                onmove: function (e) {\n                    var $target = $(e.target);\n                    interactUtils.moveElement(e.target, e.dx, e.dy);\n                    if (_isDropzoneVisible()) {\n                        _adjustDropzonePosition($target);\n                    }\n                },\n                onend: function (e) {\n                    var $target = $(e.target);\n                    $target.removeClass(\"dragged\");\n\n                    interactUtils.restoreOriginalPosition($target);\n                    interactUtils.iFrameDragFixOff();\n                }\n            })).styleCursor(false);\n\n            // makes result draggables\n            interact(resultSelector).draggable(_.assign({}, dragOptions, {\n                onstart: function (e) {\n                    var $target = $(e.target);\n                    $target.addClass(\"dragged\");\n\n                    _setSelection($target);\n\n                    // move dragged result to drag container\n                    $dragContainer.show();\n                    $dragContainer.offset($target.offset());\n                    if (orientation === 'horizontal') {\n                        $dragContainer.width($(e.currentTarget).width());\n                    } else {\n                        $dragContainer.width($target.parent().width());\n                    }\n                    $dragContainer.append($target);\n\n                    _iFrameDragFix(resultSelector, e.target);\n                },\n                onmove: function (e) {\n                    var $target = $(e.target);\n                    interactUtils.moveElement(e.target, e.dx, e.dy);\n                    if (_isDropzoneVisible()) {\n                        _adjustDropzonePosition($target);\n                    }\n                },\n                onend: function (e) {\n                    var $target = $(e.target),\n                        hasBeenDroppedInResultArea = ($target.parent === $resultArea);\n\n                    $target.removeClass(\"dragged\");\n                    $dragContainer.hide();\n\n                    if (! hasBeenDroppedInResultArea) {\n                        _removeChoice();\n                    }\n\n                    interactUtils.restoreOriginalPosition($target);\n                    interactUtils.iFrameDragFixOff();\n                }\n            })).styleCursor(false);\n\n            // makes result area droppable\n            interact($resultArea.selector).dropzone({\n                overlap: 0.5,\n                ondragenter: function (e) {\n                    var $dragged = $(e.relatedTarget);\n                    _insertDropzone($dragged);\n                    $dragged.addClass('droppable');\n                },\n                ondrop: function (e) {\n                    var $dragged = $(e.relatedTarget),\n                        dropzoneIndex = $(resultSelector).index($dropzoneElement);\n\n                    this.ondragleave(e);\n\n                    _addChoiceToSelection($dragged, dropzoneIndex);\n                    interactUtils.restoreOriginalPosition($dragged);\n                },\n                ondragleave: function (e) {\n                    var $dragged = $(e.relatedTarget);\n                    $dropzoneElement.remove();\n                    $dragged.removeClass('droppable');\n                }\n            });\n        }\n\n        function _isDropzoneVisible() {\n            return $.contains($container.get(0), $dropzoneElement.get(0));\n        }\n\n        function _insertDropzone($dragged) {\n            var draggedMiddle = _getMiddleOf($dragged),\n                previousMiddle = {\n                    x: 0,\n                    y: 0\n                },\n                insertPosition,\n                $dropzone;\n\n            // look for position where to insert dropzone\n            $(resultSelector).each(function(index) {\n                var currentMiddle = _getMiddleOf($(this));\n\n                if (orientation !== 'horizontal') {\n                    if (draggedMiddle.y > previousMiddle.y && draggedMiddle.y < currentMiddle.y) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.y = currentMiddle.y;\n                } else {\n                    if (draggedMiddle.x > previousMiddle.x && draggedMiddle.x < currentMiddle.x) {\n                        insertPosition = index;\n                        return false;\n                    }\n                    previousMiddle.x = currentMiddle.x;\n                }\n            });\n            // append dropzone to DOM\n            if (typeof(insertPosition) !== 'undefined') {\n                $(resultSelector).eq(insertPosition).before($dropzoneElement);\n            } else {\n                // no index found, we just append to the end\n                $resultArea.append($dropzoneElement);\n            }\n\n            // style dropzone\n            $dropzoneElement.height($dragged.height());\n            $dropzoneElement.find('div').text($dragged.text());\n        }\n\n        function _adjustDropzonePosition($dragged) {\n            var draggedBox = $dragged.get(0).getBoundingClientRect(),\n                $prevResult = $dropzoneElement.prev('.qti-choice'),\n                $nextResult = $dropzoneElement.next('.qti-choice'),\n                prevMiddle = ($prevResult.length > 0) ? _getMiddleOf($prevResult) : false,\n                nextMiddle = ($nextResult.length > 0) ? _getMiddleOf($nextResult) : false;\n\n            if (orientation !== 'horizontal') {\n                if (prevMiddle && (draggedBox.top < prevMiddle.y)) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && (draggedBox.bottom > nextMiddle.y)) {\n                    $nextResult.after($dropzoneElement);\n                }\n            } else {\n                if (prevMiddle && (draggedBox.left < prevMiddle.x)) {\n                    $prevResult.before($dropzoneElement);\n                }\n                if (nextMiddle && (draggedBox.right > nextMiddle.x)) {\n                    $nextResult.after($dropzoneElement);\n                }\n            }\n        }\n\n        function _getMiddleOf($element) {\n            var elementBox = $element.get(0).getBoundingClientRect();\n            return {\n                x: elementBox.left + elementBox.width / 2,\n                y: elementBox.top + elementBox.height / 2\n            };\n        }\n\n        // rendering init\n\n        _setInstructions(interaction);\n\n        //bind event listener in case the attributes change dynamically on runtime\n        $(document).on('attributeChange.qti-widget.commonRenderer', function(e, data){\n            if(data.element.getSerial() === interaction.getSerial()){\n                if(data.key === 'maxChoices' || data.key === 'minChoices'){\n                    instructionMgr.removeInstructions(interaction);\n                    _setInstructions(interaction);\n                    instructionMgr.validateInstructions(interaction);\n                }\n            }\n        });\n\n        _freezeSize($container);\n    };\n\n    var _freezeSize = function($container){\n        var $orderArea = $container.find('.order-interaction-area');\n        $orderArea.height($orderArea.height());\n    };\n\n    var _setInstructions = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $('.choice-area', $container),\n            $resultArea = $('.result-area', $container),\n            min = parseInt(interaction.attr('minChoices'), 10),\n            max = parseInt(interaction.attr('maxChoices'), 10);\n\n        if(min){\n            instructionMgr.appendInstruction(interaction, __('You must use at least %d choices', min), function(){\n                if($resultArea.find('>li').length >= min){\n                    this.setLevel('success');\n                }else{\n                    this.reset();\n                }\n            });\n        }\n\n        if(max && max < _.size(interaction.getChoices())){\n            var instructionMax = instructionMgr.appendInstruction(interaction, __('You can use maximum %d choices', max), function(){\n                if($resultArea.find('>li').length >= max){\n                    $choiceArea.find('>li').addClass('deactivated');\n                    this.setMessage(__('Maximum choices reached'));\n                }else{\n                    $choiceArea.find('>li').removeClass('deactivated');\n                    this.reset();\n                }\n            });\n\n            interact($choiceArea.selector + ' >li.deactivated').on('tap', function(e) {\n                var $target = $(e.currentTarget);\n                $target.addClass('brd-error');\n                instructionMax.setLevel('warning', 2000);\n                setTimeout(function(){\n                    $target.removeClass('brd-error');\n                }, 150);\n            });\n\n            // we don't check for isDragAndDropEnabled on purpose, as this binding is not to allow dragging,\n            // but only to provide feedback in case of a drag action on an inactive choice\n            interact($choiceArea.selector + ' >li.deactivated').draggable({\n                onstart: function (e) {\n                    var $target = $(e.target);\n                    $target.addClass('brd-error');\n                    instructionMax.setLevel('warning');\n                },\n                onend: function (e) {\n                    var $target = $(e.target);\n                    $target.removeClass('brd-error');\n                    instructionMax.setLevel('info');\n                }\n            }).styleCursor(false);\n        }\n    };\n\n    var resetResponse = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n        var initialOrder = _.keys(interaction.getChoices());\n        var $choiceArea = $('.choice-area', $container).append($('.result-area>li', $container));\n        var $choices = $choiceArea.children('.qti-choice');\n\n        $container.find('.qti-choice.active').each(function deactivateChoice() {\n            interactUtils.tapOn(this);\n        });\n\n        $choices.detach().sort(function(choice1, choice2){\n            return (_.indexOf(initialOrder, $(choice1).data('serial')) > _.indexOf(initialOrder, $(choice2).data('serial')));\n        });\n        $choiceArea.prepend($choices);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n\n        var $container = containerHelper.get(interaction);\n        var $choiceArea = $('.choice-area', $container);\n        var $resultArea = $('.result-area', $container);\n\n        if(response === null || _.isEmpty(response)){\n            resetResponse(interaction);\n        }else{\n            try{\n                _.each(pciResponse.unserialize(response, interaction), function(identifier){\n                    $resultArea.append($choiceArea.find('[data-identifier=' + identifier + ']'));\n                });\n            }catch(e){\n                throw new Error('wrong response format in argument : ' + e);\n            }\n        }\n\n        instructionMgr.validateInstructions(interaction);\n    };\n\n    var _getRawResponse = function(interaction){\n        var $container = containerHelper.get(interaction);\n        var response = [];\n        $('.result-area>li', $container).each(function(){\n            response.push($(this).data('identifier'));\n        });\n        return response;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10283\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        return pciResponse.serialize(_getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Set additionnal data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     */\n    var getCustomData = function(interaction, data){\n\n        return _.merge(data || {}, {\n            horizontal : (interaction.attr('orientation') === 'horizontal')\n        });\n\n    };\n\n    /**\n     * Destroy the interaction by leaving the DOM exactly in the same state it was before loading the interaction.\n     * @param {Object} interaction - the interaction\n     */\n    var destroy = function(interaction){\n\n        var $container = containerHelper.get(interaction);\n\n        //first, remove all events\n        var selectors = [\n            '.choice-area >li:not(.deactivated)',\n            '.result-area >li',\n            '.icon-add-to-selection',\n            '.icon-remove-from-selection',\n            '.icon-move-before',\n            '.icon-move-after'\n        ];\n        selectors.forEach(function unbindInteractEvents(selector) {\n            interact($container.find(selector).selector).unset();\n        });\n\n        $(document).off('.commonRenderer');\n\n        $container.find('.order-interaction-area').removeAttr('style');\n\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        var $container;\n\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n\n            //restore order of previously shuffled choices\n            if(_.isArray(state.order) && state.order.length === _.size(interaction.getChoices())){\n\n                $container = containerHelper.get(interaction);\n\n                $('.choice-area .qti-choice', $container)\n                    .sort(function(a, b){\n                        var aIndex = _.indexOf(state.order, $(a).data('identifier'));\n                        var bIndex = _.indexOf(state.order, $(b).data('identifier'));\n                        if(aIndex > bIndex) {\n                            return 1;\n                        }\n                        if(aIndex < bIndex) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    .detach()\n                    .appendTo($('.choice-area', $container));\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n\n        //we store also the choice order if shuffled\n        if(interaction.attr('shuffle') === true){\n            $container = containerHelper.get(interaction);\n\n            state.order = [];\n            $('.choice-area .qti-choice', $container).each(function(){\n               state.order.push($(this).data('identifier'));\n            });\n        }\n        return state;\n    };\n\n     /**\n     * Expose the common renderer for the order interaction\n     * @exports qtiCommonRenderer/renderers/interactions/OrderInteraction\n     */\n    return {\n        qtiClass : 'orderInteraction',\n        getData : getCustomData,\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse: resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/customInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"qti-interaction qti-customInteraction\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n\n/**\n * Portable element helper\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/PortableElement',['jquery'], function($){\n    'use strict';\n\n    var imgSrcPattern = /(<img[^>]*src=[\"'])([^\"']+)([\"'])/ig;\n\n    /**\n     * Replace all identified relative media urls by the absolute one.\n     * For now only images are supported.\n     *\n     * @param {String} html - the html to parse\n     * @param {Object} the renderer\n     * @returns {String} the html without updated URLs\n     */\n    function fixMarkupMediaSources(html, renderer){\n        html = html || '';\n\n        return html.replace(imgSrcPattern, function(substr, $1, $2, $3){\n            var resolved = renderer.resolveUrl($2) || $2;\n            return $1 + resolved + $3;\n        });\n    }\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/PortableElement\n     */\n    return {\n        fixMarkupMediaSources : fixMarkupMediaSources,\n    };\n});\n\n","define('qtiCustomInteractionContext',[],function(){\n\n    //need a global reference to have pciHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._pciHooks = window._pciHooks || {};\n\n    /**\n     * Global object accessible by all PCIs\n     * \n     * @type Object\n     */\n    var taoQtiCustomInteractionContext = {\n        /**\n         * register a custom interaction (its runtime model) in global registery\n         * register a renderer\n         * \n         * @param {Object} pciHook\n         * @returns {undefined}\n         */\n        register : function(pciHook){\n            //@todo check pciHook validity\n            window._pciHooks[pciHook.getTypeIdentifier()] = pciHook;\n        },\n        /**\n         * notify when a custom interaction is ready for test taker interaction\n         * \n         * @param {string} pciInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(pciInstance){\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n        /**\n         * notify when a custom interaction is completed by test taker\n         * \n         * @param {string} pciInstance\n         * @fires custominteractiondone\n         */\n        notifyDone : function(pciInstance){\n            //@todo add pciIntance as event data and notify event to delivery engine\n        },\n\n        onready : function onready(customInteraction, state){\n            //to be implemented in future story\n        },\n        ondone : function ondone(customInteraction, response, state, status){\n            //to be implemented in future story\n        },\n\n\n        /**\n         * Get a cloned object representing the PCI model\n         * \n         * @param {string} pciTypeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(pciTypeIdentifier){\n\n            if(window._pciHooks[pciTypeIdentifier]){\n\n                var instance = {},\n                    proto = window._pciHooks[pciTypeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable custom interaction hook found with the id ' + pciTypeIdentifier;\n            }\n        }\n    };\n    \n    \n    return taoQtiCustomInteractionContext;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',[\n    'lodash',\n    'core/promise',\n    'core/logger',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/customInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/PortableElement',\n    'qtiCustomInteractionContext',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/portableElementRegistry/ciRegistry'\n], function(_, Promise, loggerFactory, tpl, containerHelper, PortableElement, qtiCustomInteractionContext, util, ciRegistry){\n    'use strict';\n\n    var logger = loggerFactory('taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction');\n\n    var pciReadyCallback = function pciReadyCallback(pci, state){\n        //standard callback function to be implemented in a future story\n        logger.info('pciReadyCallback called on PCI '+pci.typeIdentifier);\n    }\n\n    var pciDoneCallback = function pciDoneCallback(pci, response, state, status){\n        //standard callback function to be implemented in a future story\n        logger.info('pciDoneCallback called on PCI '+pci.typeIdentifier);\n    }\n\n    /**\n     * Get the PCI instance associated to the interaction object\n     * If none exists, create a new one based on the PCI typeIdentifier\n     *\n     * @param {Object} interaction - the js object representing the interaction\n     * @returns {Object} PCI instance\n     */\n    var _getPci = function _getPci(interaction, model){\n\n        var pciTypeIdentifier,\n            pci = interaction.data('pci') || undefined;\n\n        if(!pci){\n\n            pciTypeIdentifier = interaction.typeIdentifier;\n            pci = qtiCustomInteractionContext.createPciInstance(pciTypeIdentifier);\n\n            if(pci){\n\n                //binds the PCI instance to TAO interaction object and vice versa\n                interaction.data('pci', pci);\n                pci._taoCustomInteraction = interaction;\n\n                if(model){\n                    interaction.data('pci-model', model);\n                }\n\n            }else{\n                throw 'no custom interaction hook found for the type ' + pciTypeIdentifier;\n            }\n        }\n\n        return pci;\n    };\n\n    var _isPciModel = function _isPciModel(interaction, model){\n        return (model && interaction.data('pci-model') === model);\n    }\n\n    /**\n     * Execute javascript codes to bring the interaction to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. configure the paths\n     * 2. require all required libs\n     * 3. create a pci instance based on the interaction model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable (state and/or response)\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction, options){\n        var self = this;\n\n        options = options || {};\n        return new Promise(function(resolve, reject){\n\n            var id                 = interaction.attr('responseIdentifier');\n\n            var typeIdentifier     = interaction.typeIdentifier;\n            var properties         = _.clone(interaction.properties);//clone properties to prevent modification\n            var $dom               = containerHelper.get(interaction).children();\n            var assetManager       = self.getAssetManager();\n\n            //restore state and response to renderer here:\n            var state;\n            var response = {};\n\n            if(options.state && options.state[id]){\n                state = options.state[id];\n            }\n            response[id] = {base : null};\n\n            ciRegistry.loadRuntimes().then(function(){\n\n                var config = {};\n                var requireEntries = [];\n                var runtime = ciRegistry.getRuntime(typeIdentifier);\n\n                if(!runtime){\n                    return reject('The runtime for the pci cannot be found : ' + typeIdentifier);\n                }\n\n                //load hook if applicable\n                if(runtime.hook){\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                }\n\n                //load libs\n                _.forEach(runtime.libraries, function(lib) {\n                    requireEntries.push(lib.replace(/\\.js$/, ''));\n                });\n\n                //load modules\n                _.forEach(runtime.modules, function(module, id){\n                    requireEntries.push(id);\n                });\n\n                //load stylesheets\n                _.forEach(runtime.stylesheets, function(stylesheet){\n                    requireEntries.push('css!'+stylesheet.replace(/\\.css$/, ''));\n                });\n\n                //console.log(requireEntries);\n\n                //load the entrypoint+stylesheets\n                require(requireEntries, function(){\n\n                    var pci = _getPci(interaction, runtime.model);\n                    var pciAssetManager = {\n                        resolve : function resolve(url){\n                            var resolved = assetManager.resolveBy('portableElementLocation', url);\n                            if(resolved === url || _.isUndefined(resolved)){\n                                return assetManager.resolve(url);\n                            }else{\n                                return resolved;\n                            }\n                        }\n                    };\n\n                    if(pci){\n\n                        if(_isPciModel(interaction, 'IMSPCI')){\n                            config = {\n                                properties : properties,\n                                templateVariables : {},//not supported yet\n                                boundTo : response,\n                                onready : pciReadyCallback,\n                                ondone : pciDoneCallback,\n                                status : 'interacting',//only support interacting state currently(TODO: solution, review),\n                                assetManager : pciAssetManager\n                            };\n\n                            pci.getInstance($dom[0], config, state);\n                        }else{\n                            //call pci initialize() to render the pci\n                            pci.initialize(id, $dom[0], properties, pciAssetManager);\n                        }\n\n                        //forward internal PCI event responseChange\n                        interaction.onPci('responseChange', function(){\n                            containerHelper.triggerResponseChangeEvent(interaction);\n                        });\n\n                        return resolve();\n                    }\n\n                    return reject('Unable to initialize pci \"' + id + '\": '+error);\n\n                }, reject);\n\n            }).catch(function(error){\n                reject('Error loading runtime \"' + id + '\": '+error);\n            });\n        });\n    };\n\n    /**\n     * Programmatically set the response following the json schema described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function(interaction, response){\n        _getPci(interaction).setResponse(response);\n    };\n\n    /**\n     * Get the response in the json format described in\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * @param {Object} interaction\n     * @returns {Object}\n     */\n    var getResponse = function(interaction){\n        return _getPci(interaction).getResponse();\n    };\n\n    /**\n     * Remove the current response set in the interaction\n     * The state may not be restored at this point.\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function(interaction){\n        _getPci(interaction).resetResponse();\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} interaction\n     */\n    var destroy = function(interaction){\n        _getPci(interaction).destroy();\n    };\n\n    /**\n     * Restore the state of the interaction from the serializedState.\n     *\n     * @param {Object} interaction\n     * @param {Object} serializedState - json format\n     */\n    var setState = function(interaction, serializedState){\n        if(!_isPciModel(interaction, 'IMSPCI')){\n            _getPci(interaction).setSerializedState(serializedState);\n        }\n    };\n\n    /**\n     * Get the current state of the interaction as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} interaction\n     * @returns {Object} json format\n     */\n    var getState = function(interaction){\n        if(_isPciModel(interaction, 'IMSPCI')){\n            return _getPci(interaction).getState();\n        }else{\n            return _getPci(interaction).getSerializedState();\n        }\n    };\n\n    return {\n        qtiClass : 'customInteraction',\n        template : tpl,\n        getData : function(customInteraction, data){\n\n            //remove ns + fix media file path\n            var markup = data.markup;\n            markup = util.removeMarkupNamespaces(markup);\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\n            data.markup = markup;\n\n            return data;\n        },\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        getState : getState,\n        setState : setState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/prompt', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"qti-prompt-container\\\" data-html-editable-container>\\n    <div class=\\\"qti-prompt\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-html-editable>\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/prompt',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'],\nfunction(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'prompt',\n        template : tpl,\n        getContainer : containerHelper.get\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/selectPointInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-graphicInteraction qti-selectPointInteraction clearfix\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"image-editor solid\\\">\\n        <div id='graphic-paper-\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class=\\\"main-image-box\\\"></div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * The Common Render for the Select Point Interaction\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/selectPointInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/Graphic',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager'\n], function($, _, __, Promise, tpl, graphic, pciResponse, containerHelper, instructionMgr){\n    'use strict';\n\n    /**\n     * Get the responses from the interaction\n     * @param {Object} interaction\n     * @returns {Array} of points\n     */\n    var getRawResponse = function getRawResponse(interaction){\n        if(interaction && interaction.paper && _.isArray(interaction.paper.points)){\n            return _.map(interaction.paper.points, function(point){\n                return [point.x, point.y];\n            });\n        }\n        return [];\n    };\n\n    /**\n     * Add a new point to the interaction\n     * @param {Object} interaction\n     * @param {Object} point - the x/y point\n     */\n    var addPoint = function addPoint(interaction, point){\n        var maxChoices = interaction.attr('maxChoices');\n\n        var pointChange = function pointChange(){\n            containerHelper.triggerResponseChangeEvent(interaction);\n            instructionMgr.validateInstructions(interaction);\n        };\n\n        if(maxChoices > 0 && getRawResponse(interaction).length >= maxChoices){\n            instructionMgr.validateInstructions(interaction);\n        } else {\n\n            if(!_.isArray(interaction.paper.points)){\n                interaction.paper.points = [];\n            }\n\n            graphic.createTarget(interaction.paper, {\n                point : point,\n                create : function create(target){\n                    if(interaction.isTouch && target && target.getBBox){\n                        graphic.createTouchCircle(interaction.paper, target.getBBox());\n                    }\n\n                    interaction.paper.points.push(point);\n\n                    pointChange();\n                },\n                remove : function remove(){\n\n                    _.remove(interaction.paper.points, point);\n\n                    pointChange();\n                }\n            });\n        }\n    };\n\n    /**\n     * Make the image clickable and place targets at the given position.\n     * @param {Object} interaction\n     */\n    var enableSelection = function enableSelection(interaction){\n        var $container      = containerHelper.get(interaction);\n        var $imageBox       = $container.find('.main-image-box');\n        var isResponsive    = $container.hasClass('responsive');\n        var image           = interaction.paper.getById('bg-image-' + interaction.serial);\n\n        interaction.paper.isTouch = false;\n\n        //used to see if we are in a touch context\n        image.touchstart(function(){\n            interaction.paper.isTouch = true;\n            image.untouchstart();\n        });\n\n        //get the point on click\n        image.click(function imageClicked(event){\n            addPoint(interaction, graphic.getPoint(event, interaction.paper, $imageBox, isResponsive));\n        });\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     */\n    var render = function render(interaction){\n        var self = this;\n\n        return new Promise(function(resolve){\n            var $container = containerHelper.get(interaction);\n            var background = interaction.object.attributes;\n\n            $container\n                .off('resized.qti-widget.resolve')\n                .one('resized.qti-widget.resolve', resolve);\n\n            //create the paper\n            interaction.paper = graphic.responsivePaper( 'graphic-paper-' + interaction.serial, interaction.serial, {\n                width       : background.width,\n                height      : background.height,\n                img         : self.resolveUrl(background.data),\n                imgId       : 'bg-image-' + interaction.serial,\n                container   : $container\n            });\n\n            //enable to select the paper to position a target\n            enableSelection(interaction);\n\n            //set up the constraints instructions\n            instructionMgr.minMaxChoiceInstructions(interaction, {\n                min: interaction.attr('minChoices'),\n                max: interaction.attr('maxChoices'),\n                choiceCount : false,\n                getResponse : getRawResponse,\n                onError : function(data){\n                    if(data){\n                        graphic.highlightError(data.target, 'success');\n                    }\n                }\n            });\n        });\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @param {Object} response\n     */\n    var setResponse = function(interaction, response){\n        var responseValues;\n\n        if(response && interaction.paper){\n            try{\n                responseValues = pciResponse.unserialize(response, interaction);\n\n                if(interaction.getResponseDeclaration().attr('cardinality') === 'single'){\n                    responseValues = [responseValues];\n                }\n                _(responseValues)\n                    .filter(function(point){\n                        return _.isArray(point) && point.length === 2;\n                    })\n                    .forEach(function(point){\n                        addPoint(interaction, {\n                            x : point[0],\n                            y : point[1]\n                        });\n                    });\n            } catch (err) {\n                return;\n            }\n        }\n    };\n\n    /**\n     * Reset the current responses of the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {Object} interaction\n     */\n    var resetResponse = function resetResponse(interaction){\n        if(interaction && interaction.paper){\n            interaction.paper.points = [];\n\n            interaction.paper.forEach(function(element){\n                var point = element.data('point');\n                if(typeof point === 'object'){\n                    graphic.trigger(element, 'click');\n                }\n            });\n        }\n    };\n\n    /**\n     i* Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {Object} interaction\n     * @returns {Object} the response\n     */\n    var getResponse = function(interaction){\n        return pciResponse.serialize(getRawResponse(interaction), interaction);\n    };\n\n    /**\n     * Clean interaction destroy\n     * @param {Object} interaction\n     */\n    var destroy = function destroy(interaction){\n        var $container;\n        if(interaction.paper){\n            $container = containerHelper.get(interaction);\n\n            $(window).off('resize.qti-widget.' + interaction.serial);\n            $container.off('resize.qti-widget.' + interaction.serial);\n\n            interaction.paper.clear();\n            instructionMgr.removeInstructions(interaction);\n\n            $('.main-image-box', $container).empty().removeAttr('style');\n            $('.image-editor', $container).removeAttr('style');\n        }\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Expose the common renderer for the interaction\n     * @exports qtiCommonRenderer/renderers/interactions/SelectPointInteraction\n     */\n    return {\n        qtiClass:      'selectPointInteraction',\n        template:      tpl,\n        render:        render,\n        getContainer:  containerHelper.get,\n        setResponse:   setResponse,\n        getResponse:   getResponse,\n        resetResponse: resetResponse,\n        destroy:       destroy,\n        setState:      setState,\n        getState:      getState\n    };\n});\n\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/sliderInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\n  buffer += \"<div \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-blockInteraction qti-sliderInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"sliderInteraction\\\" >\\r\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n    <div class=\\\"instruction-container\\\"></div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/sliderInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'nouislider'\n], function($, _, __,tpl, containerHelper, instructionMgr, pciResponse){\n    'use strict';\n\n    var _slideTo = function(options){\n        options.sliderCurrentValue.find('.qti-slider-cur-value').text(options.value);\n        options.sliderValue.val(options.value);\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    var render = function(interaction){\n\n        var attributes = interaction.getAttributes(),\n            $container = interaction.getContainer(),\n            $el = $('<div />').attr({'id' : attributes.responseIdentifier + '-qti-slider', 'class' : 'qti-slider'}), //slider element\n        $sliderLabels = $('<div />').attr({'class' : 'qti-slider-values'}),\n        $sliderCurrentValue = $('<div />').attr({'id' : attributes.responseIdentifier + '-qti-slider-cur-value', 'class' : 'qti-slider-cur-value'}), //show the current selected value\n        $sliderValue = $('<input />').attr({'type' : 'hidden', 'id' : attributes.responseIdentifier + '-qti-slider-value'}); //the input that always holds the slider value\n\n        //getting the options\n        var orientation = 'horizontal',\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false, //setting the slider whether to be reverse or not\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            step = typeof attributes.step !== 'undefined' && attributes.step ? parseInt(attributes.step) : 1, //default value as per QTI standard\n            steps = (max - min) / step; //number of the steps\n\n        //add the containers\n        $sliderCurrentValue.append('<span class=\"qti-slider-cur-value-text\">'+__('Current value:')+' </span>')\n            .append('<span class=\"qti-slider-cur-value\"></span>');\n\n        $sliderLabels.append('<span class=\"slider-min\">' + (!reverse ? min : max) + '</span>')\n            .append('<span class=\"slider-max\">' + (!reverse ? max : min) + '</span>');\n\n        interaction.getContainer().append($el)\n            .append($sliderLabels)\n            .append($sliderCurrentValue)\n            .append($sliderValue);\n\n        //setting the orientation of the slider\n        if(typeof attributes.orientation !== 'undefined' && $.inArray(attributes.orientation, ['horizontal', 'vertical']) > -1){\n            orientation = attributes.orientation;\n        }\n\n        var sliderSize = 0;\n\n        if(orientation === 'horizontal'){\n            $container.addClass('qti-slider-horizontal');\n        }else{\n            var maxHeight = 300;\n            sliderSize = steps * 20;\n            if(sliderSize > maxHeight){\n                sliderSize = maxHeight;\n            }\n            $container.addClass('qti-slider-vertical');\n            $el.height(sliderSize + 'px');\n            $sliderLabels.height(sliderSize + 'px');\n        }\n\n        //set the middle value if the stepLabel attribute is enabled\n        if(typeof attributes.stepLabel !== 'undefined' && attributes.stepLabel){\n            var middleStep = parseInt(steps / 2),\n                leftOffset = (100 / steps) * middleStep,\n                middleValue = reverse ? max - (middleStep * step) : min + (middleStep * step);\n\n            if(orientation === 'horizontal'){\n                $sliderLabels.find('.slider-min').after('<span class=\"slider-middle\" style=\"left:' + leftOffset + '%\">' + middleValue + '</span>');\n            }else{\n                $sliderLabels.find('.slider-min').after('<span class=\"slider-middle\" style=\"top:' + leftOffset + '%\">' + middleValue + '</span>');\n            }\n\n        }\n\n        //create the slider\n        $el.noUiSlider({\n            start : reverse ? max : min,\n            range: {\n                'min': min,\n                'max': max\n            },\n            step : step,\n            orientation : orientation\n        }).on('slide', function(e){\n            var val = parseInt($(this).val());\n            if((interaction.attr('reverse'))){\n                val = (max + min) - val;\n            }\n            val = Math.round(val * 1000) / 1000;\n            _slideTo({\n                'value' : val,\n                'sliderValue' : $sliderValue,\n                'sliderCurrentValue' : $sliderCurrentValue\n            });\n\n            containerHelper.triggerResponseChangeEvent(interaction);\n        });\n\n        _slideTo({\n            'value' : min,\n            'sliderValue' : $sliderValue,\n            'sliderCurrentValue' : $sliderCurrentValue\n        });\n    };\n\n    var resetResponse = function(interaction){\n        var attributes = interaction.getAttributes(),\n            $el = $('#' + attributes.responseIdentifier + '-qti-slider'),\n            $sliderValue = $('#' + attributes.responseIdentifier + '-qti-slider-value'),\n            $sliderCurrentValue = $('#' + attributes.responseIdentifier + '-qti-slider-cur-value'),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            reverse = typeof attributes.reverse !== 'undefined' && attributes.reverse ? true : false,\n            startValue = reverse ? max : min;\n\n        _slideTo({\n            'value' : min,\n            'sliderValue' : $sliderValue,\n            'sliderCurrentValue' : $sliderCurrentValue\n        });\n\n        $el.val(startValue);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function(interaction, response){\n        var attributes = interaction.getAttributes(),\n            $sliderValue = $('#' + attributes.responseIdentifier + '-qti-slider-value'),\n            $sliderCurrentValue = $('#' + attributes.responseIdentifier + '-qti-slider-cur-value'),\n            $el = $('#' + attributes.responseIdentifier + '-qti-slider'),\n            min = parseInt(attributes.lowerBound),\n            max = parseInt(attributes.upperBound),\n            value;\n\n        value = pciResponse.unserialize(response, interaction)[0];\n\n        _slideTo({\n            'value' : value,\n            'sliderValue' : $sliderValue,\n            'sliderCurrentValue' : $sliderCurrentValue\n        });\n\n        $el.val(interaction.attr('reverse') ? (max + min) - value : value);\n    };\n\n    var _getRawResponse = function(interaction){\n\n        var value,\n            attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            min = parseInt(attributes.lowerBound),\n            $sliderValue = $('#' + attributes.responseIdentifier + '-qti-slider-value');\n        \n        if(baseType === 'integer'){\n            value = parseInt($sliderValue.val());\n        }else if(baseType === 'float'){\n            value = parseFloat($sliderValue.val());\n        }\n\n        return isNaN(value) ? min : value;\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function(interaction){\n        return pciResponse.serialize([_getRawResponse(interaction)], interaction);\n    };\n\n    var destroy = function(interaction) {\n        var $container = interaction.getContainer();\n\n        $container.empty();\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var $container;\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n\n    return {\n        qtiClass : 'sliderInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/textEntryInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\n  buffer += \"<input \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-interaction qti-inlineInteraction qti-textEntryInteraction\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"textEntryInteraction\\\" type=\\\"text\\\">\\n\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/textEntryInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/PciResponse',\n    'taoQtiItem/qtiCommonRenderer/helpers/patternMask',\n    'util/locale',\n    'ui/tooltip'\n], function($, _, __, tpl, containerHelper, instructionMgr, pciResponse, patternMaskHelper, locale){\n    'use strict';\n\n    /**\n     * Prepare the feedback tooltip for the text input\n     * @param {jQuery} $input\n     * @param {String} theme\n     * @param {String} message\n     * @param {Boolean} [forceCreation=false]\n     * @param {Boolean} [hidden=false]\n     */\n    var createTooltip = function createTooltip($input, theme, message, forceCreation, hidden){\n        if(forceCreation || !$input.data('qtip')){\n            $input.qtip({\n                theme : theme,\n                content : {\n                    text : message\n                },\n                show : {\n                    event : 'custom'\n                },\n                hide : {\n                    event : 'custom'\n                }\n            });\n        }else{\n            $input.qtip('option', 'content.text', message);\n            $input.qtip('option', 'theme', 'info');\n        }\n        if(!hidden){\n            $input.qtip('show');\n        }\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction){\n        var attributes = interaction.getAttributes(),\n            $input = interaction.getContainer(),\n            expectedLength,\n            updateConstraintTooltip,\n            patternMask = interaction.attr('patternMask'),\n            maxChars = parseInt(patternMaskHelper.parsePattern(patternMask,'chars'),10);\n\n        //setting up the width of the input field\n        if(attributes.expectedLength){\n            //adding 2 chars to include reasonable padding size\n            expectedLength = parseInt(attributes.expectedLength) + 2;\n            $input.css('width', expectedLength + 'ch');\n            $input.css('min-width', expectedLength + 'ch');\n        }\n\n        //checking if there's a placeholder for the input\n        if(attributes.placeholderText){\n            $input.attr('placeholder', attributes.placeholderText);\n        }\n\n        if(maxChars){\n\n            updateConstraintTooltip = function updateConstraintTooltip(){\n                var count = $input.val().length;\n                var message;\n                if(count >= maxChars){\n                    $input.addClass('maxed');\n                    createTooltip($input, 'warning', __('%d/%d', count, maxChars), true);\n                }else{\n                    if(count){\n                        message = __('%d/%d', count, maxChars);\n                    }else{\n                        message = __('%d characters allowed', maxChars);\n                    }\n                    if($input.hasClass('maxed')){\n                        $input.removeClass('maxed');\n                        createTooltip($input, 'info', message, true);\n                    }else{\n                        createTooltip($input, 'info', message);\n                    }\n                }\n            };\n\n            $input\n                .attr('maxlength', maxChars)\n                .on('focus.commonRenderer keydown.commonRenderer', updateConstraintTooltip)\n                .on('keyup.commonRenderer', function(){\n                    updateConstraintTooltip();\n                    containerHelper.triggerResponseChangeEvent(interaction);\n                })\n                .on('blur.commonRenderer', function(){\n                    $input.qtip('hide');\n                });\n\n        }else if(attributes.patternMask){\n\n            //set up the tooltip plugin for the input\n            createTooltip($input, 'error', __('This is not a valid answer'), true, true);\n\n            $input.on('keyup.commonRenderer', _.debounce(function(){\n                var regex = new RegExp(attributes.patternMask);\n                if(regex.test($input.val())){\n                    $input.removeClass('invalid').qtip('hide');\n                } else {\n                    $input.addClass('invalid').qtip('show');//adding the class invalid prevent the invalid response to be submitted\n                }\n                containerHelper.triggerResponseChangeEvent(interaction);\n            }, 600)).on('keydown.commonRenderer', function(){\n                //hide the error message while the test taker is inputing an error (let's be indulgent, she is trying to fix her error)\n                $input.qtip('hide');\n            });\n\n        }else{\n            $input.on('keyup.commonRenderer', function(){\n                containerHelper.triggerResponseChangeEvent(interaction);\n            });\n        }\n    };\n\n    var resetResponse = function resetResponse(interaction){\n        interaction.getContainer().val('');\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * Special value: the empty object value {} resets the interaction responses\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response){\n\n        var responseValue;\n\n        try{\n            responseValue = pciResponse.unserialize(response, interaction);\n        }catch(e){\n        }\n\n        if(responseValue && responseValue.length){\n            interaction.getContainer().val(responseValue[0]);\n        }\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10333\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction){\n        var ret = {'base' : {}},\n        value,\n            $input = interaction.getContainer(),\n            attributes = interaction.getAttributes(),\n            baseType = interaction.getResponseDeclaration().attr('baseType'),\n            numericBase = attributes.base || 10;\n        \n        if($input.hasClass('invalid') || (attributes.placeholderText && $input.val() === attributes.placeholderText)){\n            //invalid response or response equals to the placeholder text are considered empty\n            value = '';\n        }else{\n            if (baseType === 'integer') {\n                value = locale.parseInt($input.val(), numericBase);\n            } else if (baseType === 'float') {\n                value = locale.parseFloat($input.val());\n            } else if (baseType === 'string') {\n                value = $input.val();\n            }\n        }\n\n        ret.base[baseType] = isNaN(value) && typeof value === 'number' ? '' : value;\n\n        return ret;\n    };\n\n    var destroy = function destroy(interaction){\n        //remove event\n        $(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState  = function setState(interaction, state){\n        if(_.isObject(state)){\n            if(state.response){\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction){\n        var state =  {};\n        var response =  interaction.getResponse();\n\n        if(response){\n            state.response = response;\n        }\n        return state;\n    };\n\n    return {\n        qtiClass : 'textEntryInteraction',\n        template : tpl,\n        render : render,\n        getContainer : containerHelper.get,\n        setResponse : setResponse,\n        getResponse : getResponse,\n        resetResponse : resetResponse,\n        destroy : destroy,\n        setState : setState,\n        getState : getState\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/uploadInteraction', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"accept=\\\"\";\n  if (helper = helpers.accept) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.accept); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"qti-interaction qti-blockInteraction qti-uploadInteraction\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n\t\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.prompt), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\t<div class=\\\"instruction-container\\\"></div>\\n    <div class=\\\"file-upload fixed-grid-row lft\\\">\\n        <div class=\\\"progressbar\\\"></div>\\n        <span class=\\\"btn-info small col-4\\\"></span>\\n        <span class=\\\"file-name placeholder col-8 truncate\\\"></span>\\n        <input type=\\\"file\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.accept), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n    </div>\\n    <div class=\\\"file-upload-preview lft visible-file-upload-preview runtime-visible-file-upload-preview\\\">\\n        <p class=\\\"nopreview\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"No preview available\", options) : helperMissing.call(depth0, \"__\", \"No preview available\", options)))\n    + \"</p>\\n    </div>\\n    <div class=\\\"file-upload-preview-popup modal\\\">\\n        <div class=\\\"modal-body\\\">\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/uploadMime',[\n    'lodash',\n    'i18n'\n], function (_, __) {\n    \"use strict\";\n\n    var uploadMime = {\n        /**\n         * @TODO these mime types are not up-to-date, in particular the MS ones\n         * refer to http://filext.com/faq/office_mime_types.php\n         * @type [{getMimeTypes: getMimeTypes}]\n         */\n        getMimeTypes : function getMimeTypes() {\n            return [\n                {\"mime\": \"application/zip\", \"label\": __(\"ZIP archive\"), equivalent:[\"application/x-zip-compressed\"]},\n                {\"mime\": \"text/plain\", \"label\": __(\"Plain text\")},\n                {\"mime\": \"application/pdf\", \"label\": __(\"PDF file\")},\n                {\"mime\": \"image/jpeg\", \"label\": __(\"JPEG image\")},\n                {\"mime\": \"image/png\", \"label\": __(\"PNG image\")},\n                {\"mime\": \"image/gif\", \"label\": __(\"GIF image\")},\n                {\"mime\": \"image/svg+xml\", \"label\": __(\"SVG image\")},\n                {\"mime\": \"audio/mpeg\", \"label\": __(\"MPEG audio\"), equivalent:[\"audio/mp3\"]},\n                {\"mime\": \"audio/x-ms-wma\", \"label\": __(\"Windows Media audio\")},\n                {\"mime\": \"audio/x-wav\", \"label\": __(\"WAV audio\"), equivalent:[\"audio/wav\"]},\n                {\"mime\": \"video/mpeg\", \"label\": __(\"MPEG video\")},\n                {\"mime\": \"video/mp4\", \"label\": __(\"MP4 video\")},\n                {\"mime\": \"video/quicktime\", \"label\": __(\"Quicktime video\")},\n                {\"mime\": \"video/x-ms-wmv\", \"label\": __(\"Windows Media video\")},\n                {\"mime\": \"video/x-flv\", \"label\": __(\"Flash video\")},\n                {\"mime\": \"text/csv\", \"label\": __(\"CSV file\")},\n                {\"mime\": \"application/msword\", \"label\": __(\"Microsoft Word\"), equivalent:[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"]},\n                {\"mime\": \"application/vnd.ms-excel\", \"label\": __(\"Microsoft Excel\"), equivalent:[\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"]},\n                {\"mime\": \"application/vnd.ms-powerpoint\", \"label\": __(\"Microsoft Powerpoint\"), equivalent:[\"application/vnd.openxmlformats-officedocument.presentationml.presentation\"]}\n            ];\n        },\n\n        /**\n         * Set the expected types in the format according to the number of types\n         *\n         * @param {Object} interaction\n         * @param {Array} types\n         */\n        setExpectedTypes : function setExpectedTypes(interaction, types) {\n            var classes = interaction.attr('class') || '';\n            classes = classes.replace(/x-tao-upload-type-[-_a-zA-Z+.0-9]*/g, '').trim();\n            interaction.attr('class', classes);\n            interaction.removeAttr('type');\n\n            if (!types) {\n                return;\n            }\n\n            if (types.length === 1) {\n                //if there is only one value set into the qti standard type attribute\n                if (types[0] !== 'any/kind') {\n                    interaction.attr('type', types[0]);\n                }\n            } else {\n                //if there is more than one value, set into into TAO specific css classes\n                //qti 2.1 xsd indeed does not allow comma-separated multi mime type value for the attribute \"type\n                interaction.attr('class', _.reduce(types, function (acc, selectedType) {\n                    return acc + ' x-tao-upload-type-' + selectedType.replace('/', '_');\n                }, classes).trim());\n            }\n        },\n\n        /**\n         * Return the array of authorized mime types\n         * It first get the standard \"type\" attribute value.\n         * If not set search the TAO specific type information recorded in the class attributes,\n         * qti 2.1 xsd indeed does not allow comma-separated multi mime type value for the attribute \"type\"\n         * @param {Object} interaction - standard QTI interaction model object\n         * @param {Boolean} [includeEquivalents] - enable including all recognized as equivalent types\n         * @returns {Array}\n         */\n        getExpectedTypes : function getExpectedTypes(interaction, includeEquivalents) {\n            var classes = interaction.attr('class') || '';\n            var types = [];\n            var mimes;\n            var equivalents = [];\n            if (interaction.attr('type')) {\n                types.push(interaction.attr('type'));\n            } else {\n                classes.replace(/x-tao-upload-type-([-_a-zA-Z+.0-9]*)/g, function ($0, type) {\n                    types.push(type.replace('_', '/').trim());\n                });\n            }\n\n            // add in equivalent mimetypes to the list of expected types\n            if(includeEquivalents === true){\n                mimes = uploadMime.getMimeTypes();\n                _.forEach(types, function(mime){\n                    var mimeData = _.find(mimes, {mime:mime});\n                    if(mimeData && _.isArray(mimeData.equivalent)){\n                        equivalents = _.union(equivalents, mimeData.equivalent);\n                    }\n                });\n            }\n\n            return _.union(types, equivalents);\n        }\n    };\n\n    return uploadMime;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'context',\n    'core/mimetype',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/interactions/uploadInteraction',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/instructions/instructionManager',\n    'taoQtiItem/qtiCommonRenderer/helpers/uploadMime',\n    'ui/progressbar',\n    'ui/previewer',\n    'ui/modal',\n    'ui/waitForMedia'\n], function ($, _, __, context, mimetype, tpl, containerHelper, instructionMgr, uploadHelper) {\n    'use strict';\n\n    var _initialInstructions = __('Browse your computer and select the appropriate file.');\n\n    var _readyInstructions = __('The selected file is ready to be sent.');\n\n    /**\n     * Validate type of selected file\n     * @param file\n     * @param interaction\n     * @returns {boolean}\n     */\n    var validateFileType = function validateFileType (file, interaction) {\n        var expectedTypes = uploadHelper.getExpectedTypes(interaction, true);\n        var filetype = mimetype.getMimeType(file);\n        if (expectedTypes.length) {\n            return (_.indexOf(expectedTypes, filetype) >= 0);\n        }\n        return true;\n    };\n\n    /**\n     * Compute the message to be displayed when an invalid file type has been selected\n     *\n     * @param {Object} interaction\n     * @param {Function} userSelectedType\n     * @param {Function} messageWrongType\n     * @returns {String}\n     */\n    var getMessageWrongType = function getMessageWrongType(interaction, userSelectedType, messageWrongType){\n        var types = uploadHelper.getExpectedTypes(interaction);\n        var expectedTypeLabels = _.map(_.uniq(types), function(type){\n            var mime = _.find(uploadHelper.getMimeTypes(), {mime : type});\n            if(mime){\n                return mime.label;\n            }else{\n                return type;\n            }\n        });\n\n        if(messageWrongType && _.isFunction(messageWrongType)){\n            return messageWrongType({\n                userSelectedType : userSelectedType,\n                types : expectedTypeLabels\n            });\n        }else{\n            return __('Wrong type of file. Expected %s. The selected file has the mimetype \"%s\".', expectedTypeLabels.join(__(' or ')), userSelectedType);\n        }\n    };\n\n    var _handleSelectedFiles = function _handleSelectedFiles(interaction, file, messageWrongType) {\n\n        var reader;\n        var $container = containerHelper.get(interaction);\n\n        // Show information about the processed file to the candidate.\n        var filename = file.name;\n        var filetype = mimetype.getMimeType(file);\n        instructionMgr.removeInstructions(interaction);\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        if (!validateFileType(file, interaction)) {\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(interaction, getMessageWrongType(interaction, filetype, messageWrongType), function () {\n                this.setLevel('error');\n                //clear preview\n            });\n            instructionMgr.validateInstructions(interaction);\n            return;\n        }\n\n        $container.find('.file-name').empty()\n            .append(filename);\n\n        // Let's read the file to get its base64 encoded content.\n        reader = new FileReader();\n\n        // Update file processing progress.\n\n        reader.onload = function (e) {\n            var base64Data, commaPosition, base64Raw, $previewArea;\n\n            instructionMgr.removeInstructions(interaction);\n            instructionMgr.appendInstruction(interaction, _readyInstructions, function () {\n                this.setLevel('success');\n            });\n            instructionMgr.validateInstructions(interaction);\n\n            $container.find('.progressbar').progressbar('value', 100);\n\n            base64Data = e.target.result;\n            commaPosition = base64Data.indexOf(',');\n\n            // Store the base64 encoded data for later use.\n            base64Raw = base64Data.substring(commaPosition + 1);\n            interaction.data('_response', {base: {file: {data: base64Raw, mime: filetype, name: filename}}});\n\n            $previewArea = $container.find('.file-upload-preview');\n            $previewArea.previewer({\n                url: base64Data,\n                name: filename,\n                mime: filetype\n            });\n\n            // we wait for the image to be completely loaded\n            $previewArea.waitForMedia(function(){\n                var $originalImg = $previewArea.find('img'),\n                    $largeDisplay = $('.file-upload-preview-popup'),\n                    $item = $('.qti-item'),\n                    itemWidth = $item.width(),\n                    winWidth = $(window).width() - 80,\n                    fullHeight = $('body').height(),\n                    imgNaturalWidth,\n                    isOversized,\n                    modalWidth;\n\n                if(!$originalImg.length) {\n                    return;\n                }\n\n                imgNaturalWidth = $originalImg[0].naturalWidth;\n                isOversized = imgNaturalWidth > itemWidth;\n                modalWidth = Math.min(winWidth, imgNaturalWidth);\n\n                $previewArea.toggleClass('clickable', isOversized);\n\n                if(!isOversized) {\n                    return;\n                }\n\n                $previewArea.on('click', function(){\n                    var $modalBody;\n\n                    $('.upload-ia-modal-bg').remove();\n\n                    // remove any previous unnecessary content before inserting the preview image\n                    $modalBody = $largeDisplay.find('.modal-body');\n                    $modalBody.empty().append($originalImg.clone());\n\n                    $largeDisplay\n                        .on('opened.modal', function(){\n\n                            // prevents the rest of the page from scrolling when modal is open\n                            $('.tao-item-scope.tao-preview-scope').css('overflow', 'hidden');\n\n                            $largeDisplay.css({\n                                width: modalWidth,\n                                height: fullHeight,\n                                left: (modalWidth - itemWidth -40) / -2\n                            });\n\n                        })\n                        .on('closed.modal', function(){\n                            // make the page scrollable again\n                            $('.tao-item-scope.tao-preview-scope').css('overflow', 'auto');\n\n                        })\n                        .modal({modalOverlayClass: 'modal-bg upload-ia-modal-bg'});\n\n                });\n            });\n\n        };\n\n        reader.onloadstart = function onloadstart() {\n            instructionMgr.removeInstructions(interaction);\n            $container.find('.progressbar').progressbar('value', 0);\n        };\n\n        reader.onprogress = function onprogress(e) {\n            var percentProgress = Math.ceil(Math.round(e.loaded) / Math.round(e.total) * 100);\n            $container.find('.progressbar').progressbar('value', percentProgress);\n        };\n\n        reader.readAsDataURL(file);\n\n    };\n\n    var _resetGui = function _resetGui(interaction) {\n        var $container = containerHelper.get(interaction);\n        $container.find('.file-name').text(__('No file selected'));\n        $container.find('.btn-info').text(__('Browse...'));\n    };\n\n    /**\n     * Init rendering, called after template injected into the DOM\n     * All options are listed in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     */\n    var render = function render(interaction) {\n        var changeListener, self = this, $input;\n        var $container = containerHelper.get(interaction);\n        _resetGui(interaction);\n\n        instructionMgr.appendInstruction(interaction, _initialInstructions);\n\n        //init response\n        interaction.data('_response', {base: null});\n\n        changeListener = function (e) {\n            var file = e.target.files[0];\n\n            // Are you really sure something was selected\n            // by the user... huh? :)\n            if (typeof(file) !== 'undefined') {\n                _handleSelectedFiles(interaction, file, self.getCustomMessage('upload', 'wrongType'));\n            }\n        };\n\n        $input = $container.find('input');\n\n        $container.find('.progressbar').progressbar();\n\n        if (!window.FileReader) {\n            throw new Error('FileReader API not supported! Please use a compliant browser!');\n        }\n        $input.bind('change', changeListener);\n\n        // IE Specific hack, prevents button to slightly move on click\n        $input.bind('mousedown', function (e) {\n            e.preventDefault();\n            $(this).blur();\n            return false;\n        });\n    };\n\n    var resetResponse = function resetResponse(interaction) {\n        _resetGui(interaction);\n    };\n\n    /**\n     * Set the response to the rendered interaction.\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @param {object} response\n     */\n    var setResponse = function setResponse(interaction, response) {\n        var filename, $container = containerHelper.get(interaction);\n\n        if (response.base !== null) {\n            filename = (typeof response.base.file.name !== 'undefined') ? response.base.file.name :\n                'previously-uploaded-file';\n            $container.find('.file-name').empty()\n                .text(filename);\n        }\n\n        interaction.data('_response', response);\n    };\n\n    /**\n     * Return the response of the rendered interaction\n     *\n     * The response format follows the IMS PCI recommendation :\n     * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n     *\n     * Available base types are defined in the QTI v2.1 information model:\n     * http://www.imsglobal.org/question/qtiv2p1/imsqti_infov2p1.html#element10321\n     *\n     * @param {object} interaction\n     * @returns {object}\n     */\n    var getResponse = function getResponse(interaction) {\n        return interaction.data('_response');\n    };\n\n    var destroy = function destroy(interaction) {\n\n        //remove event\n        $(document).off('.commonRenderer');\n        containerHelper.get(interaction).off('.commonRenderer');\n\n        //remove instructions\n        instructionMgr.removeInstructions(interaction);\n\n        //remove all references to a cache container\n        containerHelper.reset(interaction);\n    };\n\n    /**\n     * Set the interaction state. It could be done anytime with any state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @param {Object} state - the interaction state\n     */\n    var setState = function setState(interaction, state) {\n        if (_.isObject(state)) {\n            if (state.response) {\n                interaction.resetResponse();\n                interaction.setResponse(state.response);\n            }\n        }\n    };\n\n    /**\n     * Get the interaction state.\n     *\n     * @param {Object} interaction - the interaction instance\n     * @returns {Object} the interaction current state\n     */\n    var getState = function getState(interaction) {\n        var state = {};\n        var response = interaction.getResponse();\n\n        if (response) {\n            state.response = response;\n        }\n        return state;\n    };\n\n    /**\n     * Set additional data to the template (data that are not really part of the model).\n     * @param {Object} interaction - the interaction\n     * @param {Object} [data] - interaction custom data\n     * @returns {Object} custom data\n     * This way we could cover a lot more types. How could this be matched with the preview templates\n     * in tao/views/js/ui/previewer.js\n     */\n    var getCustomData = function getCustomData (interaction, data) {\n        return _.merge(data || {}, {\n            accept : uploadHelper.getExpectedTypes(interaction, true).join(',')\n        });\n    };\n\n    return {\n        qtiClass: 'uploadInteraction',\n        template: tpl,\n        render: render,\n        getContainer: containerHelper.get,\n        setResponse: setResponse,\n        getResponse: getResponse,\n        resetResponse: resetResponse,\n        destroy: destroy,\n        setState: setState,\n        getState: getState,\n        getData: getCustomData,\n\n        // Exposed private methods for qtiCreator\n        resetGui: _resetGui\n    };\n\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/item', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" id=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"qti-item tao-scope runtime\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\n    <div\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.id), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" class=\\\"qti-itemBody \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    <div id=\\\"modalFeedbacks\\\"></div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * TODO this code should be merged with the theme loader\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler',[\n    'jquery',\n    'lodash'\n], function($, _){\n    'use strict';\n\n    //throttle events because of the loop\n    var informLoaded = _.throttle(function(){\n        $(document).trigger('customcssloaded.styleeditor');\n    }, 10, {leading : false});\n\n    /**\n     * Attach QTI Stylesheets to the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     * @fires customcssloaded.styleeditor on document 10ms after stylesheets are loaded\n     */\n    var attach = function attach(stylesheets) {\n        var $head = $('head');\n\n        //fallback\n        if(!$head.length){\n            $head = $('body');\n        }\n\n         // relative links with cache buster\n        _(stylesheets).forEach(function(stylesheet){\n            var $link,\n                href;\n\n            //if the href is something\n            if(stylesheet.attr('href')){\n                $link = $(stylesheet.render());\n\n                //get the resolved href once rendererd\n                href = $link.attr('href');\n\n                //we need to set the href after the link is appended to the head (for our dear IE)\n                $link.removeAttr('href')\n                     .attr('href', href);\n\n                $link.one('load', informLoaded)\n                     .appendTo($head);\n            }\n        });\n    };\n\n    /**\n     * Remove QTI Stylesheets from the document\n     *\n     * @param {Array} stylesheets - the QTI model stylesheets\n     */\n    var detach = function detach(stylesheets) {\n        _(stylesheets).forEach(function(stylesheet){\n            if(stylesheet.serial){\n                $('link[data-serial=\"' + stylesheet.serial + '\"]').remove();\n            }\n        });\n\n    };\n\n\n    /**\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler\n     */\n    return {\n        attach: attach,\n        detach : detach\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Define the Item Element Renderer\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Item',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/item',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/itemStylesheetHandler'\n], function(tpl, containerHelper, itemStylesheetHandler) {\n    'use strict';\n\n    return {\n        qtiClass: 'assessmentItem',\n        template: tpl,\n        getContainer: containerHelper.get,\n\n        /**\n         * Rendering initializations for the item\n         * @param {Object} item - the item model\n         */\n        render: function render(item) {\n            //target blank for all <a>\n            containerHelper.targetBlank(containerHelper.get(item));\n\n            //add stylesheets\n            itemStylesheetHandler.attach(item.stylesheets);\n        },\n\n        /**\n         * Unrender\n         * @param {Object} item - the item model\n         */\n        destroy : function destroy(item){\n\n            //clear the container cache\n            containerHelper.clear();\n\n            //detach stylesheets\n            if(item.stylesheets){\n                itemStylesheetHandler.detach(item.stylesheets);\n            }\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/math', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"math\\\"><math display = \\\"block\\\">\";\n  if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</math></span>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"math\\\"><math>\";\n  if (helper = helpers.raw) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.raw); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</math></span>\";\n  return buffer;\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.block), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * Math common renderer\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Math',[\n    'lodash',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/math',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'mathJax'\n], function(_, Promise, tpl, containerHelper, MathJax){\n    'use strict';\n\n    // Do not wait between rendering each individual math element\n    // http://docs.mathjax.org/en/latest/api/hub.html\n    if(typeof(MathJax) !== 'undefined' && MathJax) {\n        MathJax.Hub.processSectionDelay = 0;\n    }\n\n    return {\n        qtiClass : 'math',\n        template : tpl,\n        getContainer : containerHelper.get,\n        render : function render (math){\n            return new Promise(function(resolve){\n                if(typeof(MathJax) !== 'undefined' && MathJax){\n                    //MathJax needs to be exported globally to integrate with tools like TTS, it's weird...\n                    if(!window.MathJax){\n                        window.MathJax = MathJax;\n                    }\n                    _.defer(function(){ //defer execution fix some rendering issue in chrome\n\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, containerHelper.get(math).parent()[0]]);\n\n                        //@see http://docs.mathjax.org/en/latest/advanced/typeset.html\n                        MathJax.Hub.Queue(resolve);\n                    });\n                }\n                else {\n                    resolve();\n                }\n            });\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/modalFeedback', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"modal \";\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"<h2 class=\\\"qti-title modal-title\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</h2>\";\n  return buffer;\n  }\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-identifier=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.identifier)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" class=\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.inline), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"qti-modalFeedback \";\n  if (helper = helpers.feedbackStyle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.feedbackStyle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.title), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <div class=\\\"modal-body\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA\n **/\ndefine('taoQtiItem/qtiItem/helper/container',['lodash', 'jquery'], function (_, $){\n    'use strict';\n    \n    /**\n     * Prefix used to the variable storage\n     * @type String\n     */\n    var _prefix = 'x-tao-';\n    \n    /**\n     * Check if the element is of a qti container type\n     * \n     * @private\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function _checkContainerType(element){\n        if(_.isFunction(element.initContainer) && _.isFunction(element.body)){\n            return true;\n        }else{\n            throw 'the element is not of a container type';\n        }\n    }\n    \n    /**\n     * Get the body element of the container\n     * \n     * @private\n     * @param {Object} element\n     * @returns {JQuery}\n     */\n    function _getBodyDom(element){\n        if(_checkContainerType(element)){\n            return $('<div>').html(element.body()).find('.x-tao-wrapper');\n        }\n    }\n    \n    /**\n     * Add a class to the body element of the qti container\n     * \n     * @private\n     * @param {Object} element\n     * @param {String} newClass\n     * @param {String} [oldClass]\n     */\n    function _setBodyDomClass(element, newClass, oldClass){\n\n        if(_checkContainerType(element) && (oldClass || newClass)){\n            var $wrapper = $('<div>').html(element.body());\n            //set css class to element\n            _setDomClass($wrapper, newClass, oldClass);\n            //set to the model\n            element.body($wrapper.html());\n        }\n    }\n    \n    /**\n     * Switch class to the wrapped DOM\n     * \n     * @param {JQuery} $wrapper\n     * @param {String} newClass\n     * @param {String} oldClass\n     * @returns {undefined}\n     */\n    function _setDomClass($wrapper, newClass, oldClass){\n        var $bodyDom = $wrapper.find('.x-tao-wrapper');\n        if(!$bodyDom.length){\n            //create one\n            $wrapper.wrapInner('<div class=\"x-tao-wrapper\">');\n            $bodyDom = $wrapper.find('.x-tao-wrapper');\n        }\n        if(oldClass){\n            $bodyDom.removeClass(oldClass);\n        }\n        if(newClass){\n            $bodyDom.addClass(newClass);\n        }\n    }\n    \n    /**\n     * Add manually the encoded information to a dom element\n     * \n     * @param {JQuery} $wrapper - the wrapper of the element that will holds the information\n     * @param {String} dataName - the name of the information\n     * @param {String} newValue - the new value to be added\n     * @param {String} [oldValue] - the old value to be removed\n     * @returns {undefined}\n     */\n    function setEncodedDataToDom($wrapper, dataName, newValue, oldValue){\n        _setDomClass($wrapper, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n    \n    /**\n     * Get the full variable name for the data store\n     * \n     * @param {String} dataName\n     * @param {String} value\n     * @returns {String}\n     */\n    function _getEncodedDataString(dataName, value){\n        if(dataName && value){\n            return _prefix + dataName + '-' + value;\n        }\n        return '';\n    }\n    \n    /**\n     * Set a data string to the element identified by its dataName\n     * \n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} newValue\n     * @returns {undefined}\n     */\n    function setEncodedData(element, dataName, newValue){\n        var oldValue = getEncodedData(element, dataName);\n        return _setBodyDomClass(element, _getEncodedDataString(dataName, newValue), _getEncodedDataString(dataName, oldValue));\n    }\n    \n    /**\n     * Remove the stored data from the element by its dataName\n     * \n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {unresolved}\n     */\n    function removeEncodedData(element, dataName){\n        var oldValue = getEncodedData(element, dataName);\n        if(dataName && oldValue){\n            _setBodyDomClass(element, '', _getEncodedDataString(dataName, oldValue));\n        }\n    }\n\n    /**\n     * Check if the stored data exist\n     * \n     * @param {Object} element\n     * @param {String} dataName\n     * @param {String} value\n     * @returns {Boolean}\n     */\n    function hasEncodedData(element, dataName, value){\n        var $body = _getBodyDom(element);\n        if($body && $body.length && dataName && value){\n            return $body.hasClass(_getEncodedDataString(dataName, value));\n        }\n        return false;\n    }\n    \n    /**\n     * Get the encoded data identified by its dataName\n     * \n     * @param {Object} element\n     * @param {String} dataName\n     * @returns {String}\n     */\n    function getEncodedData(element, dataName){\n        var regex, matches;\n        var $body = _getBodyDom(element);\n        if(dataName && $body && $body.length && $body.attr('class')){\n            regex = new RegExp(_prefix + dataName + '-([a-zA-Z0-9\\-._]*)');\n            matches = $body.attr('class').match(regex);\n            if(matches){\n                return matches[1];\n            }\n        }\n    }\n    \n    /**\n     * Provide a set of helper functions to set,retirve and manage string data to a container type qti element.\n     */\n    return {\n        setEncodedData : setEncodedData,\n        hasEncodedData : hasEncodedData,\n        getEncodedData : getEncodedData,\n        removeEncodedData : removeEncodedData,\n        setEncodedDataToDom : setEncodedDataToDom\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',[\n    'lodash',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/modalFeedback',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiItem/helper/container',\n    'ui/waitForMedia',\n    'ui/modal'\n], function(_, tpl, containerHelper, coreContainerHelper){\n    'use strict';\n\n    var modalFeedbackRenderer = {\n        qtiClass : 'modalFeedback',\n        template : tpl,\n        getContainer : containerHelper.get,\n        minHeight : 200,\n        width : 600,\n        getData : function(fb, data){\n            var feedbackStyle = coreContainerHelper.getEncodedData(fb, 'modalFeedback');\n            data.feedbackStyle = feedbackStyle;\n            return data;\n        },\n        render : function(modalFeedback, data){\n\n            data = data || {};\n\n            var $modal = containerHelper.get(modalFeedback);\n\n            $modal.waitForMedia(function(){\n\n                //when we are sure that media is loaded:\n                $modal.on('opened.modal', function(){\n\n                    //set item body height\n                    var $itemBody = containerHelper.get(modalFeedback.getRootElement()).children('.qti-itemBody');\n                    var requiredHeight = $modal.outerHeight() + parseInt($modal.css('top'));\n                    if(requiredHeight > $itemBody.height()){\n                        $itemBody.height(requiredHeight);\n                    }\n\n                }).on('closed.modal', function(){\n                    if(_.isFunction(data.callback)){\n                        data.callback.call(this);\n                    }\n                }).modal({\n                    startClosed : false,\n                    minHeight : modalFeedbackRenderer.minHeight,\n                    width : modalFeedbackRenderer.width\n                });\n            });\n\n        }\n    };\n\n    return modalFeedbackRenderer;\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/object', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"qti-object-container\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" >\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA\n */\n\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Object',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/object',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'ui/previewer'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'object',\n        template : tpl,\n        getContainer : containerHelper.get,\n        render : function(obj){\n            var $container = containerHelper.get(obj);\n            var previewOptions = {\n                url : obj.renderer.resolveUrl(obj.attr('data')),\n                mime : obj.attr('type')\n            };\n            if(obj.attr('height')){\n                previewOptions.height = obj.attr('height');\n            }\n            if(obj.attr('width')){\n                previewOptions.width = obj.attr('width');\n            }\n            if(previewOptions.url && previewOptions.mime){\n                $container.previewer(previewOptions);\n            }\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/infoControl', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"qti-infoControl\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    \";\n  if (helper = helpers.markup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.markup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","define('qtiInfoControlContext',[],function(){\n\n    //need a global reference to have picHooks shared in two different requirejs context (\"default\" and \"portableCustomInteraction\")\n    window._picHooks = window._picHooks || {};\n\n    /**\n     * Global object accessible by all PICs\n     *\n     * @type Object\n     */\n    var taoQtiInfoControlContext = {\n        /**\n         * register a info control (its runtime model) in global registery\n         * register a renderer\n         *\n         * @param {Object} picHook\n         * @returns {undefined}\n         */\n        register : function(picHook){\n            //@todo check picHook validity\n            window._picHooks[picHook.getTypeIdentifier()] = picHook;\n        },\n        /**\n         * notify when a info control is ready for test taker interaction\n         *\n         * @param {string} picInstance\n         * @fires custominteractionready\n         */\n        notifyReady : function(picInstance){\n            //@todo add pciInstance as event data and notify event to delivery engine\n        },\n        /**\n         * Get a cloned object representing the PIC model\n         *\n         * @param {string} typeIdentifier\n         * @returns {Object} clonedPciModel\n         */\n        createPciInstance : function(typeIdentifier){\n\n            if(window._picHooks[typeIdentifier]){\n\n                var instance = {},\n                    proto = window._picHooks[typeIdentifier];\n\n                for(var name in proto){\n                    if(typeof proto[name] === 'function'){\n                        //@todo : delegate function call for better performance ?\n                        instance[name] = proto[name];\n                    }else if(proto[name] !== null && typeof proto[name] === 'object'){\n                        //a plain object:\n                        instance[name] = proto[name].constructor();\n                    }else{\n                        //not an object (nor a function) : e.g. 0, 123, '123', null, undefined\n                        instance[name] = proto[name];\n                    }\n                }\n\n                return instance;\n\n            }else{\n                throw 'no portable info control hook found with the id ' + typeIdentifier;\n            }\n        }\n    };\n\n\n    return taoQtiInfoControlContext;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\n\n/**\n * Portable Info Control Common Renderer\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',[\n    'lodash',\n    'core/promise',\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/infoControl',\n    'taoQtiItem/qtiCommonRenderer/helpers/container',\n    'taoQtiItem/qtiCommonRenderer/helpers/PortableElement',\n    'qtiInfoControlContext',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function(_, Promise, tpl, containerHelper, PortableElement, qtiInfoControlContext, util, icRegistry){\n    'use strict';\n\n    /**\n     * Get the PIC instance associated to the infoControl object\n     * If none exists, create a new one based on the PIC typeIdentifier\n     *\n     * @param {Object} infoControl - the js object representing the infoControl\n     * @returns {Object} PIC instance\n     */\n    var _getPic = function(infoControl){\n\n        var typeIdentifier,\n            pic = infoControl.data('pic') || undefined;\n\n        if(!pic){\n\n            typeIdentifier = infoControl.typeIdentifier;\n            pic = qtiInfoControlContext.createPciInstance(typeIdentifier);\n\n            if(pic){\n\n                //binds the PIC instance to TAO infoControl object and vice versa\n                infoControl.data('pic', pic);\n                pic._taoInfoControl = infoControl;\n\n            }else{\n                throw 'no custom infoControl hook found for the type ' + typeIdentifier;\n            }\n        }\n\n        return pic;\n    };\n\n    /**\n     * Execute javascript codes to bring the infoControl to life.\n     * At this point, the html markup must already be ready in the document.\n     *\n     * It is done in 5 steps :\n     * 1. ensure the context is configured correctly\n     * 2. require all required libs\n     * 3. create a pic instance based on the infoControl model\n     * 4. initialize the rendering\n     * 5. restore full state if applicable\n     *\n     * @param {Object} infoControl\n     * @param {Object} [options]\n     */\n    var render = function(infoControl, options){\n        var self = this;\n        options = options || {};\n        return new Promise(function(resolve, reject){\n            var state              = {}; //@todo pass state and response to renderer here:\n            var id                 = infoControl.attr('id');\n            var typeIdentifier     = infoControl.typeIdentifier;\n            var config             = infoControl.properties;\n            var $dom               = containerHelper.get(infoControl).children();\n            var assetManager       = self.getAssetManager();\n\n            icRegistry.loadRuntimes().then(function(){\n\n                var requireEntries = [];\n                var runtime = icRegistry.getRuntime(typeIdentifier);\n\n                if(!runtime){\n                    return reject('The runtime for the pic cannot be found : ' + typeIdentifier);\n                }\n\n                //load the entrypoint, becomes optional per IMS PCI v1\n                if(runtime.hook){\n                    requireEntries.push(runtime.hook.replace(/\\.js$/, ''));\n                }\n\n                //load required libraries\n                _.forEach(runtime.libraries, function(module){\n                    requireEntries.push(module.replace(/\\.js$/, ''));\n                });\n\n                //load stylesheets\n                _.forEach(runtime.stylesheets, function(stylesheet){\n                    requireEntries.push('css!'+stylesheet.replace(/\\.css$/, ''));\n                });\n\n                //load the entrypoint\n                require(requireEntries, function(){\n\n                    var pic = _getPic(infoControl);\n                    var picAssetManager = {\n                        resolve : function resolve(url){\n                            var resolved = assetManager.resolveBy('portableElementLocation', url);\n                            if(resolved === url){\n                                return assetManager.resolveBy('baseUrl', url);\n                            }else{\n                                return resolved;\n                            }\n                        }\n                    };\n\n                    if(pic){\n                        //call pic initialize() to render the pic\n                        pic.initialize(id, $dom[0], config, picAssetManager);\n                        //restore context (state + response)\n                        pic.setSerializedState(state);\n\n                        return resolve();\n                    }\n\n                    return reject('Unable to initialize pic : ' + id);\n\n                }, reject);\n\n            }).catch(function(error){\n                reject('Error loading runtime : ' + id);\n            });\n        });\n    };\n\n    /**\n     * Reverse operation performed by render()\n     * After this function is executed, only the inital naked markup remains\n     * Event listeners are removed and the state and the response are reset\n     *\n     * @param {Object} infoControl\n     */\n    var destroy = function destroy(infoControl){\n        _getPic(infoControl).destroy();\n    };\n\n    /**\n     * Restore the state of the infoControl from the serializedState.\n     *\n     * @param {Object} infoControl - the element instance\n     * @param {Object} state - the state to set\n     */\n    var setState = function setState(infoControl, state){\n        _getPic(infoControl).setSerializedState(state);\n    };\n\n    /**\n     * Get the current state of the infoControl as a string.\n     * It enables saving the state for later usage.\n     *\n     * @param {Object} infoControl - the element instance\n     * @returns {Object} the state\n     */\n    var getState = function getState(infoControl){\n        return _getPic(infoControl).getSerializedState();\n    };\n\n    return {\n        qtiClass : 'infoControl',\n        template : tpl,\n        getData : function(infoControl, data){\n\n            //remove ns + fix media file path\n            var markup = data.markup;\n            markup = util.removeMarkupNamespaces(markup);\n            markup = PortableElement.fixMarkupMediaSources(markup, this);\n            data.markup = markup;\n            return data;\n        },\n        render : render,\n        getContainer : containerHelper.get,\n        destroy : destroy,\n        getState : getState,\n        setState : setState\n    };\n});\n\n","/**\n * Common helper functions\n */\ndefine('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function(_, Element){\n    return {\n        convertChoices : function(choices, outputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                if(Element.isA(c, 'choice')){\n                    switch(outputType){\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n\n                }else if(_.isArray(c)){\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices : function(interaction, choices, inputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                var choice;\n                if(_.isString(c)){\n                    if(inputType === 'serial'){\n                        choice = interaction.getChoice(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else if(inputType === 'identifier'){\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else{\n                        ret.push(c);\n                    }\n                }else if(_.isArray(c)){\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                }else{\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices : function(choices){\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for(var i in choices){\n                if(Element.isA(choices[i], 'choice')){\n                    var choice = choices[i];\n                    if(choice.attr('fixed')){\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                }else{\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for(var n = 0; n < r.length - 1; n++){\n                if(f[n]){\n                    continue;\n                }\n                var k = -1;\n                do{\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                }while(f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier : function(interaction, choiceSerial){\n            var choice = interaction.getChoice(choiceSerial);\n            if(choice){\n                return choice.id();\n            }else{\n                return '';\n            }\n        }\n    }\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * A factory to create a QTI renderer.\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiRunner/core/Renderer',[\n    'lodash',\n    'jquery',\n    'handlebars',\n    'core/promise',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/interactionHelper',\n    'ui/themeLoader'\n], function(_, $, Handlebars, Promise, Element, interactionHelper, themeLoader){\n    'use strict';\n\n    var _isValidRenderer = function(renderer){\n\n        var valid = true;\n\n        if(typeof (renderer) !== 'object'){\n            return false;\n        }\n\n        var classCorrect = false;\n        if(renderer.qtiClass){\n            if(_.indexOf(_renderableClasses, renderer.qtiClass) >= 0){\n                classCorrect = true;\n            }else{\n                var pos = renderer.qtiClass.indexOf('.');\n                if(pos > 0){\n                    var qtiClass = renderer.qtiClass.slice(0, pos);\n                    var subClass = renderer.qtiClass.slice(pos + 1);\n                    if(_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0){\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if(!classCorrect){\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if(!renderer.template){\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    var _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        'img',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    var _dependencies = {\n        assessmentItem : ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock : ['_container'],\n        associateInteraction : ['simpleAssociableChoice'],\n        choiceInteraction : ['simpleChoice'],\n        gapMatchInteraction : ['gap', 'gapText'],\n        graphicAssociateInteraction : ['associableHotspot'],\n        graphicGapMatchInteraction : ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction : ['hotspotChoice'],\n        hotspotInteraction : ['hotspotChoice'],\n        hottextInteraction : ['hottext'],\n        inlineChoiceInteraction : ['inlineChoice'],\n        matchInteraction : ['simpleAssociableChoice'],\n        orderInteraction : ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    var _renderableSubclasses = {\n        'simpleAssociableChoice' : ['associateInteraction', 'matchInteraction'],\n        'simpleChoice' : ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    var _defaults = {\n        shuffleChoices : true\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl(){\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    var Renderer = function(options){\n\n        /**\n         * Store the registered renderer location\n         */\n        var _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        var _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        var _getClassRenderer = function(qtiClass){\n            var ret = null;\n            if(_renderers[qtiClass]){\n                ret = _renderers[qtiClass];\n            }else{\n                var pos = qtiClass.indexOf('.');\n                if(pos > 0){\n                    qtiClass = qtiClass.slice(0, pos);\n                    if(_renderers[qtiClass]){\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            var success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value){\n            if(typeof (key) === 'string'){\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts){\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key){\n            if(typeof (key) === 'string' && options[key]){\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey){\n            var messages = this.getOption('messages');\n            if(messages &&\n                elementName &&\n                messages[elementName] &&\n                _.isString(messages[elementName][messageKey])){\n                //currently not translatable but potentially could be if the need raises\n                return Handlebars.compile(messages[elementName][messageKey]);\n            }else{\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager(){\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader(){\n            return this.themeLoader;\n        };\n\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass){\n\n            var res;\n            var ret        = '';\n            var tplFound   = false;\n            var qtiClass   = qtiSubclass || element.qtiClass;\n            var renderer   = _getClassRenderer(qtiClass);\n            var decorators = this.getOption('decorators');\n\n            if(!renderer || !_.isFunction(renderer.template)){\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.before)){\n\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n\n            //post rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.after)){\n\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass){\n\n            var ret = data,\n                qtiClass = qtiSubclass || element.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getData) === 'function'){\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data){\n            return Handlebars.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass){\n\n            var ret = null,\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                ret = renderer.getContainer(qtiElement, $scope);\n            }else{\n                throw 'no renderer found for the class : ' + qtiElement.qtiClass;\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass){\n\n            var qtiClass = qtiSubclass || qtiElement.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer && typeof (renderer.render) === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.setResponse) === 'function'){\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    var $container = renderer.getContainer.call(this, qtiInteraction);\n                    if($container instanceof $ && $container.length){\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getResponse) === 'function'){\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.resetResponse) === 'function'){\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass){\n\n            var ret = false;\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.getState)){\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState =  function(qtiInteraction, state, qtiSubclass){\n\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.setState)){\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.destroy)){\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function(){\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations){\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses){\n           var self = this;\n            var required = [];\n\n            if(options.themes){\n\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index){\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load();\n            }\n\n            if(requiredClasses){\n                if(_.isArray(requiredClasses)){\n\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass){\n                        var deps = _dependencies[reqClass];\n                        if(deps){\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass){\n\n                        if(_renderableSubclasses[qtiClass]){\n                            var requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass){\n                                if (!registerRendererClass(qtiClass + '.' + subclass, required) && !registerRendererClass(qtiClass, required)) {\n                                    throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass + ', subclass: ' + subclass);\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n\n            }else{\n                required = _.values(_locations);\n            }\n\n            var _this = this;\n            require(required, function(){\n\n                _.each(arguments, function(clazz){\n                    if(_isValidRenderer(clazz)){\n                        _renderers[clazz.qtiClass] = clazz;\n                    }\n                });\n\n                if(typeof (callback) === 'function'){\n                    callback.call(_this, _renderers);\n                }\n            });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload(){\n            if(this.themeLoader){\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType){\n            if(Element.isA(interaction, 'interaction')){\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(interactionHelper.findChoices(interaction, choices, identificationType), 'serial');\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType){\n            var choices = [];\n            var shuffled = [];\n            var serial, i;\n\n            if(Element.isA(interaction, 'interaction')){\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if(!this.shuffledChoices[serial] || reshuffle){\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        this.shuffledChoices[serial] = [];\n                        for(i = 0; i < 2; i++){\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                //otherwise get the choices from the serials\n                } else {\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        _.forEach(choices, function(choice, index){\n                            if(index < 2){\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial){\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial){\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if(returnedType === 'serial' || returnedType === 'identifier'){\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function(){\n            return _renderers;\n        };\n\n        this.getLocations = function(){\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url){\n            if(!options.assetManager){\n                return url;\n            }\n            if(typeof url === 'string' && url.length > 0){\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl){\n\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if(this.getOption('userRelativeUrl')){\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if(/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)){\n                //already absolute or base64 encoded\n                return relUrl;\n            }else{\n\n                var absUrl = '';\n                var runtimeLocations = this.getOption('runtimeLocations');\n\n                if(runtimeLocations && _.size(runtimeLocations)){\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier){\n                        if(relUrl.indexOf(typeIdentifier) === 0){\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false;//break\n                        }\n                    });\n                }\n\n                if(absUrl){\n                    return absUrl;\n                }else{\n                    var baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    return {\n\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build : function(renderersLocations, name, defaultOptions){\n            var NewRenderer = function(){\n                var options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Define the Qti Item Common Renderer\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Renderer',[\n    'taoQtiItem/qtiRunner/core/Renderer',\n    'taoQtiItem/qtiCommonRenderer/renderers/config'\n], function(Renderer, config){\n    'use strict';\n\n    return Renderer.build(config.locations, config.name, config.options);\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/rubricBlock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n<div class=\\\"grid-row qti-rubricBlock\\\" data-use=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.use)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-qti-class=\\\"rubricBlock\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"qti-rubricBlock-body\\\">\";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  }\n\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.empty), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/rubricBlock',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'rubricBlock',\n        getContainer : containerHelper.get,\n        template : tpl,\n        getData : function getData(rubric, data){\n            if(rubric.isEmpty()){\n                data.empty = true;\n            }\n            return data;\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/stylesheet', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"media=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\n  buffer += \"<link \\n    href=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.href)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \\n    type=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \\n    rel=\\\"stylesheet\\\" \\n    data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" \\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.media), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    />\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/stylesheet',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'stylesheet',\n        template : tpl,\n        getContainer : containerHelper.get\n    };\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCommonRenderer/tpl/table', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \" \"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class'])),typeof stack1 === functionType ? stack1.apply(depth0) : stack1));\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"summary=\\\"\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\"\";\n  return buffer;\n  }\n\n  buffer += \"<table\\n    class=\\\"qti-table\";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1['class']), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"\\n    data-qti-class=\\\"table\\\"\\n    data-serial=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n    \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.attributes)),stack1 == null || stack1 === false ? stack1 : stack1.summary), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    >\\n    \";\n  if (helper = helpers.body) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.body); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</table>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Table',[\n    'tpl!taoQtiItem/qtiCommonRenderer/tpl/table',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(tpl, containerHelper){\n    'use strict';\n\n    return {\n        qtiClass : 'table',\n        getContainer : containerHelper.get,\n        template : tpl\n    };\n});\n\n"]}